

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 20 21:12:03 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1508
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x7E,2
    62     0000                     
    63                           ; Version 2.40
    64                           ; Generated 17/11/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F1508 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98     0000                     	;# 
    99     0001                     	;# 
   100     0002                     	;# 
   101     0003                     	;# 
   102     0004                     	;# 
   103     0005                     	;# 
   104     0006                     	;# 
   105     0007                     	;# 
   106     0008                     	;# 
   107     0009                     	;# 
   108     000A                     	;# 
   109     000B                     	;# 
   110     000C                     	;# 
   111     000D                     	;# 
   112     000E                     	;# 
   113     0011                     	;# 
   114     0012                     	;# 
   115     0013                     	;# 
   116     0015                     	;# 
   117     0016                     	;# 
   118     0016                     	;# 
   119     0017                     	;# 
   120     0018                     	;# 
   121     0019                     	;# 
   122     001A                     	;# 
   123     001B                     	;# 
   124     001C                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     0091                     	;# 
   129     0092                     	;# 
   130     0093                     	;# 
   131     0095                     	;# 
   132     0096                     	;# 
   133     0097                     	;# 
   134     0099                     	;# 
   135     009A                     	;# 
   136     009B                     	;# 
   137     009B                     	;# 
   138     009C                     	;# 
   139     009D                     	;# 
   140     009E                     	;# 
   141     009F                     	;# 
   142     010C                     	;# 
   143     010D                     	;# 
   144     010E                     	;# 
   145     0111                     	;# 
   146     0112                     	;# 
   147     0113                     	;# 
   148     0114                     	;# 
   149     0115                     	;# 
   150     0116                     	;# 
   151     0117                     	;# 
   152     0118                     	;# 
   153     0119                     	;# 
   154     011D                     	;# 
   155     018C                     	;# 
   156     018D                     	;# 
   157     018E                     	;# 
   158     0191                     	;# 
   159     0191                     	;# 
   160     0192                     	;# 
   161     0193                     	;# 
   162     0193                     	;# 
   163     0194                     	;# 
   164     0195                     	;# 
   165     0196                     	;# 
   166     0197                     	;# 
   167     0199                     	;# 
   168     019A                     	;# 
   169     019B                     	;# 
   170     019B                     	;# 
   171     019C                     	;# 
   172     019D                     	;# 
   173     019E                     	;# 
   174     019F                     	;# 
   175     020C                     	;# 
   176     020D                     	;# 
   177     0211                     	;# 
   178     0211                     	;# 
   179     0212                     	;# 
   180     0212                     	;# 
   181     0213                     	;# 
   182     0213                     	;# 
   183     0214                     	;# 
   184     0214                     	;# 
   185     0215                     	;# 
   186     0215                     	;# 
   187     0215                     	;# 
   188     0216                     	;# 
   189     0216                     	;# 
   190     0217                     	;# 
   191     0217                     	;# 
   192     0391                     	;# 
   193     0392                     	;# 
   194     0393                     	;# 
   195     0394                     	;# 
   196     0395                     	;# 
   197     0396                     	;# 
   198     0498                     	;# 
   199     0498                     	;# 
   200     0499                     	;# 
   201     049A                     	;# 
   202     049B                     	;# 
   203     049B                     	;# 
   204     049C                     	;# 
   205     049D                     	;# 
   206     049E                     	;# 
   207     049F                     	;# 
   208     0611                     	;# 
   209     0612                     	;# 
   210     0613                     	;# 
   211     0613                     	;# 
   212     0614                     	;# 
   213     0615                     	;# 
   214     0616                     	;# 
   215     0616                     	;# 
   216     0617                     	;# 
   217     0618                     	;# 
   218     0619                     	;# 
   219     0619                     	;# 
   220     061A                     	;# 
   221     061B                     	;# 
   222     061C                     	;# 
   223     061C                     	;# 
   224     0691                     	;# 
   225     0692                     	;# 
   226     0693                     	;# 
   227     0694                     	;# 
   228     0695                     	;# 
   229     0F0F                     	;# 
   230     0F10                     	;# 
   231     0F11                     	;# 
   232     0F12                     	;# 
   233     0F13                     	;# 
   234     0F14                     	;# 
   235     0F15                     	;# 
   236     0F16                     	;# 
   237     0F17                     	;# 
   238     0F18                     	;# 
   239     0F19                     	;# 
   240     0F1A                     	;# 
   241     0F1B                     	;# 
   242     0F1C                     	;# 
   243     0F1D                     	;# 
   244     0F1E                     	;# 
   245     0F1F                     	;# 
   246     0F20                     	;# 
   247     0F21                     	;# 
   248     0F22                     	;# 
   249     0F23                     	;# 
   250     0F24                     	;# 
   251     0F25                     	;# 
   252     0F26                     	;# 
   253     0F27                     	;# 
   254     0F28                     	;# 
   255     0F29                     	;# 
   256     0F2A                     	;# 
   257     0F2B                     	;# 
   258     0F2C                     	;# 
   259     0F2D                     	;# 
   260     0F2E                     	;# 
   261     0F2F                     	;# 
   262     0F8C                     	;# 
   263     0F8D                     	;# 
   264     0F91                     	;# 
   265     0F95                     	;# 
   266     0F96                     	;# 
   267     0F97                     	;# 
   268     0F9C                     	;# 
   269     0F9D                     	;# 
   270     0F9E                     	;# 
   271     0FE3                     	;# 
   272     0FE4                     	;# 
   273     0FE5                     	;# 
   274     0FE6                     	;# 
   275     0FE7                     	;# 
   276     0FE8                     	;# 
   277     0FE9                     	;# 
   278     0FEA                     	;# 
   279     0FEB                     	;# 
   280     0FED                     	;# 
   281     0FEE                     	;# 
   282     0FEF                     	;# 
   283     0000                     	;# 
   284     0001                     	;# 
   285     0002                     	;# 
   286     0003                     	;# 
   287     0004                     	;# 
   288     0005                     	;# 
   289     0006                     	;# 
   290     0007                     	;# 
   291     0008                     	;# 
   292     0009                     	;# 
   293     000A                     	;# 
   294     000B                     	;# 
   295     000C                     	;# 
   296     000D                     	;# 
   297     000E                     	;# 
   298     0011                     	;# 
   299     0012                     	;# 
   300     0013                     	;# 
   301     0015                     	;# 
   302     0016                     	;# 
   303     0016                     	;# 
   304     0017                     	;# 
   305     0018                     	;# 
   306     0019                     	;# 
   307     001A                     	;# 
   308     001B                     	;# 
   309     001C                     	;# 
   310     008C                     	;# 
   311     008D                     	;# 
   312     008E                     	;# 
   313     0091                     	;# 
   314     0092                     	;# 
   315     0093                     	;# 
   316     0095                     	;# 
   317     0096                     	;# 
   318     0097                     	;# 
   319     0099                     	;# 
   320     009A                     	;# 
   321     009B                     	;# 
   322     009B                     	;# 
   323     009C                     	;# 
   324     009D                     	;# 
   325     009E                     	;# 
   326     009F                     	;# 
   327     010C                     	;# 
   328     010D                     	;# 
   329     010E                     	;# 
   330     0111                     	;# 
   331     0112                     	;# 
   332     0113                     	;# 
   333     0114                     	;# 
   334     0115                     	;# 
   335     0116                     	;# 
   336     0117                     	;# 
   337     0118                     	;# 
   338     0119                     	;# 
   339     011D                     	;# 
   340     018C                     	;# 
   341     018D                     	;# 
   342     018E                     	;# 
   343     0191                     	;# 
   344     0191                     	;# 
   345     0192                     	;# 
   346     0193                     	;# 
   347     0193                     	;# 
   348     0194                     	;# 
   349     0195                     	;# 
   350     0196                     	;# 
   351     0197                     	;# 
   352     0199                     	;# 
   353     019A                     	;# 
   354     019B                     	;# 
   355     019B                     	;# 
   356     019C                     	;# 
   357     019D                     	;# 
   358     019E                     	;# 
   359     019F                     	;# 
   360     020C                     	;# 
   361     020D                     	;# 
   362     0211                     	;# 
   363     0211                     	;# 
   364     0212                     	;# 
   365     0212                     	;# 
   366     0213                     	;# 
   367     0213                     	;# 
   368     0214                     	;# 
   369     0214                     	;# 
   370     0215                     	;# 
   371     0215                     	;# 
   372     0215                     	;# 
   373     0216                     	;# 
   374     0216                     	;# 
   375     0217                     	;# 
   376     0217                     	;# 
   377     0391                     	;# 
   378     0392                     	;# 
   379     0393                     	;# 
   380     0394                     	;# 
   381     0395                     	;# 
   382     0396                     	;# 
   383     0498                     	;# 
   384     0498                     	;# 
   385     0499                     	;# 
   386     049A                     	;# 
   387     049B                     	;# 
   388     049B                     	;# 
   389     049C                     	;# 
   390     049D                     	;# 
   391     049E                     	;# 
   392     049F                     	;# 
   393     0611                     	;# 
   394     0612                     	;# 
   395     0613                     	;# 
   396     0613                     	;# 
   397     0614                     	;# 
   398     0615                     	;# 
   399     0616                     	;# 
   400     0616                     	;# 
   401     0617                     	;# 
   402     0618                     	;# 
   403     0619                     	;# 
   404     0619                     	;# 
   405     061A                     	;# 
   406     061B                     	;# 
   407     061C                     	;# 
   408     061C                     	;# 
   409     0691                     	;# 
   410     0692                     	;# 
   411     0693                     	;# 
   412     0694                     	;# 
   413     0695                     	;# 
   414     0F0F                     	;# 
   415     0F10                     	;# 
   416     0F11                     	;# 
   417     0F12                     	;# 
   418     0F13                     	;# 
   419     0F14                     	;# 
   420     0F15                     	;# 
   421     0F16                     	;# 
   422     0F17                     	;# 
   423     0F18                     	;# 
   424     0F19                     	;# 
   425     0F1A                     	;# 
   426     0F1B                     	;# 
   427     0F1C                     	;# 
   428     0F1D                     	;# 
   429     0F1E                     	;# 
   430     0F1F                     	;# 
   431     0F20                     	;# 
   432     0F21                     	;# 
   433     0F22                     	;# 
   434     0F23                     	;# 
   435     0F24                     	;# 
   436     0F25                     	;# 
   437     0F26                     	;# 
   438     0F27                     	;# 
   439     0F28                     	;# 
   440     0F29                     	;# 
   441     0F2A                     	;# 
   442     0F2B                     	;# 
   443     0F2C                     	;# 
   444     0F2D                     	;# 
   445     0F2E                     	;# 
   446     0F2F                     	;# 
   447     0F8C                     	;# 
   448     0F8D                     	;# 
   449     0F91                     	;# 
   450     0F95                     	;# 
   451     0F96                     	;# 
   452     0F97                     	;# 
   453     0F9C                     	;# 
   454     0F9D                     	;# 
   455     0F9E                     	;# 
   456     0FE3                     	;# 
   457     0FE4                     	;# 
   458     0FE5                     	;# 
   459     0FE6                     	;# 
   460     0FE7                     	;# 
   461     0FE8                     	;# 
   462     0FE9                     	;# 
   463     0FEA                     	;# 
   464     0FEB                     	;# 
   465     0FED                     	;# 
   466     0FEE                     	;# 
   467     0FEF                     	;# 
   468     0000                     	;# 
   469     0001                     	;# 
   470     0002                     	;# 
   471     0003                     	;# 
   472     0004                     	;# 
   473     0005                     	;# 
   474     0006                     	;# 
   475     0007                     	;# 
   476     0008                     	;# 
   477     0009                     	;# 
   478     000A                     	;# 
   479     000B                     	;# 
   480     000C                     	;# 
   481     000D                     	;# 
   482     000E                     	;# 
   483     0011                     	;# 
   484     0012                     	;# 
   485     0013                     	;# 
   486     0015                     	;# 
   487     0016                     	;# 
   488     0016                     	;# 
   489     0017                     	;# 
   490     0018                     	;# 
   491     0019                     	;# 
   492     001A                     	;# 
   493     001B                     	;# 
   494     001C                     	;# 
   495     008C                     	;# 
   496     008D                     	;# 
   497     008E                     	;# 
   498     0091                     	;# 
   499     0092                     	;# 
   500     0093                     	;# 
   501     0095                     	;# 
   502     0096                     	;# 
   503     0097                     	;# 
   504     0099                     	;# 
   505     009A                     	;# 
   506     009B                     	;# 
   507     009B                     	;# 
   508     009C                     	;# 
   509     009D                     	;# 
   510     009E                     	;# 
   511     009F                     	;# 
   512     010C                     	;# 
   513     010D                     	;# 
   514     010E                     	;# 
   515     0111                     	;# 
   516     0112                     	;# 
   517     0113                     	;# 
   518     0114                     	;# 
   519     0115                     	;# 
   520     0116                     	;# 
   521     0117                     	;# 
   522     0118                     	;# 
   523     0119                     	;# 
   524     011D                     	;# 
   525     018C                     	;# 
   526     018D                     	;# 
   527     018E                     	;# 
   528     0191                     	;# 
   529     0191                     	;# 
   530     0192                     	;# 
   531     0193                     	;# 
   532     0193                     	;# 
   533     0194                     	;# 
   534     0195                     	;# 
   535     0196                     	;# 
   536     0197                     	;# 
   537     0199                     	;# 
   538     019A                     	;# 
   539     019B                     	;# 
   540     019B                     	;# 
   541     019C                     	;# 
   542     019D                     	;# 
   543     019E                     	;# 
   544     019F                     	;# 
   545     020C                     	;# 
   546     020D                     	;# 
   547     0211                     	;# 
   548     0211                     	;# 
   549     0212                     	;# 
   550     0212                     	;# 
   551     0213                     	;# 
   552     0213                     	;# 
   553     0214                     	;# 
   554     0214                     	;# 
   555     0215                     	;# 
   556     0215                     	;# 
   557     0215                     	;# 
   558     0216                     	;# 
   559     0216                     	;# 
   560     0217                     	;# 
   561     0217                     	;# 
   562     0391                     	;# 
   563     0392                     	;# 
   564     0393                     	;# 
   565     0394                     	;# 
   566     0395                     	;# 
   567     0396                     	;# 
   568     0498                     	;# 
   569     0498                     	;# 
   570     0499                     	;# 
   571     049A                     	;# 
   572     049B                     	;# 
   573     049B                     	;# 
   574     049C                     	;# 
   575     049D                     	;# 
   576     049E                     	;# 
   577     049F                     	;# 
   578     0611                     	;# 
   579     0612                     	;# 
   580     0613                     	;# 
   581     0613                     	;# 
   582     0614                     	;# 
   583     0615                     	;# 
   584     0616                     	;# 
   585     0616                     	;# 
   586     0617                     	;# 
   587     0618                     	;# 
   588     0619                     	;# 
   589     0619                     	;# 
   590     061A                     	;# 
   591     061B                     	;# 
   592     061C                     	;# 
   593     061C                     	;# 
   594     0691                     	;# 
   595     0692                     	;# 
   596     0693                     	;# 
   597     0694                     	;# 
   598     0695                     	;# 
   599     0F0F                     	;# 
   600     0F10                     	;# 
   601     0F11                     	;# 
   602     0F12                     	;# 
   603     0F13                     	;# 
   604     0F14                     	;# 
   605     0F15                     	;# 
   606     0F16                     	;# 
   607     0F17                     	;# 
   608     0F18                     	;# 
   609     0F19                     	;# 
   610     0F1A                     	;# 
   611     0F1B                     	;# 
   612     0F1C                     	;# 
   613     0F1D                     	;# 
   614     0F1E                     	;# 
   615     0F1F                     	;# 
   616     0F20                     	;# 
   617     0F21                     	;# 
   618     0F22                     	;# 
   619     0F23                     	;# 
   620     0F24                     	;# 
   621     0F25                     	;# 
   622     0F26                     	;# 
   623     0F27                     	;# 
   624     0F28                     	;# 
   625     0F29                     	;# 
   626     0F2A                     	;# 
   627     0F2B                     	;# 
   628     0F2C                     	;# 
   629     0F2D                     	;# 
   630     0F2E                     	;# 
   631     0F2F                     	;# 
   632     0F8C                     	;# 
   633     0F8D                     	;# 
   634     0F91                     	;# 
   635     0F95                     	;# 
   636     0F96                     	;# 
   637     0F97                     	;# 
   638     0F9C                     	;# 
   639     0F9D                     	;# 
   640     0F9E                     	;# 
   641     0FE3                     	;# 
   642     0FE4                     	;# 
   643     0FE5                     	;# 
   644     0FE6                     	;# 
   645     0FE7                     	;# 
   646     0FE8                     	;# 
   647     0FE9                     	;# 
   648     0FEA                     	;# 
   649     0FEB                     	;# 
   650     0FED                     	;# 
   651     0FEE                     	;# 
   652     0FEF                     	;# 
   653     0000                     	;# 
   654     0001                     	;# 
   655     0002                     	;# 
   656     0003                     	;# 
   657     0004                     	;# 
   658     0005                     	;# 
   659     0006                     	;# 
   660     0007                     	;# 
   661     0008                     	;# 
   662     0009                     	;# 
   663     000A                     	;# 
   664     000B                     	;# 
   665     000C                     	;# 
   666     000D                     	;# 
   667     000E                     	;# 
   668     0011                     	;# 
   669     0012                     	;# 
   670     0013                     	;# 
   671     0015                     	;# 
   672     0016                     	;# 
   673     0016                     	;# 
   674     0017                     	;# 
   675     0018                     	;# 
   676     0019                     	;# 
   677     001A                     	;# 
   678     001B                     	;# 
   679     001C                     	;# 
   680     008C                     	;# 
   681     008D                     	;# 
   682     008E                     	;# 
   683     0091                     	;# 
   684     0092                     	;# 
   685     0093                     	;# 
   686     0095                     	;# 
   687     0096                     	;# 
   688     0097                     	;# 
   689     0099                     	;# 
   690     009A                     	;# 
   691     009B                     	;# 
   692     009B                     	;# 
   693     009C                     	;# 
   694     009D                     	;# 
   695     009E                     	;# 
   696     009F                     	;# 
   697     010C                     	;# 
   698     010D                     	;# 
   699     010E                     	;# 
   700     0111                     	;# 
   701     0112                     	;# 
   702     0113                     	;# 
   703     0114                     	;# 
   704     0115                     	;# 
   705     0116                     	;# 
   706     0117                     	;# 
   707     0118                     	;# 
   708     0119                     	;# 
   709     011D                     	;# 
   710     018C                     	;# 
   711     018D                     	;# 
   712     018E                     	;# 
   713     0191                     	;# 
   714     0191                     	;# 
   715     0192                     	;# 
   716     0193                     	;# 
   717     0193                     	;# 
   718     0194                     	;# 
   719     0195                     	;# 
   720     0196                     	;# 
   721     0197                     	;# 
   722     0199                     	;# 
   723     019A                     	;# 
   724     019B                     	;# 
   725     019B                     	;# 
   726     019C                     	;# 
   727     019D                     	;# 
   728     019E                     	;# 
   729     019F                     	;# 
   730     020C                     	;# 
   731     020D                     	;# 
   732     0211                     	;# 
   733     0211                     	;# 
   734     0212                     	;# 
   735     0212                     	;# 
   736     0213                     	;# 
   737     0213                     	;# 
   738     0214                     	;# 
   739     0214                     	;# 
   740     0215                     	;# 
   741     0215                     	;# 
   742     0215                     	;# 
   743     0216                     	;# 
   744     0216                     	;# 
   745     0217                     	;# 
   746     0217                     	;# 
   747     0391                     	;# 
   748     0392                     	;# 
   749     0393                     	;# 
   750     0394                     	;# 
   751     0395                     	;# 
   752     0396                     	;# 
   753     0498                     	;# 
   754     0498                     	;# 
   755     0499                     	;# 
   756     049A                     	;# 
   757     049B                     	;# 
   758     049B                     	;# 
   759     049C                     	;# 
   760     049D                     	;# 
   761     049E                     	;# 
   762     049F                     	;# 
   763     0611                     	;# 
   764     0612                     	;# 
   765     0613                     	;# 
   766     0613                     	;# 
   767     0614                     	;# 
   768     0615                     	;# 
   769     0616                     	;# 
   770     0616                     	;# 
   771     0617                     	;# 
   772     0618                     	;# 
   773     0619                     	;# 
   774     0619                     	;# 
   775     061A                     	;# 
   776     061B                     	;# 
   777     061C                     	;# 
   778     061C                     	;# 
   779     0691                     	;# 
   780     0692                     	;# 
   781     0693                     	;# 
   782     0694                     	;# 
   783     0695                     	;# 
   784     0F0F                     	;# 
   785     0F10                     	;# 
   786     0F11                     	;# 
   787     0F12                     	;# 
   788     0F13                     	;# 
   789     0F14                     	;# 
   790     0F15                     	;# 
   791     0F16                     	;# 
   792     0F17                     	;# 
   793     0F18                     	;# 
   794     0F19                     	;# 
   795     0F1A                     	;# 
   796     0F1B                     	;# 
   797     0F1C                     	;# 
   798     0F1D                     	;# 
   799     0F1E                     	;# 
   800     0F1F                     	;# 
   801     0F20                     	;# 
   802     0F21                     	;# 
   803     0F22                     	;# 
   804     0F23                     	;# 
   805     0F24                     	;# 
   806     0F25                     	;# 
   807     0F26                     	;# 
   808     0F27                     	;# 
   809     0F28                     	;# 
   810     0F29                     	;# 
   811     0F2A                     	;# 
   812     0F2B                     	;# 
   813     0F2C                     	;# 
   814     0F2D                     	;# 
   815     0F2E                     	;# 
   816     0F2F                     	;# 
   817     0F8C                     	;# 
   818     0F8D                     	;# 
   819     0F91                     	;# 
   820     0F95                     	;# 
   821     0F96                     	;# 
   822     0F97                     	;# 
   823     0F9C                     	;# 
   824     0F9D                     	;# 
   825     0F9E                     	;# 
   826     0FE3                     	;# 
   827     0FE4                     	;# 
   828     0FE5                     	;# 
   829     0FE6                     	;# 
   830     0FE7                     	;# 
   831     0FE8                     	;# 
   832     0FE9                     	;# 
   833     0FEA                     	;# 
   834     0FEB                     	;# 
   835     0FED                     	;# 
   836     0FEE                     	;# 
   837     0FEF                     	;# 
   838     0000                     	;# 
   839     0001                     	;# 
   840     0002                     	;# 
   841     0003                     	;# 
   842     0004                     	;# 
   843     0005                     	;# 
   844     0006                     	;# 
   845     0007                     	;# 
   846     0008                     	;# 
   847     0009                     	;# 
   848     000A                     	;# 
   849     000B                     	;# 
   850     000C                     	;# 
   851     000D                     	;# 
   852     000E                     	;# 
   853     0011                     	;# 
   854     0012                     	;# 
   855     0013                     	;# 
   856     0015                     	;# 
   857     0016                     	;# 
   858     0016                     	;# 
   859     0017                     	;# 
   860     0018                     	;# 
   861     0019                     	;# 
   862     001A                     	;# 
   863     001B                     	;# 
   864     001C                     	;# 
   865     008C                     	;# 
   866     008D                     	;# 
   867     008E                     	;# 
   868     0091                     	;# 
   869     0092                     	;# 
   870     0093                     	;# 
   871     0095                     	;# 
   872     0096                     	;# 
   873     0097                     	;# 
   874     0099                     	;# 
   875     009A                     	;# 
   876     009B                     	;# 
   877     009B                     	;# 
   878     009C                     	;# 
   879     009D                     	;# 
   880     009E                     	;# 
   881     009F                     	;# 
   882     010C                     	;# 
   883     010D                     	;# 
   884     010E                     	;# 
   885     0111                     	;# 
   886     0112                     	;# 
   887     0113                     	;# 
   888     0114                     	;# 
   889     0115                     	;# 
   890     0116                     	;# 
   891     0117                     	;# 
   892     0118                     	;# 
   893     0119                     	;# 
   894     011D                     	;# 
   895     018C                     	;# 
   896     018D                     	;# 
   897     018E                     	;# 
   898     0191                     	;# 
   899     0191                     	;# 
   900     0192                     	;# 
   901     0193                     	;# 
   902     0193                     	;# 
   903     0194                     	;# 
   904     0195                     	;# 
   905     0196                     	;# 
   906     0197                     	;# 
   907     0199                     	;# 
   908     019A                     	;# 
   909     019B                     	;# 
   910     019B                     	;# 
   911     019C                     	;# 
   912     019D                     	;# 
   913     019E                     	;# 
   914     019F                     	;# 
   915     020C                     	;# 
   916     020D                     	;# 
   917     0211                     	;# 
   918     0211                     	;# 
   919     0212                     	;# 
   920     0212                     	;# 
   921     0213                     	;# 
   922     0213                     	;# 
   923     0214                     	;# 
   924     0214                     	;# 
   925     0215                     	;# 
   926     0215                     	;# 
   927     0215                     	;# 
   928     0216                     	;# 
   929     0216                     	;# 
   930     0217                     	;# 
   931     0217                     	;# 
   932     0391                     	;# 
   933     0392                     	;# 
   934     0393                     	;# 
   935     0394                     	;# 
   936     0395                     	;# 
   937     0396                     	;# 
   938     0498                     	;# 
   939     0498                     	;# 
   940     0499                     	;# 
   941     049A                     	;# 
   942     049B                     	;# 
   943     049B                     	;# 
   944     049C                     	;# 
   945     049D                     	;# 
   946     049E                     	;# 
   947     049F                     	;# 
   948     0611                     	;# 
   949     0612                     	;# 
   950     0613                     	;# 
   951     0613                     	;# 
   952     0614                     	;# 
   953     0615                     	;# 
   954     0616                     	;# 
   955     0616                     	;# 
   956     0617                     	;# 
   957     0618                     	;# 
   958     0619                     	;# 
   959     0619                     	;# 
   960     061A                     	;# 
   961     061B                     	;# 
   962     061C                     	;# 
   963     061C                     	;# 
   964     0691                     	;# 
   965     0692                     	;# 
   966     0693                     	;# 
   967     0694                     	;# 
   968     0695                     	;# 
   969     0F0F                     	;# 
   970     0F10                     	;# 
   971     0F11                     	;# 
   972     0F12                     	;# 
   973     0F13                     	;# 
   974     0F14                     	;# 
   975     0F15                     	;# 
   976     0F16                     	;# 
   977     0F17                     	;# 
   978     0F18                     	;# 
   979     0F19                     	;# 
   980     0F1A                     	;# 
   981     0F1B                     	;# 
   982     0F1C                     	;# 
   983     0F1D                     	;# 
   984     0F1E                     	;# 
   985     0F1F                     	;# 
   986     0F20                     	;# 
   987     0F21                     	;# 
   988     0F22                     	;# 
   989     0F23                     	;# 
   990     0F24                     	;# 
   991     0F25                     	;# 
   992     0F26                     	;# 
   993     0F27                     	;# 
   994     0F28                     	;# 
   995     0F29                     	;# 
   996     0F2A                     	;# 
   997     0F2B                     	;# 
   998     0F2C                     	;# 
   999     0F2D                     	;# 
  1000     0F2E                     	;# 
  1001     0F2F                     	;# 
  1002     0F8C                     	;# 
  1003     0F8D                     	;# 
  1004     0F91                     	;# 
  1005     0F95                     	;# 
  1006     0F96                     	;# 
  1007     0F97                     	;# 
  1008     0F9C                     	;# 
  1009     0F9D                     	;# 
  1010     0F9E                     	;# 
  1011     0FE3                     	;# 
  1012     0FE4                     	;# 
  1013     0FE5                     	;# 
  1014     0FE6                     	;# 
  1015     0FE7                     	;# 
  1016     0FE8                     	;# 
  1017     0FE9                     	;# 
  1018     0FEA                     	;# 
  1019     0FEB                     	;# 
  1020     0FED                     	;# 
  1021     0FEE                     	;# 
  1022     0FEF                     	;# 
  1023     0000                     	;# 
  1024     0001                     	;# 
  1025     0002                     	;# 
  1026     0003                     	;# 
  1027     0004                     	;# 
  1028     0005                     	;# 
  1029     0006                     	;# 
  1030     0007                     	;# 
  1031     0008                     	;# 
  1032     0009                     	;# 
  1033     000A                     	;# 
  1034     000B                     	;# 
  1035     000C                     	;# 
  1036     000D                     	;# 
  1037     000E                     	;# 
  1038     0011                     	;# 
  1039     0012                     	;# 
  1040     0013                     	;# 
  1041     0015                     	;# 
  1042     0016                     	;# 
  1043     0016                     	;# 
  1044     0017                     	;# 
  1045     0018                     	;# 
  1046     0019                     	;# 
  1047     001A                     	;# 
  1048     001B                     	;# 
  1049     001C                     	;# 
  1050     008C                     	;# 
  1051     008D                     	;# 
  1052     008E                     	;# 
  1053     0091                     	;# 
  1054     0092                     	;# 
  1055     0093                     	;# 
  1056     0095                     	;# 
  1057     0096                     	;# 
  1058     0097                     	;# 
  1059     0099                     	;# 
  1060     009A                     	;# 
  1061     009B                     	;# 
  1062     009B                     	;# 
  1063     009C                     	;# 
  1064     009D                     	;# 
  1065     009E                     	;# 
  1066     009F                     	;# 
  1067     010C                     	;# 
  1068     010D                     	;# 
  1069     010E                     	;# 
  1070     0111                     	;# 
  1071     0112                     	;# 
  1072     0113                     	;# 
  1073     0114                     	;# 
  1074     0115                     	;# 
  1075     0116                     	;# 
  1076     0117                     	;# 
  1077     0118                     	;# 
  1078     0119                     	;# 
  1079     011D                     	;# 
  1080     018C                     	;# 
  1081     018D                     	;# 
  1082     018E                     	;# 
  1083     0191                     	;# 
  1084     0191                     	;# 
  1085     0192                     	;# 
  1086     0193                     	;# 
  1087     0193                     	;# 
  1088     0194                     	;# 
  1089     0195                     	;# 
  1090     0196                     	;# 
  1091     0197                     	;# 
  1092     0199                     	;# 
  1093     019A                     	;# 
  1094     019B                     	;# 
  1095     019B                     	;# 
  1096     019C                     	;# 
  1097     019D                     	;# 
  1098     019E                     	;# 
  1099     019F                     	;# 
  1100     020C                     	;# 
  1101     020D                     	;# 
  1102     0211                     	;# 
  1103     0211                     	;# 
  1104     0212                     	;# 
  1105     0212                     	;# 
  1106     0213                     	;# 
  1107     0213                     	;# 
  1108     0214                     	;# 
  1109     0214                     	;# 
  1110     0215                     	;# 
  1111     0215                     	;# 
  1112     0215                     	;# 
  1113     0216                     	;# 
  1114     0216                     	;# 
  1115     0217                     	;# 
  1116     0217                     	;# 
  1117     0391                     	;# 
  1118     0392                     	;# 
  1119     0393                     	;# 
  1120     0394                     	;# 
  1121     0395                     	;# 
  1122     0396                     	;# 
  1123     0498                     	;# 
  1124     0498                     	;# 
  1125     0499                     	;# 
  1126     049A                     	;# 
  1127     049B                     	;# 
  1128     049B                     	;# 
  1129     049C                     	;# 
  1130     049D                     	;# 
  1131     049E                     	;# 
  1132     049F                     	;# 
  1133     0611                     	;# 
  1134     0612                     	;# 
  1135     0613                     	;# 
  1136     0613                     	;# 
  1137     0614                     	;# 
  1138     0615                     	;# 
  1139     0616                     	;# 
  1140     0616                     	;# 
  1141     0617                     	;# 
  1142     0618                     	;# 
  1143     0619                     	;# 
  1144     0619                     	;# 
  1145     061A                     	;# 
  1146     061B                     	;# 
  1147     061C                     	;# 
  1148     061C                     	;# 
  1149     0691                     	;# 
  1150     0692                     	;# 
  1151     0693                     	;# 
  1152     0694                     	;# 
  1153     0695                     	;# 
  1154     0F0F                     	;# 
  1155     0F10                     	;# 
  1156     0F11                     	;# 
  1157     0F12                     	;# 
  1158     0F13                     	;# 
  1159     0F14                     	;# 
  1160     0F15                     	;# 
  1161     0F16                     	;# 
  1162     0F17                     	;# 
  1163     0F18                     	;# 
  1164     0F19                     	;# 
  1165     0F1A                     	;# 
  1166     0F1B                     	;# 
  1167     0F1C                     	;# 
  1168     0F1D                     	;# 
  1169     0F1E                     	;# 
  1170     0F1F                     	;# 
  1171     0F20                     	;# 
  1172     0F21                     	;# 
  1173     0F22                     	;# 
  1174     0F23                     	;# 
  1175     0F24                     	;# 
  1176     0F25                     	;# 
  1177     0F26                     	;# 
  1178     0F27                     	;# 
  1179     0F28                     	;# 
  1180     0F29                     	;# 
  1181     0F2A                     	;# 
  1182     0F2B                     	;# 
  1183     0F2C                     	;# 
  1184     0F2D                     	;# 
  1185     0F2E                     	;# 
  1186     0F2F                     	;# 
  1187     0F8C                     	;# 
  1188     0F8D                     	;# 
  1189     0F91                     	;# 
  1190     0F95                     	;# 
  1191     0F96                     	;# 
  1192     0F97                     	;# 
  1193     0F9C                     	;# 
  1194     0F9D                     	;# 
  1195     0F9E                     	;# 
  1196     0FE3                     	;# 
  1197     0FE4                     	;# 
  1198     0FE5                     	;# 
  1199     0FE6                     	;# 
  1200     0FE7                     	;# 
  1201     0FE8                     	;# 
  1202     0FE9                     	;# 
  1203     0FEA                     	;# 
  1204     0FEB                     	;# 
  1205     0FED                     	;# 
  1206     0FEE                     	;# 
  1207     0FEF                     	;# 
  1208     0000                     	;# 
  1209     0001                     	;# 
  1210     0002                     	;# 
  1211     0003                     	;# 
  1212     0004                     	;# 
  1213     0005                     	;# 
  1214     0006                     	;# 
  1215     0007                     	;# 
  1216     0008                     	;# 
  1217     0009                     	;# 
  1218     000A                     	;# 
  1219     000B                     	;# 
  1220     000C                     	;# 
  1221     000D                     	;# 
  1222     000E                     	;# 
  1223     0011                     	;# 
  1224     0012                     	;# 
  1225     0013                     	;# 
  1226     0015                     	;# 
  1227     0016                     	;# 
  1228     0016                     	;# 
  1229     0017                     	;# 
  1230     0018                     	;# 
  1231     0019                     	;# 
  1232     001A                     	;# 
  1233     001B                     	;# 
  1234     001C                     	;# 
  1235     008C                     	;# 
  1236     008D                     	;# 
  1237     008E                     	;# 
  1238     0091                     	;# 
  1239     0092                     	;# 
  1240     0093                     	;# 
  1241     0095                     	;# 
  1242     0096                     	;# 
  1243     0097                     	;# 
  1244     0099                     	;# 
  1245     009A                     	;# 
  1246     009B                     	;# 
  1247     009B                     	;# 
  1248     009C                     	;# 
  1249     009D                     	;# 
  1250     009E                     	;# 
  1251     009F                     	;# 
  1252     010C                     	;# 
  1253     010D                     	;# 
  1254     010E                     	;# 
  1255     0111                     	;# 
  1256     0112                     	;# 
  1257     0113                     	;# 
  1258     0114                     	;# 
  1259     0115                     	;# 
  1260     0116                     	;# 
  1261     0117                     	;# 
  1262     0118                     	;# 
  1263     0119                     	;# 
  1264     011D                     	;# 
  1265     018C                     	;# 
  1266     018D                     	;# 
  1267     018E                     	;# 
  1268     0191                     	;# 
  1269     0191                     	;# 
  1270     0192                     	;# 
  1271     0193                     	;# 
  1272     0193                     	;# 
  1273     0194                     	;# 
  1274     0195                     	;# 
  1275     0196                     	;# 
  1276     0197                     	;# 
  1277     0199                     	;# 
  1278     019A                     	;# 
  1279     019B                     	;# 
  1280     019B                     	;# 
  1281     019C                     	;# 
  1282     019D                     	;# 
  1283     019E                     	;# 
  1284     019F                     	;# 
  1285     020C                     	;# 
  1286     020D                     	;# 
  1287     0211                     	;# 
  1288     0211                     	;# 
  1289     0212                     	;# 
  1290     0212                     	;# 
  1291     0213                     	;# 
  1292     0213                     	;# 
  1293     0214                     	;# 
  1294     0214                     	;# 
  1295     0215                     	;# 
  1296     0215                     	;# 
  1297     0215                     	;# 
  1298     0216                     	;# 
  1299     0216                     	;# 
  1300     0217                     	;# 
  1301     0217                     	;# 
  1302     0391                     	;# 
  1303     0392                     	;# 
  1304     0393                     	;# 
  1305     0394                     	;# 
  1306     0395                     	;# 
  1307     0396                     	;# 
  1308     0498                     	;# 
  1309     0498                     	;# 
  1310     0499                     	;# 
  1311     049A                     	;# 
  1312     049B                     	;# 
  1313     049B                     	;# 
  1314     049C                     	;# 
  1315     049D                     	;# 
  1316     049E                     	;# 
  1317     049F                     	;# 
  1318     0611                     	;# 
  1319     0612                     	;# 
  1320     0613                     	;# 
  1321     0613                     	;# 
  1322     0614                     	;# 
  1323     0615                     	;# 
  1324     0616                     	;# 
  1325     0616                     	;# 
  1326     0617                     	;# 
  1327     0618                     	;# 
  1328     0619                     	;# 
  1329     0619                     	;# 
  1330     061A                     	;# 
  1331     061B                     	;# 
  1332     061C                     	;# 
  1333     061C                     	;# 
  1334     0691                     	;# 
  1335     0692                     	;# 
  1336     0693                     	;# 
  1337     0694                     	;# 
  1338     0695                     	;# 
  1339     0F0F                     	;# 
  1340     0F10                     	;# 
  1341     0F11                     	;# 
  1342     0F12                     	;# 
  1343     0F13                     	;# 
  1344     0F14                     	;# 
  1345     0F15                     	;# 
  1346     0F16                     	;# 
  1347     0F17                     	;# 
  1348     0F18                     	;# 
  1349     0F19                     	;# 
  1350     0F1A                     	;# 
  1351     0F1B                     	;# 
  1352     0F1C                     	;# 
  1353     0F1D                     	;# 
  1354     0F1E                     	;# 
  1355     0F1F                     	;# 
  1356     0F20                     	;# 
  1357     0F21                     	;# 
  1358     0F22                     	;# 
  1359     0F23                     	;# 
  1360     0F24                     	;# 
  1361     0F25                     	;# 
  1362     0F26                     	;# 
  1363     0F27                     	;# 
  1364     0F28                     	;# 
  1365     0F29                     	;# 
  1366     0F2A                     	;# 
  1367     0F2B                     	;# 
  1368     0F2C                     	;# 
  1369     0F2D                     	;# 
  1370     0F2E                     	;# 
  1371     0F2F                     	;# 
  1372     0F8C                     	;# 
  1373     0F8D                     	;# 
  1374     0F91                     	;# 
  1375     0F95                     	;# 
  1376     0F96                     	;# 
  1377     0F97                     	;# 
  1378     0F9C                     	;# 
  1379     0F9D                     	;# 
  1380     0F9E                     	;# 
  1381     0FE3                     	;# 
  1382     0FE4                     	;# 
  1383     0FE5                     	;# 
  1384     0FE6                     	;# 
  1385     0FE7                     	;# 
  1386     0FE8                     	;# 
  1387     0FE9                     	;# 
  1388     0FEA                     	;# 
  1389     0FEB                     	;# 
  1390     0FED                     	;# 
  1391     0FEE                     	;# 
  1392     0FEF                     	;# 
  1393                           
  1394 ;; Function _I2C_SlaveDefWrColInterruptHandler is unused but had its address taken
  1395     0000                     
  1396 ;; Function _I2C_SlaveDefBusColInterruptHandler is unused but had its address taken
  1397     0000                     
  1398                           	psect	stringtext1
  1399     07F7                     __pstringtext1:
  1400     07F7                     _safety:
  1401     07F7  34CD               	retlw	205
  1402     07F8  34CC               	retlw	204
  1403     07F9  344C               	retlw	76
  1404     07FA  3440               	retlw	64
  1405     07FB  3466               	retlw	102
  1406     07FC  3466               	retlw	102
  1407     07FD  3486               	retlw	134
  1408     07FE  3440               	retlw	64
  1409     07FF  34E2               	retlw	226
  1410     0800  3400               	retlw	0
  1411     0801  34E6               	retlw	230
  1412     0802  3400               	retlw	0
  1413     0803                     __end_of_safety:
  1414     0011                     _PIR1bits	set	17
  1415     0012                     _PIR2bits	set	18
  1416     000B                     _INTCONbits	set	11
  1417     0097                     _WDTCONbits	set	151
  1418     009D                     _ADCON0bits	set	157
  1419     009D                     _ADCON0	set	157
  1420     009C                     _ADRESH	set	156
  1421     009B                     _ADRESL	set	155
  1422     009F                     _ADCON2	set	159
  1423     009E                     _ADCON1	set	158
  1424     0097                     _WDTCON	set	151
  1425     0099                     _OSCCON	set	153
  1426     0091                     _PIE1bits	set	145
  1427     0092                     _PIE2bits	set	146
  1428     0095                     _OPTION_REGbits	set	149
  1429     008E                     _TRISC	set	142
  1430     008D                     _TRISB	set	141
  1431     008C                     _TRISA	set	140
  1432     010E                     _LATCbits	set	270
  1433     010D                     _LATBbits	set	269
  1434     0117                     _FVRCONbits	set	279
  1435     0117                     _FVRCON	set	279
  1436     0116                     _BORCON	set	278
  1437     011D                     _APFCON	set	285
  1438     010E                     _LATC	set	270
  1439     010D                     _LATB	set	269
  1440     010C                     _LATA	set	268
  1441     018C                     _ANSELA	set	396
  1442     018D                     _ANSELB	set	397
  1443     018E                     _ANSELC	set	398
  1444     0211                     _SSP1BUF	set	529
  1445     0216                     _SSP1CON2bits	set	534
  1446     0214                     _SSP1STATbits	set	532
  1447     0213                     _SSP1MSK	set	531
  1448     0212                     _SSP1ADD	set	530
  1449     0215                     _SSP1CON1bits	set	533
  1450     0216                     _SSP1CON2	set	534
  1451     0215                     _SSP1CON1	set	533
  1452     0214                     _SSP1STAT	set	532
  1453     020C                     _WPUA	set	524
  1454     020D                     _WPUB	set	525
  1455                           
  1456                           	psect	cinit
  1457     0023                     start_initialization:	
  1458                           ; #config settings
  1459                           
  1460     0023                     __initialization:
  1461                           
  1462                           ; Clear objects allocated to COMMON
  1463     0023  01F7               	clrf	__pbssCOMMON& (0+127)
  1464     0024  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1465     0025  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1466                           
  1467                           ; Clear objects allocated to BANK0
  1468     0026  304A               	movlw	low __pbssBANK0
  1469     0027  0084               	movwf	4
  1470     0028  3000               	movlw	high __pbssBANK0
  1471     0029  0085               	movwf	5
  1472     002A  3023               	movlw	35
  1473     002B  318F  273C  3180   	fcall	clear_ram0
  1474                           
  1475                           ; Clear objects allocated to BANK1
  1476     002E  30A0               	movlw	low __pbssBANK1
  1477     002F  0084               	movwf	4
  1478     0030  3000               	movlw	high __pbssBANK1
  1479     0031  0085               	movwf	5
  1480     0032  300B               	movlw	11
  1481     0033  318F  273C         	fcall	clear_ram0
  1482     0035                     end_of_initialization:	
  1483                           ;End of C runtime variable initialization code
  1484                           
  1485     0035                     __end_of__initialization:
  1486     0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1487     0036  0020               	movlb	0
  1488     0037  3187  2FA5         	ljmp	_main	;jump to C main() function
  1489                           
  1490                           	psect	bssCOMMON
  1491     0077                     __pbssCOMMON:
  1492     0077                     _i2cWrData_13:
  1493     0077                     	ds	1
  1494     0078                     _i2cWrData_14:
  1495     0078                     	ds	1
  1496     0079                     _i2cWrData_15:
  1497     0079                     	ds	1
  1498                           
  1499                           	psect	bssBANK0
  1500     004A                     __pbssBANK0:
  1501     004A                     _converter:
  1502     004A                     	ds	4
  1503     004E                     _ADC_InterruptHandler:
  1504     004E                     	ds	2
  1505     0050                     _I2C_SlaveWrColInterruptHandler:
  1506     0050                     	ds	2
  1507     0052                     _I2C_SlaveBusColInterruptHandler:
  1508     0052                     	ds	2
  1509     0054                     _I2C_SlaveAddrInterruptHandler:
  1510     0054                     	ds	2
  1511     0056                     _I2C_SlaveWrInterruptHandler:
  1512     0056                     	ds	2
  1513     0058                     _I2C_SlaveRdInterruptHandler:
  1514     0058                     	ds	2
  1515     005A                     _MSSP_InterruptHandler:
  1516     005A                     	ds	2
  1517     005C                     _selectedReference:
  1518     005C                     	ds	1
  1519     005D                     _Cell_Balancing_Enabled:
  1520     005D                     	ds	1
  1521     005E                     _i2cSlaveState:
  1522     005E                     	ds	1
  1523     005F                     _i2cSlaveAddr:
  1524     005F                     	ds	1
  1525     0060                     _i2cRdData:
  1526     0060                     	ds	1
  1527     0061                     _i2cWrData:
  1528     0061                     	ds	1
  1529     0062                     _i2cWrData_Secondary:
  1530     0062                     	ds	1
  1531     0063                     _i2cWrData_Tertiary:
  1532     0063                     	ds	1
  1533     0064                     _i2cWrData_Quaternary:
  1534     0064                     	ds	1
  1535     0065                     _i2cWrData_5:
  1536     0065                     	ds	1
  1537     0066                     _i2cWrData_6:
  1538     0066                     	ds	1
  1539     0067                     _i2cWrData_7:
  1540     0067                     	ds	1
  1541     0068                     _i2cWrData_8:
  1542     0068                     	ds	1
  1543     0069                     _i2cWrData_9:
  1544     0069                     	ds	1
  1545     006A                     _i2cWrData_10:
  1546     006A                     	ds	1
  1547     006B                     _i2cWrData_11:
  1548     006B                     	ds	1
  1549     006C                     _i2cWrData_12:
  1550     006C                     	ds	1
  1551                           
  1552                           	psect	bssBANK1
  1553     00A0                     __pbssBANK1:
  1554     00A0                     _memory:
  1555     00A0                     	ds	11
  1556                           
  1557                           	psect	clrtext
  1558     0F3C                     clear_ram0:	
  1559                           ;	Called with FSR0 containing the base address, and
  1560                           ;	WREG with the size to clear
  1561                           
  1562     0F3C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1563     0F3D                     clrloop0:
  1564     0F3D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1565     0F3E  3101               	addfsr 0,1
  1566     0F3F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1567     0F40  2F3D               	goto	clrloop0	;have we reached the end yet?
  1568     0F41  3400               	retlw	0	;all done for this memory range, return
  1569                           
  1570                           	psect	cstackBANK1
  1571     00AB                     __pcstackBANK1:
  1572     00AB                     updateMemoryValues@Vbit:
  1573                           
  1574                           ; 4 bytes @ 0x0
  1575     00AB                     	ds	4
  1576     00AF                     updateMemoryValues@fvr_Test:
  1577                           
  1578                           ; 2 bytes @ 0x4
  1579     00AF                     	ds	2
  1580                           
  1581                           	psect	cstackCOMMON
  1582     0070                     __pcstackCOMMON:
  1583     0070                     ?_I2C_SlaveOpen:
  1584     0070                     ?_I2C_SlaveSetSlaveAddr:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587     0070                     ?_I2C_SlaveSetSlaveMask:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590     0070                     ?_I2C_Isr:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593     0070                     ?_I2C_SlaveDefWrInterruptHandler:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596     0070                     ?_I2C_SlaveDefRdInterruptHandler:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599     0070                     ??_I2C_SlaveDefRdInterruptHandler:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602     0070                     ?_I2C_SlaveDefAddrInterruptHandler:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605     0070                     ??_I2C_SlaveDefAddrInterruptHandler:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608     0070                     ?_I2C_SlaveEnableIrq:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611     0070                     ?_I2C_SlaveGetRxData:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614     0070                     ??_I2C_SlaveGetRxData:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617     0070                     ?_I2C_SlaveSendTxData:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620     0070                     ??_I2C_SlaveSendTxData:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623     0070                     ?_I2C_SlaveIsRead:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626     0070                     ??_I2C_SlaveIsRead:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629     0070                     ?_I2C_SlaveClearIrq:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632     0070                     ??_I2C_SlaveClearIrq:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635     0070                     ?_I2C_SlaveIsAddr:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638     0070                     ??_I2C_SlaveIsAddr:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641     0070                     ?_I2C_SlaveAddrCallBack:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644     0070                     ??_I2C_SlaveAddrCallBack:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647     0070                     ?_I2C_SlaveIsTxBufEmpty:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650     0070                     ??_I2C_SlaveIsTxBufEmpty:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653     0070                     ?_I2C_SlaveWrCallBack:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656     0070                     ?_I2C_SlaveIsRxBufFull:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659     0070                     ??_I2C_SlaveIsRxBufFull:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662     0070                     ?_I2C_SlaveRdCallBack:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665     0070                     ??_I2C_SlaveRdCallBack:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668     0070                     ?_I2C_SlaveReleaseClock:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671     0070                     ??_I2C_SlaveReleaseClock:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674     0070                     ?_OSCILLATOR_Initialize:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677     0070                     ?_WDT_Initialize:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680     0070                     ?_FVR_Initialize:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683     0070                     ?_ADC_Initialize:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686     0070                     ?_I2C_Handler:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689     0070                     ?_updateMemoryValues:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692     0070                     ?_sendVSNSDataToMaster:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695     0070                     ?_PIN_MANAGER_Initialize:	
  1696                           ; 1 bytes @ 0x0
  1697                           
  1698     0070                     ?_PIN_MANAGER_IOC:	
  1699                           ; 1 bytes @ 0x0
  1700                           
  1701     0070                     ??_PIN_MANAGER_IOC:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704     0070                     ?_INTERRUPT_InterruptManager:	
  1705                           ; 1 bytes @ 0x0
  1706                           
  1707     0070                     ?_I2C_Initialize:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710     0070                     ?_I2C_Open:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713     0070                     ?_SYSTEM_Initialize:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716     0070                     ?_main:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719     0070                     I2C_SlaveSendTxData@data:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722                           
  1723                           ; 1 bytes @ 0x0
  1724     0070                     	ds	1
  1725     0071                     ??_I2C_Isr:
  1726     0071                     ??_I2C_SlaveDefWrInterruptHandler:	
  1727                           ; 1 bytes @ 0x1
  1728                           
  1729     0071                     ??_I2C_SlaveWrCallBack:	
  1730                           ; 1 bytes @ 0x1
  1731                           
  1732                           
  1733                           ; 1 bytes @ 0x1
  1734     0071                     	ds	2
  1735     0073                     ??_I2C_SlaveOpen:
  1736     0073                     ??_I2C_SlaveSetSlaveAddr:	
  1737                           ; 1 bytes @ 0x3
  1738                           
  1739     0073                     ??_I2C_SlaveSetSlaveMask:	
  1740                           ; 1 bytes @ 0x3
  1741                           
  1742     0073                     ?_I2C_SlaveSetIsrHandler:	
  1743                           ; 1 bytes @ 0x3
  1744                           
  1745     0073                     ?_I2C_SlaveSetBusColIntHandler:	
  1746                           ; 1 bytes @ 0x3
  1747                           
  1748     0073                     ?_I2C_SlaveSetWriteIntHandler:	
  1749                           ; 1 bytes @ 0x3
  1750                           
  1751     0073                     ?_I2C_SlaveSetReadIntHandler:	
  1752                           ; 1 bytes @ 0x3
  1753                           
  1754     0073                     ?_I2C_SlaveSetAddrIntHandler:	
  1755                           ; 1 bytes @ 0x3
  1756                           
  1757     0073                     ?_I2C_SlaveSetWrColIntHandler:	
  1758                           ; 1 bytes @ 0x3
  1759                           
  1760     0073                     ??_I2C_SlaveEnableIrq:	
  1761                           ; 1 bytes @ 0x3
  1762                           
  1763     0073                     ??_OSCILLATOR_Initialize:	
  1764                           ; 1 bytes @ 0x3
  1765                           
  1766     0073                     ??_WDT_Initialize:	
  1767                           ; 1 bytes @ 0x3
  1768                           
  1769     0073                     ??_FVR_Initialize:	
  1770                           ; 1 bytes @ 0x3
  1771                           
  1772     0073                     ??_ADC_Initialize:	
  1773                           ; 1 bytes @ 0x3
  1774                           
  1775     0073                     ?_sendTempDataToMaster:	
  1776                           ; 1 bytes @ 0x3
  1777                           
  1778     0073                     ??_sendVSNSDataToMaster:	
  1779                           ; 1 bytes @ 0x3
  1780                           
  1781     0073                     ??_PIN_MANAGER_Initialize:	
  1782                           ; 1 bytes @ 0x3
  1783                           
  1784     0073                     ??_INTERRUPT_InterruptManager:	
  1785                           ; 1 bytes @ 0x3
  1786                           
  1787     0073                     ??_I2C_Initialize:	
  1788                           ; 1 bytes @ 0x3
  1789                           
  1790     0073                     ??___flge:	
  1791                           ; 1 bytes @ 0x3
  1792                           
  1793     0073                     ?__Umul8_16:	
  1794                           ; 1 bytes @ 0x3
  1795                           
  1796     0073                     ?_ADC_GetConversion:	
  1797                           ; 2 bytes @ 0x3
  1798                           
  1799     0073                     ?___xxtofl:	
  1800                           ; 2 bytes @ 0x3
  1801                           
  1802     0073                     I2C_SlaveSetSlaveAddr@slaveAddr:	
  1803                           ; 4 bytes @ 0x3
  1804                           
  1805     0073                     I2C_SlaveSetSlaveMask@maskAddr:	
  1806                           ; 1 bytes @ 0x3
  1807                           
  1808     0073                     __Umul8_16@multiplicand:	
  1809                           ; 1 bytes @ 0x3
  1810                           
  1811     0073                     I2C_SlaveSetIsrHandler@handler:	
  1812                           ; 1 bytes @ 0x3
  1813                           
  1814     0073                     I2C_SlaveSetReadIntHandler@handler:	
  1815                           ; 2 bytes @ 0x3
  1816                           
  1817     0073                     I2C_SlaveSetWriteIntHandler@handler:	
  1818                           ; 2 bytes @ 0x3
  1819                           
  1820     0073                     I2C_SlaveSetAddrIntHandler@handler:	
  1821                           ; 2 bytes @ 0x3
  1822                           
  1823     0073                     I2C_SlaveSetWrColIntHandler@handler:	
  1824                           ; 2 bytes @ 0x3
  1825                           
  1826     0073                     I2C_SlaveSetBusColIntHandler@handler:	
  1827                           ; 2 bytes @ 0x3
  1828                           
  1829     0073                     sendTempDataToMaster@toSend:	
  1830                           ; 2 bytes @ 0x3
  1831                           
  1832     0073                     ___xxtofl@val:	
  1833                           ; 2 bytes @ 0x3
  1834                           
  1835                           
  1836                           ; 4 bytes @ 0x3
  1837     0073                     	ds	1
  1838     0074                     ??_SYSTEM_Initialize:
  1839                           
  1840                           ; 1 bytes @ 0x4
  1841     0074                     	ds	1
  1842     0075                     ??_I2C_SlaveSetIsrHandler:
  1843     0075                     ??_I2C_SlaveSetBusColIntHandler:	
  1844                           ; 1 bytes @ 0x5
  1845                           
  1846     0075                     ??_I2C_SlaveSetWriteIntHandler:	
  1847                           ; 1 bytes @ 0x5
  1848                           
  1849     0075                     ??_I2C_SlaveSetReadIntHandler:	
  1850                           ; 1 bytes @ 0x5
  1851                           
  1852     0075                     ??_I2C_SlaveSetAddrIntHandler:	
  1853                           ; 1 bytes @ 0x5
  1854                           
  1855     0075                     ??_I2C_SlaveSetWrColIntHandler:	
  1856                           ; 1 bytes @ 0x5
  1857                           
  1858     0075                     ??_I2C_Handler:	
  1859                           ; 1 bytes @ 0x5
  1860                           
  1861     0075                     ??_sendTempDataToMaster:	
  1862                           ; 1 bytes @ 0x5
  1863                           
  1864     0075                     ??__Umul8_16:	
  1865                           ; 1 bytes @ 0x5
  1866                           
  1867     0075                     ??_I2C_Open:	
  1868                           ; 1 bytes @ 0x5
  1869                           
  1870     0075                     ??_ADC_GetConversion:	
  1871                           ; 1 bytes @ 0x5
  1872                           
  1873                           
  1874                           ; 1 bytes @ 0x5
  1875     0075                     	ds	1
  1876     0076                     ADC_GetConversion@channel:
  1877                           
  1878                           ; 1 bytes @ 0x6
  1879     0076                     	ds	1
  1880                           
  1881                           	psect	cstackBANK0
  1882     0020                     __pcstackBANK0:
  1883     0020                     ?___flge:
  1884     0020                     ??___xxtofl:	
  1885                           ; 1 bit 
  1886                           
  1887     0020                     __Umul8_16@product:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890     0020                     ___flge@ff1:	
  1891                           ; 2 bytes @ 0x0
  1892                           
  1893                           
  1894                           ; 4 bytes @ 0x0
  1895     0020                     	ds	2
  1896     0022                     __Umul8_16@word_mpld:
  1897                           
  1898                           ; 2 bytes @ 0x2
  1899     0022                     	ds	2
  1900     0024                     __Umul8_16@multiplier:
  1901     0024                     ___xxtofl@sign:	
  1902                           ; 1 bytes @ 0x4
  1903                           
  1904     0024                     ___flge@ff2:	
  1905                           ; 1 bytes @ 0x4
  1906                           
  1907                           
  1908                           ; 4 bytes @ 0x4
  1909     0024                     	ds	1
  1910     0025                     ?___flmul:
  1911     0025                     ___xxtofl@exp:	
  1912                           ; 4 bytes @ 0x5
  1913                           
  1914     0025                     ___flmul@b:	
  1915                           ; 1 bytes @ 0x5
  1916                           
  1917                           
  1918                           ; 4 bytes @ 0x5
  1919     0025                     	ds	1
  1920     0026                     ___xxtofl@arg:
  1921                           
  1922                           ; 4 bytes @ 0x6
  1923     0026                     	ds	3
  1924     0029                     ___flmul@a:
  1925                           
  1926                           ; 4 bytes @ 0x9
  1927     0029                     	ds	1
  1928     002A                     ?___fldiv:
  1929     002A                     ___fldiv@a:	
  1930                           ; 4 bytes @ 0xA
  1931                           
  1932                           
  1933                           ; 4 bytes @ 0xA
  1934     002A                     	ds	3
  1935     002D                     ??___flmul:
  1936                           
  1937                           ; 1 bytes @ 0xD
  1938     002D                     	ds	1
  1939     002E                     ___fldiv@b:
  1940                           
  1941                           ; 4 bytes @ 0xE
  1942     002E                     	ds	4
  1943     0032                     ??___fldiv:
  1944     0032                     ___flmul@sign:	
  1945                           ; 1 bytes @ 0x12
  1946                           
  1947                           
  1948                           ; 1 bytes @ 0x12
  1949     0032                     	ds	1
  1950     0033                     ___flmul@aexp:
  1951                           
  1952                           ; 1 bytes @ 0x13
  1953     0033                     	ds	1
  1954     0034                     ___flmul@grs:
  1955                           
  1956                           ; 4 bytes @ 0x14
  1957     0034                     	ds	3
  1958     0037                     ___fldiv@rem:
  1959                           
  1960                           ; 4 bytes @ 0x17
  1961     0037                     	ds	1
  1962     0038                     ___flmul@bexp:
  1963                           
  1964                           ; 1 bytes @ 0x18
  1965     0038                     	ds	1
  1966     0039                     ___flmul@prod:
  1967                           
  1968                           ; 4 bytes @ 0x19
  1969     0039                     	ds	2
  1970     003B                     ___fldiv@sign:
  1971                           
  1972                           ; 1 bytes @ 0x1B
  1973     003B                     	ds	1
  1974     003C                     ___fldiv@new_exp:
  1975                           
  1976                           ; 2 bytes @ 0x1C
  1977     003C                     	ds	1
  1978     003D                     ___flmul@temp:
  1979                           
  1980                           ; 2 bytes @ 0x1D
  1981     003D                     	ds	1
  1982     003E                     ___fldiv@grs:
  1983                           
  1984                           ; 4 bytes @ 0x1E
  1985     003E                     	ds	4
  1986     0042                     ___fldiv@bexp:
  1987                           
  1988                           ; 1 bytes @ 0x22
  1989     0042                     	ds	1
  1990     0043                     ___fldiv@aexp:
  1991                           
  1992                           ; 1 bytes @ 0x23
  1993     0043                     	ds	1
  1994     0044                     ??_updateMemoryValues:
  1995                           
  1996                           ; 1 bytes @ 0x24
  1997     0044                     	ds	4
  1998     0048                     ??_main:
  1999                           
  2000                           ; 1 bytes @ 0x28
  2001     0048                     	ds	2
  2002                           
  2003                           	psect	maintext
  2004     07A5                     __pmaintext:	
  2005 ;;
  2006 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2007 ;;
  2008 ;; *************** function _main *****************
  2009 ;; Defined at:
  2010 ;;		line 108 in file "main.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : B1F/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2024 ;;      Params:         0       0       0       0
  2025 ;;      Locals:         0       0       0       0
  2026 ;;      Temps:          0       2       0       0
  2027 ;;      Totals:         0       2       0       0
  2028 ;;Total ram usage:        2 bytes
  2029 ;; Hardware stack levels required when called: 8
  2030 ;; This function calls:
  2031 ;;		_I2C_Handler
  2032 ;;		_I2C_Open
  2033 ;;		_SYSTEM_Initialize
  2034 ;;		_updateMemoryValues
  2035 ;; This function is called by:
  2036 ;;		Startup code after reset
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040     07A5                     _main:	
  2041                           ;psect for function _main
  2042                           
  2043                           
  2044                           ;main.c: 111:     SYSTEM_Initialize();
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2048     07A5  318F  279A  3187   	fcall	_SYSTEM_Initialize
  2049                           
  2050                           ;main.c: 117:     (INTCONbits.GIE = 1);
  2051     07A8  178B               	bsf	11,7	;volatile
  2052                           
  2053                           ;main.c: 120:     (INTCONbits.PEIE = 1);
  2054     07A9  170B               	bsf	11,6	;volatile
  2055                           
  2056                           ;main.c: 129:     I2C_Open();
  2057     07AA  3187  276D  3187   	fcall	_I2C_Open
  2058     07AD                     l3133:
  2059                           
  2060                           ;main.c: 132:         I2C_Handler();
  2061     07AD  3186  269F  3187   	fcall	_I2C_Handler
  2062                           
  2063                           ;main.c: 133:         if(Cell_Balancing_Enabled){
  2064     07B0  0020               	movlb	0	; select bank0
  2065     07B1  085D               	movf	_Cell_Balancing_Enabled,w
  2066     07B2  1903               	btfsc	3,2
  2067     07B3  2FD1               	goto	l3143
  2068                           
  2069                           ;main.c: 134:             LATBbits.LATB7 = 1;
  2070     07B4  0022               	movlb	2	; select bank2
  2071     07B5  178D               	bsf	13,7	;volatile
  2072                           
  2073                           ;main.c: 135:             _delay((unsigned long)((900)*(16000000/4000.0)));
  2074     07B6  3013               	movlw	19
  2075     07B7  0020               	movlb	0	; select bank0
  2076     07B8  00C9               	movwf	??_main+1
  2077     07B9  3044               	movlw	68
  2078     07BA  00C8               	movwf	??_main
  2079     07BB  3044               	movlw	68
  2080     07BC                     u3147:
  2081     07BC  0B89               	decfsz	9,f
  2082     07BD  2FBC               	goto	u3147
  2083     07BE  0BC8               	decfsz	??_main,f
  2084     07BF  2FBC               	goto	u3147
  2085     07C0  0BC9               	decfsz	??_main+1,f
  2086     07C1  2FBC               	goto	u3147
  2087     07C2  0000               	nop
  2088                           
  2089                           ;main.c: 136:             LATBbits.LATB7 = 0;
  2090     07C3  0022               	movlb	2	; select bank2
  2091     07C4  138D               	bcf	13,7	;volatile
  2092                           
  2093                           ;main.c: 137:             _delay((unsigned long)((90)*(16000000/4000.0)));
  2094     07C5  3002               	movlw	2
  2095     07C6  0020               	movlb	0	; select bank0
  2096     07C7  00C9               	movwf	??_main+1
  2097     07C8  30D4               	movlw	212
  2098     07C9  00C8               	movwf	??_main
  2099     07CA  3085               	movlw	133
  2100     07CB                     u3157:
  2101     07CB  0B89               	decfsz	9,f
  2102     07CC  2FCB               	goto	u3157
  2103     07CD  0BC8               	decfsz	??_main,f
  2104     07CE  2FCB               	goto	u3157
  2105     07CF  0BC9               	decfsz	??_main+1,f
  2106     07D0  2FCB               	goto	u3157
  2107     07D1                     l3143:
  2108                           
  2109                           ;main.c: 139:         updateMemoryValues();
  2110     07D1  3182  2249  3187   	fcall	_updateMemoryValues
  2111     07D4  2FAD               	goto	l3133
  2112     07D5                     __end_of_main:
  2113                           
  2114                           	psect	text1
  2115     0249                     __ptext1:	
  2116 ;; *************** function _updateMemoryValues *****************
  2117 ;; Defined at:
  2118 ;;		line 203 in file "main.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;		None
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  Vbit            4    0[BANK1 ] float 
  2123 ;;  fvr_Test        2    4[BANK1 ] unsigned short 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2133 ;;      Params:         0       0       0       0
  2134 ;;      Locals:         0       0       6       0
  2135 ;;      Temps:          0       4       0       0
  2136 ;;      Totals:         0       4       6       0
  2137 ;;Total ram usage:       10 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 7
  2140 ;; This function calls:
  2141 ;;		_ADC_GetConversion
  2142 ;;		___fldiv
  2143 ;;		___flge
  2144 ;;		___flmul
  2145 ;;		___xxtofl
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151     0249                     _updateMemoryValues:	
  2152                           ;psect for function _updateMemoryValues
  2153                           
  2154                           
  2155                           ;main.c: 205:     selectedReference = TSNS1;
  2156                           
  2157                           ;incstack = 0
  2158                           ; Regs used in _updateMemoryValues: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2159     0249  3002               	movlw	2
  2160     024A  0020               	movlb	0	; select bank0
  2161     024B  00DC               	movwf	_selectedReference
  2162                           
  2163                           ;main.c: 206:     memory.TSNS1 = (uint16_t) ADC_GetConversion(selectedReference);
  2164     024C  3002               	movlw	2
  2165     024D  318F  27AC  3182   	fcall	_ADC_GetConversion
  2166     0250  0874               	movf	?_ADC_GetConversion+1,w
  2167     0251  0021               	movlb	1	; select bank1
  2168     0252  00A2               	movwf	((_memory+1)^(0+128)+1)
  2169     0253  0873               	movf	?_ADC_GetConversion,w
  2170     0254  00A1               	movwf	(_memory^(0+128)+1)
  2171                           
  2172                           ;main.c: 207:     selectedReference = TSNS2;
  2173     0255  3003               	movlw	3
  2174     0256  0020               	movlb	0	; select bank0
  2175     0257  00DC               	movwf	_selectedReference
  2176                           
  2177                           ;main.c: 208:     memory.TSNS2 = (uint16_t) ADC_GetConversion(selectedReference);
  2178     0258  3003               	movlw	3
  2179     0259  318F  27AC  3182   	fcall	_ADC_GetConversion
  2180     025C  0874               	movf	?_ADC_GetConversion+1,w
  2181     025D  0021               	movlb	1	; select bank1
  2182     025E  00A4               	movwf	((_memory+1)^(0+128)+3)
  2183     025F  0873               	movf	?_ADC_GetConversion,w
  2184     0260  00A3               	movwf	(_memory^(0+128)+3)
  2185                           
  2186                           ;main.c: 209:     selectedReference = TSNS3;
  2187     0261  3007               	movlw	7
  2188     0262  0020               	movlb	0	; select bank0
  2189     0263  00DC               	movwf	_selectedReference
  2190                           
  2191                           ;main.c: 210:     memory.TSNS3 = (uint16_t) ADC_GetConversion(selectedReference);
  2192     0264  3007               	movlw	7
  2193     0265  318F  27AC  3182   	fcall	_ADC_GetConversion
  2194     0268  0874               	movf	?_ADC_GetConversion+1,w
  2195     0269  0021               	movlb	1	; select bank1
  2196     026A  00A6               	movwf	((_memory+1)^(0+128)+5)
  2197     026B  0873               	movf	?_ADC_GetConversion,w
  2198     026C  00A5               	movwf	(_memory^(0+128)+5)
  2199                           
  2200                           ;main.c: 211:     selectedReference = TSNS4;
  2201     026D  3008               	movlw	8
  2202     026E  0020               	movlb	0	; select bank0
  2203     026F  00DC               	movwf	_selectedReference
  2204                           
  2205                           ;main.c: 212:     memory.TSNS4 = (uint16_t) ADC_GetConversion(selectedReference);
  2206     0270  3008               	movlw	8
  2207     0271  318F  27AC  3182   	fcall	_ADC_GetConversion
  2208     0274  0874               	movf	?_ADC_GetConversion+1,w
  2209     0275  0021               	movlb	1	; select bank1
  2210     0276  00A8               	movwf	((_memory+1)^(0+128)+7)
  2211     0277  0873               	movf	?_ADC_GetConversion,w
  2212     0278  00A7               	movwf	(_memory^(0+128)+7)
  2213                           
  2214                           ;main.c: 213:     selectedReference = TSNS5;
  2215     0279  3009               	movlw	9
  2216     027A  0020               	movlb	0	; select bank0
  2217     027B  00DC               	movwf	_selectedReference
  2218                           
  2219                           ;main.c: 214:     memory.TSNS5 = (uint16_t) ADC_GetConversion(selectedReference);
  2220     027C  3009               	movlw	9
  2221     027D  318F  27AC  3182   	fcall	_ADC_GetConversion
  2222     0280  0874               	movf	?_ADC_GetConversion+1,w
  2223     0281  0021               	movlb	1	; select bank1
  2224     0282  00AA               	movwf	((_memory+1)^(0+128)+9)
  2225     0283  0873               	movf	?_ADC_GetConversion,w
  2226     0284  00A9               	movwf	(_memory^(0+128)+9)
  2227                           
  2228                           ;main.c: 215:     if (memory.TSNS1 <= safety.HIGH_TEMP) {
  2229     0285  30FF               	movlw	low ((_safety+8)| (0+32768))
  2230     0286  0084               	movwf	4
  2231     0287  3087               	movlw	high ((_safety+8)| (0+32768))
  2232     0288  0085               	movwf	5
  2233     0289  3F00               	moviw [0]fsr0
  2234     028A  0020               	movlb	0	; select bank0
  2235     028B  00C4               	movwf	??_updateMemoryValues
  2236     028C  3F01               	moviw [1]fsr0
  2237     028D  00C5               	movwf	??_updateMemoryValues+1
  2238     028E  0021               	movlb	1	; select bank1
  2239     028F  0822               	movf	((_memory+1)^(0+128)+1),w
  2240     0290  0020               	movlb	0	; select bank0
  2241     0291  0245               	subwf	??_updateMemoryValues+1,w
  2242     0292  1D03               	skipz
  2243     0293  2A98               	goto	u3015
  2244     0294  0021               	movlb	1	; select bank1
  2245     0295  0821               	movf	(_memory^(0+128)+1),w
  2246     0296  0020               	movlb	0	; select bank0
  2247     0297  0244               	subwf	??_updateMemoryValues,w
  2248     0298                     u3015:
  2249     0298  1C03               	skipc
  2250     0299  2A9C               	goto	l3079
  2251                           
  2252                           ;main.c: 216:         LATCbits.LATC1 = 0;
  2253     029A  0022               	movlb	2	; select bank2
  2254     029B  108E               	bcf	14,1	;volatile
  2255     029C                     l3079:
  2256                           
  2257                           ;main.c: 218:     if (memory.TSNS1 <= safety.WARN_TEMP) {
  2258     029C  3001               	movlw	low ((_safety+10)| (0+32768))
  2259     029D  0084               	movwf	4
  2260     029E  3088               	movlw	high ((_safety+10)| (0+32768))
  2261     029F  0085               	movwf	5
  2262     02A0  3F00               	moviw [0]fsr0
  2263     02A1  0020               	movlb	0	; select bank0
  2264     02A2  00C4               	movwf	??_updateMemoryValues
  2265     02A3  3F01               	moviw [1]fsr0
  2266     02A4  00C5               	movwf	??_updateMemoryValues+1
  2267     02A5  0021               	movlb	1	; select bank1
  2268     02A6  0822               	movf	((_memory+1)^(0+128)+1),w
  2269     02A7  0020               	movlb	0	; select bank0
  2270     02A8  0245               	subwf	??_updateMemoryValues+1,w
  2271     02A9  1D03               	skipz
  2272     02AA  2AAF               	goto	u3025
  2273     02AB  0021               	movlb	1	; select bank1
  2274     02AC  0821               	movf	(_memory^(0+128)+1),w
  2275     02AD  0020               	movlb	0	; select bank0
  2276     02AE  0244               	subwf	??_updateMemoryValues,w
  2277     02AF                     u3025:
  2278     02AF  1C03               	skipc
  2279     02B0  2AB4               	goto	l548
  2280                           
  2281                           ;main.c: 219:         LATCbits.LATC2 = 0;
  2282     02B1  0022               	movlb	2	; select bank2
  2283     02B2  110E               	bcf	14,2	;volatile
  2284                           
  2285                           ;main.c: 220:     } else {
  2286     02B3  2AB6               	goto	l3083
  2287     02B4                     l548:
  2288                           
  2289                           ;main.c: 221:         LATCbits.LATC2 = 1;
  2290     02B4  0022               	movlb	2	; select bank2
  2291     02B5  150E               	bsf	14,2	;volatile
  2292     02B6                     l3083:
  2293                           
  2294                           ;main.c: 223:     if (memory.TSNS2 <= safety.HIGH_TEMP) {
  2295     02B6  30FF               	movlw	low ((_safety+8)| (0+32768))
  2296     02B7  0084               	movwf	4
  2297     02B8  3087               	movlw	high ((_safety+8)| (0+32768))
  2298     02B9  0085               	movwf	5
  2299     02BA  3F00               	moviw [0]fsr0
  2300     02BB  0020               	movlb	0	; select bank0
  2301     02BC  00C4               	movwf	??_updateMemoryValues
  2302     02BD  3F01               	moviw [1]fsr0
  2303     02BE  00C5               	movwf	??_updateMemoryValues+1
  2304     02BF  0021               	movlb	1	; select bank1
  2305     02C0  0824               	movf	((_memory+1)^(0+128)+3),w
  2306     02C1  0020               	movlb	0	; select bank0
  2307     02C2  0245               	subwf	??_updateMemoryValues+1,w
  2308     02C3  1D03               	skipz
  2309     02C4  2AC9               	goto	u3035
  2310     02C5  0021               	movlb	1	; select bank1
  2311     02C6  0823               	movf	(_memory^(0+128)+3),w
  2312     02C7  0020               	movlb	0	; select bank0
  2313     02C8  0244               	subwf	??_updateMemoryValues,w
  2314     02C9                     u3035:
  2315     02C9  1C03               	skipc
  2316     02CA  2ACD               	goto	l3087
  2317                           
  2318                           ;main.c: 224:         LATCbits.LATC1 = 0;
  2319     02CB  0022               	movlb	2	; select bank2
  2320     02CC  108E               	bcf	14,1	;volatile
  2321     02CD                     l3087:
  2322                           
  2323                           ;main.c: 226:     if (memory.TSNS2 <= safety.WARN_TEMP) {
  2324     02CD  3001               	movlw	low ((_safety+10)| (0+32768))
  2325     02CE  0084               	movwf	4
  2326     02CF  3088               	movlw	high ((_safety+10)| (0+32768))
  2327     02D0  0085               	movwf	5
  2328     02D1  3F00               	moviw [0]fsr0
  2329     02D2  0020               	movlb	0	; select bank0
  2330     02D3  00C4               	movwf	??_updateMemoryValues
  2331     02D4  3F01               	moviw [1]fsr0
  2332     02D5  00C5               	movwf	??_updateMemoryValues+1
  2333     02D6  0021               	movlb	1	; select bank1
  2334     02D7  0824               	movf	((_memory+1)^(0+128)+3),w
  2335     02D8  0020               	movlb	0	; select bank0
  2336     02D9  0245               	subwf	??_updateMemoryValues+1,w
  2337     02DA  1D03               	skipz
  2338     02DB  2AE0               	goto	u3045
  2339     02DC  0021               	movlb	1	; select bank1
  2340     02DD  0823               	movf	(_memory^(0+128)+3),w
  2341     02DE  0020               	movlb	0	; select bank0
  2342     02DF  0244               	subwf	??_updateMemoryValues,w
  2343     02E0                     u3045:
  2344     02E0  1C03               	skipc
  2345     02E1  2AE5               	goto	l551
  2346                           
  2347                           ;main.c: 227:         LATCbits.LATC2 = 0;
  2348     02E2  0022               	movlb	2	; select bank2
  2349     02E3  110E               	bcf	14,2	;volatile
  2350                           
  2351                           ;main.c: 228:     } else {
  2352     02E4  2AE7               	goto	l3091
  2353     02E5                     l551:
  2354                           
  2355                           ;main.c: 229:         LATCbits.LATC2 = 1;
  2356     02E5  0022               	movlb	2	; select bank2
  2357     02E6  150E               	bsf	14,2	;volatile
  2358     02E7                     l3091:
  2359                           
  2360                           ;main.c: 231:     if (memory.TSNS3 <= safety.HIGH_TEMP) {
  2361     02E7  30FF               	movlw	low ((_safety+8)| (0+32768))
  2362     02E8  0084               	movwf	4
  2363     02E9  3087               	movlw	high ((_safety+8)| (0+32768))
  2364     02EA  0085               	movwf	5
  2365     02EB  3F00               	moviw [0]fsr0
  2366     02EC  0020               	movlb	0	; select bank0
  2367     02ED  00C4               	movwf	??_updateMemoryValues
  2368     02EE  3F01               	moviw [1]fsr0
  2369     02EF  00C5               	movwf	??_updateMemoryValues+1
  2370     02F0  0021               	movlb	1	; select bank1
  2371     02F1  0826               	movf	((_memory+1)^(0+128)+5),w
  2372     02F2  0020               	movlb	0	; select bank0
  2373     02F3  0245               	subwf	??_updateMemoryValues+1,w
  2374     02F4  1D03               	skipz
  2375     02F5  2AFA               	goto	u3055
  2376     02F6  0021               	movlb	1	; select bank1
  2377     02F7  0825               	movf	(_memory^(0+128)+5),w
  2378     02F8  0020               	movlb	0	; select bank0
  2379     02F9  0244               	subwf	??_updateMemoryValues,w
  2380     02FA                     u3055:
  2381     02FA  1C03               	skipc
  2382     02FB  2AFE               	goto	l3095
  2383                           
  2384                           ;main.c: 232:         LATCbits.LATC1 = 0;
  2385     02FC  0022               	movlb	2	; select bank2
  2386     02FD  108E               	bcf	14,1	;volatile
  2387     02FE                     l3095:
  2388                           
  2389                           ;main.c: 234:     if (memory.TSNS3 <= safety.WARN_TEMP) {
  2390     02FE  3001               	movlw	low ((_safety+10)| (0+32768))
  2391     02FF  0084               	movwf	4
  2392     0300  3088               	movlw	high ((_safety+10)| (0+32768))
  2393     0301  0085               	movwf	5
  2394     0302  3F00               	moviw [0]fsr0
  2395     0303  0020               	movlb	0	; select bank0
  2396     0304  00C4               	movwf	??_updateMemoryValues
  2397     0305  3F01               	moviw [1]fsr0
  2398     0306  00C5               	movwf	??_updateMemoryValues+1
  2399     0307  0021               	movlb	1	; select bank1
  2400     0308  0826               	movf	((_memory+1)^(0+128)+5),w
  2401     0309  0020               	movlb	0	; select bank0
  2402     030A  0245               	subwf	??_updateMemoryValues+1,w
  2403     030B  1D03               	skipz
  2404     030C  2B11               	goto	u3065
  2405     030D  0021               	movlb	1	; select bank1
  2406     030E  0825               	movf	(_memory^(0+128)+5),w
  2407     030F  0020               	movlb	0	; select bank0
  2408     0310  0244               	subwf	??_updateMemoryValues,w
  2409     0311                     u3065:
  2410     0311  1C03               	skipc
  2411     0312  2B16               	goto	l554
  2412                           
  2413                           ;main.c: 235:         LATCbits.LATC2 = 0;
  2414     0313  0022               	movlb	2	; select bank2
  2415     0314  110E               	bcf	14,2	;volatile
  2416                           
  2417                           ;main.c: 236:     } else {
  2418     0315  2B18               	goto	l3099
  2419     0316                     l554:
  2420                           
  2421                           ;main.c: 237:         LATCbits.LATC2 = 1;
  2422     0316  0022               	movlb	2	; select bank2
  2423     0317  150E               	bsf	14,2	;volatile
  2424     0318                     l3099:
  2425                           
  2426                           ;main.c: 239:     if (memory.TSNS4 <= safety.HIGH_TEMP) {
  2427     0318  30FF               	movlw	low ((_safety+8)| (0+32768))
  2428     0319  0084               	movwf	4
  2429     031A  3087               	movlw	high ((_safety+8)| (0+32768))
  2430     031B  0085               	movwf	5
  2431     031C  3F00               	moviw [0]fsr0
  2432     031D  0020               	movlb	0	; select bank0
  2433     031E  00C4               	movwf	??_updateMemoryValues
  2434     031F  3F01               	moviw [1]fsr0
  2435     0320  00C5               	movwf	??_updateMemoryValues+1
  2436     0321  0021               	movlb	1	; select bank1
  2437     0322  0828               	movf	((_memory+1)^(0+128)+7),w
  2438     0323  0020               	movlb	0	; select bank0
  2439     0324  0245               	subwf	??_updateMemoryValues+1,w
  2440     0325  1D03               	skipz
  2441     0326  2B2B               	goto	u3075
  2442     0327  0021               	movlb	1	; select bank1
  2443     0328  0827               	movf	(_memory^(0+128)+7),w
  2444     0329  0020               	movlb	0	; select bank0
  2445     032A  0244               	subwf	??_updateMemoryValues,w
  2446     032B                     u3075:
  2447     032B  1C03               	skipc
  2448     032C  2B2F               	goto	l3103
  2449                           
  2450                           ;main.c: 240:         LATCbits.LATC1 = 0;
  2451     032D  0022               	movlb	2	; select bank2
  2452     032E  108E               	bcf	14,1	;volatile
  2453     032F                     l3103:
  2454                           
  2455                           ;main.c: 243:     if (memory.TSNS4 <= safety.WARN_TEMP) {
  2456     032F  3001               	movlw	low ((_safety+10)| (0+32768))
  2457     0330  0084               	movwf	4
  2458     0331  3088               	movlw	high ((_safety+10)| (0+32768))
  2459     0332  0085               	movwf	5
  2460     0333  3F00               	moviw [0]fsr0
  2461     0334  0020               	movlb	0	; select bank0
  2462     0335  00C4               	movwf	??_updateMemoryValues
  2463     0336  3F01               	moviw [1]fsr0
  2464     0337  00C5               	movwf	??_updateMemoryValues+1
  2465     0338  0021               	movlb	1	; select bank1
  2466     0339  0828               	movf	((_memory+1)^(0+128)+7),w
  2467     033A  0020               	movlb	0	; select bank0
  2468     033B  0245               	subwf	??_updateMemoryValues+1,w
  2469     033C  1D03               	skipz
  2470     033D  2B42               	goto	u3085
  2471     033E  0021               	movlb	1	; select bank1
  2472     033F  0827               	movf	(_memory^(0+128)+7),w
  2473     0340  0020               	movlb	0	; select bank0
  2474     0341  0244               	subwf	??_updateMemoryValues,w
  2475     0342                     u3085:
  2476     0342  1C03               	skipc
  2477     0343  2B47               	goto	l557
  2478                           
  2479                           ;main.c: 244:         LATCbits.LATC2 = 0;
  2480     0344  0022               	movlb	2	; select bank2
  2481     0345  110E               	bcf	14,2	;volatile
  2482                           
  2483                           ;main.c: 245:     } else {
  2484     0346  2B49               	goto	l3107
  2485     0347                     l557:
  2486                           
  2487                           ;main.c: 246:         LATCbits.LATC2 = 1;
  2488     0347  0022               	movlb	2	; select bank2
  2489     0348  150E               	bsf	14,2	;volatile
  2490     0349                     l3107:
  2491                           
  2492                           ;main.c: 249:     if (memory.TSNS5 <= safety.HIGH_TEMP) {
  2493     0349  30FF               	movlw	low ((_safety+8)| (0+32768))
  2494     034A  0084               	movwf	4
  2495     034B  3087               	movlw	high ((_safety+8)| (0+32768))
  2496     034C  0085               	movwf	5
  2497     034D  3F00               	moviw [0]fsr0
  2498     034E  0020               	movlb	0	; select bank0
  2499     034F  00C4               	movwf	??_updateMemoryValues
  2500     0350  3F01               	moviw [1]fsr0
  2501     0351  00C5               	movwf	??_updateMemoryValues+1
  2502     0352  0021               	movlb	1	; select bank1
  2503     0353  082A               	movf	((_memory+1)^(0+128)+9),w
  2504     0354  0020               	movlb	0	; select bank0
  2505     0355  0245               	subwf	??_updateMemoryValues+1,w
  2506     0356  1D03               	skipz
  2507     0357  2B5C               	goto	u3095
  2508     0358  0021               	movlb	1	; select bank1
  2509     0359  0829               	movf	(_memory^(0+128)+9),w
  2510     035A  0020               	movlb	0	; select bank0
  2511     035B  0244               	subwf	??_updateMemoryValues,w
  2512     035C                     u3095:
  2513     035C  1C03               	skipc
  2514     035D  2B60               	goto	l3111
  2515                           
  2516                           ;main.c: 250:         LATCbits.LATC1 = 0;
  2517     035E  0022               	movlb	2	; select bank2
  2518     035F  108E               	bcf	14,1	;volatile
  2519     0360                     l3111:
  2520                           
  2521                           ;main.c: 253:     if (memory.TSNS5 <= safety.WARN_TEMP) {
  2522     0360  3001               	movlw	low ((_safety+10)| (0+32768))
  2523     0361  0084               	movwf	4
  2524     0362  3088               	movlw	high ((_safety+10)| (0+32768))
  2525     0363  0085               	movwf	5
  2526     0364  3F00               	moviw [0]fsr0
  2527     0365  0020               	movlb	0	; select bank0
  2528     0366  00C4               	movwf	??_updateMemoryValues
  2529     0367  3F01               	moviw [1]fsr0
  2530     0368  00C5               	movwf	??_updateMemoryValues+1
  2531     0369  0021               	movlb	1	; select bank1
  2532     036A  082A               	movf	((_memory+1)^(0+128)+9),w
  2533     036B  0020               	movlb	0	; select bank0
  2534     036C  0245               	subwf	??_updateMemoryValues+1,w
  2535     036D  1D03               	skipz
  2536     036E  2B73               	goto	u3105
  2537     036F  0021               	movlb	1	; select bank1
  2538     0370  0829               	movf	(_memory^(0+128)+9),w
  2539     0371  0020               	movlb	0	; select bank0
  2540     0372  0244               	subwf	??_updateMemoryValues,w
  2541     0373                     u3105:
  2542     0373  1C03               	skipc
  2543     0374  2B78               	goto	l560
  2544                           
  2545                           ;main.c: 254:         LATCbits.LATC2 = 0;
  2546     0375  0022               	movlb	2	; select bank2
  2547     0376  110E               	bcf	14,2	;volatile
  2548                           
  2549                           ;main.c: 255:     } else {
  2550     0377  2B7A               	goto	l3115
  2551     0378                     l560:
  2552                           
  2553                           ;main.c: 256:         LATCbits.LATC2 = 1;
  2554     0378  0022               	movlb	2	; select bank2
  2555     0379  150E               	bsf	14,2	;volatile
  2556     037A                     l3115:
  2557                           
  2558                           ;main.c: 259:     selectedReference = FVR;
  2559     037A  301F               	movlw	31
  2560     037B  0020               	movlb	0	; select bank0
  2561     037C  00DC               	movwf	_selectedReference
  2562                           
  2563                           ;main.c: 260:     uint16_t fvr_Test = ADC_GetConversion(selectedReference);
  2564     037D  301F               	movlw	31
  2565     037E  318F  27AC  3182   	fcall	_ADC_GetConversion
  2566     0381  0874               	movf	?_ADC_GetConversion+1,w
  2567     0382  0021               	movlb	1	; select bank1
  2568     0383  00B0               	movwf	(updateMemoryValues@fvr_Test+1)^(0+128)
  2569     0384  0873               	movf	?_ADC_GetConversion,w
  2570     0385  00AF               	movwf	updateMemoryValues@fvr_Test^(0+128)
  2571                           
  2572                           ;main.c: 261:     float Vbit = 2.048 / (float) fvr_Test;
  2573     0386  082F               	movf	updateMemoryValues@fvr_Test^(0+128),w
  2574     0387  00F3               	movwf	___xxtofl@val
  2575     0388  0830               	movf	(updateMemoryValues@fvr_Test+1)^(0+128),w
  2576     0389  00F4               	movwf	___xxtofl@val+1
  2577     038A  01F5               	clrf	___xxtofl@val+2
  2578     038B  01F6               	clrf	___xxtofl@val+3
  2579     038C  3000               	movlw	0
  2580     038D  3185  258F  3182   	fcall	___xxtofl
  2581     0390  0876               	movf	?___xxtofl+3,w
  2582     0391  0020               	movlb	0	; select bank0
  2583     0392  00AD               	movwf	___fldiv@a+3
  2584     0393  0875               	movf	?___xxtofl+2,w
  2585     0394  00AC               	movwf	___fldiv@a+2
  2586     0395  0874               	movf	?___xxtofl+1,w
  2587     0396  00AB               	movwf	___fldiv@a+1
  2588     0397  0873               	movf	?___xxtofl,w
  2589     0398  00AA               	movwf	___fldiv@a
  2590     0399  3040               	movlw	64
  2591     039A  00B1               	movwf	___fldiv@b+3
  2592     039B  3003               	movlw	3
  2593     039C  00B0               	movwf	___fldiv@b+2
  2594     039D  3012               	movlw	18
  2595     039E  00AF               	movwf	___fldiv@b+1
  2596     039F  306F               	movlw	111
  2597     03A0  00AE               	movwf	___fldiv@b
  2598     03A1  3184  241F  3182   	fcall	___fldiv
  2599     03A4  0020               	movlb	0	; select bank0
  2600     03A5  082D               	movf	?___fldiv+3,w
  2601     03A6  0021               	movlb	1	; select bank1
  2602     03A7  00AE               	movwf	(updateMemoryValues@Vbit+3)^(0+128)
  2603     03A8  0020               	movlb	0	; select bank0
  2604     03A9  082C               	movf	?___fldiv+2,w
  2605     03AA  0021               	movlb	1	; select bank1
  2606     03AB  00AD               	movwf	(updateMemoryValues@Vbit+2)^(0+128)
  2607     03AC  0020               	movlb	0	; select bank0
  2608     03AD  082B               	movf	?___fldiv+1,w
  2609     03AE  0021               	movlb	1	; select bank1
  2610     03AF  00AC               	movwf	(updateMemoryValues@Vbit+1)^(0+128)
  2611     03B0  0020               	movlb	0	; select bank0
  2612     03B1  082A               	movf	?___fldiv,w
  2613     03B2  0021               	movlb	1	; select bank1
  2614     03B3  00AB               	movwf	updateMemoryValues@Vbit^(0+128)
  2615                           
  2616                           ;main.c: 262:     converter.voltageReading = Vbit * 1024;
  2617     03B4  3044               	movlw	68
  2618     03B5  0020               	movlb	0	; select bank0
  2619     03B6  00A8               	movwf	___flmul@b+3
  2620     03B7  3080               	movlw	128
  2621     03B8  00A7               	movwf	___flmul@b+2
  2622     03B9  3000               	movlw	0
  2623     03BA  00A6               	movwf	___flmul@b+1
  2624     03BB  3000               	movlw	0
  2625     03BC  00A5               	movwf	___flmul@b
  2626     03BD  0021               	movlb	1	; select bank1
  2627     03BE  082E               	movf	(updateMemoryValues@Vbit+3)^(0+128),w
  2628     03BF  0020               	movlb	0	; select bank0
  2629     03C0  00AC               	movwf	___flmul@a+3
  2630     03C1  0021               	movlb	1	; select bank1
  2631     03C2  082D               	movf	(updateMemoryValues@Vbit+2)^(0+128),w
  2632     03C3  0020               	movlb	0	; select bank0
  2633     03C4  00AB               	movwf	___flmul@a+2
  2634     03C5  0021               	movlb	1	; select bank1
  2635     03C6  082C               	movf	(updateMemoryValues@Vbit+1)^(0+128),w
  2636     03C7  0020               	movlb	0	; select bank0
  2637     03C8  00AA               	movwf	___flmul@a+1
  2638     03C9  0021               	movlb	1	; select bank1
  2639     03CA  082B               	movf	updateMemoryValues@Vbit^(0+128),w
  2640     03CB  0020               	movlb	0	; select bank0
  2641     03CC  00A9               	movwf	___flmul@a
  2642     03CD  3180  2039  3182   	fcall	___flmul
  2643     03D0  0020               	movlb	0	; select bank0
  2644     03D1  0828               	movf	?___flmul+3,w
  2645     03D2  00CD               	movwf	_converter+3
  2646     03D3  0827               	movf	?___flmul+2,w
  2647     03D4  00CC               	movwf	_converter+2
  2648     03D5  0826               	movf	?___flmul+1,w
  2649     03D6  00CB               	movwf	_converter+1
  2650     03D7  0825               	movf	?___flmul,w
  2651     03D8  00CA               	movwf	_converter
  2652                           
  2653                           ;main.c: 263:     if (converter.voltageReading >= safety.HIGH_VOLTAGE || converter.volta
      +                          geReading <= safety.LOW_VOLTAGE) {
  2654     03D9  084D               	movf	_converter+3,w
  2655     03DA  00A3               	movwf	___flge@ff1+3
  2656     03DB  084C               	movf	_converter+2,w
  2657     03DC  00A2               	movwf	___flge@ff1+2
  2658     03DD  084B               	movf	_converter+1,w
  2659     03DE  00A1               	movwf	___flge@ff1+1
  2660     03DF  084A               	movf	_converter,w
  2661     03E0  00A0               	movwf	___flge@ff1
  2662     03E1  30FB               	movlw	low ((_safety+4)| (0+32768))
  2663     03E2  0084               	movwf	4
  2664     03E3  3087               	movlw	high ((_safety+4)| (0+32768))
  2665     03E4  0085               	movwf	5
  2666     03E5  3F00               	moviw [0]fsr0
  2667     03E6  00C4               	movwf	??_updateMemoryValues
  2668     03E7  3F01               	moviw [1]fsr0
  2669     03E8  00C5               	movwf	??_updateMemoryValues+1
  2670     03E9  3F02               	moviw [2]fsr0
  2671     03EA  00C6               	movwf	??_updateMemoryValues+2
  2672     03EB  3F03               	moviw [3]fsr0
  2673     03EC  00C7               	movwf	??_updateMemoryValues+3
  2674     03ED  0847               	movf	??_updateMemoryValues+3,w
  2675     03EE  00A7               	movwf	___flge@ff2+3
  2676     03EF  0846               	movf	??_updateMemoryValues+2,w
  2677     03F0  00A6               	movwf	___flge@ff2+2
  2678     03F1  0845               	movf	??_updateMemoryValues+1,w
  2679     03F2  00A5               	movwf	___flge@ff2+1
  2680     03F3  0844               	movf	??_updateMemoryValues,w
  2681     03F4  00A4               	movwf	___flge@ff2
  2682     03F5  3186  2623  3182   	fcall	___flge
  2683     03F8  1803               	btfsc	3,0
  2684     03F9  2C1C               	goto	l564
  2685     03FA  30F7               	movlw	low (_safety| (0+32768))
  2686     03FB  0084               	movwf	4
  2687     03FC  3087               	movlw	high (_safety| (0+32768))
  2688     03FD  0085               	movwf	5
  2689     03FE  3F00               	moviw [0]fsr0
  2690     03FF  0020               	movlb	0	; select bank0
  2691     0400  00C4               	movwf	??_updateMemoryValues
  2692     0401  3F01               	moviw [1]fsr0
  2693     0402  00C5               	movwf	??_updateMemoryValues+1
  2694     0403  3F02               	moviw [2]fsr0
  2695     0404  00C6               	movwf	??_updateMemoryValues+2
  2696     0405  3F03               	moviw [3]fsr0
  2697     0406  00C7               	movwf	??_updateMemoryValues+3
  2698     0407  0847               	movf	??_updateMemoryValues+3,w
  2699     0408  00A3               	movwf	___flge@ff1+3
  2700     0409  0846               	movf	??_updateMemoryValues+2,w
  2701     040A  00A2               	movwf	___flge@ff1+2
  2702     040B  0845               	movf	??_updateMemoryValues+1,w
  2703     040C  00A1               	movwf	___flge@ff1+1
  2704     040D  0844               	movf	??_updateMemoryValues,w
  2705     040E  00A0               	movwf	___flge@ff1
  2706     040F  084D               	movf	_converter+3,w
  2707     0410  00A7               	movwf	___flge@ff2+3
  2708     0411  084C               	movf	_converter+2,w
  2709     0412  00A6               	movwf	___flge@ff2+2
  2710     0413  084B               	movf	_converter+1,w
  2711     0414  00A5               	movwf	___flge@ff2+1
  2712     0415  084A               	movf	_converter,w
  2713     0416  00A4               	movwf	___flge@ff2
  2714     0417  3186  2623  3182   	fcall	___flge
  2715     041A  1C03               	btfss	3,0
  2716     041B  0008               	return
  2717     041C                     l564:
  2718                           
  2719                           ;main.c: 264:         LATCbits.LATC1 = 0;
  2720     041C  0022               	movlb	2	; select bank2
  2721     041D  108E               	bcf	14,1	;volatile
  2722     041E  0008               	return
  2723     041F                     __end_of_updateMemoryValues:
  2724                           
  2725                           	psect	text2
  2726     058F                     __ptext2:	
  2727 ;; *************** function ___xxtofl *****************
  2728 ;; Defined at:
  2729 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  sign            1    wreg     unsigned char 
  2732 ;;  val             4    3[COMMON] long 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  sign            1    4[BANK0 ] unsigned char 
  2735 ;;  arg             4    6[BANK0 ] unsigned long 
  2736 ;;  exp             1    5[BANK0 ] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  4    3[COMMON] unsigned char 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2746 ;;      Params:         4       0       0       0
  2747 ;;      Locals:         0       6       0       0
  2748 ;;      Temps:          0       4       0       0
  2749 ;;      Totals:         4      10       0       0
  2750 ;;Total ram usage:       14 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 5
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_updateMemoryValues
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760     058F                     ___xxtofl:	
  2761                           ;psect for function ___xxtofl
  2762                           
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2766                           ;___xxtofl@sign stored from wreg
  2767     058F  0020               	movlb	0	; select bank0
  2768     0590  00A4               	movwf	___xxtofl@sign
  2769     0591  0824               	movf	___xxtofl@sign,w
  2770     0592  1D03               	btfss	3,2
  2771     0593  1FF6               	btfss	___xxtofl@val+3,7
  2772     0594  2DA5               	goto	l3023
  2773     0595  0973               	comf	___xxtofl@val,w
  2774     0596  00A6               	movwf	___xxtofl@arg
  2775     0597  0974               	comf	___xxtofl@val+1,w
  2776     0598  00A7               	movwf	___xxtofl@arg+1
  2777     0599  0975               	comf	___xxtofl@val+2,w
  2778     059A  00A8               	movwf	___xxtofl@arg+2
  2779     059B  0976               	comf	___xxtofl@val+3,w
  2780     059C  00A9               	movwf	___xxtofl@arg+3
  2781     059D  0AA6               	incf	___xxtofl@arg,f
  2782     059E  1903               	skipnz
  2783     059F  0AA7               	incf	___xxtofl@arg+1,f
  2784     05A0  1903               	skipnz
  2785     05A1  0AA8               	incf	___xxtofl@arg+2,f
  2786     05A2  1903               	skipnz
  2787     05A3  0AA9               	incf	___xxtofl@arg+3,f
  2788     05A4  2DAD               	goto	l1074
  2789     05A5                     l3023:
  2790     05A5  0876               	movf	___xxtofl@val+3,w
  2791     05A6  00A9               	movwf	___xxtofl@arg+3
  2792     05A7  0875               	movf	___xxtofl@val+2,w
  2793     05A8  00A8               	movwf	___xxtofl@arg+2
  2794     05A9  0874               	movf	___xxtofl@val+1,w
  2795     05AA  00A7               	movwf	___xxtofl@arg+1
  2796     05AB  0873               	movf	___xxtofl@val,w
  2797     05AC  00A6               	movwf	___xxtofl@arg
  2798     05AD                     l1074:
  2799     05AD  0876               	movf	___xxtofl@val+3,w
  2800     05AE  0475               	iorwf	___xxtofl@val+2,w
  2801     05AF  0474               	iorwf	___xxtofl@val+1,w
  2802     05B0  0473               	iorwf	___xxtofl@val,w
  2803     05B1  1D03               	skipz
  2804     05B2  2DBC               	goto	l3029
  2805     05B3  3000               	movlw	0
  2806     05B4  00F6               	movwf	?___xxtofl+3
  2807     05B5  3000               	movlw	0
  2808     05B6  00F5               	movwf	?___xxtofl+2
  2809     05B7  3000               	movlw	0
  2810     05B8  00F4               	movwf	?___xxtofl+1
  2811     05B9  3000               	movlw	0
  2812     05BA  00F3               	movwf	?___xxtofl
  2813     05BB  0008               	return
  2814     05BC                     l3029:
  2815     05BC  3096               	movlw	150
  2816     05BD  00A5               	movwf	___xxtofl@exp
  2817     05BE                     l3033:
  2818     05BE  30FE               	movlw	254
  2819     05BF  0529               	andwf	___xxtofl@arg+3,w
  2820     05C0  1903               	btfsc	3,2
  2821     05C1  2DE1               	goto	l1080
  2822     05C2  3001               	movlw	1
  2823     05C3  00A0               	movwf	??___xxtofl
  2824     05C4  0820               	movf	??___xxtofl,w
  2825     05C5  07A5               	addwf	___xxtofl@exp,f
  2826     05C6  3001               	movlw	1
  2827     05C7                     u2905:
  2828     05C7  36A9               	lsrf	___xxtofl@arg+3,f
  2829     05C8  0CA8               	rrf	___xxtofl@arg+2,f
  2830     05C9  0CA7               	rrf	___xxtofl@arg+1,f
  2831     05CA  0CA6               	rrf	___xxtofl@arg,f
  2832     05CB  0B89               	decfsz	9,f
  2833     05CC  2DC7               	goto	u2905
  2834     05CD  2DBE               	goto	l3033
  2835     05CE                     l3035:
  2836     05CE  3001               	movlw	1
  2837     05CF  00A0               	movwf	??___xxtofl
  2838     05D0  0820               	movf	??___xxtofl,w
  2839     05D1  07A5               	addwf	___xxtofl@exp,f
  2840     05D2  3001               	movlw	1
  2841     05D3  07A6               	addwf	___xxtofl@arg,f
  2842     05D4  3000               	movlw	0
  2843     05D5  3DA7               	addwfc	___xxtofl@arg+1,f
  2844     05D6  3000               	movlw	0
  2845     05D7  3DA8               	addwfc	___xxtofl@arg+2,f
  2846     05D8  3000               	movlw	0
  2847     05D9  3DA9               	addwfc	___xxtofl@arg+3,f
  2848     05DA  3001               	movlw	1
  2849     05DB                     u2925:
  2850     05DB  36A9               	lsrf	___xxtofl@arg+3,f
  2851     05DC  0CA8               	rrf	___xxtofl@arg+2,f
  2852     05DD  0CA7               	rrf	___xxtofl@arg+1,f
  2853     05DE  0CA6               	rrf	___xxtofl@arg,f
  2854     05DF  0B89               	decfsz	9,f
  2855     05E0  2DDB               	goto	u2925
  2856     05E1                     l1080:
  2857     05E1  30FF               	movlw	255
  2858     05E2  0529               	andwf	___xxtofl@arg+3,w
  2859     05E3  1903               	btfsc	3,2
  2860     05E4  2DF3               	goto	l3043
  2861     05E5  2DCE               	goto	l3035
  2862     05E6                     l3045:
  2863     05E6  3002               	movlw	2
  2864     05E7  0225               	subwf	___xxtofl@exp,w
  2865     05E8  1C03               	btfss	3,0
  2866     05E9  2DF5               	goto	l1087
  2867     05EA  3001               	movlw	1
  2868     05EB  02A5               	subwf	___xxtofl@exp,f
  2869     05EC  3001               	movlw	1
  2870     05ED                     u2945:
  2871     05ED  35A6               	lslf	___xxtofl@arg,f
  2872     05EE  0DA7               	rlf	___xxtofl@arg+1,f
  2873     05EF  0DA8               	rlf	___xxtofl@arg+2,f
  2874     05F0  0DA9               	rlf	___xxtofl@arg+3,f
  2875     05F1  0B89               	decfsz	9,f
  2876     05F2  2DED               	goto	u2945
  2877     05F3                     l3043:
  2878     05F3  1FA8               	btfss	___xxtofl@arg+2,7
  2879     05F4  2DE6               	goto	l3045
  2880     05F5                     l1087:
  2881     05F5  1825               	btfsc	___xxtofl@exp,0
  2882     05F6  2DFF               	goto	l1088
  2883     05F7  30FF               	movlw	255
  2884     05F8  05A6               	andwf	___xxtofl@arg,f
  2885     05F9  30FF               	movlw	255
  2886     05FA  05A7               	andwf	___xxtofl@arg+1,f
  2887     05FB  307F               	movlw	127
  2888     05FC  05A8               	andwf	___xxtofl@arg+2,f
  2889     05FD  30FF               	movlw	255
  2890     05FE  05A9               	andwf	___xxtofl@arg+3,f
  2891     05FF                     l1088:
  2892     05FF  1003               	clrc
  2893     0600  0CA5               	rrf	___xxtofl@exp,f
  2894     0601  0825               	movf	___xxtofl@exp,w
  2895     0602  00A0               	movwf	??___xxtofl
  2896     0603  01A1               	clrf	??___xxtofl+1
  2897     0604  01A2               	clrf	??___xxtofl+2
  2898     0605  01A3               	clrf	??___xxtofl+3
  2899     0606  3018               	movlw	24
  2900     0607                     u2985:
  2901     0607  35A0               	lslf	??___xxtofl,f
  2902     0608  0DA1               	rlf	??___xxtofl+1,f
  2903     0609  0DA2               	rlf	??___xxtofl+2,f
  2904     060A  0DA3               	rlf	??___xxtofl+3,f
  2905     060B  0B89               	decfsz	9,f
  2906     060C  2E07               	goto	u2985
  2907     060D  0820               	movf	??___xxtofl,w
  2908     060E  04A6               	iorwf	___xxtofl@arg,f
  2909     060F  0821               	movf	??___xxtofl+1,w
  2910     0610  04A7               	iorwf	___xxtofl@arg+1,f
  2911     0611  0822               	movf	??___xxtofl+2,w
  2912     0612  04A8               	iorwf	___xxtofl@arg+2,f
  2913     0613  0823               	movf	??___xxtofl+3,w
  2914     0614  04A9               	iorwf	___xxtofl@arg+3,f
  2915     0615  0824               	movf	___xxtofl@sign,w
  2916     0616  1D03               	btfss	3,2
  2917     0617  1FF6               	btfss	___xxtofl@val+3,7
  2918     0618  2E1A               	goto	l3057
  2919     0619  17A9               	bsf	___xxtofl@arg+3,7
  2920     061A                     l3057:
  2921     061A  0829               	movf	___xxtofl@arg+3,w
  2922     061B  00F6               	movwf	?___xxtofl+3
  2923     061C  0828               	movf	___xxtofl@arg+2,w
  2924     061D  00F5               	movwf	?___xxtofl+2
  2925     061E  0827               	movf	___xxtofl@arg+1,w
  2926     061F  00F4               	movwf	?___xxtofl+1
  2927     0620  0826               	movf	___xxtofl@arg,w
  2928     0621  00F3               	movwf	?___xxtofl
  2929     0622  0008               	return
  2930     0623                     __end_of___xxtofl:
  2931                           
  2932                           	psect	text3
  2933     0039                     __ptext3:	
  2934 ;; *************** function ___flmul *****************
  2935 ;; Defined at:
  2936 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  b               4    5[BANK0 ] unsigned char 
  2939 ;;  a               4    9[BANK0 ] unsigned char 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  prod            4   25[BANK0 ] struct .
  2942 ;;  grs             4   20[BANK0 ] unsigned long 
  2943 ;;  temp            2   29[BANK0 ] struct .
  2944 ;;  bexp            1   24[BANK0 ] unsigned char 
  2945 ;;  aexp            1   19[BANK0 ] unsigned char 
  2946 ;;  sign            1   18[BANK0 ] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  4    5[BANK0 ] unsigned char 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0, pclath, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2956 ;;      Params:         0       8       0       0
  2957 ;;      Locals:         0      13       0       0
  2958 ;;      Temps:          0       5       0       0
  2959 ;;      Totals:         0      26       0       0
  2960 ;;Total ram usage:       26 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 6
  2963 ;; This function calls:
  2964 ;;		__Umul8_16
  2965 ;; This function is called by:
  2966 ;;		_updateMemoryValues
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970     0039                     ___flmul:	
  2971                           ;psect for function ___flmul
  2972                           
  2973                           
  2974                           ;incstack = 0
  2975                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  2976     0039  0020               	movlb	0	; select bank0
  2977     003A  0828               	movf	___flmul@b+3,w
  2978     003B  3980               	andlw	128
  2979     003C  00B2               	movwf	___flmul@sign
  2980     003D  3528               	lslf	___flmul@b+3,w
  2981     003E  00B8               	movwf	___flmul@bexp
  2982     003F  1BA7               	btfsc	___flmul@b+2,7
  2983     0040  1438               	bsf	___flmul@bexp,0
  2984     0041  0838               	movf	___flmul@bexp,w
  2985     0042  1903               	btfsc	3,2
  2986     0043  2851               	goto	l2893
  2987     0044  0A38               	incf	___flmul@bexp,w
  2988     0045  1D03               	btfss	3,2
  2989     0046  284F               	goto	l2891
  2990     0047  3000               	movlw	0
  2991     0048  00A8               	movwf	___flmul@b+3
  2992     0049  3000               	movlw	0
  2993     004A  00A7               	movwf	___flmul@b+2
  2994     004B  3000               	movlw	0
  2995     004C  00A6               	movwf	___flmul@b+1
  2996     004D  3000               	movlw	0
  2997     004E  00A5               	movwf	___flmul@b
  2998     004F                     l2891:
  2999     004F  17A7               	bsf	___flmul@b+2,7
  3000     0050  2859               	goto	l2895
  3001     0051                     l2893:
  3002     0051  3000               	movlw	0
  3003     0052  00A8               	movwf	___flmul@b+3
  3004     0053  3000               	movlw	0
  3005     0054  00A7               	movwf	___flmul@b+2
  3006     0055  3000               	movlw	0
  3007     0056  00A6               	movwf	___flmul@b+1
  3008     0057  3000               	movlw	0
  3009     0058  00A5               	movwf	___flmul@b
  3010     0059                     l2895:
  3011     0059  082C               	movf	___flmul@a+3,w
  3012     005A  3980               	andlw	128
  3013     005B  00AD               	movwf	??___flmul
  3014     005C  082D               	movf	??___flmul,w
  3015     005D  06B2               	xorwf	___flmul@sign,f
  3016     005E  352C               	lslf	___flmul@a+3,w
  3017     005F  00B3               	movwf	___flmul@aexp
  3018     0060  1BAB               	btfsc	___flmul@a+2,7
  3019     0061  1433               	bsf	___flmul@aexp,0
  3020     0062  0833               	movf	___flmul@aexp,w
  3021     0063  1903               	btfsc	3,2
  3022     0064  2872               	goto	l2911
  3023     0065  0A33               	incf	___flmul@aexp,w
  3024     0066  1D03               	btfss	3,2
  3025     0067  2870               	goto	l2909
  3026     0068  3000               	movlw	0
  3027     0069  00AC               	movwf	___flmul@a+3
  3028     006A  3000               	movlw	0
  3029     006B  00AB               	movwf	___flmul@a+2
  3030     006C  3000               	movlw	0
  3031     006D  00AA               	movwf	___flmul@a+1
  3032     006E  3000               	movlw	0
  3033     006F  00A9               	movwf	___flmul@a
  3034     0070                     l2909:
  3035     0070  17AB               	bsf	___flmul@a+2,7
  3036     0071  287A               	goto	l2913
  3037     0072                     l2911:
  3038     0072  3000               	movlw	0
  3039     0073  00AC               	movwf	___flmul@a+3
  3040     0074  3000               	movlw	0
  3041     0075  00AB               	movwf	___flmul@a+2
  3042     0076  3000               	movlw	0
  3043     0077  00AA               	movwf	___flmul@a+1
  3044     0078  3000               	movlw	0
  3045     0079  00A9               	movwf	___flmul@a
  3046     007A                     l2913:
  3047     007A  0833               	movf	___flmul@aexp,w
  3048     007B  1D03               	btfss	3,2
  3049     007C  0838               	movf	___flmul@bexp,w
  3050     007D  1D03               	btfss	3,2
  3051     007E  2888               	goto	l2921
  3052     007F  3000               	movlw	0
  3053     0080  00A8               	movwf	?___flmul+3
  3054     0081  3000               	movlw	0
  3055     0082  00A7               	movwf	?___flmul+2
  3056     0083  3000               	movlw	0
  3057     0084  00A6               	movwf	?___flmul+1
  3058     0085  3000               	movlw	0
  3059     0086  00A5               	movwf	?___flmul
  3060     0087  0008               	return
  3061     0088                     l2921:
  3062     0088  0825               	movf	___flmul@b,w
  3063     0089  00F3               	movwf	__Umul8_16@multiplicand
  3064     008A  082B               	movf	___flmul@a+2,w
  3065     008B  318F  27E0  3180   	fcall	__Umul8_16
  3066     008E  0874               	movf	?__Umul8_16+1,w
  3067     008F  0020               	movlb	0	; select bank0
  3068     0090  00BE               	movwf	___flmul@temp+1
  3069     0091  0873               	movf	?__Umul8_16,w
  3070     0092  00BD               	movwf	___flmul@temp
  3071     0093  083D               	movf	___flmul@temp,w
  3072     0094  00AD               	movwf	??___flmul
  3073     0095  01AE               	clrf	??___flmul+1
  3074     0096  01AF               	clrf	??___flmul+2
  3075     0097  01B0               	clrf	??___flmul+3
  3076     0098  0830               	movf	??___flmul+3,w
  3077     0099  00B7               	movwf	___flmul@grs+3
  3078     009A  082F               	movf	??___flmul+2,w
  3079     009B  00B6               	movwf	___flmul@grs+2
  3080     009C  082E               	movf	??___flmul+1,w
  3081     009D  00B5               	movwf	___flmul@grs+1
  3082     009E  082D               	movf	??___flmul,w
  3083     009F  00B4               	movwf	___flmul@grs
  3084     00A0  083E               	movf	___flmul@temp+1,w
  3085     00A1  00AD               	movwf	??___flmul
  3086     00A2  01AE               	clrf	??___flmul+1
  3087     00A3  01AF               	clrf	??___flmul+2
  3088     00A4  01B0               	clrf	??___flmul+3
  3089     00A5  0830               	movf	??___flmul+3,w
  3090     00A6  00BC               	movwf	___flmul@prod+3
  3091     00A7  082F               	movf	??___flmul+2,w
  3092     00A8  00BB               	movwf	___flmul@prod+2
  3093     00A9  082E               	movf	??___flmul+1,w
  3094     00AA  00BA               	movwf	___flmul@prod+1
  3095     00AB  082D               	movf	??___flmul,w
  3096     00AC  00B9               	movwf	___flmul@prod
  3097     00AD  0826               	movf	___flmul@b+1,w
  3098     00AE  00F3               	movwf	__Umul8_16@multiplicand
  3099     00AF  082A               	movf	___flmul@a+1,w
  3100     00B0  318F  27E0  3180   	fcall	__Umul8_16
  3101     00B3  0874               	movf	?__Umul8_16+1,w
  3102     00B4  0020               	movlb	0	; select bank0
  3103     00B5  00BE               	movwf	___flmul@temp+1
  3104     00B6  0873               	movf	?__Umul8_16,w
  3105     00B7  00BD               	movwf	___flmul@temp
  3106     00B8  083D               	movf	___flmul@temp,w
  3107     00B9  00AD               	movwf	??___flmul
  3108     00BA  01AE               	clrf	??___flmul+1
  3109     00BB  01AF               	clrf	??___flmul+2
  3110     00BC  01B0               	clrf	??___flmul+3
  3111     00BD  082D               	movf	??___flmul,w
  3112     00BE  07B4               	addwf	___flmul@grs,f
  3113     00BF  082E               	movf	??___flmul+1,w
  3114     00C0  3DB5               	addwfc	___flmul@grs+1,f
  3115     00C1  082F               	movf	??___flmul+2,w
  3116     00C2  3DB6               	addwfc	___flmul@grs+2,f
  3117     00C3  0830               	movf	??___flmul+3,w
  3118     00C4  3DB7               	addwfc	___flmul@grs+3,f
  3119     00C5  083E               	movf	___flmul@temp+1,w
  3120     00C6  00AD               	movwf	??___flmul
  3121     00C7  01AE               	clrf	??___flmul+1
  3122     00C8  01AF               	clrf	??___flmul+2
  3123     00C9  01B0               	clrf	??___flmul+3
  3124     00CA  082D               	movf	??___flmul,w
  3125     00CB  07B9               	addwf	___flmul@prod,f
  3126     00CC  082E               	movf	??___flmul+1,w
  3127     00CD  3DBA               	addwfc	___flmul@prod+1,f
  3128     00CE  082F               	movf	??___flmul+2,w
  3129     00CF  3DBB               	addwfc	___flmul@prod+2,f
  3130     00D0  0830               	movf	??___flmul+3,w
  3131     00D1  3DBC               	addwfc	___flmul@prod+3,f
  3132     00D2  0827               	movf	___flmul@b+2,w
  3133     00D3  00F3               	movwf	__Umul8_16@multiplicand
  3134     00D4  0829               	movf	___flmul@a,w
  3135     00D5  318F  27E0  3180   	fcall	__Umul8_16
  3136     00D8  0874               	movf	?__Umul8_16+1,w
  3137     00D9  0020               	movlb	0	; select bank0
  3138     00DA  00BE               	movwf	___flmul@temp+1
  3139     00DB  0873               	movf	?__Umul8_16,w
  3140     00DC  00BD               	movwf	___flmul@temp
  3141     00DD  083D               	movf	___flmul@temp,w
  3142     00DE  00AD               	movwf	??___flmul
  3143     00DF  01AE               	clrf	??___flmul+1
  3144     00E0  01AF               	clrf	??___flmul+2
  3145     00E1  01B0               	clrf	??___flmul+3
  3146     00E2  082D               	movf	??___flmul,w
  3147     00E3  07B4               	addwf	___flmul@grs,f
  3148     00E4  082E               	movf	??___flmul+1,w
  3149     00E5  3DB5               	addwfc	___flmul@grs+1,f
  3150     00E6  082F               	movf	??___flmul+2,w
  3151     00E7  3DB6               	addwfc	___flmul@grs+2,f
  3152     00E8  0830               	movf	??___flmul+3,w
  3153     00E9  3DB7               	addwfc	___flmul@grs+3,f
  3154     00EA  083E               	movf	___flmul@temp+1,w
  3155     00EB  00AD               	movwf	??___flmul
  3156     00EC  01AE               	clrf	??___flmul+1
  3157     00ED  01AF               	clrf	??___flmul+2
  3158     00EE  01B0               	clrf	??___flmul+3
  3159     00EF  082D               	movf	??___flmul,w
  3160     00F0  07B9               	addwf	___flmul@prod,f
  3161     00F1  082E               	movf	??___flmul+1,w
  3162     00F2  3DBA               	addwfc	___flmul@prod+1,f
  3163     00F3  082F               	movf	??___flmul+2,w
  3164     00F4  3DBB               	addwfc	___flmul@prod+2,f
  3165     00F5  0830               	movf	??___flmul+3,w
  3166     00F6  3DBC               	addwfc	___flmul@prod+3,f
  3167     00F7  3008               	movlw	8
  3168     00F8                     u2695:
  3169     00F8  35B4               	lslf	___flmul@grs,f
  3170     00F9  0DB5               	rlf	___flmul@grs+1,f
  3171     00FA  0DB6               	rlf	___flmul@grs+2,f
  3172     00FB  0DB7               	rlf	___flmul@grs+3,f
  3173     00FC  0B89               	decfsz	9,f
  3174     00FD  28F8               	goto	u2695
  3175     00FE  0826               	movf	___flmul@b+1,w
  3176     00FF  00F3               	movwf	__Umul8_16@multiplicand
  3177     0100  0829               	movf	___flmul@a,w
  3178     0101  318F  27E0  3180   	fcall	__Umul8_16
  3179     0104  0874               	movf	?__Umul8_16+1,w
  3180     0105  0020               	movlb	0	; select bank0
  3181     0106  00BE               	movwf	___flmul@temp+1
  3182     0107  0873               	movf	?__Umul8_16,w
  3183     0108  00BD               	movwf	___flmul@temp
  3184     0109  083D               	movf	___flmul@temp,w
  3185     010A  07B4               	addwf	___flmul@grs,f
  3186     010B  083E               	movf	___flmul@temp+1,w
  3187     010C  3DB5               	addwfc	___flmul@grs+1,f
  3188     010D  3000               	movlw	0
  3189     010E  3DB6               	addwfc	___flmul@grs+2,f
  3190     010F  3DB7               	addwfc	___flmul@grs+3,f
  3191     0110  0825               	movf	___flmul@b,w
  3192     0111  00F3               	movwf	__Umul8_16@multiplicand
  3193     0112  082A               	movf	___flmul@a+1,w
  3194     0113  318F  27E0  3180   	fcall	__Umul8_16
  3195     0116  0874               	movf	?__Umul8_16+1,w
  3196     0117  0020               	movlb	0	; select bank0
  3197     0118  00BE               	movwf	___flmul@temp+1
  3198     0119  0873               	movf	?__Umul8_16,w
  3199     011A  00BD               	movwf	___flmul@temp
  3200     011B  083D               	movf	___flmul@temp,w
  3201     011C  07B4               	addwf	___flmul@grs,f
  3202     011D  083E               	movf	___flmul@temp+1,w
  3203     011E  3DB5               	addwfc	___flmul@grs+1,f
  3204     011F  3000               	movlw	0
  3205     0120  3DB6               	addwfc	___flmul@grs+2,f
  3206     0121  3DB7               	addwfc	___flmul@grs+3,f
  3207     0122  3008               	movlw	8
  3208     0123                     u2705:
  3209     0123  35B4               	lslf	___flmul@grs,f
  3210     0124  0DB5               	rlf	___flmul@grs+1,f
  3211     0125  0DB6               	rlf	___flmul@grs+2,f
  3212     0126  0DB7               	rlf	___flmul@grs+3,f
  3213     0127  0B89               	decfsz	9,f
  3214     0128  2923               	goto	u2705
  3215     0129  0825               	movf	___flmul@b,w
  3216     012A  00F3               	movwf	__Umul8_16@multiplicand
  3217     012B  0829               	movf	___flmul@a,w
  3218     012C  318F  27E0  3180   	fcall	__Umul8_16
  3219     012F  0874               	movf	?__Umul8_16+1,w
  3220     0130  0020               	movlb	0	; select bank0
  3221     0131  00BE               	movwf	___flmul@temp+1
  3222     0132  0873               	movf	?__Umul8_16,w
  3223     0133  00BD               	movwf	___flmul@temp
  3224     0134  083D               	movf	___flmul@temp,w
  3225     0135  07B4               	addwf	___flmul@grs,f
  3226     0136  083E               	movf	___flmul@temp+1,w
  3227     0137  3DB5               	addwfc	___flmul@grs+1,f
  3228     0138  3000               	movlw	0
  3229     0139  3DB6               	addwfc	___flmul@grs+2,f
  3230     013A  3DB7               	addwfc	___flmul@grs+3,f
  3231     013B  0826               	movf	___flmul@b+1,w
  3232     013C  00F3               	movwf	__Umul8_16@multiplicand
  3233     013D  082B               	movf	___flmul@a+2,w
  3234     013E  318F  27E0  3180   	fcall	__Umul8_16
  3235     0141  0874               	movf	?__Umul8_16+1,w
  3236     0142  0020               	movlb	0	; select bank0
  3237     0143  00BE               	movwf	___flmul@temp+1
  3238     0144  0873               	movf	?__Umul8_16,w
  3239     0145  00BD               	movwf	___flmul@temp
  3240     0146  083D               	movf	___flmul@temp,w
  3241     0147  07B9               	addwf	___flmul@prod,f
  3242     0148  083E               	movf	___flmul@temp+1,w
  3243     0149  3DBA               	addwfc	___flmul@prod+1,f
  3244     014A  3000               	movlw	0
  3245     014B  3DBB               	addwfc	___flmul@prod+2,f
  3246     014C  3DBC               	addwfc	___flmul@prod+3,f
  3247     014D  0827               	movf	___flmul@b+2,w
  3248     014E  00F3               	movwf	__Umul8_16@multiplicand
  3249     014F  082A               	movf	___flmul@a+1,w
  3250     0150  318F  27E0  3180   	fcall	__Umul8_16
  3251     0153  0874               	movf	?__Umul8_16+1,w
  3252     0154  0020               	movlb	0	; select bank0
  3253     0155  00BE               	movwf	___flmul@temp+1
  3254     0156  0873               	movf	?__Umul8_16,w
  3255     0157  00BD               	movwf	___flmul@temp
  3256     0158  083D               	movf	___flmul@temp,w
  3257     0159  07B9               	addwf	___flmul@prod,f
  3258     015A  083E               	movf	___flmul@temp+1,w
  3259     015B  3DBA               	addwfc	___flmul@prod+1,f
  3260     015C  3000               	movlw	0
  3261     015D  3DBB               	addwfc	___flmul@prod+2,f
  3262     015E  3DBC               	addwfc	___flmul@prod+3,f
  3263     015F  0827               	movf	___flmul@b+2,w
  3264     0160  00F3               	movwf	__Umul8_16@multiplicand
  3265     0161  082B               	movf	___flmul@a+2,w
  3266     0162  318F  27E0  3180   	fcall	__Umul8_16
  3267     0165  0874               	movf	?__Umul8_16+1,w
  3268     0166  0020               	movlb	0	; select bank0
  3269     0167  00BE               	movwf	___flmul@temp+1
  3270     0168  0873               	movf	?__Umul8_16,w
  3271     0169  00BD               	movwf	___flmul@temp
  3272     016A  083D               	movf	___flmul@temp,w
  3273     016B  00AD               	movwf	??___flmul
  3274     016C  083E               	movf	___flmul@temp+1,w
  3275     016D  00AE               	movwf	??___flmul+1
  3276     016E  01AF               	clrf	??___flmul+2
  3277     016F  01B0               	clrf	??___flmul+3
  3278     0170  3008               	movlw	8
  3279     0171                     u2715:
  3280     0171  35AD               	lslf	??___flmul,f
  3281     0172  0DAE               	rlf	??___flmul+1,f
  3282     0173  0DAF               	rlf	??___flmul+2,f
  3283     0174  0DB0               	rlf	??___flmul+3,f
  3284     0175  0B89               	decfsz	9,f
  3285     0176  2971               	goto	u2715
  3286     0177  082D               	movf	??___flmul,w
  3287     0178  07B9               	addwf	___flmul@prod,f
  3288     0179  082E               	movf	??___flmul+1,w
  3289     017A  3DBA               	addwfc	___flmul@prod+1,f
  3290     017B  082F               	movf	??___flmul+2,w
  3291     017C  3DBB               	addwfc	___flmul@prod+2,f
  3292     017D  0830               	movf	??___flmul+3,w
  3293     017E  3DBC               	addwfc	___flmul@prod+3,f
  3294     017F  0834               	movf	___flmul@grs,w
  3295     0180  00AD               	movwf	??___flmul
  3296     0181  0835               	movf	___flmul@grs+1,w
  3297     0182  00AE               	movwf	??___flmul+1
  3298     0183  0836               	movf	___flmul@grs+2,w
  3299     0184  00AF               	movwf	??___flmul+2
  3300     0185  0837               	movf	___flmul@grs+3,w
  3301     0186  00B0               	movwf	??___flmul+3
  3302     0187  3018               	movlw	24
  3303     0188                     u2725:
  3304     0188  36B0               	lsrf	??___flmul+3,f
  3305     0189  0CAF               	rrf	??___flmul+2,f
  3306     018A  0CAE               	rrf	??___flmul+1,f
  3307     018B  0CAD               	rrf	??___flmul,f
  3308     018C  0B89               	decfsz	9,f
  3309     018D  2988               	goto	u2725
  3310     018E  082D               	movf	??___flmul,w
  3311     018F  07B9               	addwf	___flmul@prod,f
  3312     0190  082E               	movf	??___flmul+1,w
  3313     0191  3DBA               	addwfc	___flmul@prod+1,f
  3314     0192  082F               	movf	??___flmul+2,w
  3315     0193  3DBB               	addwfc	___flmul@prod+2,f
  3316     0194  0830               	movf	??___flmul+3,w
  3317     0195  3DBC               	addwfc	___flmul@prod+3,f
  3318     0196  3008               	movlw	8
  3319     0197                     u2735:
  3320     0197  35B4               	lslf	___flmul@grs,f
  3321     0198  0DB5               	rlf	___flmul@grs+1,f
  3322     0199  0DB6               	rlf	___flmul@grs+2,f
  3323     019A  0DB7               	rlf	___flmul@grs+3,f
  3324     019B  0B89               	decfsz	9,f
  3325     019C  2997               	goto	u2735
  3326     019D  0838               	movf	___flmul@bexp,w
  3327     019E  0733               	addwf	___flmul@aexp,w
  3328     019F  00AD               	movwf	??___flmul
  3329     01A0  01AE               	clrf	??___flmul+1
  3330     01A1  0DAE               	rlf	??___flmul+1,f
  3331     01A2  082D               	movf	??___flmul,w
  3332     01A3  3E82               	addlw	130
  3333     01A4  00BD               	movwf	___flmul@temp
  3334     01A5  30FF               	movlw	255
  3335     01A6  3D2E               	addwfc	??___flmul+1,w
  3336     01A7  00BE               	movwf	___flmul@temp+1
  3337     01A8                     l2973:
  3338     01A8  1BBB               	btfsc	___flmul@prod+2,7
  3339     01A9  29BF               	goto	l2975
  3340     01AA  3001               	movlw	1
  3341     01AB                     u2745:
  3342     01AB  35B9               	lslf	___flmul@prod,f
  3343     01AC  0DBA               	rlf	___flmul@prod+1,f
  3344     01AD  0DBB               	rlf	___flmul@prod+2,f
  3345     01AE  0DBC               	rlf	___flmul@prod+3,f
  3346     01AF  0B89               	decfsz	9,f
  3347     01B0  29AB               	goto	u2745
  3348     01B1  1BB7               	btfsc	___flmul@grs+3,7
  3349     01B2  1439               	bsf	___flmul@prod,0
  3350     01B3  3001               	movlw	1
  3351     01B4                     u2765:
  3352     01B4  35B4               	lslf	___flmul@grs,f
  3353     01B5  0DB5               	rlf	___flmul@grs+1,f
  3354     01B6  0DB6               	rlf	___flmul@grs+2,f
  3355     01B7  0DB7               	rlf	___flmul@grs+3,f
  3356     01B8  0B89               	decfsz	9,f
  3357     01B9  29B4               	goto	u2765
  3358     01BA  30FF               	movlw	255
  3359     01BB  07BD               	addwf	___flmul@temp,f
  3360     01BC  30FF               	movlw	255
  3361     01BD  3DBE               	addwfc	___flmul@temp+1,f
  3362     01BE  29A8               	goto	l2973
  3363     01BF                     l2975:
  3364     01BF  01B3               	clrf	___flmul@aexp
  3365     01C0  1FB7               	btfss	___flmul@grs+3,7
  3366     01C1  29D8               	goto	l2985
  3367     01C2  30FF               	movlw	255
  3368     01C3  0534               	andwf	___flmul@grs,w
  3369     01C4  00AD               	movwf	??___flmul
  3370     01C5  30FF               	movlw	255
  3371     01C6  0535               	andwf	___flmul@grs+1,w
  3372     01C7  00AE               	movwf	??___flmul+1
  3373     01C8  30FF               	movlw	255
  3374     01C9  0536               	andwf	___flmul@grs+2,w
  3375     01CA  00AF               	movwf	??___flmul+2
  3376     01CB  307F               	movlw	127
  3377     01CC  0537               	andwf	___flmul@grs+3,w
  3378     01CD  00B0               	movwf	??___flmul+3
  3379     01CE  0830               	movf	??___flmul+3,w
  3380     01CF  042F               	iorwf	??___flmul+2,w
  3381     01D0  042E               	iorwf	??___flmul+1,w
  3382     01D1  042D               	iorwf	??___flmul,w
  3383     01D2  1903               	skipnz
  3384     01D3  1839               	btfsc	___flmul@prod,0
  3385     01D4  29D6               	goto	l2981
  3386     01D5  29D8               	goto	l2985
  3387     01D6                     l2981:
  3388     01D6  01B3               	clrf	___flmul@aexp
  3389     01D7  0AB3               	incf	___flmul@aexp,f
  3390     01D8                     l2985:
  3391     01D8  0833               	movf	___flmul@aexp,w
  3392     01D9  1903               	btfsc	3,2
  3393     01DA  2A01               	goto	l2995
  3394     01DB  3001               	movlw	1
  3395     01DC  07B9               	addwf	___flmul@prod,f
  3396     01DD  3000               	movlw	0
  3397     01DE  3DBA               	addwfc	___flmul@prod+1,f
  3398     01DF  3000               	movlw	0
  3399     01E0  3DBB               	addwfc	___flmul@prod+2,f
  3400     01E1  3000               	movlw	0
  3401     01E2  3DBC               	addwfc	___flmul@prod+3,f
  3402     01E3  1C3C               	btfss	___flmul@prod+3,0
  3403     01E4  2A01               	goto	l2995
  3404     01E5  0839               	movf	___flmul@prod,w
  3405     01E6  00AD               	movwf	??___flmul
  3406     01E7  083A               	movf	___flmul@prod+1,w
  3407     01E8  00AE               	movwf	??___flmul+1
  3408     01E9  083B               	movf	___flmul@prod+2,w
  3409     01EA  00AF               	movwf	??___flmul+2
  3410     01EB  083C               	movf	___flmul@prod+3,w
  3411     01EC  00B0               	movwf	??___flmul+3
  3412     01ED  3001               	movlw	1
  3413     01EE  00B1               	movwf	??___flmul+4
  3414     01EF                     u2835:
  3415     01EF  37B0               	asrf	??___flmul+3,f
  3416     01F0  0CAF               	rrf	??___flmul+2,f
  3417     01F1  0CAE               	rrf	??___flmul+1,f
  3418     01F2  0CAD               	rrf	??___flmul,f
  3419     01F3  0BB1               	decfsz	??___flmul+4,f
  3420     01F4  29EF               	goto	u2835
  3421     01F5  0830               	movf	??___flmul+3,w
  3422     01F6  00BC               	movwf	___flmul@prod+3
  3423     01F7  082F               	movf	??___flmul+2,w
  3424     01F8  00BB               	movwf	___flmul@prod+2
  3425     01F9  082E               	movf	??___flmul+1,w
  3426     01FA  00BA               	movwf	___flmul@prod+1
  3427     01FB  082D               	movf	??___flmul,w
  3428     01FC  00B9               	movwf	___flmul@prod
  3429     01FD  3001               	movlw	1
  3430     01FE  07BD               	addwf	___flmul@temp,f
  3431     01FF  3000               	movlw	0
  3432     0200  3DBE               	addwfc	___flmul@temp+1,f
  3433     0201                     l2995:
  3434     0201  083E               	movf	___flmul@temp+1,w
  3435     0202  3A80               	xorlw	128
  3436     0203  00AD               	movwf	??___flmul
  3437     0204  3080               	movlw	128
  3438     0205  022D               	subwf	??___flmul,w
  3439     0206  1D03               	skipz
  3440     0207  2A0A               	goto	u2845
  3441     0208  30FF               	movlw	255
  3442     0209  023D               	subwf	___flmul@temp,w
  3443     020A                     u2845:
  3444     020A  1C03               	skipc
  3445     020B  2A16               	goto	l2999
  3446     020C  307F               	movlw	127
  3447     020D  0020               	movlb	0	; select bank0
  3448     020E  00BC               	movwf	___flmul@prod+3
  3449     020F  3080               	movlw	128
  3450     0210  00BB               	movwf	___flmul@prod+2
  3451     0211  3000               	movlw	0
  3452     0212  00BA               	movwf	___flmul@prod+1
  3453     0213  3000               	movlw	0
  3454     0214  00B9               	movwf	___flmul@prod
  3455     0215  2A3C               	goto	l1042
  3456     0216                     l2999:
  3457     0216  0020               	movlb	0	; select bank0
  3458     0217  083E               	movf	___flmul@temp+1,w
  3459     0218  3A80               	xorlw	128
  3460     0219  00AD               	movwf	??___flmul
  3461     021A  3080               	movlw	128
  3462     021B  022D               	subwf	??___flmul,w
  3463     021C  1D03               	skipz
  3464     021D  2A20               	goto	u2855
  3465     021E  3001               	movlw	1
  3466     021F  023D               	subwf	___flmul@temp,w
  3467     0220                     u2855:
  3468     0220  1803               	skipnc
  3469     0221  2A2D               	goto	l3005
  3470     0222  3000               	movlw	0
  3471     0223  0020               	movlb	0	; select bank0
  3472     0224  00BC               	movwf	___flmul@prod+3
  3473     0225  3000               	movlw	0
  3474     0226  00BB               	movwf	___flmul@prod+2
  3475     0227  3000               	movlw	0
  3476     0228  00BA               	movwf	___flmul@prod+1
  3477     0229  3000               	movlw	0
  3478     022A  00B9               	movwf	___flmul@prod
  3479     022B  01B2               	clrf	___flmul@sign
  3480     022C  2A3C               	goto	l1042
  3481     022D                     l3005:
  3482     022D  0020               	movlb	0	; select bank0
  3483     022E  083D               	movf	___flmul@temp,w
  3484     022F  00B8               	movwf	___flmul@bexp
  3485     0230  30FF               	movlw	255
  3486     0231  05B9               	andwf	___flmul@prod,f
  3487     0232  30FF               	movlw	255
  3488     0233  05BA               	andwf	___flmul@prod+1,f
  3489     0234  307F               	movlw	127
  3490     0235  05BB               	andwf	___flmul@prod+2,f
  3491     0236  3000               	movlw	0
  3492     0237  05BC               	andwf	___flmul@prod+3,f
  3493     0238  1838               	btfsc	___flmul@bexp,0
  3494     0239  17BB               	bsf	___flmul@prod+2,7
  3495     023A  3638               	lsrf	___flmul@bexp,w
  3496     023B  00BC               	movwf	___flmul@prod+3
  3497     023C                     l1042:
  3498     023C  0832               	movf	___flmul@sign,w
  3499     023D  00AD               	movwf	??___flmul
  3500     023E  082D               	movf	??___flmul,w
  3501     023F  04BC               	iorwf	___flmul@prod+3,f
  3502     0240  083C               	movf	___flmul@prod+3,w
  3503     0241  00A8               	movwf	?___flmul+3
  3504     0242  083B               	movf	___flmul@prod+2,w
  3505     0243  00A7               	movwf	?___flmul+2
  3506     0244  083A               	movf	___flmul@prod+1,w
  3507     0245  00A6               	movwf	?___flmul+1
  3508     0246  0839               	movf	___flmul@prod,w
  3509     0247  00A5               	movwf	?___flmul
  3510     0248  0008               	return
  3511     0249                     __end_of___flmul:
  3512                           
  3513                           	psect	text4
  3514     0FE0                     __ptext4:	
  3515 ;; *************** function __Umul8_16 *****************
  3516 ;; Defined at:
  3517 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  multiplier      1    wreg     unsigned char 
  3520 ;;  multiplicand    1    3[COMMON] unsigned char 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  multiplier      1    4[BANK0 ] unsigned char 
  3523 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  3524 ;;  product         2    0[BANK0 ] unsigned int 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  2    3[COMMON] unsigned int 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3534 ;;      Params:         2       0       0       0
  3535 ;;      Locals:         0       5       0       0
  3536 ;;      Temps:          2       0       0       0
  3537 ;;      Totals:         4       5       0       0
  3538 ;;Total ram usage:        9 bytes
  3539 ;; Hardware stack levels used: 1
  3540 ;; Hardware stack levels required when called: 5
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		___flmul
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548     0FE0                     __Umul8_16:	
  3549                           ;psect for function __Umul8_16
  3550                           
  3551                           
  3552                           ;incstack = 0
  3553                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3554                           ;__Umul8_16@multiplier stored from wreg
  3555     0FE0  0020               	movlb	0	; select bank0
  3556     0FE1  00A4               	movwf	__Umul8_16@multiplier
  3557     0FE2  01A0               	clrf	__Umul8_16@product
  3558     0FE3  01A1               	clrf	__Umul8_16@product+1
  3559     0FE4  0873               	movf	__Umul8_16@multiplicand,w
  3560     0FE5  00F5               	movwf	??__Umul8_16
  3561     0FE6  01F6               	clrf	??__Umul8_16+1
  3562     0FE7  0875               	movf	??__Umul8_16,w
  3563     0FE8  00A2               	movwf	__Umul8_16@word_mpld
  3564     0FE9  0876               	movf	??__Umul8_16+1,w
  3565     0FEA  00A3               	movwf	__Umul8_16@word_mpld+1
  3566     0FEB                     l2695:
  3567     0FEB  1C24               	btfss	__Umul8_16@multiplier,0
  3568     0FEC  2FF1               	goto	l1049
  3569     0FED  0822               	movf	__Umul8_16@word_mpld,w
  3570     0FEE  07A0               	addwf	__Umul8_16@product,f
  3571     0FEF  0823               	movf	__Umul8_16@word_mpld+1,w
  3572     0FF0  3DA1               	addwfc	__Umul8_16@product+1,f
  3573     0FF1                     l1049:
  3574     0FF1  3001               	movlw	1
  3575     0FF2                     u2245:
  3576     0FF2  35A2               	lslf	__Umul8_16@word_mpld,f
  3577     0FF3  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  3578     0FF4  0B89               	decfsz	9,f
  3579     0FF5  2FF2               	goto	u2245
  3580     0FF6  1003               	clrc
  3581     0FF7  0CA4               	rrf	__Umul8_16@multiplier,f
  3582     0FF8  0824               	movf	__Umul8_16@multiplier,w
  3583     0FF9  1D03               	btfss	3,2
  3584     0FFA  2FEB               	goto	l2695
  3585     0FFB  0821               	movf	__Umul8_16@product+1,w
  3586     0FFC  00F4               	movwf	?__Umul8_16+1
  3587     0FFD  0820               	movf	__Umul8_16@product,w
  3588     0FFE  00F3               	movwf	?__Umul8_16
  3589     0FFF  0008               	return
  3590     1000                     __end_of__Umul8_16:
  3591                           
  3592                           	psect	text5
  3593     0623                     __ptext5:	
  3594 ;; *************** function ___flge *****************
  3595 ;; Defined at:
  3596 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  ff1             4    0[BANK0 ] unsigned int 
  3599 ;;  ff2             4    4[BANK0 ] unsigned int 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;		None               void
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3611 ;;      Params:         0       8       0       0
  3612 ;;      Locals:         0       0       0       0
  3613 ;;      Temps:          4       0       0       0
  3614 ;;      Totals:         4       8       0       0
  3615 ;;Total ram usage:       12 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 5
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_updateMemoryValues
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625     0623                     ___flge:	
  3626                           ;psect for function ___flge
  3627                           
  3628                           
  3629                           ;incstack = 0
  3630                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3631     0623  3000               	movlw	0
  3632     0624  0020               	movlb	0	; select bank0
  3633     0625  0520               	andwf	___flge@ff1,w
  3634     0626  00F3               	movwf	??___flge
  3635     0627  3000               	movlw	0
  3636     0628  0521               	andwf	___flge@ff1+1,w
  3637     0629  00F4               	movwf	??___flge+1
  3638     062A  3080               	movlw	128
  3639     062B  0522               	andwf	___flge@ff1+2,w
  3640     062C  00F5               	movwf	??___flge+2
  3641     062D  307F               	movlw	127
  3642     062E  0523               	andwf	___flge@ff1+3,w
  3643     062F  00F6               	movwf	??___flge+3
  3644     0630  0876               	movf	??___flge+3,w
  3645     0631  0475               	iorwf	??___flge+2,w
  3646     0632  0474               	iorwf	??___flge+1,w
  3647     0633  0473               	iorwf	??___flge,w
  3648     0634  1D03               	skipz
  3649     0635  2E3E               	goto	l811
  3650     0636  3000               	movlw	0
  3651     0637  00A3               	movwf	___flge@ff1+3
  3652     0638  3000               	movlw	0
  3653     0639  00A2               	movwf	___flge@ff1+2
  3654     063A  3000               	movlw	0
  3655     063B  00A1               	movwf	___flge@ff1+1
  3656     063C  3000               	movlw	0
  3657     063D  00A0               	movwf	___flge@ff1
  3658     063E                     l811:
  3659     063E  3000               	movlw	0
  3660     063F  0524               	andwf	___flge@ff2,w
  3661     0640  00F3               	movwf	??___flge
  3662     0641  3000               	movlw	0
  3663     0642  0525               	andwf	___flge@ff2+1,w
  3664     0643  00F4               	movwf	??___flge+1
  3665     0644  3080               	movlw	128
  3666     0645  0526               	andwf	___flge@ff2+2,w
  3667     0646  00F5               	movwf	??___flge+2
  3668     0647  307F               	movlw	127
  3669     0648  0527               	andwf	___flge@ff2+3,w
  3670     0649  00F6               	movwf	??___flge+3
  3671     064A  0876               	movf	??___flge+3,w
  3672     064B  0475               	iorwf	??___flge+2,w
  3673     064C  0474               	iorwf	??___flge+1,w
  3674     064D  0473               	iorwf	??___flge,w
  3675     064E  1D03               	skipz
  3676     064F  2E58               	goto	l2723
  3677     0650  3000               	movlw	0
  3678     0651  00A7               	movwf	___flge@ff2+3
  3679     0652  3000               	movlw	0
  3680     0653  00A6               	movwf	___flge@ff2+2
  3681     0654  3000               	movlw	0
  3682     0655  00A5               	movwf	___flge@ff2+1
  3683     0656  3000               	movlw	0
  3684     0657  00A4               	movwf	___flge@ff2
  3685     0658                     l2723:
  3686     0658  1FA3               	btfss	___flge@ff1+3,7
  3687     0659  2E72               	goto	l2727
  3688     065A  3000               	movlw	0
  3689     065B  00F3               	movwf	??___flge
  3690     065C  3000               	movlw	0
  3691     065D  00F4               	movwf	??___flge+1
  3692     065E  3000               	movlw	0
  3693     065F  00F5               	movwf	??___flge+2
  3694     0660  3080               	movlw	128
  3695     0661  00F6               	movwf	??___flge+3
  3696     0662  0820               	movf	___flge@ff1,w
  3697     0663  02F3               	subwf	??___flge,f
  3698     0664  0821               	movf	___flge@ff1+1,w
  3699     0665  3BF4               	subwfb	??___flge+1,f
  3700     0666  0822               	movf	___flge@ff1+2,w
  3701     0667  3BF5               	subwfb	??___flge+2,f
  3702     0668  0823               	movf	___flge@ff1+3,w
  3703     0669  3BF6               	subwfb	??___flge+3,f
  3704     066A  0876               	movf	??___flge+3,w
  3705     066B  00A3               	movwf	___flge@ff1+3
  3706     066C  0875               	movf	??___flge+2,w
  3707     066D  00A2               	movwf	___flge@ff1+2
  3708     066E  0874               	movf	??___flge+1,w
  3709     066F  00A1               	movwf	___flge@ff1+1
  3710     0670  0873               	movf	??___flge,w
  3711     0671  00A0               	movwf	___flge@ff1
  3712     0672                     l2727:
  3713     0672  1FA7               	btfss	___flge@ff2+3,7
  3714     0673  2E8C               	goto	l814
  3715     0674  3000               	movlw	0
  3716     0675  00F3               	movwf	??___flge
  3717     0676  3000               	movlw	0
  3718     0677  00F4               	movwf	??___flge+1
  3719     0678  3000               	movlw	0
  3720     0679  00F5               	movwf	??___flge+2
  3721     067A  3080               	movlw	128
  3722     067B  00F6               	movwf	??___flge+3
  3723     067C  0824               	movf	___flge@ff2,w
  3724     067D  02F3               	subwf	??___flge,f
  3725     067E  0825               	movf	___flge@ff2+1,w
  3726     067F  3BF4               	subwfb	??___flge+1,f
  3727     0680  0826               	movf	___flge@ff2+2,w
  3728     0681  3BF5               	subwfb	??___flge+2,f
  3729     0682  0827               	movf	___flge@ff2+3,w
  3730     0683  3BF6               	subwfb	??___flge+3,f
  3731     0684  0876               	movf	??___flge+3,w
  3732     0685  00A7               	movwf	___flge@ff2+3
  3733     0686  0875               	movf	??___flge+2,w
  3734     0687  00A6               	movwf	___flge@ff2+2
  3735     0688  0874               	movf	??___flge+1,w
  3736     0689  00A5               	movwf	___flge@ff2+1
  3737     068A  0873               	movf	??___flge,w
  3738     068B  00A4               	movwf	___flge@ff2
  3739     068C                     l814:
  3740     068C  3080               	movlw	128
  3741     068D  06A3               	xorwf	___flge@ff1+3,f
  3742     068E  3080               	movlw	128
  3743     068F  06A7               	xorwf	___flge@ff2+3,f
  3744     0690  0827               	movf	___flge@ff2+3,w
  3745     0691  0223               	subwf	___flge@ff1+3,w
  3746     0692  1D03               	skipz
  3747     0693  0008               	return
  3748     0694  0826               	movf	___flge@ff2+2,w
  3749     0695  0222               	subwf	___flge@ff1+2,w
  3750     0696  1D03               	skipz
  3751     0697  0008               	return
  3752     0698  0825               	movf	___flge@ff2+1,w
  3753     0699  0221               	subwf	___flge@ff1+1,w
  3754     069A  1D03               	skipz
  3755     069B  0008               	return
  3756     069C  0824               	movf	___flge@ff2,w
  3757     069D  0220               	subwf	___flge@ff1,w
  3758     069E  0008               	return
  3759     069F                     __end_of___flge:
  3760                           
  3761                           	psect	text6
  3762     041F                     __ptext6:	
  3763 ;; *************** function ___fldiv *****************
  3764 ;; Defined at:
  3765 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  a               4   10[BANK0 ] unsigned int 
  3768 ;;  b               4   14[BANK0 ] unsigned int 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  grs             4   30[BANK0 ] unsigned long 
  3771 ;;  rem             4   23[BANK0 ] unsigned long 
  3772 ;;  new_exp         2   28[BANK0 ] int 
  3773 ;;  aexp            1   35[BANK0 ] unsigned char 
  3774 ;;  bexp            1   34[BANK0 ] unsigned char 
  3775 ;;  sign            1   27[BANK0 ] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  4   10[BANK0 ] unsigned char 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3785 ;;      Params:         0       8       0       0
  3786 ;;      Locals:         0      13       0       0
  3787 ;;      Temps:          0       5       0       0
  3788 ;;      Totals:         0      26       0       0
  3789 ;;Total ram usage:       26 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 5
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_updateMemoryValues
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799     041F                     ___fldiv:	
  3800                           ;psect for function ___fldiv
  3801                           
  3802                           
  3803                           ;incstack = 0
  3804                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  3805     041F  0020               	movlb	0	; select bank0
  3806     0420  0831               	movf	___fldiv@b+3,w
  3807     0421  3980               	andlw	128
  3808     0422  00BB               	movwf	___fldiv@sign
  3809     0423  3531               	lslf	___fldiv@b+3,w
  3810     0424  00C2               	movwf	___fldiv@bexp
  3811     0425  1BB0               	btfsc	___fldiv@b+2,7
  3812     0426  1442               	bsf	___fldiv@bexp,0
  3813     0427  0842               	movf	___fldiv@bexp,w
  3814     0428  1903               	btfsc	3,2
  3815     0429  2C38               	goto	l2755
  3816     042A  0A42               	incf	___fldiv@bexp,w
  3817     042B  1D03               	btfss	3,2
  3818     042C  2C35               	goto	l2751
  3819     042D  3000               	movlw	0
  3820     042E  00B1               	movwf	___fldiv@b+3
  3821     042F  3000               	movlw	0
  3822     0430  00B0               	movwf	___fldiv@b+2
  3823     0431  3000               	movlw	0
  3824     0432  00AF               	movwf	___fldiv@b+1
  3825     0433  3000               	movlw	0
  3826     0434  00AE               	movwf	___fldiv@b
  3827     0435                     l2751:
  3828     0435  17B0               	bsf	___fldiv@b+2,7
  3829     0436  01B1               	clrf	___fldiv@b+3
  3830     0437  2C40               	goto	l2757
  3831     0438                     l2755:
  3832     0438  3000               	movlw	0
  3833     0439  00B1               	movwf	___fldiv@b+3
  3834     043A  3000               	movlw	0
  3835     043B  00B0               	movwf	___fldiv@b+2
  3836     043C  3000               	movlw	0
  3837     043D  00AF               	movwf	___fldiv@b+1
  3838     043E  3000               	movlw	0
  3839     043F  00AE               	movwf	___fldiv@b
  3840     0440                     l2757:
  3841     0440  082D               	movf	___fldiv@a+3,w
  3842     0441  3980               	andlw	128
  3843     0442  00B2               	movwf	??___fldiv
  3844     0443  0832               	movf	??___fldiv,w
  3845     0444  06BB               	xorwf	___fldiv@sign,f
  3846     0445  352D               	lslf	___fldiv@a+3,w
  3847     0446  00C3               	movwf	___fldiv@aexp
  3848     0447  1BAC               	btfsc	___fldiv@a+2,7
  3849     0448  1443               	bsf	___fldiv@aexp,0
  3850     0449  0843               	movf	___fldiv@aexp,w
  3851     044A  1903               	btfsc	3,2
  3852     044B  2C5A               	goto	l2775
  3853     044C  0A43               	incf	___fldiv@aexp,w
  3854     044D  1D03               	btfss	3,2
  3855     044E  2C57               	goto	l2771
  3856     044F  3000               	movlw	0
  3857     0450  00AD               	movwf	___fldiv@a+3
  3858     0451  3000               	movlw	0
  3859     0452  00AC               	movwf	___fldiv@a+2
  3860     0453  3000               	movlw	0
  3861     0454  00AB               	movwf	___fldiv@a+1
  3862     0455  3000               	movlw	0
  3863     0456  00AA               	movwf	___fldiv@a
  3864     0457                     l2771:
  3865     0457  17AC               	bsf	___fldiv@a+2,7
  3866     0458  01AD               	clrf	___fldiv@a+3
  3867     0459  2C62               	goto	l990
  3868     045A                     l2775:
  3869     045A  3000               	movlw	0
  3870     045B  00AD               	movwf	___fldiv@a+3
  3871     045C  3000               	movlw	0
  3872     045D  00AC               	movwf	___fldiv@a+2
  3873     045E  3000               	movlw	0
  3874     045F  00AB               	movwf	___fldiv@a+1
  3875     0460  3000               	movlw	0
  3876     0461  00AA               	movwf	___fldiv@a
  3877     0462                     l990:
  3878     0462  082D               	movf	___fldiv@a+3,w
  3879     0463  042C               	iorwf	___fldiv@a+2,w
  3880     0464  042B               	iorwf	___fldiv@a+1,w
  3881     0465  042A               	iorwf	___fldiv@a,w
  3882     0466  1D03               	skipz
  3883     0467  2C81               	goto	l2785
  3884     0468  3000               	movlw	0
  3885     0469  00B1               	movwf	___fldiv@b+3
  3886     046A  3000               	movlw	0
  3887     046B  00B0               	movwf	___fldiv@b+2
  3888     046C  3000               	movlw	0
  3889     046D  00AF               	movwf	___fldiv@b+1
  3890     046E  3000               	movlw	0
  3891     046F  00AE               	movwf	___fldiv@b
  3892     0470  3080               	movlw	128
  3893     0471  04B0               	iorwf	___fldiv@b+2,f
  3894     0472  307F               	movlw	127
  3895     0473  04B1               	iorwf	___fldiv@b+3,f
  3896     0474                     L2:
  3897     0474  083B               	movf	___fldiv@sign,w
  3898     0475  00B2               	movwf	??___fldiv
  3899     0476  0832               	movf	??___fldiv,w
  3900     0477  04B1               	iorwf	___fldiv@b+3,f
  3901     0478  0831               	movf	___fldiv@b+3,w
  3902     0479  00AD               	movwf	?___fldiv+3
  3903     047A  0830               	movf	___fldiv@b+2,w
  3904     047B  00AC               	movwf	?___fldiv+2
  3905     047C  082F               	movf	___fldiv@b+1,w
  3906     047D  00AB               	movwf	?___fldiv+1
  3907     047E  082E               	movf	___fldiv@b,w
  3908     047F  00AA               	movwf	?___fldiv
  3909     0480  0008               	return
  3910     0481                     l2785:
  3911     0481  0842               	movf	___fldiv@bexp,w
  3912     0482  1D03               	btfss	3,2
  3913     0483  2C8D               	goto	l2791
  3914     0484  3000               	movlw	0
  3915     0485  00AD               	movwf	?___fldiv+3
  3916     0486  3000               	movlw	0
  3917     0487  00AC               	movwf	?___fldiv+2
  3918     0488  3000               	movlw	0
  3919     0489  00AB               	movwf	?___fldiv+1
  3920     048A  3000               	movlw	0
  3921     048B  00AA               	movwf	?___fldiv
  3922     048C  0008               	return
  3923     048D                     l2791:
  3924     048D  0842               	movf	___fldiv@bexp,w
  3925     048E  00B2               	movwf	??___fldiv
  3926     048F  01B3               	clrf	??___fldiv+1
  3927     0490  0833               	movf	??___fldiv+1,w
  3928     0491  00B5               	movwf	??___fldiv+3
  3929     0492  0843               	movf	___fldiv@aexp,w
  3930     0493  0232               	subwf	??___fldiv,w
  3931     0494  00B4               	movwf	??___fldiv+2
  3932     0495  1C03               	skipc
  3933     0496  03B5               	decf	??___fldiv+3,f
  3934     0497  0834               	movf	??___fldiv+2,w
  3935     0498  3E7F               	addlw	127
  3936     0499  00BC               	movwf	___fldiv@new_exp
  3937     049A  3000               	movlw	0
  3938     049B  3D35               	addwfc	??___fldiv+3,w
  3939     049C  00BD               	movwf	___fldiv@new_exp+1
  3940     049D  0831               	movf	___fldiv@b+3,w
  3941     049E  00BA               	movwf	___fldiv@rem+3
  3942     049F  0830               	movf	___fldiv@b+2,w
  3943     04A0  00B9               	movwf	___fldiv@rem+2
  3944     04A1  082F               	movf	___fldiv@b+1,w
  3945     04A2  00B8               	movwf	___fldiv@rem+1
  3946     04A3  082E               	movf	___fldiv@b,w
  3947     04A4  00B7               	movwf	___fldiv@rem
  3948     04A5  3000               	movlw	0
  3949     04A6  00B1               	movwf	___fldiv@b+3
  3950     04A7  3000               	movlw	0
  3951     04A8  00B0               	movwf	___fldiv@b+2
  3952     04A9  3000               	movlw	0
  3953     04AA  00AF               	movwf	___fldiv@b+1
  3954     04AB  3000               	movlw	0
  3955     04AC  00AE               	movwf	___fldiv@b
  3956     04AD  3000               	movlw	0
  3957     04AE  00C1               	movwf	___fldiv@grs+3
  3958     04AF  3000               	movlw	0
  3959     04B0  00C0               	movwf	___fldiv@grs+2
  3960     04B1  3000               	movlw	0
  3961     04B2  00BF               	movwf	___fldiv@grs+1
  3962     04B3  3000               	movlw	0
  3963     04B4  00BE               	movwf	___fldiv@grs
  3964     04B5  01C3               	clrf	___fldiv@aexp
  3965     04B6                     l2819:
  3966     04B6  301A               	movlw	26
  3967     04B7  0243               	subwf	___fldiv@aexp,w
  3968     04B8  1803               	btfsc	3,0
  3969     04B9  2CF2               	goto	l2821
  3970     04BA  0843               	movf	___fldiv@aexp,w
  3971     04BB  1903               	btfsc	3,2
  3972     04BC  2CD4               	goto	l2811
  3973     04BD  3001               	movlw	1
  3974     04BE                     u2415:
  3975     04BE  35B7               	lslf	___fldiv@rem,f
  3976     04BF  0DB8               	rlf	___fldiv@rem+1,f
  3977     04C0  0DB9               	rlf	___fldiv@rem+2,f
  3978     04C1  0DBA               	rlf	___fldiv@rem+3,f
  3979     04C2  0B89               	decfsz	9,f
  3980     04C3  2CBE               	goto	u2415
  3981     04C4  3001               	movlw	1
  3982     04C5                     u2425:
  3983     04C5  35AE               	lslf	___fldiv@b,f
  3984     04C6  0DAF               	rlf	___fldiv@b+1,f
  3985     04C7  0DB0               	rlf	___fldiv@b+2,f
  3986     04C8  0DB1               	rlf	___fldiv@b+3,f
  3987     04C9  0B89               	decfsz	9,f
  3988     04CA  2CC5               	goto	u2425
  3989     04CB  1BC1               	btfsc	___fldiv@grs+3,7
  3990     04CC  142E               	bsf	___fldiv@b,0
  3991     04CD  3001               	movlw	1
  3992     04CE                     u2445:
  3993     04CE  35BE               	lslf	___fldiv@grs,f
  3994     04CF  0DBF               	rlf	___fldiv@grs+1,f
  3995     04D0  0DC0               	rlf	___fldiv@grs+2,f
  3996     04D1  0DC1               	rlf	___fldiv@grs+3,f
  3997     04D2  0B89               	decfsz	9,f
  3998     04D3  2CCE               	goto	u2445
  3999     04D4                     l2811:
  4000     04D4  082D               	movf	___fldiv@a+3,w
  4001     04D5  023A               	subwf	___fldiv@rem+3,w
  4002     04D6  1D03               	skipz
  4003     04D7  2CE2               	goto	u2455
  4004     04D8  082C               	movf	___fldiv@a+2,w
  4005     04D9  0239               	subwf	___fldiv@rem+2,w
  4006     04DA  1D03               	skipz
  4007     04DB  2CE2               	goto	u2455
  4008     04DC  082B               	movf	___fldiv@a+1,w
  4009     04DD  0238               	subwf	___fldiv@rem+1,w
  4010     04DE  1D03               	skipz
  4011     04DF  2CE2               	goto	u2455
  4012     04E0  082A               	movf	___fldiv@a,w
  4013     04E1  0237               	subwf	___fldiv@rem,w
  4014     04E2                     u2455:
  4015     04E2  1C03               	skipc
  4016     04E3  2CED               	goto	l2817
  4017     04E4  1741               	bsf	___fldiv@grs+3,6
  4018     04E5  082A               	movf	___fldiv@a,w
  4019     04E6  02B7               	subwf	___fldiv@rem,f
  4020     04E7  082B               	movf	___fldiv@a+1,w
  4021     04E8  3BB8               	subwfb	___fldiv@rem+1,f
  4022     04E9  082C               	movf	___fldiv@a+2,w
  4023     04EA  3BB9               	subwfb	___fldiv@rem+2,f
  4024     04EB  082D               	movf	___fldiv@a+3,w
  4025     04EC  3BBA               	subwfb	___fldiv@rem+3,f
  4026     04ED                     l2817:
  4027     04ED  3001               	movlw	1
  4028     04EE  00B2               	movwf	??___fldiv
  4029     04EF  0832               	movf	??___fldiv,w
  4030     04F0  07C3               	addwf	___fldiv@aexp,f
  4031     04F1  2CB6               	goto	l2819
  4032     04F2                     l2821:
  4033     04F2  083A               	movf	___fldiv@rem+3,w
  4034     04F3  0439               	iorwf	___fldiv@rem+2,w
  4035     04F4  0438               	iorwf	___fldiv@rem+1,w
  4036     04F5  0437               	iorwf	___fldiv@rem,w
  4037     04F6  1D03               	btfss	3,2
  4038     04F7  143E               	bsf	___fldiv@grs,0
  4039     04F8                     l2835:
  4040     04F8  1BB0               	btfsc	___fldiv@b+2,7
  4041     04F9  2D0F               	goto	l2837
  4042     04FA  3001               	movlw	1
  4043     04FB                     u2485:
  4044     04FB  35AE               	lslf	___fldiv@b,f
  4045     04FC  0DAF               	rlf	___fldiv@b+1,f
  4046     04FD  0DB0               	rlf	___fldiv@b+2,f
  4047     04FE  0DB1               	rlf	___fldiv@b+3,f
  4048     04FF  0B89               	decfsz	9,f
  4049     0500  2CFB               	goto	u2485
  4050     0501  1BC1               	btfsc	___fldiv@grs+3,7
  4051     0502  142E               	bsf	___fldiv@b,0
  4052     0503  3001               	movlw	1
  4053     0504                     u2505:
  4054     0504  35BE               	lslf	___fldiv@grs,f
  4055     0505  0DBF               	rlf	___fldiv@grs+1,f
  4056     0506  0DC0               	rlf	___fldiv@grs+2,f
  4057     0507  0DC1               	rlf	___fldiv@grs+3,f
  4058     0508  0B89               	decfsz	9,f
  4059     0509  2D04               	goto	u2505
  4060     050A  30FF               	movlw	255
  4061     050B  07BC               	addwf	___fldiv@new_exp,f
  4062     050C  30FF               	movlw	255
  4063     050D  3DBD               	addwfc	___fldiv@new_exp+1,f
  4064     050E  2CF8               	goto	l2835
  4065     050F                     l2837:
  4066     050F  01C3               	clrf	___fldiv@aexp
  4067     0510  1FC1               	btfss	___fldiv@grs+3,7
  4068     0511  2D28               	goto	l2847
  4069     0512  30FF               	movlw	255
  4070     0513  053E               	andwf	___fldiv@grs,w
  4071     0514  00B2               	movwf	??___fldiv
  4072     0515  30FF               	movlw	255
  4073     0516  053F               	andwf	___fldiv@grs+1,w
  4074     0517  00B3               	movwf	??___fldiv+1
  4075     0518  30FF               	movlw	255
  4076     0519  0540               	andwf	___fldiv@grs+2,w
  4077     051A  00B4               	movwf	??___fldiv+2
  4078     051B  307F               	movlw	127
  4079     051C  0541               	andwf	___fldiv@grs+3,w
  4080     051D  00B5               	movwf	??___fldiv+3
  4081     051E  0835               	movf	??___fldiv+3,w
  4082     051F  0434               	iorwf	??___fldiv+2,w
  4083     0520  0433               	iorwf	??___fldiv+1,w
  4084     0521  0432               	iorwf	??___fldiv,w
  4085     0522  1903               	skipnz
  4086     0523  182E               	btfsc	___fldiv@b,0
  4087     0524  2D26               	goto	l2843
  4088     0525  2D28               	goto	l2847
  4089     0526                     l2843:
  4090     0526  01C3               	clrf	___fldiv@aexp
  4091     0527  0AC3               	incf	___fldiv@aexp,f
  4092     0528                     l2847:
  4093     0528  0843               	movf	___fldiv@aexp,w
  4094     0529  1903               	btfsc	3,2
  4095     052A  2D51               	goto	l2857
  4096     052B  3001               	movlw	1
  4097     052C  07AE               	addwf	___fldiv@b,f
  4098     052D  3000               	movlw	0
  4099     052E  3DAF               	addwfc	___fldiv@b+1,f
  4100     052F  3000               	movlw	0
  4101     0530  3DB0               	addwfc	___fldiv@b+2,f
  4102     0531  3000               	movlw	0
  4103     0532  3DB1               	addwfc	___fldiv@b+3,f
  4104     0533  1C31               	btfss	___fldiv@b+3,0
  4105     0534  2D51               	goto	l2857
  4106     0535  082E               	movf	___fldiv@b,w
  4107     0536  00B2               	movwf	??___fldiv
  4108     0537  082F               	movf	___fldiv@b+1,w
  4109     0538  00B3               	movwf	??___fldiv+1
  4110     0539  0830               	movf	___fldiv@b+2,w
  4111     053A  00B4               	movwf	??___fldiv+2
  4112     053B  0831               	movf	___fldiv@b+3,w
  4113     053C  00B5               	movwf	??___fldiv+3
  4114     053D  3001               	movlw	1
  4115     053E  00B6               	movwf	??___fldiv+4
  4116     053F                     u2575:
  4117     053F  37B5               	asrf	??___fldiv+3,f
  4118     0540  0CB4               	rrf	??___fldiv+2,f
  4119     0541  0CB3               	rrf	??___fldiv+1,f
  4120     0542  0CB2               	rrf	??___fldiv,f
  4121     0543  0BB6               	decfsz	??___fldiv+4,f
  4122     0544  2D3F               	goto	u2575
  4123     0545  0835               	movf	??___fldiv+3,w
  4124     0546  00B1               	movwf	___fldiv@b+3
  4125     0547  0834               	movf	??___fldiv+2,w
  4126     0548  00B0               	movwf	___fldiv@b+2
  4127     0549  0833               	movf	??___fldiv+1,w
  4128     054A  00AF               	movwf	___fldiv@b+1
  4129     054B  0832               	movf	??___fldiv,w
  4130     054C  00AE               	movwf	___fldiv@b
  4131     054D  3001               	movlw	1
  4132     054E  07BC               	addwf	___fldiv@new_exp,f
  4133     054F  3000               	movlw	0
  4134     0550  3DBD               	addwfc	___fldiv@new_exp+1,f
  4135     0551                     l2857:
  4136     0551  083D               	movf	___fldiv@new_exp+1,w
  4137     0552  3A80               	xorlw	128
  4138     0553  00B2               	movwf	??___fldiv
  4139     0554  3080               	movlw	128
  4140     0555  0232               	subwf	??___fldiv,w
  4141     0556  1D03               	skipz
  4142     0557  2D5A               	goto	u2585
  4143     0558  30FF               	movlw	255
  4144     0559  023C               	subwf	___fldiv@new_exp,w
  4145     055A                     u2585:
  4146     055A  1C03               	skipc
  4147     055B  2D69               	goto	l1011
  4148     055C  30FF               	movlw	255
  4149     055D  0020               	movlb	0	; select bank0
  4150     055E  00BC               	movwf	___fldiv@new_exp
  4151     055F  3000               	movlw	0
  4152     0560  00BD               	movwf	___fldiv@new_exp+1
  4153     0561  3000               	movlw	0
  4154     0562  00B1               	movwf	___fldiv@b+3
  4155     0563  3000               	movlw	0
  4156     0564  00B0               	movwf	___fldiv@b+2
  4157     0565  3000               	movlw	0
  4158     0566  00AF               	movwf	___fldiv@b+1
  4159     0567  3000               	movlw	0
  4160     0568  00AE               	movwf	___fldiv@b
  4161     0569                     l1011:
  4162     0569  0020               	movlb	0	; select bank0
  4163     056A  083D               	movf	___fldiv@new_exp+1,w
  4164     056B  3A80               	xorlw	128
  4165     056C  00B2               	movwf	??___fldiv
  4166     056D  3080               	movlw	128
  4167     056E  0232               	subwf	??___fldiv,w
  4168     056F  1D03               	skipz
  4169     0570  2D73               	goto	u2595
  4170     0571  3001               	movlw	1
  4171     0572  023C               	subwf	___fldiv@new_exp,w
  4172     0573                     u2595:
  4173     0573  1803               	skipnc
  4174     0574  2D81               	goto	l1012
  4175     0575  0020               	movlb	0	; select bank0
  4176     0576  01BC               	clrf	___fldiv@new_exp
  4177     0577  01BD               	clrf	___fldiv@new_exp+1
  4178     0578  3000               	movlw	0
  4179     0579  00B1               	movwf	___fldiv@b+3
  4180     057A  3000               	movlw	0
  4181     057B  00B0               	movwf	___fldiv@b+2
  4182     057C  3000               	movlw	0
  4183     057D  00AF               	movwf	___fldiv@b+1
  4184     057E  3000               	movlw	0
  4185     057F  00AE               	movwf	___fldiv@b
  4186     0580  01BB               	clrf	___fldiv@sign
  4187     0581                     l1012:
  4188     0581  0020               	movlb	0	; select bank0
  4189     0582  083C               	movf	___fldiv@new_exp,w
  4190     0583  00C2               	movwf	___fldiv@bexp
  4191     0584  1C42               	btfss	___fldiv@bexp,0
  4192     0585  2D88               	goto	l2871
  4193     0586  17B0               	bsf	___fldiv@b+2,7
  4194     0587  2D8C               	goto	l1014
  4195     0588                     l2871:
  4196     0588  307F               	movlw	127
  4197     0589  00B2               	movwf	??___fldiv
  4198     058A  0832               	movf	??___fldiv,w
  4199     058B  05B0               	andwf	___fldiv@b+2,f
  4200     058C                     l1014:
  4201     058C  3642               	lsrf	___fldiv@bexp,w
  4202     058D  00B1               	movwf	___fldiv@b+3
  4203     058E  2C74               	goto	L2
  4204     058F                     __end_of___fldiv:
  4205                           
  4206                           	psect	text7
  4207     0FAC                     __ptext7:	
  4208 ;; *************** function _ADC_GetConversion *****************
  4209 ;; Defined at:
  4210 ;;		line 115 in file "mcc_generated_files/adc.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  channel         1    wreg     enum E3500
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  channel         1    6[COMMON] enum E3500
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  2    3[COMMON] unsigned short 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4224 ;;      Params:         2       0       0       0
  4225 ;;      Locals:         1       0       0       0
  4226 ;;      Temps:          1       0       0       0
  4227 ;;      Totals:         4       0       0       0
  4228 ;;Total ram usage:        4 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; Hardware stack levels required when called: 5
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_updateMemoryValues
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238     0FAC                     _ADC_GetConversion:	
  4239                           ;psect for function _ADC_GetConversion
  4240                           
  4241                           
  4242                           ;incstack = 0
  4243                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  4244                           ;ADC_GetConversion@channel stored from wreg
  4245     0FAC  00F6               	movwf	ADC_GetConversion@channel
  4246                           
  4247                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  4248     0FAD  0876               	movf	ADC_GetConversion@channel,w
  4249     0FAE  00F5               	movwf	??_ADC_GetConversion
  4250     0FAF  0DF5               	rlf	??_ADC_GetConversion,f
  4251     0FB0  0DF5               	rlf	??_ADC_GetConversion,f
  4252     0FB1  0021               	movlb	1	; select bank1
  4253     0FB2  081D               	movf	29,w	;volatile
  4254     0FB3  0675               	xorwf	??_ADC_GetConversion,w
  4255     0FB4  3983               	andlw	-125
  4256     0FB5  0675               	xorwf	??_ADC_GetConversion,w
  4257     0FB6  009D               	movwf	29	;volatile
  4258                           
  4259                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  4260     0FB7  141D               	bsf	29,0	;volatile
  4261                           
  4262                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  4263     0FB8  3006               	movlw	6
  4264     0FB9                     u3167:
  4265     0FB9  0B89               	decfsz	9,f
  4266     0FBA  2FB9               	goto	u3167
  4267     0FBB  3200               	nop2
  4268                           
  4269                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GO_nDONE = 1;
  4270     0FBC  0021               	movlb	1	; select bank1
  4271     0FBD  149D               	bsf	29,1	;volatile
  4272     0FBE                     l434:	
  4273                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  4274                           
  4275                           
  4276                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GO_nDONE)
  4277     0FBE  189D               	btfsc	29,1	;volatile
  4278     0FBF  2FBE               	goto	l434
  4279                           
  4280                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4281     0FC0  081C               	movf	28,w	;volatile
  4282     0FC1  00F4               	movwf	?_ADC_GetConversion+1
  4283     0FC2  081B               	movf	27,w	;volatile
  4284     0FC3  00F3               	movwf	?_ADC_GetConversion
  4285     0FC4  0008               	return
  4286     0FC5                     __end_of_ADC_GetConversion:
  4287                           
  4288                           	psect	text8
  4289     0F9A                     __ptext8:	
  4290 ;; *************** function _SYSTEM_Initialize *****************
  4291 ;; Defined at:
  4292 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0, pclath, cstack
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4306 ;;      Params:         0       0       0       0
  4307 ;;      Locals:         0       0       0       0
  4308 ;;      Temps:          0       0       0       0
  4309 ;;      Totals:         0       0       0       0
  4310 ;;Total ram usage:        0 bytes
  4311 ;; Hardware stack levels used: 1
  4312 ;; Hardware stack levels required when called: 6
  4313 ;; This function calls:
  4314 ;;		_ADC_Initialize
  4315 ;;		_FVR_Initialize
  4316 ;;		_I2C_Initialize
  4317 ;;		_OSCILLATOR_Initialize
  4318 ;;		_PIN_MANAGER_Initialize
  4319 ;;		_WDT_Initialize
  4320 ;; This function is called by:
  4321 ;;		_main
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325     0F9A                     _SYSTEM_Initialize:	
  4326                           ;psect for function _SYSTEM_Initialize
  4327                           
  4328                           
  4329                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  4330                           
  4331                           ;incstack = 0
  4332                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4333     0F9A  318F  2763  318F   	fcall	_I2C_Initialize
  4334                           
  4335                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4336     0F9D  318F  27C5  318F   	fcall	_PIN_MANAGER_Initialize
  4337                           
  4338                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4339     0FA0  318F  2736  318F   	fcall	_OSCILLATOR_Initialize
  4340                           
  4341                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4342     0FA3  318E  26EA  318F   	fcall	_WDT_Initialize
  4343                           
  4344                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  4345     0FA6  318E  26E6  318F   	fcall	_FVR_Initialize
  4346                           
  4347                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  4348     0FA9  318F  2750         	fcall	_ADC_Initialize
  4349     0FAB  0008               	return
  4350     0FAC                     __end_of_SYSTEM_Initialize:
  4351                           
  4352                           	psect	text9
  4353     0EEA                     __ptext9:	
  4354 ;; *************** function _WDT_Initialize *****************
  4355 ;; Defined at:
  4356 ;;		line 69 in file "mcc_generated_files/mcc.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4370 ;;      Params:         0       0       0       0
  4371 ;;      Locals:         0       0       0       0
  4372 ;;      Temps:          0       0       0       0
  4373 ;;      Totals:         0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; Hardware stack levels required when called: 5
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_SYSTEM_Initialize
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384     0EEA                     _WDT_Initialize:	
  4385                           ;psect for function _WDT_Initialize
  4386                           
  4387                           
  4388                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x1A;
  4389                           
  4390                           ;incstack = 0
  4391                           ; Regs used in _WDT_Initialize: [wreg]
  4392     0EEA  301A               	movlw	26
  4393     0EEB  0021               	movlb	1	; select bank1
  4394     0EEC  0097               	movwf	23	;volatile
  4395     0EED  0008               	return
  4396     0EEE                     __end_of_WDT_Initialize:
  4397                           
  4398                           	psect	text10
  4399     0FC5                     __ptext10:	
  4400 ;; *************** function _PIN_MANAGER_Initialize *****************
  4401 ;; Defined at:
  4402 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4416 ;;      Params:         0       0       0       0
  4417 ;;      Locals:         0       0       0       0
  4418 ;;      Temps:          0       0       0       0
  4419 ;;      Totals:         0       0       0       0
  4420 ;;Total ram usage:        0 bytes
  4421 ;; Hardware stack levels used: 1
  4422 ;; Hardware stack levels required when called: 5
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_SYSTEM_Initialize
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430     0FC5                     _PIN_MANAGER_Initialize:	
  4431                           ;psect for function _PIN_MANAGER_Initialize
  4432                           
  4433                           
  4434                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4435                           
  4436                           ;incstack = 0
  4437                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4438     0FC5  0022               	movlb	2	; select bank2
  4439     0FC6  018C               	clrf	12	;volatile
  4440                           
  4441                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4442     0FC7  018D               	clrf	13	;volatile
  4443                           
  4444                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4445     0FC8  018E               	clrf	14	;volatile
  4446                           
  4447                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  4448     0FC9  303F               	movlw	63
  4449     0FCA  0021               	movlb	1	; select bank1
  4450     0FCB  008C               	movwf	12	;volatile
  4451                           
  4452                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  4453     0FCC  3070               	movlw	112
  4454     0FCD  008D               	movwf	13	;volatile
  4455                           
  4456                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xF8;
  4457     0FCE  30F8               	movlw	248
  4458     0FCF  008E               	movwf	14	;volatile
  4459                           
  4460                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCE;
  4461     0FD0  30CE               	movlw	206
  4462     0FD1  0023               	movlb	3	; select bank3
  4463     0FD2  008E               	movwf	14	;volatile
  4464                           
  4465                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x20;
  4466     0FD3  3020               	movlw	32
  4467     0FD4  008D               	movwf	13	;volatile
  4468                           
  4469                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  4470     0FD5  3017               	movlw	23
  4471     0FD6  008C               	movwf	12	;volatile
  4472                           
  4473                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4474     0FD7  0024               	movlb	4	; select bank4
  4475     0FD8  018D               	clrf	13	;volatile
  4476                           
  4477                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  4478     0FD9  018C               	clrf	12	;volatile
  4479                           
  4480                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  4481     0FDA  0021               	movlb	1	; select bank1
  4482     0FDB  1795               	bsf	21,7	;volatile
  4483                           
  4484                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  4485     0FDC  0022               	movlb	2	; select bank2
  4486     0FDD  019D               	clrf	29	;volatile
  4487                           
  4488                           ;mcc_generated_files/pin_manager.c: 96:     INTCONbits.IOCIE = 1;
  4489     0FDE  158B               	bsf	11,3	;volatile
  4490     0FDF  0008               	return
  4491     0FE0                     __end_of_PIN_MANAGER_Initialize:
  4492                           
  4493                           	psect	text11
  4494     0F36                     __ptext11:	
  4495 ;; *************** function _OSCILLATOR_Initialize *****************
  4496 ;; Defined at:
  4497 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg, status,2
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4511 ;;      Params:         0       0       0       0
  4512 ;;      Locals:         0       0       0       0
  4513 ;;      Temps:          0       0       0       0
  4514 ;;      Totals:         0       0       0       0
  4515 ;;Total ram usage:        0 bytes
  4516 ;; Hardware stack levels used: 1
  4517 ;; Hardware stack levels required when called: 5
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_SYSTEM_Initialize
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525     0F36                     _OSCILLATOR_Initialize:	
  4526                           ;psect for function _OSCILLATOR_Initialize
  4527                           
  4528                           
  4529                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  4530                           
  4531                           ;incstack = 0
  4532                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4533     0F36  3078               	movlw	120
  4534     0F37  0021               	movlb	1	; select bank1
  4535     0F38  0099               	movwf	25	;volatile
  4536                           
  4537                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  4538     0F39  0022               	movlb	2	; select bank2
  4539     0F3A  0196               	clrf	22	;volatile
  4540     0F3B  0008               	return
  4541     0F3C                     __end_of_OSCILLATOR_Initialize:
  4542                           
  4543                           	psect	text12
  4544     0F63                     __ptext12:	
  4545 ;; *************** function _I2C_Initialize *****************
  4546 ;; Defined at:
  4547 ;;		line 122 in file "mcc_generated_files/i2c_slave.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4561 ;;      Params:         0       0       0       0
  4562 ;;      Locals:         0       0       0       0
  4563 ;;      Temps:          1       0       0       0
  4564 ;;      Totals:         1       0       0       0
  4565 ;;Total ram usage:        1 bytes
  4566 ;; Hardware stack levels used: 1
  4567 ;; Hardware stack levels required when called: 5
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_SYSTEM_Initialize
  4572 ;;		_I2C_Enable
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576     0F63                     _I2C_Initialize:	
  4577                           ;psect for function _I2C_Initialize
  4578                           
  4579                           
  4580                           ;mcc_generated_files/i2c_slave.c: 124:     SSP1STAT = 0x00;
  4581                           
  4582                           ;incstack = 0
  4583                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0]
  4584     0F63  0024               	movlb	4	; select bank4
  4585     0F64  0194               	clrf	20	;volatile
  4586                           
  4587                           ;mcc_generated_files/i2c_slave.c: 125:     SSP1CON1 |= 0x06;
  4588     0F65  3006               	movlw	6
  4589     0F66  00F3               	movwf	??_I2C_Initialize
  4590     0F67  0873               	movf	??_I2C_Initialize,w
  4591     0F68  0495               	iorwf	21,f	;volatile
  4592                           
  4593                           ;mcc_generated_files/i2c_slave.c: 126:     SSP1CON2 = 0x01;
  4594     0F69  3001               	movlw	1
  4595     0F6A  0096               	movwf	22	;volatile
  4596                           
  4597                           ;mcc_generated_files/i2c_slave.c: 127:     SSP1CON1bits.SSPEN = 0;
  4598     0F6B  1295               	bcf	21,5	;volatile
  4599     0F6C  0008               	return
  4600     0F6D                     __end_of_I2C_Initialize:
  4601                           
  4602                           	psect	text13
  4603     0EE6                     __ptext13:	
  4604 ;; *************** function _FVR_Initialize *****************
  4605 ;; Defined at:
  4606 ;;		line 58 in file "mcc_generated_files/fvr.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4620 ;;      Params:         0       0       0       0
  4621 ;;      Locals:         0       0       0       0
  4622 ;;      Temps:          0       0       0       0
  4623 ;;      Totals:         0       0       0       0
  4624 ;;Total ram usage:        0 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; Hardware stack levels required when called: 5
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_SYSTEM_Initialize
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634     0EE6                     _FVR_Initialize:	
  4635                           ;psect for function _FVR_Initialize
  4636                           
  4637                           
  4638                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  4639                           
  4640                           ;incstack = 0
  4641                           ; Regs used in _FVR_Initialize: [wreg]
  4642     0EE6  3082               	movlw	130
  4643     0EE7  0022               	movlb	2	; select bank2
  4644     0EE8  0097               	movwf	23	;volatile
  4645     0EE9  0008               	return
  4646     0EEA                     __end_of_FVR_Initialize:
  4647                           
  4648                           	psect	text14
  4649     0F50                     __ptext14:	
  4650 ;; *************** function _ADC_Initialize *****************
  4651 ;; Defined at:
  4652 ;;		line 67 in file "mcc_generated_files/adc.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4666 ;;      Params:         0       0       0       0
  4667 ;;      Locals:         0       0       0       0
  4668 ;;      Temps:          0       0       0       0
  4669 ;;      Totals:         0       0       0       0
  4670 ;;Total ram usage:        0 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 5
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_SYSTEM_Initialize
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680     0F50                     _ADC_Initialize:	
  4681                           ;psect for function _ADC_Initialize
  4682                           
  4683                           
  4684                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xF0;
  4685                           
  4686                           ;incstack = 0
  4687                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4688     0F50  30F0               	movlw	240
  4689     0F51  0021               	movlb	1	; select bank1
  4690     0F52  009E               	movwf	30	;volatile
  4691                           
  4692                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
  4693     0F53  019F               	clrf	31	;volatile
  4694                           
  4695                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  4696     0F54  019B               	clrf	27	;volatile
  4697                           
  4698                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  4699     0F55  019C               	clrf	28	;volatile
  4700                           
  4701                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  4702     0F56  3001               	movlw	1
  4703     0F57  009D               	movwf	29	;volatile
  4704     0F58  0008               	return
  4705     0F59                     __end_of_ADC_Initialize:
  4706                           
  4707                           	psect	text15
  4708     076D                     __ptext15:	
  4709 ;; *************** function _I2C_Open *****************
  4710 ;; Defined at:
  4711 ;;		line 130 in file "mcc_generated_files/i2c_slave.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, pclath, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4725 ;;      Params:         0       0       0       0
  4726 ;;      Locals:         0       0       0       0
  4727 ;;      Temps:          0       0       0       0
  4728 ;;      Totals:         0       0       0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; Hardware stack levels required when called: 6
  4732 ;; This function calls:
  4733 ;;		_I2C_SlaveEnableIrq
  4734 ;;		_I2C_SlaveOpen
  4735 ;;		_I2C_SlaveSetAddrIntHandler
  4736 ;;		_I2C_SlaveSetBusColIntHandler
  4737 ;;		_I2C_SlaveSetIsrHandler
  4738 ;;		_I2C_SlaveSetReadIntHandler
  4739 ;;		_I2C_SlaveSetSlaveAddr
  4740 ;;		_I2C_SlaveSetSlaveMask
  4741 ;;		_I2C_SlaveSetWrColIntHandler
  4742 ;;		_I2C_SlaveSetWriteIntHandler
  4743 ;; This function is called by:
  4744 ;;		_main
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748     076D                     _I2C_Open:	
  4749                           ;psect for function _I2C_Open
  4750                           
  4751                           
  4752                           ;mcc_generated_files/i2c_slave.c: 132:     I2C_SlaveOpen();
  4753                           
  4754                           ;incstack = 0
  4755                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  4756     076D  318F  278E  3187   	fcall	_I2C_SlaveOpen
  4757                           
  4758                           ;mcc_generated_files/i2c_slave.c: 133:     I2C_SlaveSetSlaveAddr(8);
  4759     0770  3008               	movlw	8
  4760     0771  318F  2702  3187   	fcall	_I2C_SlaveSetSlaveAddr
  4761                           
  4762                           ;mcc_generated_files/i2c_slave.c: 134:     I2C_SlaveSetSlaveMask(0);
  4763     0774  3000               	movlw	0
  4764     0775  318F  2707  3187   	fcall	_I2C_SlaveSetSlaveMask
  4765                           
  4766                           ;mcc_generated_files/i2c_slave.c: 135:     I2C_SlaveSetIsrHandler(I2C_Isr);
  4767     0778  3019               	movlw	low _I2C_Isr
  4768     0779  00F3               	movwf	I2C_SlaveSetIsrHandler@handler
  4769     077A  3007               	movlw	high _I2C_Isr
  4770     077B  00F4               	movwf	I2C_SlaveSetIsrHandler@handler+1
  4771     077C  318F  271E  3187   	fcall	_I2C_SlaveSetIsrHandler
  4772                           
  4773                           ;mcc_generated_files/i2c_slave.c: 136:     I2C_SlaveSetBusColIntHandler(I2C_SlaveDefBusC
      +                          olInterruptHandler);
  4774     077F  3000               	movlw	0
  4775     0780  00F3               	movwf	I2C_SlaveSetBusColIntHandler@handler
  4776     0781  3000               	movlw	0
  4777     0782  00F4               	movwf	I2C_SlaveSetBusColIntHandler@handler+1
  4778     0783  318F  2718  3187   	fcall	_I2C_SlaveSetBusColIntHandler
  4779                           
  4780                           ;mcc_generated_files/i2c_slave.c: 137:     I2C_SlaveSetWriteIntHandler(I2C_SlaveDefWrInt
      +                          erruptHandler);
  4781     0786  30D5               	movlw	low _I2C_SlaveDefWrInterruptHandler
  4782     0787  00F3               	movwf	I2C_SlaveSetWriteIntHandler@handler
  4783     0788  3007               	movlw	high _I2C_SlaveDefWrInterruptHandler
  4784     0789  00F4               	movwf	I2C_SlaveSetWriteIntHandler@handler+1
  4785     078A  318F  2730  3187   	fcall	_I2C_SlaveSetWriteIntHandler
  4786                           
  4787                           ;mcc_generated_files/i2c_slave.c: 138:     I2C_SlaveSetReadIntHandler(I2C_SlaveDefRdInte
      +                          rruptHandler);
  4788     078D  30F8               	movlw	low _I2C_SlaveDefRdInterruptHandler
  4789     078E  00F3               	movwf	I2C_SlaveSetReadIntHandler@handler
  4790     078F  300E               	movlw	high _I2C_SlaveDefRdInterruptHandler
  4791     0790  00F4               	movwf	I2C_SlaveSetReadIntHandler@handler+1
  4792     0791  318F  2724  3187   	fcall	_I2C_SlaveSetReadIntHandler
  4793                           
  4794                           ;mcc_generated_files/i2c_slave.c: 139:     I2C_SlaveSetAddrIntHandler(I2C_SlaveDefAddrIn
      +                          terruptHandler);
  4795     0794  30EE               	movlw	low _I2C_SlaveDefAddrInterruptHandler
  4796     0795  00F3               	movwf	I2C_SlaveSetAddrIntHandler@handler
  4797     0796  300E               	movlw	high _I2C_SlaveDefAddrInterruptHandler
  4798     0797  00F4               	movwf	I2C_SlaveSetAddrIntHandler@handler+1
  4799     0798  318F  2712  3187   	fcall	_I2C_SlaveSetAddrIntHandler
  4800                           
  4801                           ;mcc_generated_files/i2c_slave.c: 140:     I2C_SlaveSetWrColIntHandler(I2C_SlaveDefWrCol
      +                          InterruptHandler);
  4802     079B  3000               	movlw	0
  4803     079C  00F3               	movwf	I2C_SlaveSetWrColIntHandler@handler
  4804     079D  3000               	movlw	0
  4805     079E  00F4               	movwf	I2C_SlaveSetWrColIntHandler@handler+1
  4806     079F  318F  272A  3187   	fcall	_I2C_SlaveSetWrColIntHandler
  4807                           
  4808                           ;mcc_generated_files/i2c_slave.c: 141:     I2C_SlaveEnableIrq();
  4809     07A2  318E  26DF         	fcall	_I2C_SlaveEnableIrq
  4810     07A4  0008               	return
  4811     07A5                     __end_of_I2C_Open:
  4812                           
  4813                           	psect	text16
  4814     0F30                     __ptext16:	
  4815 ;; *************** function _I2C_SlaveSetWriteIntHandler *****************
  4816 ;; Defined at:
  4817 ;;		line 260 in file "mcc_generated_files/i2c_slave.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  handler         2    3[COMMON] PTR FTN()void 
  4820 ;;		 -> I2C_SlaveDefWrInterruptHandler(1), 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4832 ;;      Params:         2       0       0       0
  4833 ;;      Locals:         0       0       0       0
  4834 ;;      Temps:          0       0       0       0
  4835 ;;      Totals:         2       0       0       0
  4836 ;;Total ram usage:        2 bytes
  4837 ;; Hardware stack levels used: 1
  4838 ;; Hardware stack levels required when called: 5
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_I2C_Open
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846     0F30                     _I2C_SlaveSetWriteIntHandler:	
  4847                           ;psect for function _I2C_SlaveSetWriteIntHandler
  4848                           
  4849                           
  4850                           ;mcc_generated_files/i2c_slave.c: 261:     I2C_SlaveWrInterruptHandler = handler;
  4851                           
  4852                           ;incstack = 0
  4853                           ; Regs used in _I2C_SlaveSetWriteIntHandler: [wreg]
  4854     0F30  0874               	movf	I2C_SlaveSetWriteIntHandler@handler+1,w
  4855     0F31  0020               	movlb	0	; select bank0
  4856     0F32  00D7               	movwf	_I2C_SlaveWrInterruptHandler+1
  4857     0F33  0873               	movf	I2C_SlaveSetWriteIntHandler@handler,w
  4858     0F34  00D6               	movwf	_I2C_SlaveWrInterruptHandler
  4859     0F35  0008               	return
  4860     0F36                     __end_of_I2C_SlaveSetWriteIntHandler:
  4861                           
  4862                           	psect	text17
  4863     0F2A                     __ptext17:	
  4864 ;; *************** function _I2C_SlaveSetWrColIntHandler *****************
  4865 ;; Defined at:
  4866 ;;		line 307 in file "mcc_generated_files/i2c_slave.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  handler         2    3[COMMON] PTR FTN()void 
  4869 ;;		 -> I2C_SlaveDefWrColInterruptHandler(1), 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      void 
  4874 ;; Registers used:
  4875 ;;		wreg
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4881 ;;      Params:         2       0       0       0
  4882 ;;      Locals:         0       0       0       0
  4883 ;;      Temps:          0       0       0       0
  4884 ;;      Totals:         2       0       0       0
  4885 ;;Total ram usage:        2 bytes
  4886 ;; Hardware stack levels used: 1
  4887 ;; Hardware stack levels required when called: 5
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_I2C_Open
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895     0F2A                     _I2C_SlaveSetWrColIntHandler:	
  4896                           ;psect for function _I2C_SlaveSetWrColIntHandler
  4897                           
  4898                           
  4899                           ;mcc_generated_files/i2c_slave.c: 308:     I2C_SlaveWrColInterruptHandler = handler;
  4900                           
  4901                           ;incstack = 0
  4902                           ; Regs used in _I2C_SlaveSetWrColIntHandler: [wreg]
  4903     0F2A  0874               	movf	I2C_SlaveSetWrColIntHandler@handler+1,w
  4904     0F2B  0020               	movlb	0	; select bank0
  4905     0F2C  00D1               	movwf	_I2C_SlaveWrColInterruptHandler+1
  4906     0F2D  0873               	movf	I2C_SlaveSetWrColIntHandler@handler,w
  4907     0F2E  00D0               	movwf	_I2C_SlaveWrColInterruptHandler
  4908     0F2F  0008               	return
  4909     0F30                     __end_of_I2C_SlaveSetWrColIntHandler:
  4910                           
  4911                           	psect	text18
  4912     0F07                     __ptext18:	
  4913 ;; *************** function _I2C_SlaveSetSlaveMask *****************
  4914 ;; Defined at:
  4915 ;;		line 364 in file "mcc_generated_files/i2c_slave.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  maskAddr        1    wreg     unsigned char 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  maskAddr        1    3[COMMON] unsigned char 
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  1    wreg      void 
  4922 ;; Registers used:
  4923 ;;		wreg, status,2, status,0
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4929 ;;      Params:         0       0       0       0
  4930 ;;      Locals:         1       0       0       0
  4931 ;;      Temps:          0       0       0       0
  4932 ;;      Totals:         1       0       0       0
  4933 ;;Total ram usage:        1 bytes
  4934 ;; Hardware stack levels used: 1
  4935 ;; Hardware stack levels required when called: 5
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		_I2C_Open
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943     0F07                     _I2C_SlaveSetSlaveMask:	
  4944                           ;psect for function _I2C_SlaveSetSlaveMask
  4945                           
  4946                           
  4947                           ;incstack = 0
  4948                           ; Regs used in _I2C_SlaveSetSlaveMask: [wreg+status,2+status,0]
  4949                           ;I2C_SlaveSetSlaveMask@maskAddr stored from wreg
  4950     0F07  00F3               	movwf	I2C_SlaveSetSlaveMask@maskAddr
  4951                           
  4952                           ;mcc_generated_files/i2c_slave.c: 364: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveMask(uint8_t maskAddr);mcc_generated_files/i2c_slave.c: 365: {;mcc_generated_files/i
      +                          2c_slave.c: 366:     SSP1MSK = (uint8_t) (maskAddr << 1);
  4953     0F08  3573               	lslf	I2C_SlaveSetSlaveMask@maskAddr,w
  4954     0F09  0024               	movlb	4	; select bank4
  4955     0F0A  0093               	movwf	19	;volatile
  4956     0F0B  0008               	return
  4957     0F0C                     __end_of_I2C_SlaveSetSlaveMask:
  4958                           
  4959                           	psect	text19
  4960     0F02                     __ptext19:	
  4961 ;; *************** function _I2C_SlaveSetSlaveAddr *****************
  4962 ;; Defined at:
  4963 ;;		line 359 in file "mcc_generated_files/i2c_slave.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  slaveAddr       1    wreg     unsigned char 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  slaveAddr       1    3[COMMON] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4977 ;;      Params:         0       0       0       0
  4978 ;;      Locals:         1       0       0       0
  4979 ;;      Temps:          0       0       0       0
  4980 ;;      Totals:         1       0       0       0
  4981 ;;Total ram usage:        1 bytes
  4982 ;; Hardware stack levels used: 1
  4983 ;; Hardware stack levels required when called: 5
  4984 ;; This function calls:
  4985 ;;		Nothing
  4986 ;; This function is called by:
  4987 ;;		_I2C_Open
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991     0F02                     _I2C_SlaveSetSlaveAddr:	
  4992                           ;psect for function _I2C_SlaveSetSlaveAddr
  4993                           
  4994                           
  4995                           ;incstack = 0
  4996                           ; Regs used in _I2C_SlaveSetSlaveAddr: [wreg+status,2+status,0]
  4997                           ;I2C_SlaveSetSlaveAddr@slaveAddr stored from wreg
  4998     0F02  00F3               	movwf	I2C_SlaveSetSlaveAddr@slaveAddr
  4999                           
  5000                           ;mcc_generated_files/i2c_slave.c: 359: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveAddr(uint8_t slaveAddr);mcc_generated_files/i2c_slave.c: 360: {;mcc_generated_files/
      +                          i2c_slave.c: 361:     SSP1ADD = (uint8_t) (slaveAddr << 1);
  5001     0F03  3573               	lslf	I2C_SlaveSetSlaveAddr@slaveAddr,w
  5002     0F04  0024               	movlb	4	; select bank4
  5003     0F05  0092               	movwf	18	;volatile
  5004     0F06  0008               	return
  5005     0F07                     __end_of_I2C_SlaveSetSlaveAddr:
  5006                           
  5007                           	psect	text20
  5008     0F24                     __ptext20:	
  5009 ;; *************** function _I2C_SlaveSetReadIntHandler *****************
  5010 ;; Defined at:
  5011 ;;		line 243 in file "mcc_generated_files/i2c_slave.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  handler         2    3[COMMON] PTR FTN()void 
  5014 ;;		 -> I2C_SlaveDefRdInterruptHandler(1), 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  1    wreg      void 
  5019 ;; Registers used:
  5020 ;;		wreg
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5026 ;;      Params:         2       0       0       0
  5027 ;;      Locals:         0       0       0       0
  5028 ;;      Temps:          0       0       0       0
  5029 ;;      Totals:         2       0       0       0
  5030 ;;Total ram usage:        2 bytes
  5031 ;; Hardware stack levels used: 1
  5032 ;; Hardware stack levels required when called: 5
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_I2C_Open
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040     0F24                     _I2C_SlaveSetReadIntHandler:	
  5041                           ;psect for function _I2C_SlaveSetReadIntHandler
  5042                           
  5043                           
  5044                           ;mcc_generated_files/i2c_slave.c: 244:     I2C_SlaveRdInterruptHandler = handler;
  5045                           
  5046                           ;incstack = 0
  5047                           ; Regs used in _I2C_SlaveSetReadIntHandler: [wreg]
  5048     0F24  0874               	movf	I2C_SlaveSetReadIntHandler@handler+1,w
  5049     0F25  0020               	movlb	0	; select bank0
  5050     0F26  00D9               	movwf	_I2C_SlaveRdInterruptHandler+1
  5051     0F27  0873               	movf	I2C_SlaveSetReadIntHandler@handler,w
  5052     0F28  00D8               	movwf	_I2C_SlaveRdInterruptHandler
  5053     0F29  0008               	return
  5054     0F2A                     __end_of_I2C_SlaveSetReadIntHandler:
  5055                           
  5056                           	psect	text21
  5057     0F1E                     __ptext21:	
  5058 ;; *************** function _I2C_SlaveSetIsrHandler *****************
  5059 ;; Defined at:
  5060 ;;		line 237 in file "mcc_generated_files/i2c_slave.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  handler         2    3[COMMON] PTR FTN()void 
  5063 ;;		 -> I2C_Isr(1), 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;		None
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      void 
  5068 ;; Registers used:
  5069 ;;		wreg
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5075 ;;      Params:         2       0       0       0
  5076 ;;      Locals:         0       0       0       0
  5077 ;;      Temps:          0       0       0       0
  5078 ;;      Totals:         2       0       0       0
  5079 ;;Total ram usage:        2 bytes
  5080 ;; Hardware stack levels used: 1
  5081 ;; Hardware stack levels required when called: 5
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_I2C_Open
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089     0F1E                     _I2C_SlaveSetIsrHandler:	
  5090                           ;psect for function _I2C_SlaveSetIsrHandler
  5091                           
  5092                           
  5093                           ;mcc_generated_files/i2c_slave.c: 237: void I2C_SlaveSetIsrHandler(i2cInterruptHandler h
      +                          andler);mcc_generated_files/i2c_slave.c: 238: {;mcc_generated_files/i2c_slave.c: 239:   
      +                            MSSP_InterruptHandler = handler;
  5094                           
  5095                           ;incstack = 0
  5096                           ; Regs used in _I2C_SlaveSetIsrHandler: [wreg]
  5097     0F1E  0874               	movf	I2C_SlaveSetIsrHandler@handler+1,w
  5098     0F1F  0020               	movlb	0	; select bank0
  5099     0F20  00DB               	movwf	_MSSP_InterruptHandler+1
  5100     0F21  0873               	movf	I2C_SlaveSetIsrHandler@handler,w
  5101     0F22  00DA               	movwf	_MSSP_InterruptHandler
  5102     0F23  0008               	return
  5103     0F24                     __end_of_I2C_SlaveSetIsrHandler:
  5104                           
  5105                           	psect	text22
  5106     0F18                     __ptext22:	
  5107 ;; *************** function _I2C_SlaveSetBusColIntHandler *****************
  5108 ;; Defined at:
  5109 ;;		line 323 in file "mcc_generated_files/i2c_slave.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  handler         2    3[COMMON] PTR FTN()void 
  5112 ;;		 -> I2C_SlaveDefBusColInterruptHandler(1), 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;		None
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5124 ;;      Params:         2       0       0       0
  5125 ;;      Locals:         0       0       0       0
  5126 ;;      Temps:          0       0       0       0
  5127 ;;      Totals:         2       0       0       0
  5128 ;;Total ram usage:        2 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; Hardware stack levels required when called: 5
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_I2C_Open
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138     0F18                     _I2C_SlaveSetBusColIntHandler:	
  5139                           ;psect for function _I2C_SlaveSetBusColIntHandler
  5140                           
  5141                           
  5142                           ;mcc_generated_files/i2c_slave.c: 324:     I2C_SlaveBusColInterruptHandler = handler;
  5143                           
  5144                           ;incstack = 0
  5145                           ; Regs used in _I2C_SlaveSetBusColIntHandler: [wreg]
  5146     0F18  0874               	movf	I2C_SlaveSetBusColIntHandler@handler+1,w
  5147     0F19  0020               	movlb	0	; select bank0
  5148     0F1A  00D3               	movwf	_I2C_SlaveBusColInterruptHandler+1
  5149     0F1B  0873               	movf	I2C_SlaveSetBusColIntHandler@handler,w
  5150     0F1C  00D2               	movwf	_I2C_SlaveBusColInterruptHandler
  5151     0F1D  0008               	return
  5152     0F1E                     __end_of_I2C_SlaveSetBusColIntHandler:
  5153                           
  5154                           	psect	text23
  5155     0F12                     __ptext23:	
  5156 ;; *************** function _I2C_SlaveSetAddrIntHandler *****************
  5157 ;; Defined at:
  5158 ;;		line 291 in file "mcc_generated_files/i2c_slave.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  handler         2    3[COMMON] PTR FTN()void 
  5161 ;;		 -> I2C_SlaveDefAddrInterruptHandler(1), 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      void 
  5166 ;; Registers used:
  5167 ;;		wreg
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5173 ;;      Params:         2       0       0       0
  5174 ;;      Locals:         0       0       0       0
  5175 ;;      Temps:          0       0       0       0
  5176 ;;      Totals:         2       0       0       0
  5177 ;;Total ram usage:        2 bytes
  5178 ;; Hardware stack levels used: 1
  5179 ;; Hardware stack levels required when called: 5
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_I2C_Open
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187     0F12                     _I2C_SlaveSetAddrIntHandler:	
  5188                           ;psect for function _I2C_SlaveSetAddrIntHandler
  5189                           
  5190                           
  5191                           ;mcc_generated_files/i2c_slave.c: 292:     I2C_SlaveAddrInterruptHandler = handler;
  5192                           
  5193                           ;incstack = 0
  5194                           ; Regs used in _I2C_SlaveSetAddrIntHandler: [wreg]
  5195     0F12  0874               	movf	I2C_SlaveSetAddrIntHandler@handler+1,w
  5196     0F13  0020               	movlb	0	; select bank0
  5197     0F14  00D5               	movwf	_I2C_SlaveAddrInterruptHandler+1
  5198     0F15  0873               	movf	I2C_SlaveSetAddrIntHandler@handler,w
  5199     0F16  00D4               	movwf	_I2C_SlaveAddrInterruptHandler
  5200     0F17  0008               	return
  5201     0F18                     __end_of_I2C_SlaveSetAddrIntHandler:
  5202                           
  5203                           	psect	text24
  5204     0F8E                     __ptext24:	
  5205 ;; *************** function _I2C_SlaveOpen *****************
  5206 ;; Defined at:
  5207 ;;		line 338 in file "mcc_generated_files/i2c_slave.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      _Bool 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5221 ;;      Params:         0       0       0       0
  5222 ;;      Locals:         0       0       0       0
  5223 ;;      Temps:          1       0       0       0
  5224 ;;      Totals:         1       0       0       0
  5225 ;;Total ram usage:        1 bytes
  5226 ;; Hardware stack levels used: 1
  5227 ;; Hardware stack levels required when called: 5
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_I2C_Open
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235     0F8E                     _I2C_SlaveOpen:	
  5236                           ;psect for function _I2C_SlaveOpen
  5237                           
  5238                           
  5239                           ;mcc_generated_files/i2c_slave.c: 340:     if(!SSP1CON1bits.SSPEN)
  5240                           
  5241                           ;incstack = 0
  5242                           ; Regs used in _I2C_SlaveOpen: [wreg+status,2+status,0]
  5243     0F8E  0024               	movlb	4	; select bank4
  5244     0F8F  1A95               	btfsc	21,5	;volatile
  5245     0F90  0008               	return
  5246                           
  5247                           ;mcc_generated_files/i2c_slave.c: 341:     {;mcc_generated_files/i2c_slave.c: 342:      
      +                             SSP1STAT = 0x00;
  5248     0F91  0194               	clrf	20	;volatile
  5249                           
  5250                           ;mcc_generated_files/i2c_slave.c: 343:         SSP1CON1 |= 0x06;
  5251     0F92  3006               	movlw	6
  5252     0F93  00F3               	movwf	??_I2C_SlaveOpen
  5253     0F94  0873               	movf	??_I2C_SlaveOpen,w
  5254     0F95  0495               	iorwf	21,f	;volatile
  5255                           
  5256                           ;mcc_generated_files/i2c_slave.c: 344:         SSP1CON2 = 0x01;
  5257     0F96  3001               	movlw	1
  5258     0F97  0096               	movwf	22	;volatile
  5259                           
  5260                           ;mcc_generated_files/i2c_slave.c: 345:         SSP1CON1bits.SSPEN = 1;
  5261     0F98  1695               	bsf	21,5	;volatile
  5262     0F99  0008               	return
  5263     0F9A                     __end_of_I2C_SlaveOpen:
  5264                           
  5265                           	psect	text25
  5266     0EDF                     __ptext25:	
  5267 ;; *************** function _I2C_SlaveEnableIrq *****************
  5268 ;; Defined at:
  5269 ;;		line 369 in file "mcc_generated_files/i2c_slave.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;		None
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		None
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5283 ;;      Params:         0       0       0       0
  5284 ;;      Locals:         0       0       0       0
  5285 ;;      Temps:          0       0       0       0
  5286 ;;      Totals:         0       0       0       0
  5287 ;;Total ram usage:        0 bytes
  5288 ;; Hardware stack levels used: 1
  5289 ;; Hardware stack levels required when called: 5
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_I2C_Open
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297     0EDF                     _I2C_SlaveEnableIrq:	
  5298                           ;psect for function _I2C_SlaveEnableIrq
  5299                           
  5300                           
  5301                           ;mcc_generated_files/i2c_slave.c: 371:     PIE1bits.SSP1IE = 1;
  5302                           
  5303                           ;incstack = 0
  5304                           ; Regs used in _I2C_SlaveEnableIrq: []
  5305     0EDF  0021               	movlb	1	; select bank1
  5306     0EE0  1591               	bsf	17,3	;volatile
  5307     0EE1  0008               	return
  5308     0EE2                     __end_of_I2C_SlaveEnableIrq:
  5309                           
  5310                           	psect	text26
  5311     069F                     __ptext26:	
  5312 ;; *************** function _I2C_Handler *****************
  5313 ;; Defined at:
  5314 ;;		line 143 in file "main.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5328 ;;      Params:         0       0       0       0
  5329 ;;      Locals:         0       0       0       0
  5330 ;;      Temps:          2       0       0       0
  5331 ;;      Totals:         2       0       0       0
  5332 ;;Total ram usage:        2 bytes
  5333 ;; Hardware stack levels used: 1
  5334 ;; Hardware stack levels required when called: 6
  5335 ;; This function calls:
  5336 ;;		_sendTempDataToMaster
  5337 ;;		_sendVSNSDataToMaster
  5338 ;; This function is called by:
  5339 ;;		_main
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343     069F                     _I2C_Handler:	
  5344                           ;psect for function _I2C_Handler
  5345                           
  5346                           
  5347                           ;main.c: 144:     if(i2cSlaveAddr == SSP1ADD){
  5348                           
  5349                           ;incstack = 0
  5350                           ; Regs used in _I2C_Handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5351     069F  0020               	movlb	0	; select bank0
  5352     06A0  085F               	movf	_i2cSlaveAddr,w	;volatile
  5353     06A1  0024               	movlb	4	; select bank4
  5354     06A2  0612               	xorwf	18,w	;volatile
  5355     06A3  1903               	btfsc	3,2
  5356     06A4  2EE7               	goto	l2521
  5357     06A5  2F16               	goto	l2523
  5358     06A6                     l2503:
  5359                           
  5360                           ;main.c: 147:                 sendTempDataToMaster(memory.TSNS1);
  5361     06A6  0021               	movlb	1	; select bank1
  5362     06A7  0822               	movf	((_memory+1)^(0+128)+1),w
  5363     06A8  00F4               	movwf	sendTempDataToMaster@toSend+1
  5364     06A9  0821               	movf	(_memory^(0+128)+1),w
  5365     06AA  00F3               	movwf	sendTempDataToMaster@toSend
  5366     06AB  318F  270C  3186   	fcall	_sendTempDataToMaster
  5367                           
  5368                           ;main.c: 148:                 goto end_I2C_Handler;
  5369     06AE  2F16               	goto	l2523
  5370     06AF                     l2505:
  5371                           
  5372                           ;main.c: 150:                 sendTempDataToMaster(memory.TSNS2);
  5373     06AF  0021               	movlb	1	; select bank1
  5374     06B0  0824               	movf	((_memory+1)^(0+128)+3),w
  5375     06B1  00F4               	movwf	sendTempDataToMaster@toSend+1
  5376     06B2  0823               	movf	(_memory^(0+128)+3),w
  5377     06B3  00F3               	movwf	sendTempDataToMaster@toSend
  5378     06B4  318F  270C  3186   	fcall	_sendTempDataToMaster
  5379                           
  5380                           ;main.c: 151:                 goto end_I2C_Handler;
  5381     06B7  2F16               	goto	l2523
  5382     06B8                     l2507:
  5383                           
  5384                           ;main.c: 153:                 sendTempDataToMaster(memory.TSNS3);
  5385     06B8  0021               	movlb	1	; select bank1
  5386     06B9  0826               	movf	((_memory+1)^(0+128)+5),w
  5387     06BA  00F4               	movwf	sendTempDataToMaster@toSend+1
  5388     06BB  0825               	movf	(_memory^(0+128)+5),w
  5389     06BC  00F3               	movwf	sendTempDataToMaster@toSend
  5390     06BD  318F  270C  3186   	fcall	_sendTempDataToMaster
  5391                           
  5392                           ;main.c: 154:                 goto end_I2C_Handler;
  5393     06C0  2F16               	goto	l2523
  5394     06C1                     l2509:
  5395                           
  5396                           ;main.c: 156:                 sendTempDataToMaster(memory.TSNS4);
  5397     06C1  0021               	movlb	1	; select bank1
  5398     06C2  0828               	movf	((_memory+1)^(0+128)+7),w
  5399     06C3  00F4               	movwf	sendTempDataToMaster@toSend+1
  5400     06C4  0827               	movf	(_memory^(0+128)+7),w
  5401     06C5  00F3               	movwf	sendTempDataToMaster@toSend
  5402     06C6  318F  270C  3186   	fcall	_sendTempDataToMaster
  5403                           
  5404                           ;main.c: 157:                 goto end_I2C_Handler;
  5405     06C9  2F16               	goto	l2523
  5406     06CA                     l2511:
  5407                           
  5408                           ;main.c: 159:                 sendTempDataToMaster(memory.TSNS5);
  5409     06CA  0021               	movlb	1	; select bank1
  5410     06CB  082A               	movf	((_memory+1)^(0+128)+9),w
  5411     06CC  00F4               	movwf	sendTempDataToMaster@toSend+1
  5412     06CD  0829               	movf	(_memory^(0+128)+9),w
  5413     06CE  00F3               	movwf	sendTempDataToMaster@toSend
  5414     06CF  318F  270C  3186   	fcall	_sendTempDataToMaster
  5415                           
  5416                           ;main.c: 160:                 goto end_I2C_Handler;
  5417     06D2  2F16               	goto	l2523
  5418     06D3                     l2513:
  5419                           
  5420                           ;main.c: 162:                 sendVSNSDataToMaster();
  5421     06D3  318F  2759  3186   	fcall	_sendVSNSDataToMaster
  5422                           
  5423                           ;main.c: 163:                 goto end_I2C_Handler;
  5424     06D6  2F16               	goto	l2523
  5425     06D7                     l2515:
  5426                           
  5427                           ;main.c: 165:                 i2cWrData = memory.status;
  5428     06D7  0021               	movlb	1	; select bank1
  5429     06D8  0820               	movf	_memory^(0+128),w
  5430     06D9  0020               	movlb	0	; select bank0
  5431     06DA  00E1               	movwf	_i2cWrData	;volatile
  5432                           
  5433                           ;main.c: 166:                 goto end_I2C_Handler;
  5434     06DB  2F16               	goto	l2523
  5435     06DC                     l533:	
  5436                           ;main.c: 170:             case 0x09:
  5437                           
  5438                           
  5439                           ;main.c: 171:                 WDTCONbits.SWDTEN = 1;
  5440     06DC  0021               	movlb	1	; select bank1
  5441     06DD  1417               	bsf	23,0	;volatile
  5442                           
  5443                           ;main.c: 172:                 goto end_I2C_Handler;
  5444     06DE  2F16               	goto	l2523
  5445     06DF                     l534:	
  5446                           ;main.c: 173:             case 0x0A:
  5447                           
  5448                           
  5449                           ;main.c: 174:                 WDTCONbits.SWDTEN = 0;
  5450     06DF  0021               	movlb	1	; select bank1
  5451     06E0  1017               	bcf	23,0	;volatile
  5452                           
  5453                           ;main.c: 175:                 goto end_I2C_Handler;
  5454     06E1  2F16               	goto	l2523
  5455     06E2                     l535:	
  5456                           ;main.c: 176:             case 0x0B:
  5457                           
  5458                           
  5459                           ;main.c: 177:                 Cell_Balancing_Enabled = 1;
  5460     06E2  01DD               	clrf	_Cell_Balancing_Enabled
  5461     06E3  0ADD               	incf	_Cell_Balancing_Enabled,f
  5462                           
  5463                           ;main.c: 178:                 goto end_I2C_Handler;
  5464     06E4  2F16               	goto	l2523
  5465     06E5                     l2517:
  5466                           
  5467                           ;main.c: 180:                 Cell_Balancing_Enabled = 0;
  5468     06E5  01DD               	clrf	_Cell_Balancing_Enabled
  5469                           
  5470                           ;main.c: 181:                 goto end_I2C_Handler;
  5471     06E6  2F16               	goto	l2523
  5472     06E7                     l2521:
  5473     06E7  0020               	movlb	0	; select bank0
  5474     06E8  0860               	movf	_i2cRdData,w	;volatile
  5475     06E9  00F5               	movwf	??_I2C_Handler
  5476     06EA  01F6               	clrf	??_I2C_Handler+1
  5477                           
  5478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5479                           ; Switch size 1, requested type "simple"
  5480                           ; Number of cases is 1, Range of values is 0 to 0
  5481                           ; switch strategies available:
  5482                           ; Name         Instructions Cycles
  5483                           ; simple_byte            4     3 (average)
  5484                           ; direct_byte            8     6 (fixed)
  5485                           ; jumptable            260     6 (fixed)
  5486                           ;	Chosen strategy is simple_byte
  5487     06EB  0876               	movf	??_I2C_Handler+1,w
  5488     06EC  3A00               	xorlw	0	; case 0
  5489     06ED  1903               	skipnz
  5490     06EE  2EF0               	goto	l3185
  5491     06EF  2F16               	goto	l2523
  5492     06F0                     l3185:
  5493                           
  5494                           ; Switch size 1, requested type "simple"
  5495                           ; Number of cases is 12, Range of values is 1 to 12
  5496                           ; switch strategies available:
  5497                           ; Name         Instructions Cycles
  5498                           ; direct_byte           33     9 (fixed)
  5499                           ; simple_byte           37    19 (average)
  5500                           ; jumptable            263     9 (fixed)
  5501                           ;	Chosen strategy is simple_byte
  5502     06F0  0875               	movf	??_I2C_Handler,w
  5503     06F1  3A01               	xorlw	1	; case 1
  5504     06F2  1903               	skipnz
  5505     06F3  2EA6               	goto	l2503
  5506     06F4  3A03               	xorlw	3	; case 2
  5507     06F5  1903               	skipnz
  5508     06F6  2EAF               	goto	l2505
  5509     06F7  3A01               	xorlw	1	; case 3
  5510     06F8  1903               	skipnz
  5511     06F9  2EB8               	goto	l2507
  5512     06FA  3A07               	xorlw	7	; case 4
  5513     06FB  1903               	skipnz
  5514     06FC  2EC1               	goto	l2509
  5515     06FD  3A01               	xorlw	1	; case 5
  5516     06FE  1903               	skipnz
  5517     06FF  2ECA               	goto	l2511
  5518     0700  3A03               	xorlw	3	; case 6
  5519     0701  1903               	skipnz
  5520     0702  2ED3               	goto	l2513
  5521     0703  3A01               	xorlw	1	; case 7
  5522     0704  1903               	skipnz
  5523     0705  2ED7               	goto	l2515
  5524     0706  3A0F               	xorlw	15	; case 8
  5525     0707  1903               	skipnz
  5526     0708  2F16               	goto	l2523
  5527     0709  3A01               	xorlw	1	; case 9
  5528     070A  1903               	skipnz
  5529     070B  2EDC               	goto	l533
  5530     070C  3A03               	xorlw	3	; case 10
  5531     070D  1903               	skipnz
  5532     070E  2EDF               	goto	l534
  5533     070F  3A01               	xorlw	1	; case 11
  5534     0710  1903               	skipnz
  5535     0711  2EE2               	goto	l535
  5536     0712  3A07               	xorlw	7	; case 12
  5537     0713  1903               	skipnz
  5538     0714  2EE5               	goto	l2517
  5539     0715  2F16               	goto	l2523
  5540     0716                     l2523:
  5541                           
  5542                           ;main.c: 185:     i2cRdData = 0x00;
  5543     0716  0020               	movlb	0	; select bank0
  5544     0717  01E0               	clrf	_i2cRdData	;volatile
  5545     0718  0008               	return
  5546     0719                     __end_of_I2C_Handler:
  5547                           
  5548                           	psect	text27
  5549     0F59                     __ptext27:	
  5550 ;; *************** function _sendVSNSDataToMaster *****************
  5551 ;; Defined at:
  5552 ;;		line 195 in file "main.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5566 ;;      Params:         0       0       0       0
  5567 ;;      Locals:         0       0       0       0
  5568 ;;      Temps:          0       0       0       0
  5569 ;;      Totals:         0       0       0       0
  5570 ;;Total ram usage:        0 bytes
  5571 ;; Hardware stack levels used: 1
  5572 ;; Hardware stack levels required when called: 5
  5573 ;; This function calls:
  5574 ;;		Nothing
  5575 ;; This function is called by:
  5576 ;;		_I2C_Handler
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580     0F59                     _sendVSNSDataToMaster:	
  5581                           ;psect for function _sendVSNSDataToMaster
  5582                           
  5583                           
  5584                           ;main.c: 196:     i2cWrData = converter.buffer[3];
  5585                           
  5586                           ;incstack = 0
  5587                           ; Regs used in _sendVSNSDataToMaster: [wreg]
  5588     0F59  0020               	movlb	0	; select bank0
  5589     0F5A  084D               	movf	_converter+3,w
  5590     0F5B  00E1               	movwf	_i2cWrData	;volatile
  5591                           
  5592                           ;main.c: 197:     i2cWrData_Secondary = converter.buffer[2];
  5593     0F5C  084C               	movf	_converter+2,w
  5594     0F5D  00E2               	movwf	_i2cWrData_Secondary	;volatile
  5595                           
  5596                           ;main.c: 198:     i2cWrData_Tertiary = converter.buffer[1];
  5597     0F5E  084B               	movf	_converter+1,w
  5598     0F5F  00E3               	movwf	_i2cWrData_Tertiary	;volatile
  5599                           
  5600                           ;main.c: 199:     i2cWrData_Quaternary = converter.buffer[0];
  5601     0F60  084A               	movf	_converter,w
  5602     0F61  00E4               	movwf	_i2cWrData_Quaternary	;volatile
  5603     0F62  0008               	return
  5604     0F63                     __end_of_sendVSNSDataToMaster:
  5605                           
  5606                           	psect	text28
  5607     0F0C                     __ptext28:	
  5608 ;; *************** function _sendTempDataToMaster *****************
  5609 ;; Defined at:
  5610 ;;		line 189 in file "main.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  toSend          2    3[COMMON] unsigned short 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5624 ;;      Params:         2       0       0       0
  5625 ;;      Locals:         0       0       0       0
  5626 ;;      Temps:          0       0       0       0
  5627 ;;      Totals:         2       0       0       0
  5628 ;;Total ram usage:        2 bytes
  5629 ;; Hardware stack levels used: 1
  5630 ;; Hardware stack levels required when called: 5
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_I2C_Handler
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638     0F0C                     _sendTempDataToMaster:	
  5639                           ;psect for function _sendTempDataToMaster
  5640                           
  5641                           
  5642                           ;main.c: 190:     i2cWrData = (uint8_t) (toSend >> 8) & 0x00FF;
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in _sendTempDataToMaster: [wreg+status,2]
  5646     0F0C  0874               	movf	sendTempDataToMaster@toSend+1,w
  5647     0F0D  0020               	movlb	0	; select bank0
  5648     0F0E  00E1               	movwf	_i2cWrData	;volatile
  5649                           
  5650                           ;main.c: 191:     i2cWrData_Secondary = (uint8_t) (toSend >> 0) & 0x00FF;
  5651     0F0F  0873               	movf	sendTempDataToMaster@toSend,w
  5652     0F10  00E2               	movwf	_i2cWrData_Secondary	;volatile
  5653     0F11  0008               	return
  5654     0F12                     __end_of_sendTempDataToMaster:
  5655                           
  5656                           	psect	intentry
  5657     0004                     __pintentry:	
  5658 ;; *************** function _INTERRUPT_InterruptManager *****************
  5659 ;; Defined at:
  5660 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;		None
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;		None
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      void 
  5667 ;; Registers used:
  5668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5674 ;;      Params:         0       0       0       0
  5675 ;;      Locals:         0       0       0       0
  5676 ;;      Temps:          0       0       0       0
  5677 ;;      Totals:         0       0       0       0
  5678 ;;Total ram usage:        0 bytes
  5679 ;; Hardware stack levels used: 1
  5680 ;; Hardware stack levels required when called: 4
  5681 ;; This function calls:
  5682 ;;		Absolute function
  5683 ;;		_I2C_Isr
  5684 ;;		_PIN_MANAGER_IOC
  5685 ;; This function is called by:
  5686 ;;		Interrupt level 1
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690     0004                     _INTERRUPT_InterruptManager:
  5691                           
  5692                           ;incstack = 0
  5693     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5694                           
  5695                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5696     0005  3180               	pagesel	$
  5697                           
  5698                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  5699     0006  198B               	btfsc	11,3	;volatile
  5700     0007  1C0B               	btfss	11,0	;volatile
  5701     0008  280D               	goto	i1l63
  5702                           
  5703                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  5704     0009  3180  2003  3180   	fcall	_PIN_MANAGER_IOC
  5705                           
  5706                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5707     000C  281F               	goto	i1l71
  5708     000D                     i1l63:	
  5709                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  5710                           
  5711     000D  1F0B               	btfss	11,6	;volatile
  5712     000E  281F               	goto	i1l71
  5713                           
  5714                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  5715     000F  0021               	movlb	1	; select bank1
  5716     0010  1992               	btfsc	18,3	;volatile
  5717     0011  0020               	movlb	0	; select bank0
  5718     0012  1992               	btfsc	18,3	;volatile
  5719     0013  281A               	goto	i1l2607
  5720                           
  5721                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  5722                           
  5723                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5724     0014  0021               	movlb	1	; select bank1
  5725     0015  1D91               	btfss	17,3	;volatile
  5726     0016  281F               	goto	i1l71
  5727     0017  0020               	movlb	0	; select bank0
  5728     0018  1D91               	btfss	17,3	;volatile
  5729     0019  281F               	goto	i1l71
  5730     001A                     i1l2607:
  5731                           
  5732                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             MSSP_InterruptHandler();
  5733     001A  085B               	movf	_MSSP_InterruptHandler+1,w
  5734     001B  008A               	movwf	10
  5735     001C  085A               	movf	_MSSP_InterruptHandler,w
  5736     001D  000A               	callw
  5737     001E  3180               	pagesel	$
  5738     001F                     i1l71:	
  5739                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  5740                           
  5741     001F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5742     0020  0009               	retfie
  5743     0021                     __end_of_INTERRUPT_InterruptManager:
  5744                           
  5745                           	psect	text30
  5746     0003                     __ptext30:	
  5747 ;; *************** function _PIN_MANAGER_IOC *****************
  5748 ;; Defined at:
  5749 ;;		line 100 in file "mcc_generated_files/pin_manager.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;		None
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;		None
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		None
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5763 ;;      Params:         0       0       0       0
  5764 ;;      Locals:         0       0       0       0
  5765 ;;      Temps:          0       0       0       0
  5766 ;;      Totals:         0       0       0       0
  5767 ;;Total ram usage:        0 bytes
  5768 ;; Hardware stack levels used: 1
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_INTERRUPT_InterruptManager
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776     0003                     _PIN_MANAGER_IOC:	
  5777                           ;psect for function _PIN_MANAGER_IOC
  5778                           
  5779                           
  5780                           ;incstack = 0
  5781                           ; Regs used in _PIN_MANAGER_IOC: []
  5782     0003  0008               	return
  5783     0004                     __end_of_PIN_MANAGER_IOC:
  5784                           
  5785                           	psect	text31
  5786     0719                     __ptext31:	
  5787 ;; *************** function _I2C_Isr *****************
  5788 ;; Defined at:
  5789 ;;		line 179 in file "mcc_generated_files/i2c_slave.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5803 ;;      Params:         0       0       0       0
  5804 ;;      Locals:         0       0       0       0
  5805 ;;      Temps:          2       0       0       0
  5806 ;;      Totals:         2       0       0       0
  5807 ;;Total ram usage:        2 bytes
  5808 ;; Hardware stack levels used: 1
  5809 ;; Hardware stack levels required when called: 3
  5810 ;; This function calls:
  5811 ;;		_I2C_SlaveAddrCallBack
  5812 ;;		_I2C_SlaveClearIrq
  5813 ;;		_I2C_SlaveIsAddr
  5814 ;;		_I2C_SlaveIsRead
  5815 ;;		_I2C_SlaveIsRxBufFull
  5816 ;;		_I2C_SlaveIsTxBufEmpty
  5817 ;;		_I2C_SlaveRdCallBack
  5818 ;;		_I2C_SlaveReleaseClock
  5819 ;;		_I2C_SlaveWrCallBack
  5820 ;; This function is called by:
  5821 ;;		_I2C_Open
  5822 ;;		_INTERRUPT_InterruptManager
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826     0719                     _I2C_Isr:	
  5827                           ;psect for function _I2C_Isr
  5828                           
  5829                           
  5830                           ;mcc_generated_files/i2c_slave.c: 181:     I2C_SlaveClearIrq();
  5831                           
  5832                           ;incstack = 0
  5833                           ; Regs used in _I2C_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5834     0719  318E  26D9  3187   	fcall	_I2C_SlaveClearIrq
  5835                           
  5836                           ;mcc_generated_files/i2c_slave.c: 183:     if(I2C_SlaveIsAddr())
  5837     071C  318F  2742  3187   	fcall	_I2C_SlaveIsAddr
  5838     071F  3A00               	xorlw	0
  5839     0720  1903               	skipnz
  5840     0721  2F2C               	goto	i1l2465
  5841                           
  5842                           ;mcc_generated_files/i2c_slave.c: 184:     {;mcc_generated_files/i2c_slave.c: 185:      
      +                             if(I2C_SlaveIsRead())
  5843     0722  318E  26F3  3187   	fcall	_I2C_SlaveIsRead
  5844     0725  3A00               	xorlw	0
  5845     0726  1903               	skipnz
  5846     0727  2F2A               	goto	i1l2463
  5847                           
  5848                           ;mcc_generated_files/i2c_slave.c: 186:         {;mcc_generated_files/i2c_slave.c: 187:  
      +                                     i2cSlaveState = I2C_ADDR_TX;
  5849     0728  3001               	movlw	1
  5850     0729  2F35               	goto	L6
  5851     072A                     i1l2463:	
  5852                           ;mcc_generated_files/i2c_slave.c: 188:         }
  5853                           
  5854                           
  5855                           ;mcc_generated_files/i2c_slave.c: 190:         {;mcc_generated_files/i2c_slave.c: 191:  
      +                                     i2cSlaveState = I2C_ADDR_RX;
  5856     072A  3002               	movlw	2
  5857     072B  2F35               	goto	L6
  5858     072C                     i1l2465:
  5859                           
  5860                           ;mcc_generated_files/i2c_slave.c: 195:     {;mcc_generated_files/i2c_slave.c: 196:      
      +                             if(I2C_SlaveIsRead())
  5861     072C  318E  26F3  3187   	fcall	_I2C_SlaveIsRead
  5862     072F  3A00               	xorlw	0
  5863     0730  1903               	skipnz
  5864     0731  2F34               	goto	i1l2469
  5865                           
  5866                           ;mcc_generated_files/i2c_slave.c: 197:         {;mcc_generated_files/i2c_slave.c: 198:  
      +                                     i2cSlaveState = I2C_DATA_TX;
  5867     0732  3003               	movlw	3
  5868     0733  2F35               	goto	L6
  5869     0734                     i1l2469:	
  5870                           ;mcc_generated_files/i2c_slave.c: 199:         }
  5871                           
  5872                           
  5873                           ;mcc_generated_files/i2c_slave.c: 201:         {;mcc_generated_files/i2c_slave.c: 202:  
      +                                     i2cSlaveState = I2C_DATA_RX;
  5874     0734  3004               	movlw	4
  5875     0735                     L6:
  5876     0735  0020               	movlb	0	; select bank0
  5877     0736  00DE               	movwf	_i2cSlaveState	;volatile
  5878     0737  2F54               	goto	i1l2489
  5879     0738                     i1l2471:
  5880                           
  5881                           ;mcc_generated_files/i2c_slave.c: 209:             I2C_SlaveAddrCallBack();
  5882     0738  318F  276D  3187   	fcall	_I2C_SlaveAddrCallBack
  5883     073B                     L7:
  5884                           
  5885                           ;mcc_generated_files/i2c_slave.c: 210:             if(I2C_SlaveIsTxBufEmpty())
  5886     073B  318F  2749  3187   	fcall	_I2C_SlaveIsTxBufEmpty
  5887     073E  3A00               	xorlw	0
  5888     073F  1903               	skipnz
  5889     0740  2F6A               	goto	i1l2491
  5890                           
  5891                           ;mcc_generated_files/i2c_slave.c: 211:             {;mcc_generated_files/i2c_slave.c: 21
      +                          2:                 I2C_SlaveWrCallBack();
  5892     0741  318F  2783  3187   	fcall	_I2C_SlaveWrCallBack
  5893     0744  2F6A               	goto	i1l2491
  5894     0745                     i1l2477:
  5895                           
  5896                           ;mcc_generated_files/i2c_slave.c: 216:             I2C_SlaveAddrCallBack();
  5897     0745  318F  276D  3187   	fcall	_I2C_SlaveAddrCallBack
  5898                           
  5899                           ;mcc_generated_files/i2c_slave.c: 217:             break;
  5900     0748  2F6A               	goto	i1l2491
  5901     0749                     i1l2479:
  5902     0749  2F3B               	goto	L7
  5903     074A                     i1l2483:	
  5904                           ;mcc_generated_files/i2c_slave.c: 219:             if(I2C_SlaveIsTxBufEmpty())
  5905                           
  5906                           
  5907                           ;mcc_generated_files/i2c_slave.c: 225:             if(I2C_SlaveIsRxBufFull())
  5908     074A  318E  26E2  3187   	fcall	_I2C_SlaveIsRxBufFull
  5909     074D  3A00               	xorlw	0
  5910     074E  1903               	skipnz
  5911     074F  2F6A               	goto	i1l2491
  5912                           
  5913                           ;mcc_generated_files/i2c_slave.c: 226:             {;mcc_generated_files/i2c_slave.c: 22
      +                          7:                 I2C_SlaveRdCallBack();
  5914     0750  318F  2778  3187   	fcall	_I2C_SlaveRdCallBack
  5915     0753  2F6A               	goto	i1l2491
  5916     0754                     i1l2489:
  5917     0754  085E               	movf	_i2cSlaveState,w	;volatile
  5918     0755  00F1               	movwf	??_I2C_Isr
  5919     0756  01F2               	clrf	??_I2C_Isr+1
  5920                           
  5921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5922                           ; Switch size 1, requested type "simple"
  5923                           ; Number of cases is 1, Range of values is 0 to 0
  5924                           ; switch strategies available:
  5925                           ; Name         Instructions Cycles
  5926                           ; simple_byte            4     3 (average)
  5927                           ; direct_byte            8     6 (fixed)
  5928                           ; jumptable            260     6 (fixed)
  5929                           ;	Chosen strategy is simple_byte
  5930     0757  0872               	movf	??_I2C_Isr+1,w
  5931     0758  3A00               	xorlw	0	; case 0
  5932     0759  1903               	skipnz
  5933     075A  2F5C               	goto	i1l3187
  5934     075B  2F6A               	goto	i1l2491
  5935     075C                     i1l3187:
  5936                           
  5937                           ; Switch size 1, requested type "simple"
  5938                           ; Number of cases is 4, Range of values is 1 to 4
  5939                           ; switch strategies available:
  5940                           ; Name         Instructions Cycles
  5941                           ; simple_byte           13     7 (average)
  5942                           ; direct_byte           17     9 (fixed)
  5943                           ; jumptable            263     9 (fixed)
  5944                           ;	Chosen strategy is simple_byte
  5945     075C  0871               	movf	??_I2C_Isr,w
  5946     075D  3A01               	xorlw	1	; case 1
  5947     075E  1903               	skipnz
  5948     075F  2F38               	goto	i1l2471
  5949     0760  3A03               	xorlw	3	; case 2
  5950     0761  1903               	skipnz
  5951     0762  2F45               	goto	i1l2477
  5952     0763  3A01               	xorlw	1	; case 3
  5953     0764  1903               	skipnz
  5954     0765  2F49               	goto	i1l2479
  5955     0766  3A07               	xorlw	7	; case 4
  5956     0767  1903               	skipnz
  5957     0768  2F4A               	goto	i1l2483
  5958     0769  2F6A               	goto	i1l2491
  5959     076A                     i1l2491:
  5960                           
  5961                           ;mcc_generated_files/i2c_slave.c: 233:     I2C_SlaveReleaseClock();
  5962     076A  318E  26DC         	fcall	_I2C_SlaveReleaseClock
  5963     076C  0008               	return
  5964     076D                     __end_of_I2C_Isr:
  5965                           
  5966                           	psect	text32
  5967     0F83                     __ptext32:	
  5968 ;; *************** function _I2C_SlaveWrCallBack *****************
  5969 ;; Defined at:
  5970 ;;		line 264 in file "mcc_generated_files/i2c_slave.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0, pclath, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5984 ;;      Params:         0       0       0       0
  5985 ;;      Locals:         0       0       0       0
  5986 ;;      Temps:          0       0       0       0
  5987 ;;      Totals:         0       0       0       0
  5988 ;;Total ram usage:        0 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; Hardware stack levels required when called: 2
  5991 ;; This function calls:
  5992 ;;		Absolute function
  5993 ;;		_I2C_SlaveDefWrInterruptHandler
  5994 ;; This function is called by:
  5995 ;;		_I2C_Isr
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999     0F83                     _I2C_SlaveWrCallBack:	
  6000                           ;psect for function _I2C_SlaveWrCallBack
  6001                           
  6002                           
  6003                           ;mcc_generated_files/i2c_slave.c: 266:     if (I2C_SlaveWrInterruptHandler)
  6004                           
  6005                           ;incstack = 0
  6006                           ; Regs used in _I2C_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  6007     0F83  0020               	movlb	0	; select bank0
  6008     0F84  0856               	movf	_I2C_SlaveWrInterruptHandler,w
  6009     0F85  0457               	iorwf	_I2C_SlaveWrInterruptHandler+1,w
  6010     0F86  1903               	btfsc	3,2
  6011     0F87  0008               	return
  6012                           
  6013                           ;mcc_generated_files/i2c_slave.c: 267:     {;mcc_generated_files/i2c_slave.c: 268:      
      +                             I2C_SlaveWrInterruptHandler();
  6014     0F88  0857               	movf	_I2C_SlaveWrInterruptHandler+1,w
  6015     0F89  008A               	movwf	10
  6016     0F8A  0856               	movf	_I2C_SlaveWrInterruptHandler,w
  6017     0F8B  000A               	callw
  6018     0F8C  318F               	pagesel	$
  6019     0F8D  0008               	return
  6020     0F8E                     __end_of_I2C_SlaveWrCallBack:
  6021                           
  6022                           	psect	text33
  6023     07D5                     __ptext33:	
  6024 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  6025 ;; Defined at:
  6026 ;;		line 272 in file "mcc_generated_files/i2c_slave.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;		None
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;		None
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  1    wreg      void 
  6033 ;; Registers used:
  6034 ;;		wreg, status,2, status,0, pclath, cstack
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6040 ;;      Params:         0       0       0       0
  6041 ;;      Locals:         0       0       0       0
  6042 ;;      Temps:          0       0       0       0
  6043 ;;      Totals:         0       0       0       0
  6044 ;;Total ram usage:        0 bytes
  6045 ;; Hardware stack levels used: 1
  6046 ;; Hardware stack levels required when called: 1
  6047 ;; This function calls:
  6048 ;;		_I2C_SlaveSendTxData
  6049 ;; This function is called by:
  6050 ;;		_I2C_Open
  6051 ;;		_I2C_SlaveWrCallBack
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055     07D5                     _I2C_SlaveDefWrInterruptHandler:	
  6056                           ;psect for function _I2C_SlaveDefWrInterruptHandler
  6057                           
  6058                           
  6059                           ;mcc_generated_files/i2c_slave.c: 273:     I2C_SlaveSendTxData(i2cWrData);
  6060                           
  6061                           ;incstack = 0
  6062                           ; Regs used in _I2C_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  6063     07D5  0020               	movlb	0	; select bank0
  6064     07D6  0861               	movf	_i2cWrData,w	;volatile
  6065     07D7  318E  26FD         	fcall	_I2C_SlaveSendTxData
  6066                           
  6067                           ;mcc_generated_files/i2c_slave.c: 274:     i2cWrData = i2cWrData_Secondary;
  6068     07D9  0020               	movlb	0	; select bank0
  6069     07DA  0862               	movf	_i2cWrData_Secondary,w	;volatile
  6070     07DB  00E1               	movwf	_i2cWrData	;volatile
  6071                           
  6072                           ;mcc_generated_files/i2c_slave.c: 275:     i2cWrData_Secondary = i2cWrData_Tertiary;
  6073     07DC  0863               	movf	_i2cWrData_Tertiary,w	;volatile
  6074     07DD  00E2               	movwf	_i2cWrData_Secondary	;volatile
  6075                           
  6076                           ;mcc_generated_files/i2c_slave.c: 276:     i2cWrData_Tertiary = i2cWrData_Quaternary;
  6077     07DE  0864               	movf	_i2cWrData_Quaternary,w	;volatile
  6078     07DF  00E3               	movwf	_i2cWrData_Tertiary	;volatile
  6079                           
  6080                           ;mcc_generated_files/i2c_slave.c: 277:     i2cWrData_Quaternary = i2cWrData_5;
  6081     07E0  0865               	movf	_i2cWrData_5,w	;volatile
  6082     07E1  00E4               	movwf	_i2cWrData_Quaternary	;volatile
  6083                           
  6084                           ;mcc_generated_files/i2c_slave.c: 278:     i2cWrData_5 = i2cWrData_6;
  6085     07E2  0866               	movf	_i2cWrData_6,w	;volatile
  6086     07E3  00E5               	movwf	_i2cWrData_5	;volatile
  6087                           
  6088                           ;mcc_generated_files/i2c_slave.c: 279:     i2cWrData_6 = i2cWrData_7;
  6089     07E4  0867               	movf	_i2cWrData_7,w	;volatile
  6090     07E5  00E6               	movwf	_i2cWrData_6	;volatile
  6091                           
  6092                           ;mcc_generated_files/i2c_slave.c: 280:     i2cWrData_7 = i2cWrData_8;
  6093     07E6  0868               	movf	_i2cWrData_8,w	;volatile
  6094     07E7  00E7               	movwf	_i2cWrData_7	;volatile
  6095                           
  6096                           ;mcc_generated_files/i2c_slave.c: 281:     i2cWrData_8 = i2cWrData_9;
  6097     07E8  0869               	movf	_i2cWrData_9,w	;volatile
  6098     07E9  00E8               	movwf	_i2cWrData_8	;volatile
  6099                           
  6100                           ;mcc_generated_files/i2c_slave.c: 282:     i2cWrData_9 = i2cWrData_10;
  6101     07EA  086A               	movf	_i2cWrData_10,w	;volatile
  6102     07EB  00E9               	movwf	_i2cWrData_9	;volatile
  6103                           
  6104                           ;mcc_generated_files/i2c_slave.c: 283:     i2cWrData_10 = i2cWrData_11;
  6105     07EC  086B               	movf	_i2cWrData_11,w	;volatile
  6106     07ED  00EA               	movwf	_i2cWrData_10	;volatile
  6107                           
  6108                           ;mcc_generated_files/i2c_slave.c: 284:     i2cWrData_11 = i2cWrData_12;
  6109     07EE  086C               	movf	_i2cWrData_12,w	;volatile
  6110     07EF  00EB               	movwf	_i2cWrData_11	;volatile
  6111                           
  6112                           ;mcc_generated_files/i2c_slave.c: 285:     i2cWrData_12 = i2cWrData_13;
  6113     07F0  0877               	movf	_i2cWrData_13,w	;volatile
  6114     07F1  00EC               	movwf	_i2cWrData_12	;volatile
  6115                           
  6116                           ;mcc_generated_files/i2c_slave.c: 286:     i2cWrData_13 = i2cWrData_14;
  6117     07F2  0878               	movf	_i2cWrData_14,w	;volatile
  6118     07F3  00F7               	movwf	_i2cWrData_13	;volatile
  6119                           
  6120                           ;mcc_generated_files/i2c_slave.c: 287:     i2cWrData_14 = i2cWrData_15;
  6121     07F4  0879               	movf	_i2cWrData_15,w	;volatile
  6122     07F5  00F8               	movwf	_i2cWrData_14	;volatile
  6123     07F6  0008               	return
  6124     07F7                     __end_of_I2C_SlaveDefWrInterruptHandler:
  6125                           
  6126                           	psect	text34
  6127     0EFD                     __ptext34:	
  6128 ;; *************** function _I2C_SlaveSendTxData *****************
  6129 ;; Defined at:
  6130 ;;		line 419 in file "mcc_generated_files/i2c_slave.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  data            1    wreg     unsigned char 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  data            1    0[COMMON] unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      void 
  6137 ;; Registers used:
  6138 ;;		wreg
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6144 ;;      Params:         0       0       0       0
  6145 ;;      Locals:         1       0       0       0
  6146 ;;      Temps:          0       0       0       0
  6147 ;;      Totals:         1       0       0       0
  6148 ;;Total ram usage:        1 bytes
  6149 ;; Hardware stack levels used: 1
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_I2C_SlaveDefWrInterruptHandler
  6154 ;;		_I2C_Write
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158     0EFD                     _I2C_SlaveSendTxData:	
  6159                           ;psect for function _I2C_SlaveSendTxData
  6160                           
  6161                           
  6162                           ;incstack = 0
  6163                           ; Regs used in _I2C_SlaveSendTxData: [wreg]
  6164                           ;I2C_SlaveSendTxData@data stored from wreg
  6165     0EFD  00F0               	movwf	I2C_SlaveSendTxData@data
  6166                           
  6167                           ;mcc_generated_files/i2c_slave.c: 419: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 420: {;mcc_generated_files/i2c_sla
      +                          ve.c: 421:     SSP1BUF = data;
  6168     0EFE  0870               	movf	I2C_SlaveSendTxData@data,w
  6169     0EFF  0024               	movlb	4	; select bank4
  6170     0F00  0091               	movwf	17	;volatile
  6171     0F01  0008               	return
  6172     0F02                     __end_of_I2C_SlaveSendTxData:
  6173                           
  6174                           	psect	text35
  6175     0EDC                     __ptext35:	
  6176 ;; *************** function _I2C_SlaveReleaseClock *****************
  6177 ;; Defined at:
  6178 ;;		line 389 in file "mcc_generated_files/i2c_slave.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      void 
  6185 ;; Registers used:
  6186 ;;		None
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6192 ;;      Params:         0       0       0       0
  6193 ;;      Locals:         0       0       0       0
  6194 ;;      Temps:          0       0       0       0
  6195 ;;      Totals:         0       0       0       0
  6196 ;;Total ram usage:        0 bytes
  6197 ;; Hardware stack levels used: 1
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_I2C_Isr
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205     0EDC                     _I2C_SlaveReleaseClock:	
  6206                           ;psect for function _I2C_SlaveReleaseClock
  6207                           
  6208                           
  6209                           ;mcc_generated_files/i2c_slave.c: 391:     SSP1CON1bits.CKP = 1;
  6210                           
  6211                           ;incstack = 0
  6212                           ; Regs used in _I2C_SlaveReleaseClock: []
  6213     0EDC  0024               	movlb	4	; select bank4
  6214     0EDD  1615               	bsf	21,4	;volatile
  6215     0EDE  0008               	return
  6216     0EDF                     __end_of_I2C_SlaveReleaseClock:
  6217                           
  6218                           	psect	text36
  6219     0F78                     __ptext36:	
  6220 ;; *************** function _I2C_SlaveRdCallBack *****************
  6221 ;; Defined at:
  6222 ;;		line 247 in file "mcc_generated_files/i2c_slave.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;		None
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      void 
  6229 ;; Registers used:
  6230 ;;		wreg, status,2, status,0, pclath, cstack
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6236 ;;      Params:         0       0       0       0
  6237 ;;      Locals:         0       0       0       0
  6238 ;;      Temps:          0       0       0       0
  6239 ;;      Totals:         0       0       0       0
  6240 ;;Total ram usage:        0 bytes
  6241 ;; Hardware stack levels used: 1
  6242 ;; Hardware stack levels required when called: 2
  6243 ;; This function calls:
  6244 ;;		Absolute function
  6245 ;;		_I2C_SlaveDefRdInterruptHandler
  6246 ;; This function is called by:
  6247 ;;		_I2C_Isr
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251     0F78                     _I2C_SlaveRdCallBack:	
  6252                           ;psect for function _I2C_SlaveRdCallBack
  6253                           
  6254                           
  6255                           ;mcc_generated_files/i2c_slave.c: 249:     if (I2C_SlaveRdInterruptHandler)
  6256                           
  6257                           ;incstack = 0
  6258                           ; Regs used in _I2C_SlaveRdCallBack: [wreg+status,2+status,0+pclath+cstack]
  6259     0F78  0020               	movlb	0	; select bank0
  6260     0F79  0858               	movf	_I2C_SlaveRdInterruptHandler,w
  6261     0F7A  0459               	iorwf	_I2C_SlaveRdInterruptHandler+1,w
  6262     0F7B  1903               	btfsc	3,2
  6263     0F7C  0008               	return
  6264                           
  6265                           ;mcc_generated_files/i2c_slave.c: 250:     {;mcc_generated_files/i2c_slave.c: 251:      
      +                             I2C_SlaveRdInterruptHandler();
  6266     0F7D  0859               	movf	_I2C_SlaveRdInterruptHandler+1,w
  6267     0F7E  008A               	movwf	10
  6268     0F7F  0858               	movf	_I2C_SlaveRdInterruptHandler,w
  6269     0F80  000A               	callw
  6270     0F81  318F               	pagesel	$
  6271     0F82  0008               	return
  6272     0F83                     __end_of_I2C_SlaveRdCallBack:
  6273                           
  6274                           	psect	text37
  6275     0EF8                     __ptext37:	
  6276 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
  6277 ;; Defined at:
  6278 ;;		line 255 in file "mcc_generated_files/i2c_slave.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;		None
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1    wreg      void 
  6285 ;; Registers used:
  6286 ;;		wreg, pclath, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6292 ;;      Params:         0       0       0       0
  6293 ;;      Locals:         0       0       0       0
  6294 ;;      Temps:          0       0       0       0
  6295 ;;      Totals:         0       0       0       0
  6296 ;;Total ram usage:        0 bytes
  6297 ;; Hardware stack levels used: 1
  6298 ;; Hardware stack levels required when called: 1
  6299 ;; This function calls:
  6300 ;;		_I2C_SlaveGetRxData
  6301 ;; This function is called by:
  6302 ;;		_I2C_Open
  6303 ;;		_I2C_SlaveRdCallBack
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307     0EF8                     _I2C_SlaveDefRdInterruptHandler:	
  6308                           ;psect for function _I2C_SlaveDefRdInterruptHandler
  6309                           
  6310                           
  6311                           ;mcc_generated_files/i2c_slave.c: 256:     i2cRdData = I2C_SlaveGetRxData();
  6312                           
  6313                           ;incstack = 0
  6314                           ; Regs used in _I2C_SlaveDefRdInterruptHandler: [wreg+pclath+cstack]
  6315     0EF8  318E  26D6         	fcall	_I2C_SlaveGetRxData
  6316     0EFA  0020               	movlb	0	; select bank0
  6317     0EFB  00E0               	movwf	_i2cRdData	;volatile
  6318     0EFC  0008               	return
  6319     0EFD                     __end_of_I2C_SlaveDefRdInterruptHandler:
  6320                           
  6321                           	psect	text38
  6322     0F49                     __ptext38:	
  6323 ;; *************** function _I2C_SlaveIsTxBufEmpty *****************
  6324 ;; Defined at:
  6325 ;;		line 409 in file "mcc_generated_files/i2c_slave.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;		None
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      _Bool 
  6332 ;; Registers used:
  6333 ;;		wreg, status,0
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6339 ;;      Params:         0       0       0       0
  6340 ;;      Locals:         0       0       0       0
  6341 ;;      Temps:          0       0       0       0
  6342 ;;      Totals:         0       0       0       0
  6343 ;;Total ram usage:        0 bytes
  6344 ;; Hardware stack levels used: 1
  6345 ;; This function calls:
  6346 ;;		Nothing
  6347 ;; This function is called by:
  6348 ;;		_I2C_Isr
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352     0F49                     _I2C_SlaveIsTxBufEmpty:	
  6353                           ;psect for function _I2C_SlaveIsTxBufEmpty
  6354                           
  6355                           
  6356                           ;mcc_generated_files/i2c_slave.c: 411:     return !SSP1STATbits.BF;
  6357                           
  6358                           ;incstack = 0
  6359                           ; Regs used in _I2C_SlaveIsTxBufEmpty: [wreg+status,0]
  6360     0F49  1003               	clrc
  6361     0F4A  0024               	movlb	4	; select bank4
  6362     0F4B  1C14               	btfss	20,0	;volatile
  6363     0F4C  1403               	setc
  6364     0F4D  3000               	movlw	0
  6365     0F4E  3D09               	addwfc	9,w
  6366     0F4F  0008               	return
  6367     0F50                     __end_of_I2C_SlaveIsTxBufEmpty:
  6368                           
  6369                           	psect	text39
  6370     0EE2                     __ptext39:	
  6371 ;; *************** function _I2C_SlaveIsRxBufFull *****************
  6372 ;; Defined at:
  6373 ;;		line 414 in file "mcc_generated_files/i2c_slave.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;		None
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;		None
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  1    wreg      _Bool 
  6380 ;; Registers used:
  6381 ;;		wreg, status,2, status,0
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6387 ;;      Params:         0       0       0       0
  6388 ;;      Locals:         0       0       0       0
  6389 ;;      Temps:          0       0       0       0
  6390 ;;      Totals:         0       0       0       0
  6391 ;;Total ram usage:        0 bytes
  6392 ;; Hardware stack levels used: 1
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_I2C_Isr
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400     0EE2                     _I2C_SlaveIsRxBufFull:	
  6401                           ;psect for function _I2C_SlaveIsRxBufFull
  6402                           
  6403                           
  6404                           ;mcc_generated_files/i2c_slave.c: 416:     return SSP1STATbits.BF;
  6405                           
  6406                           ;incstack = 0
  6407                           ; Regs used in _I2C_SlaveIsRxBufFull: [wreg+status,2+status,0]
  6408     0EE2  0024               	movlb	4	; select bank4
  6409     0EE3  0814               	movf	20,w	;volatile
  6410     0EE4  3901               	andlw	1
  6411     0EE5  0008               	return
  6412     0EE6                     __end_of_I2C_SlaveIsRxBufFull:
  6413                           
  6414                           	psect	text40
  6415     0EF3                     __ptext40:	
  6416 ;; *************** function _I2C_SlaveIsRead *****************
  6417 ;; Defined at:
  6418 ;;		line 379 in file "mcc_generated_files/i2c_slave.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;		None
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      _Bool 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2, status,0
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6432 ;;      Params:         0       0       0       0
  6433 ;;      Locals:         0       0       0       0
  6434 ;;      Temps:          0       0       0       0
  6435 ;;      Totals:         0       0       0       0
  6436 ;;Total ram usage:        0 bytes
  6437 ;; Hardware stack levels used: 1
  6438 ;; This function calls:
  6439 ;;		Nothing
  6440 ;; This function is called by:
  6441 ;;		_I2C_Isr
  6442 ;;		_I2C_IsRead
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446     0EF3                     _I2C_SlaveIsRead:	
  6447                           ;psect for function _I2C_SlaveIsRead
  6448                           
  6449                           
  6450                           ;mcc_generated_files/i2c_slave.c: 381:     return (SSP1STATbits.R_nW);
  6451                           
  6452                           ;incstack = 0
  6453                           ; Regs used in _I2C_SlaveIsRead: [wreg+status,2+status,0]
  6454     0EF3  0024               	movlb	4	; select bank4
  6455     0EF4  0C14               	rrf	20,w	;volatile
  6456     0EF5  0C89               	rrf	9,f
  6457     0EF6  3901               	andlw	1
  6458     0EF7  0008               	return
  6459     0EF8                     __end_of_I2C_SlaveIsRead:
  6460                           
  6461                           	psect	text41
  6462     0F42                     __ptext41:	
  6463 ;; *************** function _I2C_SlaveIsAddr *****************
  6464 ;; Defined at:
  6465 ;;		line 374 in file "mcc_generated_files/i2c_slave.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;		None
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      _Bool 
  6472 ;; Registers used:
  6473 ;;		wreg, status,0
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6479 ;;      Params:         0       0       0       0
  6480 ;;      Locals:         0       0       0       0
  6481 ;;      Temps:          0       0       0       0
  6482 ;;      Totals:         0       0       0       0
  6483 ;;Total ram usage:        0 bytes
  6484 ;; Hardware stack levels used: 1
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_I2C_Isr
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492     0F42                     _I2C_SlaveIsAddr:	
  6493                           ;psect for function _I2C_SlaveIsAddr
  6494                           
  6495                           
  6496                           ;mcc_generated_files/i2c_slave.c: 376:     return !(SSP1STATbits.D_nA);
  6497                           
  6498                           ;incstack = 0
  6499                           ; Regs used in _I2C_SlaveIsAddr: [wreg+status,0]
  6500     0F42  1003               	clrc
  6501     0F43  0024               	movlb	4	; select bank4
  6502     0F44  1E94               	btfss	20,5	;volatile
  6503     0F45  1403               	setc
  6504     0F46  3000               	movlw	0
  6505     0F47  3D09               	addwfc	9,w
  6506     0F48  0008               	return
  6507     0F49                     __end_of_I2C_SlaveIsAddr:
  6508                           
  6509                           	psect	text42
  6510     0ED9                     __ptext42:	
  6511 ;; *************** function _I2C_SlaveClearIrq *****************
  6512 ;; Defined at:
  6513 ;;		line 384 in file "mcc_generated_files/i2c_slave.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;		None
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;		None
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  1    wreg      void 
  6520 ;; Registers used:
  6521 ;;		None
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6527 ;;      Params:         0       0       0       0
  6528 ;;      Locals:         0       0       0       0
  6529 ;;      Temps:          0       0       0       0
  6530 ;;      Totals:         0       0       0       0
  6531 ;;Total ram usage:        0 bytes
  6532 ;; Hardware stack levels used: 1
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_I2C_Isr
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540     0ED9                     _I2C_SlaveClearIrq:	
  6541                           ;psect for function _I2C_SlaveClearIrq
  6542                           
  6543                           
  6544                           ;mcc_generated_files/i2c_slave.c: 386:     PIR1bits.SSP1IF = 0;
  6545                           
  6546                           ;incstack = 0
  6547                           ; Regs used in _I2C_SlaveClearIrq: []
  6548     0ED9  0020               	movlb	0	; select bank0
  6549     0EDA  1191               	bcf	17,3	;volatile
  6550     0EDB  0008               	return
  6551     0EDC                     __end_of_I2C_SlaveClearIrq:
  6552                           
  6553                           	psect	text43
  6554     0F6D                     __ptext43:	
  6555 ;; *************** function _I2C_SlaveAddrCallBack *****************
  6556 ;; Defined at:
  6557 ;;		line 295 in file "mcc_generated_files/i2c_slave.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;		None
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  1    wreg      void 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0, pclath, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6571 ;;      Params:         0       0       0       0
  6572 ;;      Locals:         0       0       0       0
  6573 ;;      Temps:          0       0       0       0
  6574 ;;      Totals:         0       0       0       0
  6575 ;;Total ram usage:        0 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 2
  6578 ;; This function calls:
  6579 ;;		Absolute function
  6580 ;;		_I2C_SlaveDefAddrInterruptHandler
  6581 ;; This function is called by:
  6582 ;;		_I2C_Isr
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586     0F6D                     _I2C_SlaveAddrCallBack:	
  6587                           ;psect for function _I2C_SlaveAddrCallBack
  6588                           
  6589                           
  6590                           ;mcc_generated_files/i2c_slave.c: 297:     if (I2C_SlaveAddrInterruptHandler) {
  6591                           
  6592                           ;incstack = 0
  6593                           ; Regs used in _I2C_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  6594     0F6D  0020               	movlb	0	; select bank0
  6595     0F6E  0854               	movf	_I2C_SlaveAddrInterruptHandler,w
  6596     0F6F  0455               	iorwf	_I2C_SlaveAddrInterruptHandler+1,w
  6597     0F70  1903               	btfsc	3,2
  6598     0F71  0008               	return
  6599                           
  6600                           ;mcc_generated_files/i2c_slave.c: 298:         I2C_SlaveAddrInterruptHandler();
  6601     0F72  0855               	movf	_I2C_SlaveAddrInterruptHandler+1,w
  6602     0F73  008A               	movwf	10
  6603     0F74  0854               	movf	_I2C_SlaveAddrInterruptHandler,w
  6604     0F75  000A               	callw
  6605     0F76  318F               	pagesel	$
  6606     0F77  0008               	return
  6607     0F78                     __end_of_I2C_SlaveAddrCallBack:
  6608                           
  6609                           	psect	text44
  6610     0EEE                     __ptext44:	
  6611 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
  6612 ;; Defined at:
  6613 ;;		line 302 in file "mcc_generated_files/i2c_slave.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;		None
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;		None
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  1    wreg      void 
  6620 ;; Registers used:
  6621 ;;		wreg, pclath, cstack
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6627 ;;      Params:         0       0       0       0
  6628 ;;      Locals:         0       0       0       0
  6629 ;;      Temps:          0       0       0       0
  6630 ;;      Totals:         0       0       0       0
  6631 ;;Total ram usage:        0 bytes
  6632 ;; Hardware stack levels used: 1
  6633 ;; Hardware stack levels required when called: 1
  6634 ;; This function calls:
  6635 ;;		_I2C_SlaveGetRxData
  6636 ;; This function is called by:
  6637 ;;		_I2C_Open
  6638 ;;		_I2C_SlaveAddrCallBack
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642     0EEE                     _I2C_SlaveDefAddrInterruptHandler:	
  6643                           ;psect for function _I2C_SlaveDefAddrInterruptHandler
  6644                           
  6645                           
  6646                           ;mcc_generated_files/i2c_slave.c: 303:     i2cSlaveAddr = I2C_SlaveGetRxData();
  6647                           
  6648                           ;incstack = 0
  6649                           ; Regs used in _I2C_SlaveDefAddrInterruptHandler: [wreg+pclath+cstack]
  6650     0EEE  318E  26D6         	fcall	_I2C_SlaveGetRxData
  6651     0EF0  0020               	movlb	0	; select bank0
  6652     0EF1  00DF               	movwf	_i2cSlaveAddr	;volatile
  6653     0EF2  0008               	return
  6654     0EF3                     __end_of_I2C_SlaveDefAddrInterruptHandler:
  6655                           
  6656                           	psect	text45
  6657     0ED6                     __ptext45:	
  6658 ;; *************** function _I2C_SlaveGetRxData *****************
  6659 ;; Defined at:
  6660 ;;		line 424 in file "mcc_generated_files/i2c_slave.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;		None
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;		None
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      unsigned char 
  6667 ;; Registers used:
  6668 ;;		wreg
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6674 ;;      Params:         0       0       0       0
  6675 ;;      Locals:         0       0       0       0
  6676 ;;      Temps:          0       0       0       0
  6677 ;;      Totals:         0       0       0       0
  6678 ;;Total ram usage:        0 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_I2C_SlaveDefRdInterruptHandler
  6684 ;;		_I2C_SlaveDefAddrInterruptHandler
  6685 ;;		_I2C_Read
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689     0ED6                     _I2C_SlaveGetRxData:	
  6690                           ;psect for function _I2C_SlaveGetRxData
  6691                           
  6692                           
  6693                           ;mcc_generated_files/i2c_slave.c: 426:     return SSP1BUF;
  6694                           
  6695                           ;incstack = 0
  6696                           ; Regs used in _I2C_SlaveGetRxData: [wreg]
  6697     0ED6  0024               	movlb	4	; select bank4
  6698     0ED7  0811               	movf	17,w	;volatile
  6699     0ED8  0008               	return
  6700     0ED9                     __end_of_I2C_SlaveGetRxData:
  6701     007E                     btemp	set	126	;btemp
  6702     007E                     int$flags	set	126
  6703     007E                     wtemp0	set	126
  6704                           
  6705                           	psect	idloc
  6706                           
  6707                           ;Config register IDLOC0 @ 0x8000
  6708                           ;	unspecified, using default values
  6709     8000                     	org	32768
  6710     8000  3FFF               	dw	16383
  6711                           
  6712                           ;Config register IDLOC1 @ 0x8001
  6713                           ;	unspecified, using default values
  6714     8001                     	org	32769
  6715     8001  3FFF               	dw	16383
  6716                           
  6717                           ;Config register IDLOC2 @ 0x8002
  6718                           ;	unspecified, using default values
  6719     8002                     	org	32770
  6720     8002  3FFF               	dw	16383
  6721                           
  6722                           ;Config register IDLOC3 @ 0x8003
  6723                           ;	unspecified, using default values
  6724     8003                     	org	32771
  6725     8003  3FFF               	dw	16383
  6726                           
  6727                           	psect	config
  6728                           
  6729                           ;Config register CONFIG1 @ 0x8007
  6730                           ;	Oscillator Selection Bits
  6731                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6732                           ;	Watchdog Timer Enable
  6733                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  6734                           ;	Power-up Timer Enable
  6735                           ;	PWRTE = OFF, PWRT disabled
  6736                           ;	MCLR Pin Function Select
  6737                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  6738                           ;	Flash Program Memory Code Protection
  6739                           ;	CP = OFF, Program memory code protection is disabled
  6740                           ;	Brown-out Reset Enable
  6741                           ;	BOREN = ON, Brown-out Reset enabled
  6742                           ;	Clock Out Enable
  6743                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6744                           ;	Internal/External Switchover Mode
  6745                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6746                           ;	Fail-Safe Clock Monitor Enable
  6747                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6748     8007                     	org	32775
  6749     8007  3FAC               	dw	16300
  6750                           
  6751                           ;Config register CONFIG2 @ 0x8008
  6752                           ;	Flash Memory Self-Write Protection
  6753                           ;	WRT = OFF, Write protection off
  6754                           ;	Stack Overflow/Underflow Reset Enable
  6755                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6756                           ;	Brown-out Reset Voltage Selection
  6757                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6758                           ;	Low-Power Brown Out Reset
  6759                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6760                           ;	Low-Voltage Programming Enable
  6761                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  6762     8008                     	org	32776
  6763     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         49
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     42      77
    BANK1            80      6      17
    BANK2            64      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_Isr(), 


Critical Paths under _main in COMMON

    _main->_I2C_Handler
    _updateMemoryValues->_ADC_GetConversion
    _updateMemoryValues->___flge
    _updateMemoryValues->___xxtofl
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl
    _SYSTEM_Initialize->_I2C_Initialize
    _I2C_Open->_I2C_SlaveSetAddrIntHandler
    _I2C_Open->_I2C_SlaveSetBusColIntHandler
    _I2C_Open->_I2C_SlaveSetIsrHandler
    _I2C_Open->_I2C_SlaveSetReadIntHandler
    _I2C_Open->_I2C_SlaveSetWrColIntHandler
    _I2C_Open->_I2C_SlaveSetWriteIntHandler
    _I2C_Handler->_sendTempDataToMaster

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_Isr
    _I2C_SlaveDefWrInterruptHandler->_I2C_SlaveSendTxData

Critical Paths under _main in BANK0

    _main->_updateMemoryValues
    _updateMemoryValues->___fldiv
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_updateMemoryValues

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7563
                                             40 BANK0      2     2      0
                        _I2C_Handler
                           _I2C_Open
                  _SYSTEM_Initialize
                 _updateMemoryValues
 ---------------------------------------------------------------------------------
 (1) _updateMemoryValues                                  10    10      0    6507
                                             36 BANK0      4     4      0
                                              0 BANK1      6     6      0
                  _ADC_GetConversion
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3353
                                              5 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     626
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1863
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                     _FVR_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Open                                             0     0      0     632
                 _I2C_SlaveEnableIrq
                      _I2C_SlaveOpen
         _I2C_SlaveSetAddrIntHandler
       _I2C_SlaveSetBusColIntHandler
             _I2C_SlaveSetIsrHandler
         _I2C_SlaveSetReadIntHandler
              _I2C_SlaveSetSlaveAddr
              _I2C_SlaveSetSlaveMask
        _I2C_SlaveSetWrColIntHandler
        _I2C_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWriteIntHandler                          2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWrColIntHandler                          2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveMask                                1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveAddr                                1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetReadIntHandler                           2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetIsrHandler                               2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetBusColIntHandler                         2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetAddrIntHandler                           2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveOpen                                        1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveEnableIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Handler                                          2     2      0     424
                                              5 COMMON     2     2      0
               _sendTempDataToMaster
               _sendVSNSDataToMaster
 ---------------------------------------------------------------------------------
 (2) _sendVSNSDataToMaster                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sendTempDataToMaster                                 2     0      2     424
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0      22
                   Absolute function *
                            _I2C_Isr *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Isr                                              2     2      0      22
                                              1 COMMON     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                    _I2C_SlaveIsAddr
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
              _I2C_SlaveIsTxBufEmpty
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                _I2C_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveWrCallBack                                  0     0      0      22
                   Absolute function *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefWrInterruptHandler                       0     0      0      22
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_SlaveSendTxData                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveReleaseClock                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveRdCallBack                                  0     0      0       0
                   Absolute function *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefRdInterruptHandler                       0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsTxBufEmpty                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsRxBufFull                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsAddr                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveClearIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveAddrCallBack                                0     0      0       0
                   Absolute function *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefAddrInterruptHandler                     0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (8) _I2C_SlaveGetRxData                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Handler
     _sendTempDataToMaster
     _sendVSNSDataToMaster
   _I2C_Open
     _I2C_SlaveEnableIrq
     _I2C_SlaveOpen
     _I2C_SlaveSetAddrIntHandler
     _I2C_SlaveSetBusColIntHandler
     _I2C_SlaveSetIsrHandler
     _I2C_SlaveSetReadIntHandler
     _I2C_SlaveSetSlaveAddr
     _I2C_SlaveSetSlaveMask
     _I2C_SlaveSetWrColIntHandler
     _I2C_SlaveSetWriteIntHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _FVR_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _updateMemoryValues
     _ADC_GetConversion
     ___fldiv
       ___xxtofl (ARG)
     ___flge
     ___flmul
       __Umul8_16
     ___xxtofl

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveClearIrq
     _I2C_SlaveIsAddr
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsTxBufEmpty
     _I2C_SlaveRdCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefRdInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveWrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefWrInterruptHandler *
         _I2C_SlaveSendTxData
   _PIN_MANAGER_IOC *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      68       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      6      11       8       21.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      68      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 20 21:12:03 2023

                            ___fldiv@aexp 0043                              ___fldiv@bexp 0042  
                            ___fldiv@sign 003B                    __end_of_FVR_Initialize 0EEA  
                     __Umul8_16@word_mpld 0022                                       l434 0FBE  
                                     l533 06DC                                       l534 06DF  
                                     l535 06E2                                       l551 02E5  
                                     l560 0378                                       l554 0316  
                                     l811 063E                                       l564 041C  
                                     l548 02B4                                       l557 0347  
                                     l814 068C                                       l990 0462  
    __end_of_I2C_SlaveSetBusColIntHandler 0F1E              _I2C_SlaveSetBusColIntHandler 0F18  
                   ??_I2C_SlaveRdCallBack 0070                       _I2C_SlaveSendTxData 0EFD  
           I2C_SlaveSetSlaveMask@maskAddr 0073                           __end_of_I2C_Isr 076D  
                                     wreg 0009                       _I2C_SlaveWrCallBack 0F83  
                       _selectedReference 005C                              ___flmul@aexp 0033  
                            ___flmul@bexp 0038                              ___flmul@sign 0032  
                            ___flmul@temp 003D                              ___flmul@prod 0039  
                                    l1011 0569                                      l1012 0581  
                                    l1014 058C                                      l1042 023C  
                                    l1080 05E1                                      l1049 0FF1  
                                    l1074 05AD                                      l3005 022D  
                                    l1087 05F5                                      l3023 05A5  
                                    l3111 0360                                      l3103 032F  
                                    l1088 05FF                                      l3033 05BE  
                                    l3043 05F3                                      l3035 05CE  
                                    l3115 037A                                      l3107 0349  
                                    l3045 05E6                                      l3029 05BC  
                                    l3133 07AD                                      l2511 06CA  
                                    l2503 06A6                                      l3143 07D1  
                                    l2513 06D3                                      l2505 06AF  
                                    l2521 06E7                                      l3057 061A  
                                    l2515 06D7                                      l2507 06B8  
                                    l2523 0716                                      l3091 02E7  
                                    l3083 02B6                                      l2517 06E5  
                                    l2509 06C1                                      l3095 02FE  
                                    l3087 02CD                                      l3079 029C  
                                    l3185 06F0                                      l2811 04D4  
                                    l2723 0658                                      l3099 0318  
                                    l2821 04F2                                      l2751 0435  
                                    l2727 0672                                      l2911 0072  
                                    l2817 04ED                                      l2921 0088  
                                    l2913 007A                                      l2843 0526  
                                    l2835 04F8                                      l2819 04B6  
                                    l2771 0457                                      l2755 0438  
                                    l2837 050F                                      l2757 0440  
                                    l2909 0070                                      l2871 0588  
                                    l2847 0528                                      l2791 048D  
                                    l2775 045A                                      l2695 0FEB  
                                    l2857 0551                                      l2785 0481  
                                    l2891 004F                                      l2981 01D6  
                                    l2973 01A8                                      l2893 0051  
                                    l2975 01BF                                      l2895 0059  
                                    l2985 01D8                                      l2995 0201  
                                    l2999 0216                                      _LATA 010C  
                                    _LATB 010D                                      u3015 0298  
                                    _LATC 010E                                      u3105 0373  
                                    u3025 02AF                                      u3035 02C9  
                                    u2245 0FF2                                      u3045 02E0  
                                    u2415 04BE                                      u3055 02FA  
                                    u2505 0504                                      u2425 04C5  
                                    u3065 0311                                      u3075 032B  
                                    u3147 07BC                                      u2445 04CE  
                                    u3085 0342                                      u3157 07CB  
                                    u3167 0FB9                                      u2455 04E2  
                                    u3095 035C                                      u2705 0123  
                                    u2715 0171                                      u2485 04FB  
                                    u2725 0188                                      u2575 053F  
                                    u2735 0197                                      u2585 055A  
                                    u2745 01AB                                      u2905 05C7  
                                    u2595 0573                                      u2835 01EF  
                                    u2845 020A                                      u2765 01B4  
                                    u2925 05DB                                      u2855 0220  
                                    u2695 00F8                                      u2945 05ED  
                                    i1l71 001F                                      i1l63 000D  
                                    u2985 0607                                      _WPUA 020C  
                                    _WPUB 020D                   __end_of_I2C_SlaveIsAddr 0F49  
                 __end_of_I2C_SlaveIsRead 0EF8                                      _main 07A5  
       I2C_SlaveSetAddrIntHandler@handler 0073                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                        __end_of_I2C_Open 07A5                                      btemp 007E  
                    ?_I2C_SlaveSendTxData 0070                                      start 0021  
                         ___fldiv@new_exp 003C                      ?_I2C_SlaveWrCallBack 0070  
       I2C_SlaveSetReadIntHandler@handler 0073             __end_of_I2C_SlaveAddrCallBack 0F78  
                         ?_FVR_Initialize 0070             __end_of_OSCILLATOR_Initialize 0F3C  
__end_of_I2C_SlaveDefAddrInterruptHandler 0EF3        ??_I2C_SlaveDefAddrInterruptHandler 0070  
       ?_I2C_SlaveDefAddrInterruptHandler 0070          _I2C_SlaveDefAddrInterruptHandler 0EEE  
                                   ?_main 0070                           __end_of___fldiv 058F  
                         __end_of___flmul 0249                     _I2C_SlaveReleaseClock 0EDC  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E             ?_I2C_SlaveSetBusColIntHandler 0073  
                  ??_I2C_SlaveIsRxBufFull 0070                   __end_of_PIN_MANAGER_IOC 0004  
                          _WDT_Initialize 0EEA                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                   ??_I2C_SlaveSendTxData 0070                     ??_I2C_SlaveWrCallBack 0071  
                   _I2C_SlaveSetSlaveAddr 0F02                           __initialization 0023  
                   _I2C_SlaveSetSlaveMask 0F07                              __end_of_main 07D5  
             ?_INTERRUPT_InterruptManager 0070                                 ??_I2C_Isr 0071  
                                  ??_main 0048                    __end_of_WDT_Initialize 0EEE  
             _I2C_SlaveRdInterruptHandler 0058               _I2C_SlaveWrInterruptHandler 0056  
              __end_of_I2C_SlaveEnableIrq 0EE2                __end_of_I2C_SlaveGetRxData 0ED9  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  i1l2471 0738                                    i1l2463 072A  
                                  i1l2607 001A                                    i1l2465 072C  
                                  i1l3187 075C                                    i1l2483 074A  
                                  i1l2491 076A                                    i1l2477 0745  
                                  i1l2469 0734                                    i1l2479 0749  
                                  i1l2489 0754                                    _FVRCON 0117  
                                  _OSCCON 0099                          ?_I2C_SlaveIsAddr 0070  
                                  _WDTCON 0097                          ?_I2C_SlaveIsRead 0070  
                        __end_of___xxtofl 0623                                    ___flge 0623  
                               ??___fldiv 0032                                 ??___flmul 002D  
                  _I2C_SlaveSetIsrHandler 0F1E                                    _memory 00A0  
                                  _safety 07F7                    ?_I2C_SlaveReleaseClock 0070  
                 ??_I2C_SlaveIsTxBufEmpty 0070                                 ?_I2C_Open 0070  
                             _i2cWrData_5 0065                               _i2cWrData_6 0066  
                             _i2cWrData_7 0067                               _i2cWrData_8 0068  
                             _i2cWrData_9 0069       I2C_SlaveSetBusColIntHandler@handler 0073  
                         ?_WDT_Initialize 0070                             _I2C_SlaveOpen 0F8E  
                ADC_GetConversion@channel 0076                          ?_PIN_MANAGER_IOC 0070  
                              ___flge@ff1 0020                                ___flge@ff2 0024  
                            ___xxtofl@arg 0026                              ___xxtofl@exp 0025  
                       _SYSTEM_Initialize 0F9A                              ___xxtofl@val 0073  
              sendTempDataToMaster@toSend 0073                   __end_of__initialization 0035  
      I2C_SlaveSetWrColIntHandler@handler 0073              ??_I2C_SlaveSetAddrIntHandler 0075  
                      ?_SYSTEM_Initialize 0070                    ?_I2C_SlaveSetSlaveAddr 0070  
                  ?_I2C_SlaveSetSlaveMask 0070                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0074            I2C_SlaveSetSlaveAddr@slaveAddr 0073  
            ??_I2C_SlaveSetReadIntHandler 0075                            _OPTION_REGbits 0095  
                              ??_I2C_Open 0075                            ?_I2C_SlaveOpen 0070  
                  updateMemoryValues@Vbit 00AB                 __end_of_SYSTEM_Initialize 0FAC  
                              __pbssBANK0 004A                                __pbssBANK1 00A0  
     __end_of_I2C_SlaveSetWrColIntHandler 0F30               _I2C_SlaveSetWrColIntHandler 0F2A  
                       __end_of__Umul8_16 1000                          ??_FVR_Initialize 0073  
                              __pmaintext 07A5                                   ?___flge 0020  
                           ??_I2C_Handler 0075                                __pintentry 0004  
             __end_of_I2C_SlaveRdCallBack 0F83             ??_I2C_SlaveSetWrColIntHandler 0075  
                                 _I2C_Isr 0719                                 ?___xxtofl 0073  
                                 _SSP1ADD 0212                                   _SSP1BUF 0211  
                                 _SSP1MSK 0213                __end_of_updateMemoryValues 041F  
                    _ADC_InterruptHandler 004E                                   ___fldiv 041F  
                 I2C_SlaveSendTxData@data 0070                                   ___flmul 0039  
                   _I2C_SlaveAddrCallBack 0F6D                            _I2C_Initialize 0F63  
                                 __ptext1 0249                                   __ptext2 058F  
                                 __ptext3 0039                                   __ptext4 0FE0  
                                 __ptext5 0623                                   __ptext6 041F  
                                 __ptext7 0FAC                                   __ptext8 0F9A  
                                 __ptext9 0EEA                           ??_I2C_SlaveOpen 0073  
                   _OSCILLATOR_Initialize 0F36                       __end_of_I2C_Handler 0719  
                              ??___xxtofl 0020                  ??_PIN_MANAGER_Initialize 0073  
           I2C_SlaveSetIsrHandler@handler 0073                                   clrloop0 0F3D  
             __end_of_I2C_SlaveSendTxData 0F02                      end_of_initialization 0035  
             __end_of_I2C_SlaveWrCallBack 0F8E        __end_of_I2C_SlaveSetAddrIntHandler 0F18  
              _I2C_SlaveSetAddrIntHandler 0F12                              _i2cWrData_10 006A  
                            _i2cWrData_11 006B                              _i2cWrData_12 006C  
                            _i2cWrData_13 0077                              _i2cWrData_14 0078  
                            _i2cWrData_15 0079                        _i2cWrData_Tertiary 0063  
                      _I2C_SlaveEnableIrq 0EDF                        _I2C_SlaveGetRxData 0ED6  
                 ?_I2C_SlaveSetIsrHandler 0073                              _i2cSlaveAddr 005F  
                  __end_of_I2C_Initialize 0F6D                   ??_I2C_SlaveReleaseClock 0070  
                     ?_I2C_SlaveEnableIrq 0070                       ?_I2C_SlaveGetRxData 0070  
      __end_of_I2C_SlaveSetReadIntHandler 0F2A                _I2C_SlaveSetReadIntHandler 0F24  
                        ??_WDT_Initialize 0073              ?_I2C_SlaveSetWriteIntHandler 0073  
                           ___xxtofl@sign 0024             __end_of_I2C_SlaveIsTxBufEmpty 0F50  
                             ___fldiv@grs 003E                               ___fldiv@rem 0037  
                    ??_I2C_SlaveEnableIrq 0073                      ??_I2C_SlaveGetRxData 0070  
                 ??_I2C_SlaveSetSlaveAddr 0073                               ___flmul@grs 0034  
                 ??_I2C_SlaveSetSlaveMask 0073              __end_of_sendTempDataToMaster 0F12  
          __end_of_I2C_SlaveSetIsrHandler 0F24                    ?_I2C_SlaveAddrCallBack 0070  
                         ?_I2C_Initialize 0070                            __end_of___flge 069F  
                             _I2C_Handler 069F                            _ADC_Initialize 0F50  
                               _i2cRdData 0060                    ?_OSCILLATOR_Initialize 0070  
                          __end_of_safety 0803                                 _i2cWrData 0061  
                     start_initialization 0023              __end_of_sendVSNSDataToMaster 0F63  
                                ??___flge 0073                    __end_of_ADC_Initialize 0F59  
                               __Umul8_16 0FE0                                  ?_I2C_Isr 0070  
                               ___fldiv@a 002A                                 ___fldiv@b 002E  
                               ___flmul@a 0029                                 ___flmul@b 0025  
                             __pbssCOMMON 0077                                 ___latbits 0001  
                           __pcstackBANK0 0020                             __pcstackBANK1 00AB  
          ??_I2C_SlaveSetBusColIntHandler 0075                    _PIN_MANAGER_Initialize 0FC5  
              updateMemoryValues@fvr_Test 00AF                                  ?___fldiv 002A  
                                ?___flmul 0025                                ?__Umul8_16 0073  
                         ?_ADC_Initialize 0070              ??_INTERRUPT_InterruptManager 0073  
                       ??_I2C_SlaveIsAddr 0070                        _updateMemoryValues 0249  
                       ??_I2C_SlaveIsRead 0070          ??_I2C_SlaveDefRdInterruptHandler 0070  
         ?_I2C_SlaveDefRdInterruptHandler 0070          ??_I2C_SlaveDefWrInterruptHandler 0071  
         ?_I2C_SlaveDefWrInterruptHandler 0070                                 _converter 004A  
                                _I2C_Open 076D                      _sendTempDataToMaster 0F0C  
                     ?_updateMemoryValues 0070               ?_I2C_SlaveSetAddrIntHandler 0073  
                                _LATBbits 010D                                  _LATCbits 010E  
                               clear_ram0 0F3C                                  _PIE1bits 0091  
                                _PIE2bits 0092                         _I2C_SlaveClearIrq 0ED9  
                                _PIR1bits 0011                                  _PIR2bits 0012  
                      ?_I2C_SlaveClearIrq 0070                      ??_updateMemoryValues 0044  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
            __end_of_I2C_SlaveIsRxBufFull 0EE6                      _sendVSNSDataToMaster 0F59  
                                _SSP1STAT 0214                         ??_PIN_MANAGER_IOC 0070  
             ?_I2C_SlaveSetReadIntHandler 0073             __end_of_I2C_SlaveReleaseClock 0EDF  
                     ??_I2C_SlaveClearIrq 0070                                _ADCON0bits 009D  
                   ?_sendTempDataToMaster 0073                     __end_of_I2C_SlaveOpen 0F9A  
       _I2C_SlaveDefWrColInterruptHandler 0000                 __end_of_I2C_SlaveClearIrq 0EDC  
           __end_of_I2C_SlaveSetSlaveAddr 0F07             __end_of_I2C_SlaveSetSlaveMask 0F0C  
                        ??_I2C_Initialize 0073                   ??_I2C_SlaveAddrCallBack 0070  
                       _ADC_GetConversion 0FAC                     ?_sendVSNSDataToMaster 0070  
                 ??_OSCILLATOR_Initialize 0073                               ??__Umul8_16 0075  
                            ?_I2C_Handler 0070                        ?_ADC_GetConversion 0073  
           _I2C_SlaveAddrInterruptHandler 0054        _I2C_SlaveDefBusColInterruptHandler 0000  
                     ??_ADC_GetConversion 0075                                  ___xxtofl 058F  
          _I2C_SlaveWrColInterruptHandler 0050                                  __ptext10 0FC5  
                                __ptext11 0F36                                  __ptext20 0F24  
                                __ptext12 0F63                                  __ptext21 0F1E  
                                __ptext13 0EE6                                  __ptext30 0003  
                                __ptext22 0F18                                  __ptext14 0F50  
                                __ptext31 0719                                  __ptext23 0F12  
                                __ptext15 076D                                  __ptext40 0EF3  
                                __ptext32 0F83                                  __ptext24 0F8E  
                                __ptext16 0F30                                  __ptext41 0F42  
                                __ptext33 07D5                                  __ptext25 0EDF  
                                __ptext17 0F2A                                  __ptext42 0ED9  
                                __ptext34 0EFD                                  __ptext26 069F  
                                __ptext18 0F07                                  __ptext43 0F6D  
                                __ptext35 0EDC                                  __ptext27 0F59  
                                __ptext19 0F02                                  __ptext44 0EEE  
                                __ptext36 0F78                                  __ptext28 0F0C  
                                __ptext45 0ED6                                  __ptext37 0EF8  
                                __ptext38 0F49                                  __ptext39 0EE2  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
                   _I2C_SlaveIsTxBufEmpty 0F49                      _i2cWrData_Quaternary 0064  
               __end_of_ADC_GetConversion 0FC5              ?_I2C_SlaveSetWrColIntHandler 0073  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0021  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 0214  
                  ??_sendTempDataToMaster 0075                                _INTCONbits 000B  
                     _i2cWrData_Secondary 0062                                _FVRCONbits 0117  
                    _I2C_SlaveIsRxBufFull 0EE2                                  intlevel1 0000  
         _I2C_SlaveBusColInterruptHandler 0052                   ?_PIN_MANAGER_Initialize 0070  
                     _I2C_SlaveRdCallBack 0F78                          ??_ADC_Initialize 0073  
                         _I2C_SlaveIsAddr 0F42                    ??_sendVSNSDataToMaster 0073  
                         _I2C_SlaveIsRead 0EF3                             _i2cSlaveState 005E  
      I2C_SlaveSetWriteIntHandler@handler 0073       __end_of_I2C_SlaveSetWriteIntHandler 0F36  
             _I2C_SlaveSetWriteIntHandler 0F30                             __pstringtext1 07F7  
                  _Cell_Balancing_Enabled 005D                            _FVR_Initialize 0EE6  
                  __Umul8_16@multiplicand 0073                      ?_I2C_SlaveRdCallBack 0070  
                  ?_I2C_SlaveIsTxBufEmpty 0070             ??_I2C_SlaveSetWriteIntHandler 0075  
                              _WDTCONbits 0097                  ??_I2C_SlaveSetIsrHandler 0075  
                   ?_I2C_SlaveIsRxBufFull 0070            __end_of_PIN_MANAGER_Initialize 0FE0  
  __end_of_I2C_SlaveDefRdInterruptHandler 0EFD            _I2C_SlaveDefRdInterruptHandler 0EF8  
  __end_of_I2C_SlaveDefWrInterruptHandler 07F7            _I2C_SlaveDefWrInterruptHandler 07D5  
                         _PIN_MANAGER_IOC 0003                      __Umul8_16@multiplier 0024  
                   _MSSP_InterruptHandler 005A                         __Umul8_16@product 0020  
