

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 18 14:44:21 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1508
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,delta=2
    60                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text52,local,class=CODE,merge=1,delta=2
    66                           	psect	text53,local,class=CODE,merge=1,delta=2
    67                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    70                           	dabs	1,0x7E,2
    71     0000                     
    72                           ; Version 2.40
    73                           ; Generated 17/11/2021 GMT
    74                           ; 
    75                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F1508 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     0011                     	;# 
   123     0012                     	;# 
   124     0013                     	;# 
   125     0015                     	;# 
   126     0016                     	;# 
   127     0016                     	;# 
   128     0017                     	;# 
   129     0018                     	;# 
   130     0019                     	;# 
   131     001A                     	;# 
   132     001B                     	;# 
   133     001C                     	;# 
   134     008C                     	;# 
   135     008D                     	;# 
   136     008E                     	;# 
   137     0091                     	;# 
   138     0092                     	;# 
   139     0093                     	;# 
   140     0095                     	;# 
   141     0096                     	;# 
   142     0097                     	;# 
   143     0099                     	;# 
   144     009A                     	;# 
   145     009B                     	;# 
   146     009B                     	;# 
   147     009C                     	;# 
   148     009D                     	;# 
   149     009E                     	;# 
   150     009F                     	;# 
   151     010C                     	;# 
   152     010D                     	;# 
   153     010E                     	;# 
   154     0111                     	;# 
   155     0112                     	;# 
   156     0113                     	;# 
   157     0114                     	;# 
   158     0115                     	;# 
   159     0116                     	;# 
   160     0117                     	;# 
   161     0118                     	;# 
   162     0119                     	;# 
   163     011D                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     018E                     	;# 
   167     0191                     	;# 
   168     0191                     	;# 
   169     0192                     	;# 
   170     0193                     	;# 
   171     0193                     	;# 
   172     0194                     	;# 
   173     0195                     	;# 
   174     0196                     	;# 
   175     0197                     	;# 
   176     0199                     	;# 
   177     019A                     	;# 
   178     019B                     	;# 
   179     019B                     	;# 
   180     019C                     	;# 
   181     019D                     	;# 
   182     019E                     	;# 
   183     019F                     	;# 
   184     020C                     	;# 
   185     020D                     	;# 
   186     0211                     	;# 
   187     0211                     	;# 
   188     0212                     	;# 
   189     0212                     	;# 
   190     0213                     	;# 
   191     0213                     	;# 
   192     0214                     	;# 
   193     0214                     	;# 
   194     0215                     	;# 
   195     0215                     	;# 
   196     0215                     	;# 
   197     0216                     	;# 
   198     0216                     	;# 
   199     0217                     	;# 
   200     0217                     	;# 
   201     0391                     	;# 
   202     0392                     	;# 
   203     0393                     	;# 
   204     0394                     	;# 
   205     0395                     	;# 
   206     0396                     	;# 
   207     0498                     	;# 
   208     0498                     	;# 
   209     0499                     	;# 
   210     049A                     	;# 
   211     049B                     	;# 
   212     049B                     	;# 
   213     049C                     	;# 
   214     049D                     	;# 
   215     049E                     	;# 
   216     049F                     	;# 
   217     0611                     	;# 
   218     0612                     	;# 
   219     0613                     	;# 
   220     0613                     	;# 
   221     0614                     	;# 
   222     0615                     	;# 
   223     0616                     	;# 
   224     0616                     	;# 
   225     0617                     	;# 
   226     0618                     	;# 
   227     0619                     	;# 
   228     0619                     	;# 
   229     061A                     	;# 
   230     061B                     	;# 
   231     061C                     	;# 
   232     061C                     	;# 
   233     0691                     	;# 
   234     0692                     	;# 
   235     0693                     	;# 
   236     0694                     	;# 
   237     0695                     	;# 
   238     0F0F                     	;# 
   239     0F10                     	;# 
   240     0F11                     	;# 
   241     0F12                     	;# 
   242     0F13                     	;# 
   243     0F14                     	;# 
   244     0F15                     	;# 
   245     0F16                     	;# 
   246     0F17                     	;# 
   247     0F18                     	;# 
   248     0F19                     	;# 
   249     0F1A                     	;# 
   250     0F1B                     	;# 
   251     0F1C                     	;# 
   252     0F1D                     	;# 
   253     0F1E                     	;# 
   254     0F1F                     	;# 
   255     0F20                     	;# 
   256     0F21                     	;# 
   257     0F22                     	;# 
   258     0F23                     	;# 
   259     0F24                     	;# 
   260     0F25                     	;# 
   261     0F26                     	;# 
   262     0F27                     	;# 
   263     0F28                     	;# 
   264     0F29                     	;# 
   265     0F2A                     	;# 
   266     0F2B                     	;# 
   267     0F2C                     	;# 
   268     0F2D                     	;# 
   269     0F2E                     	;# 
   270     0F2F                     	;# 
   271     0F8C                     	;# 
   272     0F8D                     	;# 
   273     0F91                     	;# 
   274     0F95                     	;# 
   275     0F96                     	;# 
   276     0F97                     	;# 
   277     0F9C                     	;# 
   278     0F9D                     	;# 
   279     0F9E                     	;# 
   280     0FE3                     	;# 
   281     0FE4                     	;# 
   282     0FE5                     	;# 
   283     0FE6                     	;# 
   284     0FE7                     	;# 
   285     0FE8                     	;# 
   286     0FE9                     	;# 
   287     0FEA                     	;# 
   288     0FEB                     	;# 
   289     0FED                     	;# 
   290     0FEE                     	;# 
   291     0FEF                     	;# 
   292     0000                     	;# 
   293     0001                     	;# 
   294     0002                     	;# 
   295     0003                     	;# 
   296     0004                     	;# 
   297     0005                     	;# 
   298     0006                     	;# 
   299     0007                     	;# 
   300     0008                     	;# 
   301     0009                     	;# 
   302     000A                     	;# 
   303     000B                     	;# 
   304     000C                     	;# 
   305     000D                     	;# 
   306     000E                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0015                     	;# 
   311     0016                     	;# 
   312     0016                     	;# 
   313     0017                     	;# 
   314     0018                     	;# 
   315     0019                     	;# 
   316     001A                     	;# 
   317     001B                     	;# 
   318     001C                     	;# 
   319     008C                     	;# 
   320     008D                     	;# 
   321     008E                     	;# 
   322     0091                     	;# 
   323     0092                     	;# 
   324     0093                     	;# 
   325     0095                     	;# 
   326     0096                     	;# 
   327     0097                     	;# 
   328     0099                     	;# 
   329     009A                     	;# 
   330     009B                     	;# 
   331     009B                     	;# 
   332     009C                     	;# 
   333     009D                     	;# 
   334     009E                     	;# 
   335     009F                     	;# 
   336     010C                     	;# 
   337     010D                     	;# 
   338     010E                     	;# 
   339     0111                     	;# 
   340     0112                     	;# 
   341     0113                     	;# 
   342     0114                     	;# 
   343     0115                     	;# 
   344     0116                     	;# 
   345     0117                     	;# 
   346     0118                     	;# 
   347     0119                     	;# 
   348     011D                     	;# 
   349     018C                     	;# 
   350     018D                     	;# 
   351     018E                     	;# 
   352     0191                     	;# 
   353     0191                     	;# 
   354     0192                     	;# 
   355     0193                     	;# 
   356     0193                     	;# 
   357     0194                     	;# 
   358     0195                     	;# 
   359     0196                     	;# 
   360     0197                     	;# 
   361     0199                     	;# 
   362     019A                     	;# 
   363     019B                     	;# 
   364     019B                     	;# 
   365     019C                     	;# 
   366     019D                     	;# 
   367     019E                     	;# 
   368     019F                     	;# 
   369     020C                     	;# 
   370     020D                     	;# 
   371     0211                     	;# 
   372     0211                     	;# 
   373     0212                     	;# 
   374     0212                     	;# 
   375     0213                     	;# 
   376     0213                     	;# 
   377     0214                     	;# 
   378     0214                     	;# 
   379     0215                     	;# 
   380     0215                     	;# 
   381     0215                     	;# 
   382     0216                     	;# 
   383     0216                     	;# 
   384     0217                     	;# 
   385     0217                     	;# 
   386     0391                     	;# 
   387     0392                     	;# 
   388     0393                     	;# 
   389     0394                     	;# 
   390     0395                     	;# 
   391     0396                     	;# 
   392     0498                     	;# 
   393     0498                     	;# 
   394     0499                     	;# 
   395     049A                     	;# 
   396     049B                     	;# 
   397     049B                     	;# 
   398     049C                     	;# 
   399     049D                     	;# 
   400     049E                     	;# 
   401     049F                     	;# 
   402     0611                     	;# 
   403     0612                     	;# 
   404     0613                     	;# 
   405     0613                     	;# 
   406     0614                     	;# 
   407     0615                     	;# 
   408     0616                     	;# 
   409     0616                     	;# 
   410     0617                     	;# 
   411     0618                     	;# 
   412     0619                     	;# 
   413     0619                     	;# 
   414     061A                     	;# 
   415     061B                     	;# 
   416     061C                     	;# 
   417     061C                     	;# 
   418     0691                     	;# 
   419     0692                     	;# 
   420     0693                     	;# 
   421     0694                     	;# 
   422     0695                     	;# 
   423     0F0F                     	;# 
   424     0F10                     	;# 
   425     0F11                     	;# 
   426     0F12                     	;# 
   427     0F13                     	;# 
   428     0F14                     	;# 
   429     0F15                     	;# 
   430     0F16                     	;# 
   431     0F17                     	;# 
   432     0F18                     	;# 
   433     0F19                     	;# 
   434     0F1A                     	;# 
   435     0F1B                     	;# 
   436     0F1C                     	;# 
   437     0F1D                     	;# 
   438     0F1E                     	;# 
   439     0F1F                     	;# 
   440     0F20                     	;# 
   441     0F21                     	;# 
   442     0F22                     	;# 
   443     0F23                     	;# 
   444     0F24                     	;# 
   445     0F25                     	;# 
   446     0F26                     	;# 
   447     0F27                     	;# 
   448     0F28                     	;# 
   449     0F29                     	;# 
   450     0F2A                     	;# 
   451     0F2B                     	;# 
   452     0F2C                     	;# 
   453     0F2D                     	;# 
   454     0F2E                     	;# 
   455     0F2F                     	;# 
   456     0F8C                     	;# 
   457     0F8D                     	;# 
   458     0F91                     	;# 
   459     0F95                     	;# 
   460     0F96                     	;# 
   461     0F97                     	;# 
   462     0F9C                     	;# 
   463     0F9D                     	;# 
   464     0F9E                     	;# 
   465     0FE3                     	;# 
   466     0FE4                     	;# 
   467     0FE5                     	;# 
   468     0FE6                     	;# 
   469     0FE7                     	;# 
   470     0FE8                     	;# 
   471     0FE9                     	;# 
   472     0FEA                     	;# 
   473     0FEB                     	;# 
   474     0FED                     	;# 
   475     0FEE                     	;# 
   476     0FEF                     	;# 
   477     0000                     	;# 
   478     0001                     	;# 
   479     0002                     	;# 
   480     0003                     	;# 
   481     0004                     	;# 
   482     0005                     	;# 
   483     0006                     	;# 
   484     0007                     	;# 
   485     0008                     	;# 
   486     0009                     	;# 
   487     000A                     	;# 
   488     000B                     	;# 
   489     000C                     	;# 
   490     000D                     	;# 
   491     000E                     	;# 
   492     0011                     	;# 
   493     0012                     	;# 
   494     0013                     	;# 
   495     0015                     	;# 
   496     0016                     	;# 
   497     0016                     	;# 
   498     0017                     	;# 
   499     0018                     	;# 
   500     0019                     	;# 
   501     001A                     	;# 
   502     001B                     	;# 
   503     001C                     	;# 
   504     008C                     	;# 
   505     008D                     	;# 
   506     008E                     	;# 
   507     0091                     	;# 
   508     0092                     	;# 
   509     0093                     	;# 
   510     0095                     	;# 
   511     0096                     	;# 
   512     0097                     	;# 
   513     0099                     	;# 
   514     009A                     	;# 
   515     009B                     	;# 
   516     009B                     	;# 
   517     009C                     	;# 
   518     009D                     	;# 
   519     009E                     	;# 
   520     009F                     	;# 
   521     010C                     	;# 
   522     010D                     	;# 
   523     010E                     	;# 
   524     0111                     	;# 
   525     0112                     	;# 
   526     0113                     	;# 
   527     0114                     	;# 
   528     0115                     	;# 
   529     0116                     	;# 
   530     0117                     	;# 
   531     0118                     	;# 
   532     0119                     	;# 
   533     011D                     	;# 
   534     018C                     	;# 
   535     018D                     	;# 
   536     018E                     	;# 
   537     0191                     	;# 
   538     0191                     	;# 
   539     0192                     	;# 
   540     0193                     	;# 
   541     0193                     	;# 
   542     0194                     	;# 
   543     0195                     	;# 
   544     0196                     	;# 
   545     0197                     	;# 
   546     0199                     	;# 
   547     019A                     	;# 
   548     019B                     	;# 
   549     019B                     	;# 
   550     019C                     	;# 
   551     019D                     	;# 
   552     019E                     	;# 
   553     019F                     	;# 
   554     020C                     	;# 
   555     020D                     	;# 
   556     0211                     	;# 
   557     0211                     	;# 
   558     0212                     	;# 
   559     0212                     	;# 
   560     0213                     	;# 
   561     0213                     	;# 
   562     0214                     	;# 
   563     0214                     	;# 
   564     0215                     	;# 
   565     0215                     	;# 
   566     0215                     	;# 
   567     0216                     	;# 
   568     0216                     	;# 
   569     0217                     	;# 
   570     0217                     	;# 
   571     0391                     	;# 
   572     0392                     	;# 
   573     0393                     	;# 
   574     0394                     	;# 
   575     0395                     	;# 
   576     0396                     	;# 
   577     0498                     	;# 
   578     0498                     	;# 
   579     0499                     	;# 
   580     049A                     	;# 
   581     049B                     	;# 
   582     049B                     	;# 
   583     049C                     	;# 
   584     049D                     	;# 
   585     049E                     	;# 
   586     049F                     	;# 
   587     0611                     	;# 
   588     0612                     	;# 
   589     0613                     	;# 
   590     0613                     	;# 
   591     0614                     	;# 
   592     0615                     	;# 
   593     0616                     	;# 
   594     0616                     	;# 
   595     0617                     	;# 
   596     0618                     	;# 
   597     0619                     	;# 
   598     0619                     	;# 
   599     061A                     	;# 
   600     061B                     	;# 
   601     061C                     	;# 
   602     061C                     	;# 
   603     0691                     	;# 
   604     0692                     	;# 
   605     0693                     	;# 
   606     0694                     	;# 
   607     0695                     	;# 
   608     0F0F                     	;# 
   609     0F10                     	;# 
   610     0F11                     	;# 
   611     0F12                     	;# 
   612     0F13                     	;# 
   613     0F14                     	;# 
   614     0F15                     	;# 
   615     0F16                     	;# 
   616     0F17                     	;# 
   617     0F18                     	;# 
   618     0F19                     	;# 
   619     0F1A                     	;# 
   620     0F1B                     	;# 
   621     0F1C                     	;# 
   622     0F1D                     	;# 
   623     0F1E                     	;# 
   624     0F1F                     	;# 
   625     0F20                     	;# 
   626     0F21                     	;# 
   627     0F22                     	;# 
   628     0F23                     	;# 
   629     0F24                     	;# 
   630     0F25                     	;# 
   631     0F26                     	;# 
   632     0F27                     	;# 
   633     0F28                     	;# 
   634     0F29                     	;# 
   635     0F2A                     	;# 
   636     0F2B                     	;# 
   637     0F2C                     	;# 
   638     0F2D                     	;# 
   639     0F2E                     	;# 
   640     0F2F                     	;# 
   641     0F8C                     	;# 
   642     0F8D                     	;# 
   643     0F91                     	;# 
   644     0F95                     	;# 
   645     0F96                     	;# 
   646     0F97                     	;# 
   647     0F9C                     	;# 
   648     0F9D                     	;# 
   649     0F9E                     	;# 
   650     0FE3                     	;# 
   651     0FE4                     	;# 
   652     0FE5                     	;# 
   653     0FE6                     	;# 
   654     0FE7                     	;# 
   655     0FE8                     	;# 
   656     0FE9                     	;# 
   657     0FEA                     	;# 
   658     0FEB                     	;# 
   659     0FED                     	;# 
   660     0FEE                     	;# 
   661     0FEF                     	;# 
   662     0000                     	;# 
   663     0001                     	;# 
   664     0002                     	;# 
   665     0003                     	;# 
   666     0004                     	;# 
   667     0005                     	;# 
   668     0006                     	;# 
   669     0007                     	;# 
   670     0008                     	;# 
   671     0009                     	;# 
   672     000A                     	;# 
   673     000B                     	;# 
   674     000C                     	;# 
   675     000D                     	;# 
   676     000E                     	;# 
   677     0011                     	;# 
   678     0012                     	;# 
   679     0013                     	;# 
   680     0015                     	;# 
   681     0016                     	;# 
   682     0016                     	;# 
   683     0017                     	;# 
   684     0018                     	;# 
   685     0019                     	;# 
   686     001A                     	;# 
   687     001B                     	;# 
   688     001C                     	;# 
   689     008C                     	;# 
   690     008D                     	;# 
   691     008E                     	;# 
   692     0091                     	;# 
   693     0092                     	;# 
   694     0093                     	;# 
   695     0095                     	;# 
   696     0096                     	;# 
   697     0097                     	;# 
   698     0099                     	;# 
   699     009A                     	;# 
   700     009B                     	;# 
   701     009B                     	;# 
   702     009C                     	;# 
   703     009D                     	;# 
   704     009E                     	;# 
   705     009F                     	;# 
   706     010C                     	;# 
   707     010D                     	;# 
   708     010E                     	;# 
   709     0111                     	;# 
   710     0112                     	;# 
   711     0113                     	;# 
   712     0114                     	;# 
   713     0115                     	;# 
   714     0116                     	;# 
   715     0117                     	;# 
   716     0118                     	;# 
   717     0119                     	;# 
   718     011D                     	;# 
   719     018C                     	;# 
   720     018D                     	;# 
   721     018E                     	;# 
   722     0191                     	;# 
   723     0191                     	;# 
   724     0192                     	;# 
   725     0193                     	;# 
   726     0193                     	;# 
   727     0194                     	;# 
   728     0195                     	;# 
   729     0196                     	;# 
   730     0197                     	;# 
   731     0199                     	;# 
   732     019A                     	;# 
   733     019B                     	;# 
   734     019B                     	;# 
   735     019C                     	;# 
   736     019D                     	;# 
   737     019E                     	;# 
   738     019F                     	;# 
   739     020C                     	;# 
   740     020D                     	;# 
   741     0211                     	;# 
   742     0211                     	;# 
   743     0212                     	;# 
   744     0212                     	;# 
   745     0213                     	;# 
   746     0213                     	;# 
   747     0214                     	;# 
   748     0214                     	;# 
   749     0215                     	;# 
   750     0215                     	;# 
   751     0215                     	;# 
   752     0216                     	;# 
   753     0216                     	;# 
   754     0217                     	;# 
   755     0217                     	;# 
   756     0391                     	;# 
   757     0392                     	;# 
   758     0393                     	;# 
   759     0394                     	;# 
   760     0395                     	;# 
   761     0396                     	;# 
   762     0498                     	;# 
   763     0498                     	;# 
   764     0499                     	;# 
   765     049A                     	;# 
   766     049B                     	;# 
   767     049B                     	;# 
   768     049C                     	;# 
   769     049D                     	;# 
   770     049E                     	;# 
   771     049F                     	;# 
   772     0611                     	;# 
   773     0612                     	;# 
   774     0613                     	;# 
   775     0613                     	;# 
   776     0614                     	;# 
   777     0615                     	;# 
   778     0616                     	;# 
   779     0616                     	;# 
   780     0617                     	;# 
   781     0618                     	;# 
   782     0619                     	;# 
   783     0619                     	;# 
   784     061A                     	;# 
   785     061B                     	;# 
   786     061C                     	;# 
   787     061C                     	;# 
   788     0691                     	;# 
   789     0692                     	;# 
   790     0693                     	;# 
   791     0694                     	;# 
   792     0695                     	;# 
   793     0F0F                     	;# 
   794     0F10                     	;# 
   795     0F11                     	;# 
   796     0F12                     	;# 
   797     0F13                     	;# 
   798     0F14                     	;# 
   799     0F15                     	;# 
   800     0F16                     	;# 
   801     0F17                     	;# 
   802     0F18                     	;# 
   803     0F19                     	;# 
   804     0F1A                     	;# 
   805     0F1B                     	;# 
   806     0F1C                     	;# 
   807     0F1D                     	;# 
   808     0F1E                     	;# 
   809     0F1F                     	;# 
   810     0F20                     	;# 
   811     0F21                     	;# 
   812     0F22                     	;# 
   813     0F23                     	;# 
   814     0F24                     	;# 
   815     0F25                     	;# 
   816     0F26                     	;# 
   817     0F27                     	;# 
   818     0F28                     	;# 
   819     0F29                     	;# 
   820     0F2A                     	;# 
   821     0F2B                     	;# 
   822     0F2C                     	;# 
   823     0F2D                     	;# 
   824     0F2E                     	;# 
   825     0F2F                     	;# 
   826     0F8C                     	;# 
   827     0F8D                     	;# 
   828     0F91                     	;# 
   829     0F95                     	;# 
   830     0F96                     	;# 
   831     0F97                     	;# 
   832     0F9C                     	;# 
   833     0F9D                     	;# 
   834     0F9E                     	;# 
   835     0FE3                     	;# 
   836     0FE4                     	;# 
   837     0FE5                     	;# 
   838     0FE6                     	;# 
   839     0FE7                     	;# 
   840     0FE8                     	;# 
   841     0FE9                     	;# 
   842     0FEA                     	;# 
   843     0FEB                     	;# 
   844     0FED                     	;# 
   845     0FEE                     	;# 
   846     0FEF                     	;# 
   847     0000                     	;# 
   848     0001                     	;# 
   849     0002                     	;# 
   850     0003                     	;# 
   851     0004                     	;# 
   852     0005                     	;# 
   853     0006                     	;# 
   854     0007                     	;# 
   855     0008                     	;# 
   856     0009                     	;# 
   857     000A                     	;# 
   858     000B                     	;# 
   859     000C                     	;# 
   860     000D                     	;# 
   861     000E                     	;# 
   862     0011                     	;# 
   863     0012                     	;# 
   864     0013                     	;# 
   865     0015                     	;# 
   866     0016                     	;# 
   867     0016                     	;# 
   868     0017                     	;# 
   869     0018                     	;# 
   870     0019                     	;# 
   871     001A                     	;# 
   872     001B                     	;# 
   873     001C                     	;# 
   874     008C                     	;# 
   875     008D                     	;# 
   876     008E                     	;# 
   877     0091                     	;# 
   878     0092                     	;# 
   879     0093                     	;# 
   880     0095                     	;# 
   881     0096                     	;# 
   882     0097                     	;# 
   883     0099                     	;# 
   884     009A                     	;# 
   885     009B                     	;# 
   886     009B                     	;# 
   887     009C                     	;# 
   888     009D                     	;# 
   889     009E                     	;# 
   890     009F                     	;# 
   891     010C                     	;# 
   892     010D                     	;# 
   893     010E                     	;# 
   894     0111                     	;# 
   895     0112                     	;# 
   896     0113                     	;# 
   897     0114                     	;# 
   898     0115                     	;# 
   899     0116                     	;# 
   900     0117                     	;# 
   901     0118                     	;# 
   902     0119                     	;# 
   903     011D                     	;# 
   904     018C                     	;# 
   905     018D                     	;# 
   906     018E                     	;# 
   907     0191                     	;# 
   908     0191                     	;# 
   909     0192                     	;# 
   910     0193                     	;# 
   911     0193                     	;# 
   912     0194                     	;# 
   913     0195                     	;# 
   914     0196                     	;# 
   915     0197                     	;# 
   916     0199                     	;# 
   917     019A                     	;# 
   918     019B                     	;# 
   919     019B                     	;# 
   920     019C                     	;# 
   921     019D                     	;# 
   922     019E                     	;# 
   923     019F                     	;# 
   924     020C                     	;# 
   925     020D                     	;# 
   926     0211                     	;# 
   927     0211                     	;# 
   928     0212                     	;# 
   929     0212                     	;# 
   930     0213                     	;# 
   931     0213                     	;# 
   932     0214                     	;# 
   933     0214                     	;# 
   934     0215                     	;# 
   935     0215                     	;# 
   936     0215                     	;# 
   937     0216                     	;# 
   938     0216                     	;# 
   939     0217                     	;# 
   940     0217                     	;# 
   941     0391                     	;# 
   942     0392                     	;# 
   943     0393                     	;# 
   944     0394                     	;# 
   945     0395                     	;# 
   946     0396                     	;# 
   947     0498                     	;# 
   948     0498                     	;# 
   949     0499                     	;# 
   950     049A                     	;# 
   951     049B                     	;# 
   952     049B                     	;# 
   953     049C                     	;# 
   954     049D                     	;# 
   955     049E                     	;# 
   956     049F                     	;# 
   957     0611                     	;# 
   958     0612                     	;# 
   959     0613                     	;# 
   960     0613                     	;# 
   961     0614                     	;# 
   962     0615                     	;# 
   963     0616                     	;# 
   964     0616                     	;# 
   965     0617                     	;# 
   966     0618                     	;# 
   967     0619                     	;# 
   968     0619                     	;# 
   969     061A                     	;# 
   970     061B                     	;# 
   971     061C                     	;# 
   972     061C                     	;# 
   973     0691                     	;# 
   974     0692                     	;# 
   975     0693                     	;# 
   976     0694                     	;# 
   977     0695                     	;# 
   978     0F0F                     	;# 
   979     0F10                     	;# 
   980     0F11                     	;# 
   981     0F12                     	;# 
   982     0F13                     	;# 
   983     0F14                     	;# 
   984     0F15                     	;# 
   985     0F16                     	;# 
   986     0F17                     	;# 
   987     0F18                     	;# 
   988     0F19                     	;# 
   989     0F1A                     	;# 
   990     0F1B                     	;# 
   991     0F1C                     	;# 
   992     0F1D                     	;# 
   993     0F1E                     	;# 
   994     0F1F                     	;# 
   995     0F20                     	;# 
   996     0F21                     	;# 
   997     0F22                     	;# 
   998     0F23                     	;# 
   999     0F24                     	;# 
  1000     0F25                     	;# 
  1001     0F26                     	;# 
  1002     0F27                     	;# 
  1003     0F28                     	;# 
  1004     0F29                     	;# 
  1005     0F2A                     	;# 
  1006     0F2B                     	;# 
  1007     0F2C                     	;# 
  1008     0F2D                     	;# 
  1009     0F2E                     	;# 
  1010     0F2F                     	;# 
  1011     0F8C                     	;# 
  1012     0F8D                     	;# 
  1013     0F91                     	;# 
  1014     0F95                     	;# 
  1015     0F96                     	;# 
  1016     0F97                     	;# 
  1017     0F9C                     	;# 
  1018     0F9D                     	;# 
  1019     0F9E                     	;# 
  1020     0FE3                     	;# 
  1021     0FE4                     	;# 
  1022     0FE5                     	;# 
  1023     0FE6                     	;# 
  1024     0FE7                     	;# 
  1025     0FE8                     	;# 
  1026     0FE9                     	;# 
  1027     0FEA                     	;# 
  1028     0FEB                     	;# 
  1029     0FED                     	;# 
  1030     0FEE                     	;# 
  1031     0FEF                     	;# 
  1032     0000                     	;# 
  1033     0001                     	;# 
  1034     0002                     	;# 
  1035     0003                     	;# 
  1036     0004                     	;# 
  1037     0005                     	;# 
  1038     0006                     	;# 
  1039     0007                     	;# 
  1040     0008                     	;# 
  1041     0009                     	;# 
  1042     000A                     	;# 
  1043     000B                     	;# 
  1044     000C                     	;# 
  1045     000D                     	;# 
  1046     000E                     	;# 
  1047     0011                     	;# 
  1048     0012                     	;# 
  1049     0013                     	;# 
  1050     0015                     	;# 
  1051     0016                     	;# 
  1052     0016                     	;# 
  1053     0017                     	;# 
  1054     0018                     	;# 
  1055     0019                     	;# 
  1056     001A                     	;# 
  1057     001B                     	;# 
  1058     001C                     	;# 
  1059     008C                     	;# 
  1060     008D                     	;# 
  1061     008E                     	;# 
  1062     0091                     	;# 
  1063     0092                     	;# 
  1064     0093                     	;# 
  1065     0095                     	;# 
  1066     0096                     	;# 
  1067     0097                     	;# 
  1068     0099                     	;# 
  1069     009A                     	;# 
  1070     009B                     	;# 
  1071     009B                     	;# 
  1072     009C                     	;# 
  1073     009D                     	;# 
  1074     009E                     	;# 
  1075     009F                     	;# 
  1076     010C                     	;# 
  1077     010D                     	;# 
  1078     010E                     	;# 
  1079     0111                     	;# 
  1080     0112                     	;# 
  1081     0113                     	;# 
  1082     0114                     	;# 
  1083     0115                     	;# 
  1084     0116                     	;# 
  1085     0117                     	;# 
  1086     0118                     	;# 
  1087     0119                     	;# 
  1088     011D                     	;# 
  1089     018C                     	;# 
  1090     018D                     	;# 
  1091     018E                     	;# 
  1092     0191                     	;# 
  1093     0191                     	;# 
  1094     0192                     	;# 
  1095     0193                     	;# 
  1096     0193                     	;# 
  1097     0194                     	;# 
  1098     0195                     	;# 
  1099     0196                     	;# 
  1100     0197                     	;# 
  1101     0199                     	;# 
  1102     019A                     	;# 
  1103     019B                     	;# 
  1104     019B                     	;# 
  1105     019C                     	;# 
  1106     019D                     	;# 
  1107     019E                     	;# 
  1108     019F                     	;# 
  1109     020C                     	;# 
  1110     020D                     	;# 
  1111     0211                     	;# 
  1112     0211                     	;# 
  1113     0212                     	;# 
  1114     0212                     	;# 
  1115     0213                     	;# 
  1116     0213                     	;# 
  1117     0214                     	;# 
  1118     0214                     	;# 
  1119     0215                     	;# 
  1120     0215                     	;# 
  1121     0215                     	;# 
  1122     0216                     	;# 
  1123     0216                     	;# 
  1124     0217                     	;# 
  1125     0217                     	;# 
  1126     0391                     	;# 
  1127     0392                     	;# 
  1128     0393                     	;# 
  1129     0394                     	;# 
  1130     0395                     	;# 
  1131     0396                     	;# 
  1132     0498                     	;# 
  1133     0498                     	;# 
  1134     0499                     	;# 
  1135     049A                     	;# 
  1136     049B                     	;# 
  1137     049B                     	;# 
  1138     049C                     	;# 
  1139     049D                     	;# 
  1140     049E                     	;# 
  1141     049F                     	;# 
  1142     0611                     	;# 
  1143     0612                     	;# 
  1144     0613                     	;# 
  1145     0613                     	;# 
  1146     0614                     	;# 
  1147     0615                     	;# 
  1148     0616                     	;# 
  1149     0616                     	;# 
  1150     0617                     	;# 
  1151     0618                     	;# 
  1152     0619                     	;# 
  1153     0619                     	;# 
  1154     061A                     	;# 
  1155     061B                     	;# 
  1156     061C                     	;# 
  1157     061C                     	;# 
  1158     0691                     	;# 
  1159     0692                     	;# 
  1160     0693                     	;# 
  1161     0694                     	;# 
  1162     0695                     	;# 
  1163     0F0F                     	;# 
  1164     0F10                     	;# 
  1165     0F11                     	;# 
  1166     0F12                     	;# 
  1167     0F13                     	;# 
  1168     0F14                     	;# 
  1169     0F15                     	;# 
  1170     0F16                     	;# 
  1171     0F17                     	;# 
  1172     0F18                     	;# 
  1173     0F19                     	;# 
  1174     0F1A                     	;# 
  1175     0F1B                     	;# 
  1176     0F1C                     	;# 
  1177     0F1D                     	;# 
  1178     0F1E                     	;# 
  1179     0F1F                     	;# 
  1180     0F20                     	;# 
  1181     0F21                     	;# 
  1182     0F22                     	;# 
  1183     0F23                     	;# 
  1184     0F24                     	;# 
  1185     0F25                     	;# 
  1186     0F26                     	;# 
  1187     0F27                     	;# 
  1188     0F28                     	;# 
  1189     0F29                     	;# 
  1190     0F2A                     	;# 
  1191     0F2B                     	;# 
  1192     0F2C                     	;# 
  1193     0F2D                     	;# 
  1194     0F2E                     	;# 
  1195     0F2F                     	;# 
  1196     0F8C                     	;# 
  1197     0F8D                     	;# 
  1198     0F91                     	;# 
  1199     0F95                     	;# 
  1200     0F96                     	;# 
  1201     0F97                     	;# 
  1202     0F9C                     	;# 
  1203     0F9D                     	;# 
  1204     0F9E                     	;# 
  1205     0FE3                     	;# 
  1206     0FE4                     	;# 
  1207     0FE5                     	;# 
  1208     0FE6                     	;# 
  1209     0FE7                     	;# 
  1210     0FE8                     	;# 
  1211     0FE9                     	;# 
  1212     0FEA                     	;# 
  1213     0FEB                     	;# 
  1214     0FED                     	;# 
  1215     0FEE                     	;# 
  1216     0FEF                     	;# 
  1217     0000                     	;# 
  1218     0001                     	;# 
  1219     0002                     	;# 
  1220     0003                     	;# 
  1221     0004                     	;# 
  1222     0005                     	;# 
  1223     0006                     	;# 
  1224     0007                     	;# 
  1225     0008                     	;# 
  1226     0009                     	;# 
  1227     000A                     	;# 
  1228     000B                     	;# 
  1229     000C                     	;# 
  1230     000D                     	;# 
  1231     000E                     	;# 
  1232     0011                     	;# 
  1233     0012                     	;# 
  1234     0013                     	;# 
  1235     0015                     	;# 
  1236     0016                     	;# 
  1237     0016                     	;# 
  1238     0017                     	;# 
  1239     0018                     	;# 
  1240     0019                     	;# 
  1241     001A                     	;# 
  1242     001B                     	;# 
  1243     001C                     	;# 
  1244     008C                     	;# 
  1245     008D                     	;# 
  1246     008E                     	;# 
  1247     0091                     	;# 
  1248     0092                     	;# 
  1249     0093                     	;# 
  1250     0095                     	;# 
  1251     0096                     	;# 
  1252     0097                     	;# 
  1253     0099                     	;# 
  1254     009A                     	;# 
  1255     009B                     	;# 
  1256     009B                     	;# 
  1257     009C                     	;# 
  1258     009D                     	;# 
  1259     009E                     	;# 
  1260     009F                     	;# 
  1261     010C                     	;# 
  1262     010D                     	;# 
  1263     010E                     	;# 
  1264     0111                     	;# 
  1265     0112                     	;# 
  1266     0113                     	;# 
  1267     0114                     	;# 
  1268     0115                     	;# 
  1269     0116                     	;# 
  1270     0117                     	;# 
  1271     0118                     	;# 
  1272     0119                     	;# 
  1273     011D                     	;# 
  1274     018C                     	;# 
  1275     018D                     	;# 
  1276     018E                     	;# 
  1277     0191                     	;# 
  1278     0191                     	;# 
  1279     0192                     	;# 
  1280     0193                     	;# 
  1281     0193                     	;# 
  1282     0194                     	;# 
  1283     0195                     	;# 
  1284     0196                     	;# 
  1285     0197                     	;# 
  1286     0199                     	;# 
  1287     019A                     	;# 
  1288     019B                     	;# 
  1289     019B                     	;# 
  1290     019C                     	;# 
  1291     019D                     	;# 
  1292     019E                     	;# 
  1293     019F                     	;# 
  1294     020C                     	;# 
  1295     020D                     	;# 
  1296     0211                     	;# 
  1297     0211                     	;# 
  1298     0212                     	;# 
  1299     0212                     	;# 
  1300     0213                     	;# 
  1301     0213                     	;# 
  1302     0214                     	;# 
  1303     0214                     	;# 
  1304     0215                     	;# 
  1305     0215                     	;# 
  1306     0215                     	;# 
  1307     0216                     	;# 
  1308     0216                     	;# 
  1309     0217                     	;# 
  1310     0217                     	;# 
  1311     0391                     	;# 
  1312     0392                     	;# 
  1313     0393                     	;# 
  1314     0394                     	;# 
  1315     0395                     	;# 
  1316     0396                     	;# 
  1317     0498                     	;# 
  1318     0498                     	;# 
  1319     0499                     	;# 
  1320     049A                     	;# 
  1321     049B                     	;# 
  1322     049B                     	;# 
  1323     049C                     	;# 
  1324     049D                     	;# 
  1325     049E                     	;# 
  1326     049F                     	;# 
  1327     0611                     	;# 
  1328     0612                     	;# 
  1329     0613                     	;# 
  1330     0613                     	;# 
  1331     0614                     	;# 
  1332     0615                     	;# 
  1333     0616                     	;# 
  1334     0616                     	;# 
  1335     0617                     	;# 
  1336     0618                     	;# 
  1337     0619                     	;# 
  1338     0619                     	;# 
  1339     061A                     	;# 
  1340     061B                     	;# 
  1341     061C                     	;# 
  1342     061C                     	;# 
  1343     0691                     	;# 
  1344     0692                     	;# 
  1345     0693                     	;# 
  1346     0694                     	;# 
  1347     0695                     	;# 
  1348     0F0F                     	;# 
  1349     0F10                     	;# 
  1350     0F11                     	;# 
  1351     0F12                     	;# 
  1352     0F13                     	;# 
  1353     0F14                     	;# 
  1354     0F15                     	;# 
  1355     0F16                     	;# 
  1356     0F17                     	;# 
  1357     0F18                     	;# 
  1358     0F19                     	;# 
  1359     0F1A                     	;# 
  1360     0F1B                     	;# 
  1361     0F1C                     	;# 
  1362     0F1D                     	;# 
  1363     0F1E                     	;# 
  1364     0F1F                     	;# 
  1365     0F20                     	;# 
  1366     0F21                     	;# 
  1367     0F22                     	;# 
  1368     0F23                     	;# 
  1369     0F24                     	;# 
  1370     0F25                     	;# 
  1371     0F26                     	;# 
  1372     0F27                     	;# 
  1373     0F28                     	;# 
  1374     0F29                     	;# 
  1375     0F2A                     	;# 
  1376     0F2B                     	;# 
  1377     0F2C                     	;# 
  1378     0F2D                     	;# 
  1379     0F2E                     	;# 
  1380     0F2F                     	;# 
  1381     0F8C                     	;# 
  1382     0F8D                     	;# 
  1383     0F91                     	;# 
  1384     0F95                     	;# 
  1385     0F96                     	;# 
  1386     0F97                     	;# 
  1387     0F9C                     	;# 
  1388     0F9D                     	;# 
  1389     0F9E                     	;# 
  1390     0FE3                     	;# 
  1391     0FE4                     	;# 
  1392     0FE5                     	;# 
  1393     0FE6                     	;# 
  1394     0FE7                     	;# 
  1395     0FE8                     	;# 
  1396     0FE9                     	;# 
  1397     0FEA                     	;# 
  1398     0FEB                     	;# 
  1399     0FED                     	;# 
  1400     0FEE                     	;# 
  1401     0FEF                     	;# 
  1402     0000                     	;# 
  1403     0001                     	;# 
  1404     0002                     	;# 
  1405     0003                     	;# 
  1406     0004                     	;# 
  1407     0005                     	;# 
  1408     0006                     	;# 
  1409     0007                     	;# 
  1410     0008                     	;# 
  1411     0009                     	;# 
  1412     000A                     	;# 
  1413     000B                     	;# 
  1414     000C                     	;# 
  1415     000D                     	;# 
  1416     000E                     	;# 
  1417     0011                     	;# 
  1418     0012                     	;# 
  1419     0013                     	;# 
  1420     0015                     	;# 
  1421     0016                     	;# 
  1422     0016                     	;# 
  1423     0017                     	;# 
  1424     0018                     	;# 
  1425     0019                     	;# 
  1426     001A                     	;# 
  1427     001B                     	;# 
  1428     001C                     	;# 
  1429     008C                     	;# 
  1430     008D                     	;# 
  1431     008E                     	;# 
  1432     0091                     	;# 
  1433     0092                     	;# 
  1434     0093                     	;# 
  1435     0095                     	;# 
  1436     0096                     	;# 
  1437     0097                     	;# 
  1438     0099                     	;# 
  1439     009A                     	;# 
  1440     009B                     	;# 
  1441     009B                     	;# 
  1442     009C                     	;# 
  1443     009D                     	;# 
  1444     009E                     	;# 
  1445     009F                     	;# 
  1446     010C                     	;# 
  1447     010D                     	;# 
  1448     010E                     	;# 
  1449     0111                     	;# 
  1450     0112                     	;# 
  1451     0113                     	;# 
  1452     0114                     	;# 
  1453     0115                     	;# 
  1454     0116                     	;# 
  1455     0117                     	;# 
  1456     0118                     	;# 
  1457     0119                     	;# 
  1458     011D                     	;# 
  1459     018C                     	;# 
  1460     018D                     	;# 
  1461     018E                     	;# 
  1462     0191                     	;# 
  1463     0191                     	;# 
  1464     0192                     	;# 
  1465     0193                     	;# 
  1466     0193                     	;# 
  1467     0194                     	;# 
  1468     0195                     	;# 
  1469     0196                     	;# 
  1470     0197                     	;# 
  1471     0199                     	;# 
  1472     019A                     	;# 
  1473     019B                     	;# 
  1474     019B                     	;# 
  1475     019C                     	;# 
  1476     019D                     	;# 
  1477     019E                     	;# 
  1478     019F                     	;# 
  1479     020C                     	;# 
  1480     020D                     	;# 
  1481     0211                     	;# 
  1482     0211                     	;# 
  1483     0212                     	;# 
  1484     0212                     	;# 
  1485     0213                     	;# 
  1486     0213                     	;# 
  1487     0214                     	;# 
  1488     0214                     	;# 
  1489     0215                     	;# 
  1490     0215                     	;# 
  1491     0215                     	;# 
  1492     0216                     	;# 
  1493     0216                     	;# 
  1494     0217                     	;# 
  1495     0217                     	;# 
  1496     0391                     	;# 
  1497     0392                     	;# 
  1498     0393                     	;# 
  1499     0394                     	;# 
  1500     0395                     	;# 
  1501     0396                     	;# 
  1502     0498                     	;# 
  1503     0498                     	;# 
  1504     0499                     	;# 
  1505     049A                     	;# 
  1506     049B                     	;# 
  1507     049B                     	;# 
  1508     049C                     	;# 
  1509     049D                     	;# 
  1510     049E                     	;# 
  1511     049F                     	;# 
  1512     0611                     	;# 
  1513     0612                     	;# 
  1514     0613                     	;# 
  1515     0613                     	;# 
  1516     0614                     	;# 
  1517     0615                     	;# 
  1518     0616                     	;# 
  1519     0616                     	;# 
  1520     0617                     	;# 
  1521     0618                     	;# 
  1522     0619                     	;# 
  1523     0619                     	;# 
  1524     061A                     	;# 
  1525     061B                     	;# 
  1526     061C                     	;# 
  1527     061C                     	;# 
  1528     0691                     	;# 
  1529     0692                     	;# 
  1530     0693                     	;# 
  1531     0694                     	;# 
  1532     0695                     	;# 
  1533     0F0F                     	;# 
  1534     0F10                     	;# 
  1535     0F11                     	;# 
  1536     0F12                     	;# 
  1537     0F13                     	;# 
  1538     0F14                     	;# 
  1539     0F15                     	;# 
  1540     0F16                     	;# 
  1541     0F17                     	;# 
  1542     0F18                     	;# 
  1543     0F19                     	;# 
  1544     0F1A                     	;# 
  1545     0F1B                     	;# 
  1546     0F1C                     	;# 
  1547     0F1D                     	;# 
  1548     0F1E                     	;# 
  1549     0F1F                     	;# 
  1550     0F20                     	;# 
  1551     0F21                     	;# 
  1552     0F22                     	;# 
  1553     0F23                     	;# 
  1554     0F24                     	;# 
  1555     0F25                     	;# 
  1556     0F26                     	;# 
  1557     0F27                     	;# 
  1558     0F28                     	;# 
  1559     0F29                     	;# 
  1560     0F2A                     	;# 
  1561     0F2B                     	;# 
  1562     0F2C                     	;# 
  1563     0F2D                     	;# 
  1564     0F2E                     	;# 
  1565     0F2F                     	;# 
  1566     0F8C                     	;# 
  1567     0F8D                     	;# 
  1568     0F91                     	;# 
  1569     0F95                     	;# 
  1570     0F96                     	;# 
  1571     0F97                     	;# 
  1572     0F9C                     	;# 
  1573     0F9D                     	;# 
  1574     0F9E                     	;# 
  1575     0FE3                     	;# 
  1576     0FE4                     	;# 
  1577     0FE5                     	;# 
  1578     0FE6                     	;# 
  1579     0FE7                     	;# 
  1580     0FE8                     	;# 
  1581     0FE9                     	;# 
  1582     0FEA                     	;# 
  1583     0FEB                     	;# 
  1584     0FED                     	;# 
  1585     0FEE                     	;# 
  1586     0FEF                     	;# 
  1587     0000                     	;# 
  1588     0001                     	;# 
  1589     0002                     	;# 
  1590     0003                     	;# 
  1591     0004                     	;# 
  1592     0005                     	;# 
  1593     0006                     	;# 
  1594     0007                     	;# 
  1595     0008                     	;# 
  1596     0009                     	;# 
  1597     000A                     	;# 
  1598     000B                     	;# 
  1599     000C                     	;# 
  1600     000D                     	;# 
  1601     000E                     	;# 
  1602     0011                     	;# 
  1603     0012                     	;# 
  1604     0013                     	;# 
  1605     0015                     	;# 
  1606     0016                     	;# 
  1607     0016                     	;# 
  1608     0017                     	;# 
  1609     0018                     	;# 
  1610     0019                     	;# 
  1611     001A                     	;# 
  1612     001B                     	;# 
  1613     001C                     	;# 
  1614     008C                     	;# 
  1615     008D                     	;# 
  1616     008E                     	;# 
  1617     0091                     	;# 
  1618     0092                     	;# 
  1619     0093                     	;# 
  1620     0095                     	;# 
  1621     0096                     	;# 
  1622     0097                     	;# 
  1623     0099                     	;# 
  1624     009A                     	;# 
  1625     009B                     	;# 
  1626     009B                     	;# 
  1627     009C                     	;# 
  1628     009D                     	;# 
  1629     009E                     	;# 
  1630     009F                     	;# 
  1631     010C                     	;# 
  1632     010D                     	;# 
  1633     010E                     	;# 
  1634     0111                     	;# 
  1635     0112                     	;# 
  1636     0113                     	;# 
  1637     0114                     	;# 
  1638     0115                     	;# 
  1639     0116                     	;# 
  1640     0117                     	;# 
  1641     0118                     	;# 
  1642     0119                     	;# 
  1643     011D                     	;# 
  1644     018C                     	;# 
  1645     018D                     	;# 
  1646     018E                     	;# 
  1647     0191                     	;# 
  1648     0191                     	;# 
  1649     0192                     	;# 
  1650     0193                     	;# 
  1651     0193                     	;# 
  1652     0194                     	;# 
  1653     0195                     	;# 
  1654     0196                     	;# 
  1655     0197                     	;# 
  1656     0199                     	;# 
  1657     019A                     	;# 
  1658     019B                     	;# 
  1659     019B                     	;# 
  1660     019C                     	;# 
  1661     019D                     	;# 
  1662     019E                     	;# 
  1663     019F                     	;# 
  1664     020C                     	;# 
  1665     020D                     	;# 
  1666     0211                     	;# 
  1667     0211                     	;# 
  1668     0212                     	;# 
  1669     0212                     	;# 
  1670     0213                     	;# 
  1671     0213                     	;# 
  1672     0214                     	;# 
  1673     0214                     	;# 
  1674     0215                     	;# 
  1675     0215                     	;# 
  1676     0215                     	;# 
  1677     0216                     	;# 
  1678     0216                     	;# 
  1679     0217                     	;# 
  1680     0217                     	;# 
  1681     0391                     	;# 
  1682     0392                     	;# 
  1683     0393                     	;# 
  1684     0394                     	;# 
  1685     0395                     	;# 
  1686     0396                     	;# 
  1687     0498                     	;# 
  1688     0498                     	;# 
  1689     0499                     	;# 
  1690     049A                     	;# 
  1691     049B                     	;# 
  1692     049B                     	;# 
  1693     049C                     	;# 
  1694     049D                     	;# 
  1695     049E                     	;# 
  1696     049F                     	;# 
  1697     0611                     	;# 
  1698     0612                     	;# 
  1699     0613                     	;# 
  1700     0613                     	;# 
  1701     0614                     	;# 
  1702     0615                     	;# 
  1703     0616                     	;# 
  1704     0616                     	;# 
  1705     0617                     	;# 
  1706     0618                     	;# 
  1707     0619                     	;# 
  1708     0619                     	;# 
  1709     061A                     	;# 
  1710     061B                     	;# 
  1711     061C                     	;# 
  1712     061C                     	;# 
  1713     0691                     	;# 
  1714     0692                     	;# 
  1715     0693                     	;# 
  1716     0694                     	;# 
  1717     0695                     	;# 
  1718     0F0F                     	;# 
  1719     0F10                     	;# 
  1720     0F11                     	;# 
  1721     0F12                     	;# 
  1722     0F13                     	;# 
  1723     0F14                     	;# 
  1724     0F15                     	;# 
  1725     0F16                     	;# 
  1726     0F17                     	;# 
  1727     0F18                     	;# 
  1728     0F19                     	;# 
  1729     0F1A                     	;# 
  1730     0F1B                     	;# 
  1731     0F1C                     	;# 
  1732     0F1D                     	;# 
  1733     0F1E                     	;# 
  1734     0F1F                     	;# 
  1735     0F20                     	;# 
  1736     0F21                     	;# 
  1737     0F22                     	;# 
  1738     0F23                     	;# 
  1739     0F24                     	;# 
  1740     0F25                     	;# 
  1741     0F26                     	;# 
  1742     0F27                     	;# 
  1743     0F28                     	;# 
  1744     0F29                     	;# 
  1745     0F2A                     	;# 
  1746     0F2B                     	;# 
  1747     0F2C                     	;# 
  1748     0F2D                     	;# 
  1749     0F2E                     	;# 
  1750     0F2F                     	;# 
  1751     0F8C                     	;# 
  1752     0F8D                     	;# 
  1753     0F91                     	;# 
  1754     0F95                     	;# 
  1755     0F96                     	;# 
  1756     0F97                     	;# 
  1757     0F9C                     	;# 
  1758     0F9D                     	;# 
  1759     0F9E                     	;# 
  1760     0FE3                     	;# 
  1761     0FE4                     	;# 
  1762     0FE5                     	;# 
  1763     0FE6                     	;# 
  1764     0FE7                     	;# 
  1765     0FE8                     	;# 
  1766     0FE9                     	;# 
  1767     0FEA                     	;# 
  1768     0FEB                     	;# 
  1769     0FED                     	;# 
  1770     0FEE                     	;# 
  1771     0FEF                     	;# 
  1772                           
  1773 ;; Function _I2C_SlaveDefWrColInterruptHandler is unused but had its address taken
  1774     0000                     
  1775 ;; Function _I2C_SlaveDefBusColInterruptHandler is unused but had its address taken
  1776     0000                     
  1777                           	psect	stringtext1
  1778     0800                     __pstringtext1:
  1779     0800                     _safety:
  1780     0800  34CD               	retlw	205
  1781     0801  34CC               	retlw	204
  1782     0802  344C               	retlw	76
  1783     0803  3440               	retlw	64
  1784     0804  3466               	retlw	102
  1785     0805  3466               	retlw	102
  1786     0806  3486               	retlw	134
  1787     0807  3440               	retlw	64
  1788     0808  34E2               	retlw	226
  1789     0809  3400               	retlw	0
  1790     080A  34E6               	retlw	230
  1791     080B  3400               	retlw	0
  1792     080C                     __end_of_safety:
  1793                           
  1794                           	psect	nvBANK0
  1795     0068                     __pnvBANK0:
  1796     0068                     _TMR1_InterruptHandler:
  1797     0068                     	ds	2
  1798     006A                     _timer1ReloadVal:
  1799     006A                     	ds	2
  1800     001C                     _T2CONbits	set	28
  1801     001C                     _T2CON	set	28
  1802     001A                     _TMR2	set	26
  1803     001B                     _PR2	set	27
  1804     0019                     _T1GCONbits	set	25
  1805     0018                     _T1CONbits	set	24
  1806     0018                     _T1CON	set	24
  1807     0016                     _TMR1L	set	22
  1808     0017                     _TMR1H	set	23
  1809     0019                     _T1GCON	set	25
  1810     0011                     _PIR1bits	set	17
  1811     0012                     _PIR2bits	set	18
  1812     000B                     _INTCONbits	set	11
  1813     0097                     _WDTCONbits	set	151
  1814     009D                     _ADCON0bits	set	157
  1815     009D                     _ADCON0	set	157
  1816     009C                     _ADRESH	set	156
  1817     009B                     _ADRESL	set	155
  1818     009F                     _ADCON2	set	159
  1819     009E                     _ADCON1	set	158
  1820     0091                     _PIE1bits	set	145
  1821     0092                     _PIE2bits	set	146
  1822     0095                     _OPTION_REGbits	set	149
  1823     008E                     _TRISC	set	142
  1824     008D                     _TRISB	set	141
  1825     008C                     _TRISA	set	140
  1826     0097                     _WDTCON	set	151
  1827     0099                     _OSCCON	set	153
  1828     010D                     _LATBbits	set	269
  1829     010E                     _LATCbits	set	270
  1830     0117                     _FVRCONbits	set	279
  1831     0117                     _FVRCON	set	279
  1832     011D                     _APFCON	set	285
  1833     010E                     _LATC	set	270
  1834     010D                     _LATB	set	269
  1835     010C                     _LATA	set	268
  1836     0116                     _BORCON	set	278
  1837     018C                     _ANSELA	set	396
  1838     018D                     _ANSELB	set	397
  1839     018E                     _ANSELC	set	398
  1840     0211                     _SSP1BUF	set	529
  1841     0216                     _SSP1CON2bits	set	534
  1842     0214                     _SSP1STATbits	set	532
  1843     0213                     _SSP1MSK	set	531
  1844     0212                     _SSP1ADD	set	530
  1845     0215                     _SSP1CON1bits	set	533
  1846     0216                     _SSP1CON2	set	534
  1847     0215                     _SSP1CON1	set	533
  1848     0214                     _SSP1STAT	set	532
  1849     020C                     _WPUA	set	524
  1850     020D                     _WPUB	set	525
  1851                           
  1852                           	psect	cinit
  1853     0037                     start_initialization:	
  1854                           ; #config settings
  1855                           
  1856     0037                     __initialization:
  1857                           
  1858                           ; Clear objects allocated to COMMON
  1859     0037  01F7               	clrf	__pbssCOMMON& (0+127)
  1860     0038  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1861     0039  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1862                           
  1863                           ; Clear objects allocated to BANK0
  1864     003A  3048               	movlw	low __pbssBANK0
  1865     003B  0084               	movwf	4
  1866     003C  3000               	movlw	high __pbssBANK0
  1867     003D  0085               	movwf	5
  1868     003E  3020               	movlw	32
  1869     003F  318D  2576  3180   	fcall	clear_ram0
  1870     0042                     end_of_initialization:	
  1871                           ;End of C runtime variable initialization code
  1872                           
  1873     0042                     __end_of__initialization:
  1874     0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1875     0043  0020               	movlb	0
  1876     0044  3180  2846         	ljmp	_main	;jump to C main() function
  1877                           
  1878                           	psect	bssCOMMON
  1879     0077                     __pbssCOMMON:
  1880     0077                     _i2cSlaveState:
  1881     0077                     	ds	1
  1882     0078                     _i2cRdData:
  1883     0078                     	ds	1
  1884     0079                     _i2cWrData:
  1885     0079                     	ds	1
  1886                           
  1887                           	psect	bssBANK0
  1888     0048                     __pbssBANK0:
  1889     0048                     _memory:
  1890     0048                     	ds	11
  1891     0053                     _converter:
  1892     0053                     	ds	4
  1893     0057                     _ADC_InterruptHandler:
  1894     0057                     	ds	2
  1895     0059                     _I2C_SlaveWrColInterruptHandler:
  1896     0059                     	ds	2
  1897     005B                     _I2C_SlaveBusColInterruptHandler:
  1898     005B                     	ds	2
  1899     005D                     _I2C_SlaveAddrInterruptHandler:
  1900     005D                     	ds	2
  1901     005F                     _I2C_SlaveWrInterruptHandler:
  1902     005F                     	ds	2
  1903     0061                     _I2C_SlaveRdInterruptHandler:
  1904     0061                     	ds	2
  1905     0063                     _MSSP_InterruptHandler:
  1906     0063                     	ds	2
  1907     0065                     _I2C_Command:
  1908     0065                     	ds	1
  1909     0066                     _selectedReference:
  1910     0066                     	ds	1
  1911     0067                     _i2cSlaveAddr:
  1912     0067                     	ds	1
  1913                           
  1914                           	psect	clrtext
  1915     0D76                     clear_ram0:	
  1916                           ;	Called with FSR0 containing the base address, and
  1917                           ;	WREG with the size to clear
  1918                           
  1919     0D76  0064               	clrwdt	;clear the watchdog before getting into this loop
  1920     0D77                     clrloop0:
  1921     0D77  0180               	clrf	0	;clear RAM location pointed to by FSR
  1922     0D78  3101               	addfsr 0,1
  1923     0D79  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1924     0D7A  2D77               	goto	clrloop0	;have we reached the end yet?
  1925     0D7B  3400               	retlw	0	;all done for this memory range, return
  1926                           
  1927                           	psect	cstackBANK1
  1928     00A0                     __pcstackBANK1:
  1929     00A0                     main@Vbit:
  1930                           
  1931                           ; 4 bytes @ 0x0
  1932     00A0                     	ds	4
  1933     00A4                     main@fvr_Test:
  1934                           
  1935                           ; 2 bytes @ 0x4
  1936     00A4                     	ds	2
  1937                           
  1938                           	psect	cstackCOMMON
  1939     0070                     __pcstackCOMMON:
  1940     0070                     ?_I2C_Initialize:
  1941     0070                     ?_PIN_MANAGER_Initialize:	
  1942                           ; 1 bytes @ 0x0
  1943                           
  1944     0070                     ?_OSCILLATOR_Initialize:	
  1945                           ; 1 bytes @ 0x0
  1946                           
  1947     0070                     ?_WDT_Initialize:	
  1948                           ; 1 bytes @ 0x0
  1949                           
  1950     0070                     ?_FVR_Initialize:	
  1951                           ; 1 bytes @ 0x0
  1952                           
  1953     0070                     ?_ADC_Initialize:	
  1954                           ; 1 bytes @ 0x0
  1955                           
  1956     0070                     ?_TMR2_Initialize:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959     0070                     ?_TMR1_Initialize:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962     0070                     ?_TMR1_ISR:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965     0070                     ?_TMR1_DefaultInterruptHandler:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968     0070                     ??_TMR1_DefaultInterruptHandler:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971     0070                     ?_I2C_SlaveOpen:	
  1972                           ; 1 bytes @ 0x0
  1973                           
  1974     0070                     ?_I2C_SlaveSetSlaveAddr:	
  1975                           ; 1 bytes @ 0x0
  1976                           
  1977     0070                     ?_I2C_SlaveSetSlaveMask:	
  1978                           ; 1 bytes @ 0x0
  1979                           
  1980     0070                     ?_I2C_Isr:	
  1981                           ; 1 bytes @ 0x0
  1982                           
  1983     0070                     ?_I2C_SlaveDefWrInterruptHandler:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986     0070                     ?_I2C_SlaveDefRdInterruptHandler:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989     0070                     ??_I2C_SlaveDefRdInterruptHandler:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992     0070                     ?_I2C_SlaveDefAddrInterruptHandler:	
  1993                           ; 1 bytes @ 0x0
  1994                           
  1995     0070                     ??_I2C_SlaveDefAddrInterruptHandler:	
  1996                           ; 1 bytes @ 0x0
  1997                           
  1998     0070                     ?_I2C_SlaveEnableIrq:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001     0070                     ?_I2C_SlaveGetRxData:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004     0070                     ?_I2C_SlaveSendTxData:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007     0070                     ?_I2C_SlaveIsRead:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010     0070                     ??_I2C_SlaveIsRead:	
  2011                           ; 1 bytes @ 0x0
  2012                           
  2013     0070                     ?_I2C_SlaveClearIrq:	
  2014                           ; 1 bytes @ 0x0
  2015                           
  2016     0070                     ??_I2C_SlaveClearIrq:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019     0070                     ?_I2C_SlaveIsAddr:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022     0070                     ??_I2C_SlaveIsAddr:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025     0070                     ?_I2C_SlaveAddrCallBack:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028     0070                     ??_I2C_SlaveAddrCallBack:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031     0070                     ?_I2C_SlaveIsTxBufEmpty:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034     0070                     ??_I2C_SlaveIsTxBufEmpty:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037     0070                     ?_I2C_SlaveWrCallBack:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040     0070                     ?_I2C_SlaveIsRxBufFull:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043     0070                     ??_I2C_SlaveIsRxBufFull:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046     0070                     ?_I2C_SlaveRdCallBack:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049     0070                     ??_I2C_SlaveRdCallBack:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052     0070                     ?_I2C_SlaveReleaseClock:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055     0070                     ??_I2C_SlaveReleaseClock:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058     0070                     ?_sendVSNSDataToMaster:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061     0070                     ?_setDangerSignalLine:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064     0070                     ?_sendAllDatatoMaster:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067     0070                     ?_SYSTEM_Initialize:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070     0070                     ?_INTERRUPT_InterruptManager:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073     0070                     ?_TMR1_WriteTimer:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076     0070                     ?_I2C_Open:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079     0070                     ?_I2C_Read:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082     0070                     ?_I2C_Write:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085     0070                     ?_main:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088     0070                     ?i1_I2C_SlaveSendTxData:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091     0070                     ??i1_I2C_SlaveSendTxData:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094     0070                     ?i1_I2C_SlaveGetRxData:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097     0070                     ??i1_I2C_SlaveGetRxData:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100     0070                     i1I2C_SlaveSendTxData@data:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103     0070                     TMR1_WriteTimer@timerVal:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106                           
  2107                           ; 2 bytes @ 0x0
  2108     0070                     	ds	1
  2109     0071                     ??_I2C_Isr:
  2110     0071                     ??_I2C_SlaveDefWrInterruptHandler:	
  2111                           ; 1 bytes @ 0x1
  2112                           
  2113     0071                     ??_I2C_SlaveWrCallBack:	
  2114                           ; 1 bytes @ 0x1
  2115                           
  2116                           
  2117                           ; 1 bytes @ 0x1
  2118     0071                     	ds	1
  2119     0072                     ??_TMR1_ISR:
  2120     0072                     ??_TMR1_WriteTimer:	
  2121                           ; 1 bytes @ 0x2
  2122                           
  2123                           
  2124                           ; 1 bytes @ 0x2
  2125     0072                     	ds	1
  2126     0073                     ??_I2C_Initialize:
  2127     0073                     ??_PIN_MANAGER_Initialize:	
  2128                           ; 1 bytes @ 0x3
  2129                           
  2130     0073                     ??_OSCILLATOR_Initialize:	
  2131                           ; 1 bytes @ 0x3
  2132                           
  2133     0073                     ??_WDT_Initialize:	
  2134                           ; 1 bytes @ 0x3
  2135                           
  2136     0073                     ??_FVR_Initialize:	
  2137                           ; 1 bytes @ 0x3
  2138                           
  2139     0073                     ??_ADC_Initialize:	
  2140                           ; 1 bytes @ 0x3
  2141                           
  2142     0073                     ??_TMR2_Initialize:	
  2143                           ; 1 bytes @ 0x3
  2144                           
  2145     0073                     ?_TMR1_SetInterruptHandler:	
  2146                           ; 1 bytes @ 0x3
  2147                           
  2148     0073                     ??_I2C_SlaveOpen:	
  2149                           ; 1 bytes @ 0x3
  2150                           
  2151     0073                     ??_I2C_SlaveSetSlaveAddr:	
  2152                           ; 1 bytes @ 0x3
  2153                           
  2154     0073                     ??_I2C_SlaveSetSlaveMask:	
  2155                           ; 1 bytes @ 0x3
  2156                           
  2157     0073                     ?_I2C_SlaveSetIsrHandler:	
  2158                           ; 1 bytes @ 0x3
  2159                           
  2160     0073                     ?_I2C_SlaveSetBusColIntHandler:	
  2161                           ; 1 bytes @ 0x3
  2162                           
  2163     0073                     ?_I2C_SlaveSetWriteIntHandler:	
  2164                           ; 1 bytes @ 0x3
  2165                           
  2166     0073                     ?_I2C_SlaveSetReadIntHandler:	
  2167                           ; 1 bytes @ 0x3
  2168                           
  2169     0073                     ?_I2C_SlaveSetAddrIntHandler:	
  2170                           ; 1 bytes @ 0x3
  2171                           
  2172     0073                     ?_I2C_SlaveSetWrColIntHandler:	
  2173                           ; 1 bytes @ 0x3
  2174                           
  2175     0073                     ??_I2C_SlaveEnableIrq:	
  2176                           ; 1 bytes @ 0x3
  2177                           
  2178     0073                     ??_I2C_SlaveGetRxData:	
  2179                           ; 1 bytes @ 0x3
  2180                           
  2181     0073                     ??_I2C_SlaveSendTxData:	
  2182                           ; 1 bytes @ 0x3
  2183                           
  2184     0073                     ??_setDangerSignalLine:	
  2185                           ; 1 bytes @ 0x3
  2186                           
  2187     0073                     ??_INTERRUPT_InterruptManager:	
  2188                           ; 1 bytes @ 0x3
  2189                           
  2190     0073                     ??_I2C_Read:	
  2191                           ; 1 bytes @ 0x3
  2192                           
  2193     0073                     ??___flge:	
  2194                           ; 1 bytes @ 0x3
  2195                           
  2196     0073                     ?__Umul8_16:	
  2197                           ; 1 bytes @ 0x3
  2198                           
  2199     0073                     ?_ADC_GetConversion:	
  2200                           ; 2 bytes @ 0x3
  2201                           
  2202     0073                     ?___xxtofl:	
  2203                           ; 2 bytes @ 0x3
  2204                           
  2205     0073                     I2C_SlaveSetSlaveAddr@slaveAddr:	
  2206                           ; 4 bytes @ 0x3
  2207                           
  2208     0073                     I2C_SlaveSetSlaveMask@maskAddr:	
  2209                           ; 1 bytes @ 0x3
  2210                           
  2211     0073                     I2C_SlaveSendTxData@data:	
  2212                           ; 1 bytes @ 0x3
  2213                           
  2214     0073                     __Umul8_16@multiplicand:	
  2215                           ; 1 bytes @ 0x3
  2216                           
  2217     0073                     TMR1_SetInterruptHandler@InterruptHandler:	
  2218                           ; 1 bytes @ 0x3
  2219                           
  2220     0073                     I2C_SlaveSetIsrHandler@handler:	
  2221                           ; 2 bytes @ 0x3
  2222                           
  2223     0073                     I2C_SlaveSetReadIntHandler@handler:	
  2224                           ; 2 bytes @ 0x3
  2225                           
  2226     0073                     I2C_SlaveSetWriteIntHandler@handler:	
  2227                           ; 2 bytes @ 0x3
  2228                           
  2229     0073                     I2C_SlaveSetAddrIntHandler@handler:	
  2230                           ; 2 bytes @ 0x3
  2231                           
  2232     0073                     I2C_SlaveSetWrColIntHandler@handler:	
  2233                           ; 2 bytes @ 0x3
  2234                           
  2235     0073                     I2C_SlaveSetBusColIntHandler@handler:	
  2236                           ; 2 bytes @ 0x3
  2237                           
  2238     0073                     ___xxtofl@val:	
  2239                           ; 2 bytes @ 0x3
  2240                           
  2241                           
  2242                           ; 4 bytes @ 0x3
  2243     0073                     	ds	1
  2244     0074                     ??_I2C_Write:
  2245     0074                     I2C_Write@data:	
  2246                           ; 1 bytes @ 0x4
  2247                           
  2248                           
  2249                           ; 1 bytes @ 0x4
  2250     0074                     	ds	1
  2251     0075                     ??_TMR1_Initialize:
  2252     0075                     ??_TMR1_SetInterruptHandler:	
  2253                           ; 1 bytes @ 0x5
  2254                           
  2255     0075                     ??_I2C_SlaveSetIsrHandler:	
  2256                           ; 1 bytes @ 0x5
  2257                           
  2258     0075                     ??_I2C_SlaveSetBusColIntHandler:	
  2259                           ; 1 bytes @ 0x5
  2260                           
  2261     0075                     ??_I2C_SlaveSetWriteIntHandler:	
  2262                           ; 1 bytes @ 0x5
  2263                           
  2264     0075                     ??_I2C_SlaveSetReadIntHandler:	
  2265                           ; 1 bytes @ 0x5
  2266                           
  2267     0075                     ??_I2C_SlaveSetAddrIntHandler:	
  2268                           ; 1 bytes @ 0x5
  2269                           
  2270     0075                     ??_I2C_SlaveSetWrColIntHandler:	
  2271                           ; 1 bytes @ 0x5
  2272                           
  2273     0075                     ?_sendDataToMaster:	
  2274                           ; 1 bytes @ 0x5
  2275                           
  2276     0075                     ??_sendVSNSDataToMaster:	
  2277                           ; 1 bytes @ 0x5
  2278                           
  2279     0075                     ??__Umul8_16:	
  2280                           ; 1 bytes @ 0x5
  2281                           
  2282     0075                     ??_SYSTEM_Initialize:	
  2283                           ; 1 bytes @ 0x5
  2284                           
  2285     0075                     ??_ADC_GetConversion:	
  2286                           ; 1 bytes @ 0x5
  2287                           
  2288     0075                     ??_I2C_Open:	
  2289                           ; 1 bytes @ 0x5
  2290                           
  2291     0075                     sendDataToMaster@toSend:	
  2292                           ; 1 bytes @ 0x5
  2293                           
  2294                           
  2295                           ; 2 bytes @ 0x5
  2296     0075                     	ds	1
  2297     0076                     ADC_GetConversion@channel:
  2298                           
  2299                           ; 1 bytes @ 0x6
  2300     0076                     	ds	1
  2301     0077                     ??_sendDataToMaster:
  2302     0077                     ??_sendAllDatatoMaster:	
  2303                           ; 1 bytes @ 0x7
  2304                           
  2305                           
  2306                           	psect	cstackBANK0
  2307     0020                     __pcstackBANK0:	
  2308                           ; 1 bytes @ 0x7
  2309                           
  2310     0020                     ?___flge:
  2311     0020                     ??___xxtofl:	
  2312                           ; 1 bit 
  2313                           
  2314     0020                     sendDataToMaster@high:	
  2315                           ; 1 bytes @ 0x0
  2316                           
  2317     0020                     setDangerSignalLine@isTurnOff:	
  2318                           ; 1 bytes @ 0x0
  2319                           
  2320     0020                     __Umul8_16@product:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323     0020                     ___flge@ff1:	
  2324                           ; 2 bytes @ 0x0
  2325                           
  2326                           
  2327                           ; 4 bytes @ 0x0
  2328     0020                     	ds	1
  2329     0021                     sendDataToMaster@low:
  2330     0021                     setDangerSignalLine@i:	
  2331                           ; 1 bytes @ 0x1
  2332                           
  2333                           
  2334                           ; 2 bytes @ 0x1
  2335     0021                     	ds	1
  2336     0022                     __Umul8_16@word_mpld:
  2337                           
  2338                           ; 2 bytes @ 0x2
  2339     0022                     	ds	1
  2340     0023                     setDangerSignalLine@i_1261:
  2341                           
  2342                           ; 2 bytes @ 0x3
  2343     0023                     	ds	1
  2344     0024                     __Umul8_16@multiplier:
  2345     0024                     ___xxtofl@sign:	
  2346                           ; 1 bytes @ 0x4
  2347                           
  2348     0024                     ___flge@ff2:	
  2349                           ; 1 bytes @ 0x4
  2350                           
  2351                           
  2352                           ; 4 bytes @ 0x4
  2353     0024                     	ds	1
  2354     0025                     ?___flmul:
  2355     0025                     ___xxtofl@exp:	
  2356                           ; 4 bytes @ 0x5
  2357                           
  2358     0025                     ___flmul@b:	
  2359                           ; 1 bytes @ 0x5
  2360                           
  2361                           
  2362                           ; 4 bytes @ 0x5
  2363     0025                     	ds	1
  2364     0026                     ___xxtofl@arg:
  2365                           
  2366                           ; 4 bytes @ 0x6
  2367     0026                     	ds	3
  2368     0029                     ___flmul@a:
  2369                           
  2370                           ; 4 bytes @ 0x9
  2371     0029                     	ds	1
  2372     002A                     ?___fldiv:
  2373     002A                     ___fldiv@a:	
  2374                           ; 4 bytes @ 0xA
  2375                           
  2376                           
  2377                           ; 4 bytes @ 0xA
  2378     002A                     	ds	3
  2379     002D                     ??___flmul:
  2380                           
  2381                           ; 1 bytes @ 0xD
  2382     002D                     	ds	1
  2383     002E                     ___fldiv@b:
  2384                           
  2385                           ; 4 bytes @ 0xE
  2386     002E                     	ds	4
  2387     0032                     ??___fldiv:
  2388     0032                     ___flmul@sign:	
  2389                           ; 1 bytes @ 0x12
  2390                           
  2391                           
  2392                           ; 1 bytes @ 0x12
  2393     0032                     	ds	1
  2394     0033                     ___flmul@aexp:
  2395                           
  2396                           ; 1 bytes @ 0x13
  2397     0033                     	ds	1
  2398     0034                     ___flmul@grs:
  2399                           
  2400                           ; 4 bytes @ 0x14
  2401     0034                     	ds	3
  2402     0037                     ___fldiv@rem:
  2403                           
  2404                           ; 4 bytes @ 0x17
  2405     0037                     	ds	1
  2406     0038                     ___flmul@bexp:
  2407                           
  2408                           ; 1 bytes @ 0x18
  2409     0038                     	ds	1
  2410     0039                     ___flmul@prod:
  2411                           
  2412                           ; 4 bytes @ 0x19
  2413     0039                     	ds	2
  2414     003B                     ___fldiv@sign:
  2415                           
  2416                           ; 1 bytes @ 0x1B
  2417     003B                     	ds	1
  2418     003C                     ___fldiv@new_exp:
  2419                           
  2420                           ; 2 bytes @ 0x1C
  2421     003C                     	ds	1
  2422     003D                     ___flmul@temp:
  2423                           
  2424                           ; 2 bytes @ 0x1D
  2425     003D                     	ds	1
  2426     003E                     ___fldiv@grs:
  2427                           
  2428                           ; 4 bytes @ 0x1E
  2429     003E                     	ds	4
  2430     0042                     ___fldiv@bexp:
  2431                           
  2432                           ; 1 bytes @ 0x22
  2433     0042                     	ds	1
  2434     0043                     ___fldiv@aexp:
  2435                           
  2436                           ; 1 bytes @ 0x23
  2437     0043                     	ds	1
  2438     0044                     ??_main:
  2439                           
  2440                           ; 1 bytes @ 0x24
  2441     0044                     	ds	4
  2442                           
  2443                           	psect	maintext
  2444     0046                     __pmaintext:	
  2445 ;;
  2446 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2447 ;;
  2448 ;; *************** function _main *****************
  2449 ;; Defined at:
  2450 ;;		line 126 in file "main.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  Vbit            4    0[BANK1 ] float 
  2455 ;;  fvr_Test        2    4[BANK1 ] unsigned short 
  2456 ;;  test            1    0        unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : B1F/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2466 ;;      Params:         0       0       0       0
  2467 ;;      Locals:         0       0       6       0
  2468 ;;      Temps:          0       4       0       0
  2469 ;;      Totals:         0       4       6       0
  2470 ;;Total ram usage:       10 bytes
  2471 ;; Hardware stack levels required when called: 9
  2472 ;; This function calls:
  2473 ;;		_ADC_GetConversion
  2474 ;;		_I2C_Open
  2475 ;;		_I2C_Read
  2476 ;;		_I2C_Write
  2477 ;;		_SYSTEM_Initialize
  2478 ;;		___fldiv
  2479 ;;		___flge
  2480 ;;		___flmul
  2481 ;;		___xxtofl
  2482 ;;		_sendAllDatatoMaster
  2483 ;;		_sendDataToMaster
  2484 ;;		_sendVSNSDataToMaster
  2485 ;;		_setDangerSignalLine
  2486 ;; This function is called by:
  2487 ;;		Startup code after reset
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491     0046                     _main:	
  2492                           ;psect for function _main
  2493                           
  2494     0046                     l3575:	
  2495                           ;incstack = 0
  2496                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2497                           
  2498                           
  2499                           ;main.c: 129:     SYSTEM_Initialize();
  2500     0046  318E  2618  3180   	fcall	_SYSTEM_Initialize
  2501     0049                     l3577:
  2502                           
  2503                           ;main.c: 135:     (INTCONbits.GIE = 1);
  2504     0049  178B               	bsf	11,7	;volatile
  2505     004A                     l3579:
  2506                           
  2507                           ;main.c: 138:     (INTCONbits.PEIE = 1);
  2508     004A  170B               	bsf	11,6	;volatile
  2509                           
  2510                           ;main.c: 146:     I2C_Open();
  2511     004B  318E  26BA  3180   	fcall	_I2C_Open
  2512     004E                     l3581:
  2513                           
  2514                           ;main.c: 147:     WDTCONbits.SWDTEN = 0;
  2515     004E  0021               	movlb	1	; select bank1
  2516     004F  1017               	bcf	23,0	;volatile
  2517     0050                     l3583:
  2518     0050                     l3585:
  2519                           
  2520                           ;main.c: 150:     {;main.c: 151:         if(WDTCONbits.SWDTEN == 1){
  2521     0050  0021               	movlb	1	; select bank1
  2522     0051  1C17               	btfss	23,0	;volatile
  2523     0052  2854               	goto	u3621
  2524     0053  2855               	goto	u3620
  2525     0054                     u3621:
  2526     0054  2856               	goto	l3589
  2527     0055                     u3620:
  2528     0055                     l3587:
  2529     0055  0063               	sleep	;# 
  2530     0056                     l3589:
  2531                           
  2532                           ;main.c: 157:         I2C_Command = I2C_Read();
  2533     0056  318D  250B  3180   	fcall	_I2C_Read
  2534     0059  0020               	movlb	0	; select bank0
  2535     005A  00E5               	movwf	_I2C_Command
  2536                           
  2537                           ;main.c: 159:         switch(I2C_Command){
  2538     005B  28AA               	goto	l3609
  2539     005C                     l3591:
  2540                           
  2541                           ;main.c: 163:                 sendDataToMaster(memory.TSNS1);
  2542     005C  084A               	movf	_memory+2,w
  2543     005D  00F6               	movwf	sendDataToMaster@toSend+1
  2544     005E  0849               	movf	_memory+1,w
  2545     005F  00F5               	movwf	sendDataToMaster@toSend
  2546     0060  318E  264B  3180   	fcall	_sendDataToMaster
  2547                           
  2548                           ;main.c: 164:                 break;
  2549     0063  28E1               	goto	l3611
  2550     0064                     l3593:
  2551                           
  2552                           ;main.c: 166:                 sendDataToMaster(memory.TSNS2);
  2553     0064  084C               	movf	_memory+4,w
  2554     0065  00F6               	movwf	sendDataToMaster@toSend+1
  2555     0066  084B               	movf	_memory+3,w
  2556     0067  00F5               	movwf	sendDataToMaster@toSend
  2557     0068  318E  264B  3180   	fcall	_sendDataToMaster
  2558                           
  2559                           ;main.c: 167:                 break;
  2560     006B  28E1               	goto	l3611
  2561     006C                     l3595:
  2562                           
  2563                           ;main.c: 169:                 sendDataToMaster(memory.TSNS3);
  2564     006C  084E               	movf	_memory+6,w
  2565     006D  00F6               	movwf	sendDataToMaster@toSend+1
  2566     006E  084D               	movf	_memory+5,w
  2567     006F  00F5               	movwf	sendDataToMaster@toSend
  2568     0070  318E  264B  3180   	fcall	_sendDataToMaster
  2569                           
  2570                           ;main.c: 170:                 break;
  2571     0073  28E1               	goto	l3611
  2572     0074                     l3597:
  2573                           
  2574                           ;main.c: 172:                 sendDataToMaster(memory.TSNS4);
  2575     0074  0850               	movf	_memory+8,w
  2576     0075  00F6               	movwf	sendDataToMaster@toSend+1
  2577     0076  084F               	movf	_memory+7,w
  2578     0077  00F5               	movwf	sendDataToMaster@toSend
  2579     0078  318E  264B  3180   	fcall	_sendDataToMaster
  2580                           
  2581                           ;main.c: 173:                 break;
  2582     007B  28E1               	goto	l3611
  2583     007C                     l3599:
  2584                           
  2585                           ;main.c: 175:                 sendDataToMaster(memory.TSNS5);
  2586     007C  0852               	movf	_memory+10,w
  2587     007D  00F6               	movwf	sendDataToMaster@toSend+1
  2588     007E  0851               	movf	_memory+9,w
  2589     007F  00F5               	movwf	sendDataToMaster@toSend
  2590     0080  318E  264B  3180   	fcall	_sendDataToMaster
  2591                           
  2592                           ;main.c: 176:                 break;
  2593     0083  28E1               	goto	l3611
  2594     0084                     l3601:
  2595                           
  2596                           ;main.c: 178:                 sendVSNSDataToMaster();
  2597     0084  318E  26F3  3180   	fcall	_sendVSNSDataToMaster
  2598                           
  2599                           ;main.c: 179:                 break;
  2600     0087  28E1               	goto	l3611
  2601     0088                     l3603:
  2602                           
  2603                           ;main.c: 181:                 I2C_Write(memory.status);
  2604     0088  0848               	movf	_memory,w
  2605     0089  318D  2570  3180   	fcall	_I2C_Write
  2606                           
  2607                           ;main.c: 182:                 break;
  2608     008C  28E1               	goto	l3611
  2609     008D                     l593:	
  2610                           ;main.c: 183:             case Enable_Sleep_WDT:
  2611                           
  2612                           
  2613                           ;main.c: 184:                 WDTCONbits.SWDTEN = 1;
  2614     008D  0021               	movlb	1	; select bank1
  2615     008E  1417               	bsf	23,0	;volatile
  2616                           
  2617                           ;main.c: 185:                 break;
  2618     008F  28E1               	goto	l3611
  2619     0090                     l594:	
  2620                           ;main.c: 186:             case Disable_Sleep_WDT:
  2621                           
  2622                           
  2623                           ;main.c: 187:                 WDTCONbits.SWDTEN = 0;
  2624     0090  0021               	movlb	1	; select bank1
  2625     0091  1017               	bcf	23,0	;volatile
  2626                           
  2627                           ;main.c: 188:                 break;
  2628     0092  28E1               	goto	l3611
  2629     0093                     l595:	
  2630                           ;main.c: 189:             case Start_Balancing:
  2631                           
  2632                           
  2633                           ;main.c: 190:                 T1CONbits.TMR1ON = 1;
  2634     0093  1418               	bsf	24,0	;volatile
  2635                           
  2636                           ;main.c: 191:                 LATBbits.LATB7 = 1;
  2637     0094  0022               	movlb	2	; select bank2
  2638     0095  178D               	bsf	13,7	;volatile
  2639                           
  2640                           ;main.c: 192:                 WDTCONbits.SWDTEN = 0;
  2641     0096  0021               	movlb	1	; select bank1
  2642     0097  1017               	bcf	23,0	;volatile
  2643                           
  2644                           ;main.c: 193:                 break;
  2645     0098  28E1               	goto	l3611
  2646     0099                     l596:	
  2647                           ;main.c: 194:             case Stop_Balancing:
  2648                           
  2649                           
  2650                           ;main.c: 195:                 T1CONbits.TMR1ON = 0;
  2651     0099  1018               	bcf	24,0	;volatile
  2652                           
  2653                           ;main.c: 196:                 LATBbits.LATB7 = 0;
  2654     009A  0022               	movlb	2	; select bank2
  2655     009B  138D               	bcf	13,7	;volatile
  2656                           
  2657                           ;main.c: 197:                 WDTCONbits.SWDTEN = 1;
  2658     009C  0021               	movlb	1	; select bank1
  2659     009D  1417               	bsf	23,0	;volatile
  2660                           
  2661                           ;main.c: 198:                 break;
  2662     009E  28E1               	goto	l3611
  2663     009F                     l3605:
  2664                           
  2665                           ;main.c: 200:                 setDangerSignalLine(1);
  2666     009F  3001               	movlw	1
  2667     00A0  318F  272E  3180   	fcall	_setDangerSignalLine
  2668                           
  2669                           ;main.c: 201:                 break;
  2670     00A3  28E1               	goto	l3611
  2671     00A4                     l3607:
  2672                           
  2673                           ;main.c: 203:                 sendAllDatatoMaster();
  2674     00A4  318E  2689  3180   	fcall	_sendAllDatatoMaster
  2675                           
  2676                           ;main.c: 204:                 break;
  2677     00A7  28E1               	goto	l3611
  2678     00A8                     l599:	
  2679                           ;main.c: 205:             case Controller_Restart:
  2680                           
  2681     00A8  0001               	reset	;# 
  2682                           
  2683                           ;main.c: 207:         }
  2684     00A9  28E1               	goto	l3611
  2685     00AA                     l3609:
  2686     00AA  0865               	movf	_I2C_Command,w
  2687     00AB  00C4               	movwf	??_main
  2688     00AC  01C5               	clrf	??_main+1
  2689                           
  2690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2691                           ; Switch size 1, requested type "simple"
  2692                           ; Number of cases is 1, Range of values is 0 to 0
  2693                           ; switch strategies available:
  2694                           ; Name         Instructions Cycles
  2695                           ; simple_byte            4     3 (average)
  2696                           ; direct_byte            8     6 (fixed)
  2697                           ; jumptable            260     6 (fixed)
  2698                           ;	Chosen strategy is simple_byte
  2699     00AD  0845               	movf	??_main+1,w
  2700     00AE  3A00               	xorlw	0	; case 0
  2701     00AF  1903               	skipnz
  2702     00B0  28B2               	goto	l3747
  2703     00B1  28E1               	goto	l3611
  2704     00B2                     l3747:
  2705                           
  2706                           ; Switch size 1, requested type "simple"
  2707                           ; Number of cases is 15, Range of values is 0 to 14
  2708                           ; switch strategies available:
  2709                           ; Name         Instructions Cycles
  2710                           ; direct_byte           36     6 (fixed)
  2711                           ; simple_byte           46    24 (average)
  2712                           ; jumptable            260     6 (fixed)
  2713                           ;	Chosen strategy is simple_byte
  2714     00B2  0844               	movf	??_main,w
  2715     00B3  3A00               	xorlw	0	; case 0
  2716     00B4  1903               	skipnz
  2717     00B5  28E1               	goto	l3611
  2718     00B6  3A01               	xorlw	1	; case 1
  2719     00B7  1903               	skipnz
  2720     00B8  285C               	goto	l3591
  2721     00B9  3A03               	xorlw	3	; case 2
  2722     00BA  1903               	skipnz
  2723     00BB  2864               	goto	l3593
  2724     00BC  3A01               	xorlw	1	; case 3
  2725     00BD  1903               	skipnz
  2726     00BE  286C               	goto	l3595
  2727     00BF  3A07               	xorlw	7	; case 4
  2728     00C0  1903               	skipnz
  2729     00C1  2874               	goto	l3597
  2730     00C2  3A01               	xorlw	1	; case 5
  2731     00C3  1903               	skipnz
  2732     00C4  287C               	goto	l3599
  2733     00C5  3A03               	xorlw	3	; case 6
  2734     00C6  1903               	skipnz
  2735     00C7  2884               	goto	l3601
  2736     00C8  3A01               	xorlw	1	; case 7
  2737     00C9  1903               	skipnz
  2738     00CA  2888               	goto	l3603
  2739     00CB  3A0F               	xorlw	15	; case 8
  2740     00CC  1903               	skipnz
  2741     00CD  288D               	goto	l593
  2742     00CE  3A01               	xorlw	1	; case 9
  2743     00CF  1903               	skipnz
  2744     00D0  2890               	goto	l594
  2745     00D1  3A03               	xorlw	3	; case 10
  2746     00D2  1903               	skipnz
  2747     00D3  2893               	goto	l595
  2748     00D4  3A01               	xorlw	1	; case 11
  2749     00D5  1903               	skipnz
  2750     00D6  2899               	goto	l596
  2751     00D7  3A07               	xorlw	7	; case 12
  2752     00D8  1903               	skipnz
  2753     00D9  289F               	goto	l3605
  2754     00DA  3A01               	xorlw	1	; case 13
  2755     00DB  1903               	skipnz
  2756     00DC  28A4               	goto	l3607
  2757     00DD  3A03               	xorlw	3	; case 14
  2758     00DE  1903               	skipnz
  2759     00DF  28A8               	goto	l599
  2760     00E0  28E1               	goto	l3611
  2761     00E1                     l3611:
  2762                           
  2763                           ;main.c: 208:         SSP1BUF = 0x00;
  2764     00E1  0024               	movlb	4	; select bank4
  2765     00E2  0191               	clrf	17	;volatile
  2766     00E3                     l3613:
  2767                           
  2768                           ;main.c: 209:         if(T1CONbits.TMR1ON == 1){
  2769     00E3  0020               	movlb	0	; select bank0
  2770     00E4  1C18               	btfss	24,0	;volatile
  2771     00E5  28E7               	goto	u3631
  2772     00E6  28E8               	goto	u3630
  2773     00E7                     u3631:
  2774     00E7  2905               	goto	l600
  2775     00E8                     u3630:
  2776     00E8                     l3615:
  2777                           
  2778                           ;main.c: 210:             LATBbits.LATB7 = 1;
  2779     00E8  0022               	movlb	2	; select bank2
  2780     00E9  178D               	bsf	13,7	;volatile
  2781     00EA                     l3617:
  2782                           
  2783                           ;main.c: 211:             _delay((unsigned long)((900)*(16000000/4000.0)));
  2784     00EA  3013               	movlw	19
  2785     00EB  0020               	movlb	0	; select bank0
  2786     00EC  00C5               	movwf	??_main+1
  2787     00ED  3044               	movlw	68
  2788     00EE  00C4               	movwf	??_main
  2789     00EF  3044               	movlw	68
  2790     00F0                     u3767:
  2791     00F0  0B89               	decfsz	9,f
  2792     00F1  28F0               	goto	u3767
  2793     00F2  0BC4               	decfsz	??_main,f
  2794     00F3  28F0               	goto	u3767
  2795     00F4  0BC5               	decfsz	??_main+1,f
  2796     00F5  28F0               	goto	u3767
  2797     00F6  0000               	nop
  2798     00F7                     l3619:
  2799                           
  2800                           ;main.c: 212:             LATBbits.LATB7 = 0;
  2801     00F7  0022               	movlb	2	; select bank2
  2802     00F8  138D               	bcf	13,7	;volatile
  2803                           
  2804                           ;main.c: 213:             _delay((unsigned long)((100)*(16000000/4000.0)));
  2805     00F9  3003               	movlw	3
  2806     00FA  0020               	movlb	0	; select bank0
  2807     00FB  00C5               	movwf	??_main+1
  2808     00FC  3008               	movlw	8
  2809     00FD  00C4               	movwf	??_main
  2810     00FE  3077               	movlw	119
  2811     00FF                     u3777:
  2812     00FF  0B89               	decfsz	9,f
  2813     0100  28FF               	goto	u3777
  2814     0101  0BC4               	decfsz	??_main,f
  2815     0102  28FF               	goto	u3777
  2816     0103  0BC5               	decfsz	??_main+1,f
  2817     0104  28FF               	goto	u3777
  2818     0105                     l600:	
  2819                           ;main.c: 214:         }
  2820                           
  2821                           
  2822                           ;main.c: 215:         selectedReference = TSNS1;
  2823     0105  3002               	movlw	2
  2824     0106  0020               	movlb	0	; select bank0
  2825     0107  00E6               	movwf	_selectedReference
  2826     0108                     l3621:
  2827                           
  2828                           ;main.c: 216:         memory.TSNS1 = (uint16_t) ADC_GetConversion(selectedReference);
  2829     0108  3002               	movlw	2
  2830     0109  3187  27E5  3180   	fcall	_ADC_GetConversion
  2831     010C  0874               	movf	?_ADC_GetConversion+1,w
  2832     010D  0020               	movlb	0	; select bank0
  2833     010E  00CA               	movwf	_memory+2
  2834     010F  0873               	movf	?_ADC_GetConversion,w
  2835     0110  00C9               	movwf	_memory+1
  2836     0111                     l3623:
  2837                           
  2838                           ;main.c: 217:         if(memory.TSNS1 <= safety.HIGH_TEMP){
  2839     0111  3008               	movlw	low ((_safety+8)| (0+32768))
  2840     0112  0084               	movwf	4
  2841     0113  3088               	movlw	high ((_safety+8)| (0+32768))
  2842     0114  0085               	movwf	5
  2843     0115  3F00               	moviw [0]fsr0
  2844     0116  00C4               	movwf	??_main
  2845     0117  3F01               	moviw [1]fsr0
  2846     0118  00C5               	movwf	??_main+1
  2847     0119  084A               	movf	_memory+2,w
  2848     011A  0245               	subwf	??_main+1,w
  2849     011B  1D03               	skipz
  2850     011C  291F               	goto	u3645
  2851     011D  0849               	movf	_memory+1,w
  2852     011E  0244               	subwf	??_main,w
  2853     011F                     u3645:
  2854     011F  1C03               	skipc
  2855     0120  2922               	goto	u3641
  2856     0121  2923               	goto	u3640
  2857     0122                     u3641:
  2858     0122  2925               	goto	l3627
  2859     0123                     u3640:
  2860     0123                     l3625:
  2861                           
  2862                           ;main.c: 218:             LATCbits.LATC1 = 0;
  2863     0123  0022               	movlb	2	; select bank2
  2864     0124  108E               	bcf	14,1	;volatile
  2865     0125                     l3627:
  2866                           
  2867                           ;main.c: 221:         if(memory.TSNS1 <= safety.WARN_TEMP){
  2868     0125  300A               	movlw	low ((_safety+10)| (0+32768))
  2869     0126  0084               	movwf	4
  2870     0127  3088               	movlw	high ((_safety+10)| (0+32768))
  2871     0128  0085               	movwf	5
  2872     0129  3F00               	moviw [0]fsr0
  2873     012A  0020               	movlb	0	; select bank0
  2874     012B  00C4               	movwf	??_main
  2875     012C  3F01               	moviw [1]fsr0
  2876     012D  00C5               	movwf	??_main+1
  2877     012E  084A               	movf	_memory+2,w
  2878     012F  0245               	subwf	??_main+1,w
  2879     0130  1D03               	skipz
  2880     0131  2934               	goto	u3655
  2881     0132  0849               	movf	_memory+1,w
  2882     0133  0244               	subwf	??_main,w
  2883     0134                     u3655:
  2884     0134  1C03               	skipc
  2885     0135  2937               	goto	u3651
  2886     0136  2938               	goto	u3650
  2887     0137                     u3651:
  2888     0137  293B               	goto	l602
  2889     0138                     u3650:
  2890     0138                     l3629:
  2891                           
  2892                           ;main.c: 222:             LATCbits.LATC2 = 0;
  2893     0138  0022               	movlb	2	; select bank2
  2894     0139  110E               	bcf	14,2	;volatile
  2895                           
  2896                           ;main.c: 223:         }else{
  2897     013A  293D               	goto	l3631
  2898     013B                     l602:
  2899                           
  2900                           ;main.c: 224:             LATCbits.LATC2 = 1;
  2901     013B  0022               	movlb	2	; select bank2
  2902     013C  150E               	bsf	14,2	;volatile
  2903     013D                     l3631:
  2904                           
  2905                           ;main.c: 227:         selectedReference = TSNS2;
  2906     013D  3003               	movlw	3
  2907     013E  0020               	movlb	0	; select bank0
  2908     013F  00E6               	movwf	_selectedReference
  2909     0140                     l3633:
  2910                           
  2911                           ;main.c: 228:         memory.TSNS2 = (uint16_t) ADC_GetConversion(selectedReference);
  2912     0140  3003               	movlw	3
  2913     0141  3187  27E5  3180   	fcall	_ADC_GetConversion
  2914     0144  0874               	movf	?_ADC_GetConversion+1,w
  2915     0145  0020               	movlb	0	; select bank0
  2916     0146  00CC               	movwf	_memory+4
  2917     0147  0873               	movf	?_ADC_GetConversion,w
  2918     0148  00CB               	movwf	_memory+3
  2919     0149                     l3635:
  2920                           
  2921                           ;main.c: 229:         if(memory.TSNS2 <= safety.HIGH_TEMP){
  2922     0149  3008               	movlw	low ((_safety+8)| (0+32768))
  2923     014A  0084               	movwf	4
  2924     014B  3088               	movlw	high ((_safety+8)| (0+32768))
  2925     014C  0085               	movwf	5
  2926     014D  3F00               	moviw [0]fsr0
  2927     014E  00C4               	movwf	??_main
  2928     014F  3F01               	moviw [1]fsr0
  2929     0150  00C5               	movwf	??_main+1
  2930     0151  084C               	movf	_memory+4,w
  2931     0152  0245               	subwf	??_main+1,w
  2932     0153  1D03               	skipz
  2933     0154  2957               	goto	u3665
  2934     0155  084B               	movf	_memory+3,w
  2935     0156  0244               	subwf	??_main,w
  2936     0157                     u3665:
  2937     0157  1C03               	skipc
  2938     0158  295A               	goto	u3661
  2939     0159  295B               	goto	u3660
  2940     015A                     u3661:
  2941     015A  295D               	goto	l3639
  2942     015B                     u3660:
  2943     015B                     l3637:
  2944                           
  2945                           ;main.c: 230:             LATCbits.LATC1 = 0;
  2946     015B  0022               	movlb	2	; select bank2
  2947     015C  108E               	bcf	14,1	;volatile
  2948     015D                     l3639:
  2949                           
  2950                           ;main.c: 233:         if(memory.TSNS2 <= safety.WARN_TEMP){
  2951     015D  300A               	movlw	low ((_safety+10)| (0+32768))
  2952     015E  0084               	movwf	4
  2953     015F  3088               	movlw	high ((_safety+10)| (0+32768))
  2954     0160  0085               	movwf	5
  2955     0161  3F00               	moviw [0]fsr0
  2956     0162  0020               	movlb	0	; select bank0
  2957     0163  00C4               	movwf	??_main
  2958     0164  3F01               	moviw [1]fsr0
  2959     0165  00C5               	movwf	??_main+1
  2960     0166  084C               	movf	_memory+4,w
  2961     0167  0245               	subwf	??_main+1,w
  2962     0168  1D03               	skipz
  2963     0169  296C               	goto	u3675
  2964     016A  084B               	movf	_memory+3,w
  2965     016B  0244               	subwf	??_main,w
  2966     016C                     u3675:
  2967     016C  1C03               	skipc
  2968     016D  296F               	goto	u3671
  2969     016E  2970               	goto	u3670
  2970     016F                     u3671:
  2971     016F  2973               	goto	l605
  2972     0170                     u3670:
  2973     0170                     l3641:
  2974                           
  2975                           ;main.c: 234:             LATCbits.LATC2 = 0;
  2976     0170  0022               	movlb	2	; select bank2
  2977     0171  110E               	bcf	14,2	;volatile
  2978                           
  2979                           ;main.c: 235:         }else{
  2980     0172  2975               	goto	l3643
  2981     0173                     l605:
  2982                           
  2983                           ;main.c: 236:             LATCbits.LATC2 = 1;
  2984     0173  0022               	movlb	2	; select bank2
  2985     0174  150E               	bsf	14,2	;volatile
  2986     0175                     l3643:
  2987                           
  2988                           ;main.c: 239:         selectedReference = TSNS3;
  2989     0175  3007               	movlw	7
  2990     0176  0020               	movlb	0	; select bank0
  2991     0177  00E6               	movwf	_selectedReference
  2992     0178                     l3645:
  2993                           
  2994                           ;main.c: 240:         memory.TSNS3 = (uint16_t) ADC_GetConversion(selectedReference);
  2995     0178  3007               	movlw	7
  2996     0179  3187  27E5  3180   	fcall	_ADC_GetConversion
  2997     017C  0874               	movf	?_ADC_GetConversion+1,w
  2998     017D  0020               	movlb	0	; select bank0
  2999     017E  00CE               	movwf	_memory+6
  3000     017F  0873               	movf	?_ADC_GetConversion,w
  3001     0180  00CD               	movwf	_memory+5
  3002     0181                     l3647:
  3003                           
  3004                           ;main.c: 241:         if(memory.TSNS3 <= safety.HIGH_TEMP){
  3005     0181  3008               	movlw	low ((_safety+8)| (0+32768))
  3006     0182  0084               	movwf	4
  3007     0183  3088               	movlw	high ((_safety+8)| (0+32768))
  3008     0184  0085               	movwf	5
  3009     0185  3F00               	moviw [0]fsr0
  3010     0186  00C4               	movwf	??_main
  3011     0187  3F01               	moviw [1]fsr0
  3012     0188  00C5               	movwf	??_main+1
  3013     0189  084E               	movf	_memory+6,w
  3014     018A  0245               	subwf	??_main+1,w
  3015     018B  1D03               	skipz
  3016     018C  298F               	goto	u3685
  3017     018D  084D               	movf	_memory+5,w
  3018     018E  0244               	subwf	??_main,w
  3019     018F                     u3685:
  3020     018F  1C03               	skipc
  3021     0190  2992               	goto	u3681
  3022     0191  2993               	goto	u3680
  3023     0192                     u3681:
  3024     0192  2995               	goto	l3651
  3025     0193                     u3680:
  3026     0193                     l3649:
  3027                           
  3028                           ;main.c: 242:             LATCbits.LATC1 = 0;
  3029     0193  0022               	movlb	2	; select bank2
  3030     0194  108E               	bcf	14,1	;volatile
  3031     0195                     l3651:
  3032                           
  3033                           ;main.c: 245:         if(memory.TSNS3 <= safety.WARN_TEMP){
  3034     0195  300A               	movlw	low ((_safety+10)| (0+32768))
  3035     0196  0084               	movwf	4
  3036     0197  3088               	movlw	high ((_safety+10)| (0+32768))
  3037     0198  0085               	movwf	5
  3038     0199  3F00               	moviw [0]fsr0
  3039     019A  0020               	movlb	0	; select bank0
  3040     019B  00C4               	movwf	??_main
  3041     019C  3F01               	moviw [1]fsr0
  3042     019D  00C5               	movwf	??_main+1
  3043     019E  084E               	movf	_memory+6,w
  3044     019F  0245               	subwf	??_main+1,w
  3045     01A0  1D03               	skipz
  3046     01A1  29A4               	goto	u3695
  3047     01A2  084D               	movf	_memory+5,w
  3048     01A3  0244               	subwf	??_main,w
  3049     01A4                     u3695:
  3050     01A4  1C03               	skipc
  3051     01A5  29A7               	goto	u3691
  3052     01A6  29A8               	goto	u3690
  3053     01A7                     u3691:
  3054     01A7  29AB               	goto	l608
  3055     01A8                     u3690:
  3056     01A8                     l3653:
  3057                           
  3058                           ;main.c: 246:             LATCbits.LATC2 = 0;
  3059     01A8  0022               	movlb	2	; select bank2
  3060     01A9  110E               	bcf	14,2	;volatile
  3061                           
  3062                           ;main.c: 247:         }else{
  3063     01AA  29AD               	goto	l3655
  3064     01AB                     l608:
  3065                           
  3066                           ;main.c: 248:             LATCbits.LATC2 = 1;
  3067     01AB  0022               	movlb	2	; select bank2
  3068     01AC  150E               	bsf	14,2	;volatile
  3069     01AD                     l3655:
  3070                           
  3071                           ;main.c: 251:         selectedReference = TSNS4;
  3072     01AD  3008               	movlw	8
  3073     01AE  0020               	movlb	0	; select bank0
  3074     01AF  00E6               	movwf	_selectedReference
  3075     01B0                     l3657:
  3076                           
  3077                           ;main.c: 252:         memory.TSNS4 = (uint16_t) ADC_GetConversion(selectedReference);
  3078     01B0  3008               	movlw	8
  3079     01B1  3187  27E5  3180   	fcall	_ADC_GetConversion
  3080     01B4  0874               	movf	?_ADC_GetConversion+1,w
  3081     01B5  0020               	movlb	0	; select bank0
  3082     01B6  00D0               	movwf	_memory+8
  3083     01B7  0873               	movf	?_ADC_GetConversion,w
  3084     01B8  00CF               	movwf	_memory+7
  3085     01B9                     l3659:
  3086                           
  3087                           ;main.c: 253:         if(memory.TSNS4 <= safety.HIGH_TEMP){
  3088     01B9  3008               	movlw	low ((_safety+8)| (0+32768))
  3089     01BA  0084               	movwf	4
  3090     01BB  3088               	movlw	high ((_safety+8)| (0+32768))
  3091     01BC  0085               	movwf	5
  3092     01BD  3F00               	moviw [0]fsr0
  3093     01BE  00C4               	movwf	??_main
  3094     01BF  3F01               	moviw [1]fsr0
  3095     01C0  00C5               	movwf	??_main+1
  3096     01C1  0850               	movf	_memory+8,w
  3097     01C2  0245               	subwf	??_main+1,w
  3098     01C3  1D03               	skipz
  3099     01C4  29C7               	goto	u3705
  3100     01C5  084F               	movf	_memory+7,w
  3101     01C6  0244               	subwf	??_main,w
  3102     01C7                     u3705:
  3103     01C7  1C03               	skipc
  3104     01C8  29CA               	goto	u3701
  3105     01C9  29CB               	goto	u3700
  3106     01CA                     u3701:
  3107     01CA  29CD               	goto	l3663
  3108     01CB                     u3700:
  3109     01CB                     l3661:
  3110                           
  3111                           ;main.c: 254:             LATCbits.LATC1 = 0;
  3112     01CB  0022               	movlb	2	; select bank2
  3113     01CC  108E               	bcf	14,1	;volatile
  3114     01CD                     l3663:
  3115                           
  3116                           ;main.c: 257:         if(memory.TSNS4 <= safety.WARN_TEMP){
  3117     01CD  300A               	movlw	low ((_safety+10)| (0+32768))
  3118     01CE  0084               	movwf	4
  3119     01CF  3088               	movlw	high ((_safety+10)| (0+32768))
  3120     01D0  0085               	movwf	5
  3121     01D1  3F00               	moviw [0]fsr0
  3122     01D2  0020               	movlb	0	; select bank0
  3123     01D3  00C4               	movwf	??_main
  3124     01D4  3F01               	moviw [1]fsr0
  3125     01D5  00C5               	movwf	??_main+1
  3126     01D6  0850               	movf	_memory+8,w
  3127     01D7  0245               	subwf	??_main+1,w
  3128     01D8  1D03               	skipz
  3129     01D9  29DC               	goto	u3715
  3130     01DA  084F               	movf	_memory+7,w
  3131     01DB  0244               	subwf	??_main,w
  3132     01DC                     u3715:
  3133     01DC  1C03               	skipc
  3134     01DD  29DF               	goto	u3711
  3135     01DE  29E0               	goto	u3710
  3136     01DF                     u3711:
  3137     01DF  29E3               	goto	l611
  3138     01E0                     u3710:
  3139     01E0                     l3665:
  3140                           
  3141                           ;main.c: 258:             LATCbits.LATC2 = 0;
  3142     01E0  0022               	movlb	2	; select bank2
  3143     01E1  110E               	bcf	14,2	;volatile
  3144                           
  3145                           ;main.c: 259:         }else{
  3146     01E2  29E5               	goto	l3667
  3147     01E3                     l611:
  3148                           
  3149                           ;main.c: 260:             LATCbits.LATC2 = 1;
  3150     01E3  0022               	movlb	2	; select bank2
  3151     01E4  150E               	bsf	14,2	;volatile
  3152     01E5                     l3667:
  3153                           
  3154                           ;main.c: 262:         selectedReference = TSNS5;
  3155     01E5  3009               	movlw	9
  3156     01E6  0020               	movlb	0	; select bank0
  3157     01E7  00E6               	movwf	_selectedReference
  3158     01E8                     l3669:
  3159                           
  3160                           ;main.c: 263:         memory.TSNS5 = (uint16_t) ADC_GetConversion(selectedReference);
  3161     01E8  3009               	movlw	9
  3162     01E9  3187  27E5  3180   	fcall	_ADC_GetConversion
  3163     01EC  0874               	movf	?_ADC_GetConversion+1,w
  3164     01ED  0020               	movlb	0	; select bank0
  3165     01EE  00D2               	movwf	_memory+10
  3166     01EF  0873               	movf	?_ADC_GetConversion,w
  3167     01F0  00D1               	movwf	_memory+9
  3168     01F1                     l3671:
  3169                           
  3170                           ;main.c: 264:         if(memory.TSNS5 <= safety.HIGH_TEMP){
  3171     01F1  3008               	movlw	low ((_safety+8)| (0+32768))
  3172     01F2  0084               	movwf	4
  3173     01F3  3088               	movlw	high ((_safety+8)| (0+32768))
  3174     01F4  0085               	movwf	5
  3175     01F5  3F00               	moviw [0]fsr0
  3176     01F6  00C4               	movwf	??_main
  3177     01F7  3F01               	moviw [1]fsr0
  3178     01F8  00C5               	movwf	??_main+1
  3179     01F9  0852               	movf	_memory+10,w
  3180     01FA  0245               	subwf	??_main+1,w
  3181     01FB  1D03               	skipz
  3182     01FC  29FF               	goto	u3725
  3183     01FD  0851               	movf	_memory+9,w
  3184     01FE  0244               	subwf	??_main,w
  3185     01FF                     u3725:
  3186     01FF  1C03               	skipc
  3187     0200  2A02               	goto	u3721
  3188     0201  2A03               	goto	u3720
  3189     0202                     u3721:
  3190     0202  2A05               	goto	l3675
  3191     0203                     u3720:
  3192     0203                     l3673:
  3193                           
  3194                           ;main.c: 265:             LATCbits.LATC1 = 0;
  3195     0203  0022               	movlb	2	; select bank2
  3196     0204  108E               	bcf	14,1	;volatile
  3197     0205                     l3675:
  3198                           
  3199                           ;main.c: 268:         if(memory.TSNS5 <= safety.WARN_TEMP){
  3200     0205  300A               	movlw	low ((_safety+10)| (0+32768))
  3201     0206  0084               	movwf	4
  3202     0207  3088               	movlw	high ((_safety+10)| (0+32768))
  3203     0208  0085               	movwf	5
  3204     0209  3F00               	moviw [0]fsr0
  3205     020A  0020               	movlb	0	; select bank0
  3206     020B  00C4               	movwf	??_main
  3207     020C  3F01               	moviw [1]fsr0
  3208     020D  00C5               	movwf	??_main+1
  3209     020E  0852               	movf	_memory+10,w
  3210     020F  0245               	subwf	??_main+1,w
  3211     0210  1D03               	skipz
  3212     0211  2A14               	goto	u3735
  3213     0212  0851               	movf	_memory+9,w
  3214     0213  0244               	subwf	??_main,w
  3215     0214                     u3735:
  3216     0214  1C03               	skipc
  3217     0215  2A17               	goto	u3731
  3218     0216  2A18               	goto	u3730
  3219     0217                     u3731:
  3220     0217  2A1B               	goto	l614
  3221     0218                     u3730:
  3222     0218                     l3677:
  3223                           
  3224                           ;main.c: 269:             LATCbits.LATC2 = 0;
  3225     0218  0022               	movlb	2	; select bank2
  3226     0219  110E               	bcf	14,2	;volatile
  3227                           
  3228                           ;main.c: 270:         }else{
  3229     021A  2A1D               	goto	l3679
  3230     021B                     l614:
  3231                           
  3232                           ;main.c: 271:             LATCbits.LATC2 = 1;
  3233     021B  0022               	movlb	2	; select bank2
  3234     021C  150E               	bsf	14,2	;volatile
  3235     021D                     l3679:
  3236                           
  3237                           ;main.c: 274:         selectedReference = FVR;
  3238     021D  301F               	movlw	31
  3239     021E  0020               	movlb	0	; select bank0
  3240     021F  00E6               	movwf	_selectedReference
  3241     0220                     l3681:
  3242                           
  3243                           ;main.c: 276:         uint16_t fvr_Test = ADC_GetConversion(selectedReference);
  3244     0220  301F               	movlw	31
  3245     0221  3187  27E5  3180   	fcall	_ADC_GetConversion
  3246     0224  0874               	movf	?_ADC_GetConversion+1,w
  3247     0225  0021               	movlb	1	; select bank1
  3248     0226  00A5               	movwf	(main@fvr_Test+1)^(0+128)
  3249     0227  0873               	movf	?_ADC_GetConversion,w
  3250     0228  00A4               	movwf	main@fvr_Test^(0+128)
  3251     0229                     l3683:
  3252                           
  3253                           ;main.c: 277:         float Vbit = 2.048 / (float) fvr_Test;
  3254     0229  0824               	movf	main@fvr_Test^(0+128),w
  3255     022A  00F3               	movwf	___xxtofl@val
  3256     022B  0825               	movf	(main@fvr_Test+1)^(0+128),w
  3257     022C  00F4               	movwf	___xxtofl@val+1
  3258     022D  01F5               	clrf	___xxtofl@val+2
  3259     022E  01F6               	clrf	___xxtofl@val+3
  3260     022F  3000               	movlw	0
  3261     0230  3186  26AF  3180   	fcall	___xxtofl
  3262     0233  0876               	movf	?___xxtofl+3,w
  3263     0234  0020               	movlb	0	; select bank0
  3264     0235  00AD               	movwf	___fldiv@a+3
  3265     0236  0875               	movf	?___xxtofl+2,w
  3266     0237  00AC               	movwf	___fldiv@a+2
  3267     0238  0874               	movf	?___xxtofl+1,w
  3268     0239  00AB               	movwf	___fldiv@a+1
  3269     023A  0873               	movf	?___xxtofl,w
  3270     023B  00AA               	movwf	___fldiv@a
  3271     023C  3040               	movlw	64
  3272     023D  00B1               	movwf	___fldiv@b+3
  3273     023E  3003               	movlw	3
  3274     023F  00B0               	movwf	___fldiv@b+2
  3275     0240  3012               	movlw	18
  3276     0241  00AF               	movwf	___fldiv@b+1
  3277     0242  306F               	movlw	111
  3278     0243  00AE               	movwf	___fldiv@b
  3279     0244  3185  2505  3180   	fcall	___fldiv
  3280     0247  0020               	movlb	0	; select bank0
  3281     0248  082D               	movf	?___fldiv+3,w
  3282     0249  0021               	movlb	1	; select bank1
  3283     024A  00A3               	movwf	(main@Vbit+3)^(0+128)
  3284     024B  0020               	movlb	0	; select bank0
  3285     024C  082C               	movf	?___fldiv+2,w
  3286     024D  0021               	movlb	1	; select bank1
  3287     024E  00A2               	movwf	(main@Vbit+2)^(0+128)
  3288     024F  0020               	movlb	0	; select bank0
  3289     0250  082B               	movf	?___fldiv+1,w
  3290     0251  0021               	movlb	1	; select bank1
  3291     0252  00A1               	movwf	(main@Vbit+1)^(0+128)
  3292     0253  0020               	movlb	0	; select bank0
  3293     0254  082A               	movf	?___fldiv,w
  3294     0255  0021               	movlb	1	; select bank1
  3295     0256  00A0               	movwf	main@Vbit^(0+128)
  3296     0257                     l3685:
  3297                           
  3298                           ;main.c: 278:         converter.voltageReading = Vbit * 1024;
  3299     0257  3044               	movlw	68
  3300     0258  0020               	movlb	0	; select bank0
  3301     0259  00A8               	movwf	___flmul@b+3
  3302     025A  3080               	movlw	128
  3303     025B  00A7               	movwf	___flmul@b+2
  3304     025C  3000               	movlw	0
  3305     025D  00A6               	movwf	___flmul@b+1
  3306     025E  3000               	movlw	0
  3307     025F  00A5               	movwf	___flmul@b
  3308     0260  0021               	movlb	1	; select bank1
  3309     0261  0823               	movf	(main@Vbit+3)^(0+128),w
  3310     0262  0020               	movlb	0	; select bank0
  3311     0263  00AC               	movwf	___flmul@a+3
  3312     0264  0021               	movlb	1	; select bank1
  3313     0265  0822               	movf	(main@Vbit+2)^(0+128),w
  3314     0266  0020               	movlb	0	; select bank0
  3315     0267  00AB               	movwf	___flmul@a+2
  3316     0268  0021               	movlb	1	; select bank1
  3317     0269  0821               	movf	(main@Vbit+1)^(0+128),w
  3318     026A  0020               	movlb	0	; select bank0
  3319     026B  00AA               	movwf	___flmul@a+1
  3320     026C  0021               	movlb	1	; select bank1
  3321     026D  0820               	movf	main@Vbit^(0+128),w
  3322     026E  0020               	movlb	0	; select bank0
  3323     026F  00A9               	movwf	___flmul@a
  3324     0270  3182  22CA  3180   	fcall	___flmul
  3325     0273  0020               	movlb	0	; select bank0
  3326     0274  0828               	movf	?___flmul+3,w
  3327     0275  00D6               	movwf	_converter+3
  3328     0276  0827               	movf	?___flmul+2,w
  3329     0277  00D5               	movwf	_converter+2
  3330     0278  0826               	movf	?___flmul+1,w
  3331     0279  00D4               	movwf	_converter+1
  3332     027A  0825               	movf	?___flmul,w
  3333     027B  00D3               	movwf	_converter
  3334     027C                     l3687:
  3335                           
  3336                           ;main.c: 279:         if(converter.voltageReading >= safety.HIGH_VOLTAGE || converter.vo
      +                          ltageReading <= safety.LOW_VOLTAGE){
  3337     027C  0856               	movf	_converter+3,w
  3338     027D  00A3               	movwf	___flge@ff1+3
  3339     027E  0855               	movf	_converter+2,w
  3340     027F  00A2               	movwf	___flge@ff1+2
  3341     0280  0854               	movf	_converter+1,w
  3342     0281  00A1               	movwf	___flge@ff1+1
  3343     0282  0853               	movf	_converter,w
  3344     0283  00A0               	movwf	___flge@ff1
  3345     0284  3004               	movlw	low ((_safety+4)| (0+32768))
  3346     0285  0084               	movwf	4
  3347     0286  3088               	movlw	high ((_safety+4)| (0+32768))
  3348     0287  0085               	movwf	5
  3349     0288  3F00               	moviw [0]fsr0
  3350     0289  00C4               	movwf	??_main
  3351     028A  3F01               	moviw [1]fsr0
  3352     028B  00C5               	movwf	??_main+1
  3353     028C  3F02               	moviw [2]fsr0
  3354     028D  00C6               	movwf	??_main+2
  3355     028E  3F03               	moviw [3]fsr0
  3356     028F  00C7               	movwf	??_main+3
  3357     0290  0847               	movf	??_main+3,w
  3358     0291  00A7               	movwf	___flge@ff2+3
  3359     0292  0846               	movf	??_main+2,w
  3360     0293  00A6               	movwf	___flge@ff2+2
  3361     0294  0845               	movf	??_main+1,w
  3362     0295  00A5               	movwf	___flge@ff2+1
  3363     0296  0844               	movf	??_main,w
  3364     0297  00A4               	movwf	___flge@ff2
  3365     0298  3187  275A  3180   	fcall	___flge
  3366     029B  1803               	btfsc	3,0
  3367     029C  2A9E               	goto	u3741
  3368     029D  2A9F               	goto	u3740
  3369     029E                     u3741:
  3370     029E  2AC3               	goto	l618
  3371     029F                     u3740:
  3372     029F                     l3689:
  3373     029F  3000               	movlw	low (_safety| (0+32768))
  3374     02A0  0084               	movwf	4
  3375     02A1  3088               	movlw	high (_safety| (0+32768))
  3376     02A2  0085               	movwf	5
  3377     02A3  3F00               	moviw [0]fsr0
  3378     02A4  0020               	movlb	0	; select bank0
  3379     02A5  00C4               	movwf	??_main
  3380     02A6  3F01               	moviw [1]fsr0
  3381     02A7  00C5               	movwf	??_main+1
  3382     02A8  3F02               	moviw [2]fsr0
  3383     02A9  00C6               	movwf	??_main+2
  3384     02AA  3F03               	moviw [3]fsr0
  3385     02AB  00C7               	movwf	??_main+3
  3386     02AC  0847               	movf	??_main+3,w
  3387     02AD  00A3               	movwf	___flge@ff1+3
  3388     02AE  0846               	movf	??_main+2,w
  3389     02AF  00A2               	movwf	___flge@ff1+2
  3390     02B0  0845               	movf	??_main+1,w
  3391     02B1  00A1               	movwf	___flge@ff1+1
  3392     02B2  0844               	movf	??_main,w
  3393     02B3  00A0               	movwf	___flge@ff1
  3394     02B4  0856               	movf	_converter+3,w
  3395     02B5  00A7               	movwf	___flge@ff2+3
  3396     02B6  0855               	movf	_converter+2,w
  3397     02B7  00A6               	movwf	___flge@ff2+2
  3398     02B8  0854               	movf	_converter+1,w
  3399     02B9  00A5               	movwf	___flge@ff2+1
  3400     02BA  0853               	movf	_converter,w
  3401     02BB  00A4               	movwf	___flge@ff2
  3402     02BC  3187  275A  3180   	fcall	___flge
  3403     02BF  1C03               	btfss	3,0
  3404     02C0  2AC2               	goto	u3751
  3405     02C1  2AC3               	goto	u3750
  3406     02C2                     u3751:
  3407     02C2  2AC5               	goto	l3691
  3408     02C3                     u3750:
  3409     02C3                     l618:
  3410                           
  3411                           ;main.c: 280:             LATCbits.LATC1 = 0;
  3412     02C3  0022               	movlb	2	; select bank2
  3413     02C4  108E               	bcf	14,1	;volatile
  3414     02C5                     l3691:
  3415     02C5  0024               	movlb	4	; select bank4
  3416     02C6  0811               	movf	17,w	;volatile
  3417     02C7  2850               	goto	l3585
  3418     02C8  3180  2835         	ljmp	start
  3419     02CA                     __end_of_main:
  3420                           
  3421                           	psect	text1
  3422     0F2E                     __ptext1:	
  3423 ;; *************** function _setDangerSignalLine *****************
  3424 ;; Defined at:
  3425 ;;		line 323 in file "main.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  isTurnOff       1    wreg     _Bool 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  isTurnOff       1    0[BANK0 ] _Bool 
  3430 ;;  i               2    3[BANK0 ] int 
  3431 ;;  i               2    1[BANK0 ] int 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3441 ;;      Params:         0       0       0       0
  3442 ;;      Locals:         0       5       0       0
  3443 ;;      Temps:          1       0       0       0
  3444 ;;      Totals:         1       5       0       0
  3445 ;;Total ram usage:        6 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 5
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455     0F2E                     _setDangerSignalLine:	
  3456                           ;psect for function _setDangerSignalLine
  3457                           
  3458                           
  3459                           ;incstack = 0
  3460                           ; Regs used in _setDangerSignalLine: [wreg+status,2+status,0]
  3461                           ;setDangerSignalLine@isTurnOff stored from wreg
  3462     0F2E  0020               	movlb	0	; select bank0
  3463     0F2F  00A0               	movwf	setDangerSignalLine@isTurnOff
  3464     0F30                     l3193:
  3465                           
  3466                           ;main.c: 324:         if(isTurnOff){
  3467     0F30  0820               	movf	setDangerSignalLine@isTurnOff,w
  3468     0F31  1903               	btfsc	3,2
  3469     0F32  2F34               	goto	u2811
  3470     0F33  2F35               	goto	u2810
  3471     0F34                     u2811:
  3472     0F34  2F60               	goto	l3211
  3473     0F35                     u2810:
  3474     0F35                     l3195:
  3475                           
  3476                           ;main.c: 325:             for (int i=0;i<1000;i++){
  3477     0F35  01A1               	clrf	setDangerSignalLine@i
  3478     0F36  01A2               	clrf	setDangerSignalLine@i+1
  3479     0F37                     l3201:
  3480                           
  3481                           ;main.c: 326:                 _delay((unsigned long)((1000)*(16000000/4000000.0)));
  3482     0F37  3006               	movlw	6
  3483     0F38  00F3               	movwf	??_setDangerSignalLine
  3484     0F39  3030               	movlw	48
  3485     0F3A                     u3787:
  3486     0F3A  0B89               	decfsz	9,f
  3487     0F3B  2F3A               	goto	u3787
  3488     0F3C  0BF3               	decfsz	??_setDangerSignalLine,f
  3489     0F3D  2F3A               	goto	u3787
  3490     0F3E  3200               	nop2
  3491     0F3F                     l3203:
  3492                           
  3493                           ;main.c: 327:                 LATCbits.LATC1 = ~LATCbits.LATC1;
  3494     0F3F  1003               	clrc
  3495     0F40  0022               	movlb	2	; select bank2
  3496     0F41  1C8E               	btfss	14,1	;volatile
  3497     0F42  1403               	setc
  3498     0F43  1803               	btfsc	3,0
  3499     0F44  2F46               	goto	u2821
  3500     0F45  2F49               	goto	u2820
  3501     0F46                     u2821:
  3502     0F46  0022               	movlb	2	; select bank2
  3503     0F47  148E               	bsf	14,1	;volatile
  3504     0F48  2F4B               	goto	u2834
  3505     0F49                     u2820:
  3506     0F49  0022               	movlb	2	; select bank2
  3507     0F4A  108E               	bcf	14,1	;volatile
  3508     0F4B                     u2834:
  3509     0F4B                     l3205:
  3510                           
  3511                           ;main.c: 328:             }
  3512     0F4B  3001               	movlw	1
  3513     0F4C  0020               	movlb	0	; select bank0
  3514     0F4D  07A1               	addwf	setDangerSignalLine@i,f
  3515     0F4E  3000               	movlw	0
  3516     0F4F  3DA2               	addwfc	setDangerSignalLine@i+1,f
  3517     0F50                     l3207:
  3518     0F50  0822               	movf	setDangerSignalLine@i+1,w
  3519     0F51  3A80               	xorlw	128
  3520     0F52  00F3               	movwf	??_setDangerSignalLine
  3521     0F53  3083               	movlw	131
  3522     0F54  0273               	subwf	??_setDangerSignalLine,w
  3523     0F55  1D03               	skipz
  3524     0F56  2F59               	goto	u2845
  3525     0F57  30E8               	movlw	232
  3526     0F58  0221               	subwf	setDangerSignalLine@i,w
  3527     0F59                     u2845:
  3528     0F59  1C03               	skipc
  3529     0F5A  2F5C               	goto	u2841
  3530     0F5B  2F5D               	goto	u2840
  3531     0F5C                     u2841:
  3532     0F5C  2F37               	goto	l3201
  3533     0F5D                     u2840:
  3534     0F5D                     l660:
  3535                           
  3536                           ;main.c: 329:             LATCbits.LATC1 = 0;
  3537     0F5D  0022               	movlb	2	; select bank2
  3538     0F5E  108E               	bcf	14,1	;volatile
  3539                           
  3540                           ;main.c: 330:             goto endFunction;
  3541     0F5F  2F8A               	goto	l665
  3542     0F60                     l3211:
  3543                           
  3544                           ;main.c: 332:             for (int i=0;i<1000;i++){
  3545     0F60  01A3               	clrf	setDangerSignalLine@i_1261
  3546     0F61  01A4               	clrf	setDangerSignalLine@i_1261+1
  3547     0F62                     l3217:
  3548                           
  3549                           ;main.c: 333:                 _delay((unsigned long)((1000)*(16000000/4000000.0)));
  3550     0F62  3006               	movlw	6
  3551     0F63  00F3               	movwf	??_setDangerSignalLine
  3552     0F64  3030               	movlw	48
  3553     0F65                     u3797:
  3554     0F65  0B89               	decfsz	9,f
  3555     0F66  2F65               	goto	u3797
  3556     0F67  0BF3               	decfsz	??_setDangerSignalLine,f
  3557     0F68  2F65               	goto	u3797
  3558     0F69  3200               	nop2
  3559     0F6A                     l3219:
  3560                           
  3561                           ;main.c: 334:                 LATCbits.LATC1 = ~LATCbits.LATC1;
  3562     0F6A  1003               	clrc
  3563     0F6B  0022               	movlb	2	; select bank2
  3564     0F6C  1C8E               	btfss	14,1	;volatile
  3565     0F6D  1403               	setc
  3566     0F6E  1803               	btfsc	3,0
  3567     0F6F  2F71               	goto	u2851
  3568     0F70  2F74               	goto	u2850
  3569     0F71                     u2851:
  3570     0F71  0022               	movlb	2	; select bank2
  3571     0F72  148E               	bsf	14,1	;volatile
  3572     0F73  2F76               	goto	u2864
  3573     0F74                     u2850:
  3574     0F74  0022               	movlb	2	; select bank2
  3575     0F75  108E               	bcf	14,1	;volatile
  3576     0F76                     u2864:
  3577     0F76                     l3221:
  3578                           
  3579                           ;main.c: 335:             }
  3580     0F76  3001               	movlw	1
  3581     0F77  0020               	movlb	0	; select bank0
  3582     0F78  07A3               	addwf	setDangerSignalLine@i_1261,f
  3583     0F79  3000               	movlw	0
  3584     0F7A  3DA4               	addwfc	setDangerSignalLine@i_1261+1,f
  3585     0F7B                     l3223:
  3586     0F7B  0824               	movf	setDangerSignalLine@i_1261+1,w
  3587     0F7C  3A80               	xorlw	128
  3588     0F7D  00F3               	movwf	??_setDangerSignalLine
  3589     0F7E  3083               	movlw	131
  3590     0F7F  0273               	subwf	??_setDangerSignalLine,w
  3591     0F80  1D03               	skipz
  3592     0F81  2F84               	goto	u2875
  3593     0F82  30E8               	movlw	232
  3594     0F83  0223               	subwf	setDangerSignalLine@i_1261,w
  3595     0F84                     u2875:
  3596     0F84  1C03               	skipc
  3597     0F85  2F87               	goto	u2871
  3598     0F86  2F88               	goto	u2870
  3599     0F87                     u2871:
  3600     0F87  2F62               	goto	l3217
  3601     0F88                     u2870:
  3602     0F88                     l664:
  3603                           
  3604                           ;main.c: 336:             LATCbits.LATC1 = 1;
  3605     0F88  0022               	movlb	2	; select bank2
  3606     0F89  148E               	bsf	14,1	;volatile
  3607     0F8A                     l665:	
  3608                           ;main.c: 337:             goto endFunction;
  3609                           
  3610     0F8A  0008               	return
  3611     0F8B                     __end_of_setDangerSignalLine:
  3612                           
  3613                           	psect	text2
  3614     0E89                     __ptext2:	
  3615 ;; *************** function _sendAllDatatoMaster *****************
  3616 ;; Defined at:
  3617 ;;		line 312 in file "main.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0, pclath, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3631 ;;      Params:         0       0       0       0
  3632 ;;      Locals:         0       0       0       0
  3633 ;;      Temps:          0       0       0       0
  3634 ;;      Totals:         0       0       0       0
  3635 ;;Total ram usage:        0 bytes
  3636 ;; Hardware stack levels used: 1
  3637 ;; Hardware stack levels required when called: 8
  3638 ;; This function calls:
  3639 ;;		_I2C_Write
  3640 ;;		_sendDataToMaster
  3641 ;;		_sendVSNSDataToMaster
  3642 ;; This function is called by:
  3643 ;;		_main
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647     0E89                     _sendAllDatatoMaster:	
  3648                           ;psect for function _sendAllDatatoMaster
  3649                           
  3650     0E89                     l3225:	
  3651                           ;incstack = 0
  3652                           ; Regs used in _sendAllDatatoMaster: [wreg+status,2+status,0+pclath+cstack]
  3653                           
  3654                           
  3655                           ;main.c: 313:     I2C_Write(memory.status);
  3656     0E89  0020               	movlb	0	; select bank0
  3657     0E8A  0848               	movf	_memory,w
  3658     0E8B  318D  2570  318E   	fcall	_I2C_Write
  3659                           
  3660                           ;main.c: 314:     sendDataToMaster(memory.TSNS1);
  3661     0E8E  0020               	movlb	0	; select bank0
  3662     0E8F  084A               	movf	_memory+2,w
  3663     0E90  00F6               	movwf	sendDataToMaster@toSend+1
  3664     0E91  0849               	movf	_memory+1,w
  3665     0E92  00F5               	movwf	sendDataToMaster@toSend
  3666     0E93  318E  264B  318E   	fcall	_sendDataToMaster
  3667                           
  3668                           ;main.c: 315:     sendDataToMaster(memory.TSNS2);
  3669     0E96  0020               	movlb	0	; select bank0
  3670     0E97  084C               	movf	_memory+4,w
  3671     0E98  00F6               	movwf	sendDataToMaster@toSend+1
  3672     0E99  084B               	movf	_memory+3,w
  3673     0E9A  00F5               	movwf	sendDataToMaster@toSend
  3674     0E9B  318E  264B  318E   	fcall	_sendDataToMaster
  3675                           
  3676                           ;main.c: 316:     sendDataToMaster(memory.TSNS3);
  3677     0E9E  0020               	movlb	0	; select bank0
  3678     0E9F  084E               	movf	_memory+6,w
  3679     0EA0  00F6               	movwf	sendDataToMaster@toSend+1
  3680     0EA1  084D               	movf	_memory+5,w
  3681     0EA2  00F5               	movwf	sendDataToMaster@toSend
  3682     0EA3  318E  264B  318E   	fcall	_sendDataToMaster
  3683                           
  3684                           ;main.c: 317:     sendDataToMaster(memory.TSNS4);
  3685     0EA6  0020               	movlb	0	; select bank0
  3686     0EA7  0850               	movf	_memory+8,w
  3687     0EA8  00F6               	movwf	sendDataToMaster@toSend+1
  3688     0EA9  084F               	movf	_memory+7,w
  3689     0EAA  00F5               	movwf	sendDataToMaster@toSend
  3690     0EAB  318E  264B  318E   	fcall	_sendDataToMaster
  3691                           
  3692                           ;main.c: 318:     sendDataToMaster(memory.TSNS5);
  3693     0EAE  0020               	movlb	0	; select bank0
  3694     0EAF  0852               	movf	_memory+10,w
  3695     0EB0  00F6               	movwf	sendDataToMaster@toSend+1
  3696     0EB1  0851               	movf	_memory+9,w
  3697     0EB2  00F5               	movwf	sendDataToMaster@toSend
  3698     0EB3  318E  264B  318E   	fcall	_sendDataToMaster
  3699                           
  3700                           ;main.c: 319:     sendVSNSDataToMaster();
  3701     0EB6  318E  26F3  318E   	fcall	_sendVSNSDataToMaster
  3702     0EB9                     l655:
  3703     0EB9  0008               	return
  3704     0EBA                     __end_of_sendAllDatatoMaster:
  3705                           
  3706                           	psect	text3
  3707     0EF3                     __ptext3:	
  3708 ;; *************** function _sendVSNSDataToMaster *****************
  3709 ;; Defined at:
  3710 ;;		line 299 in file "main.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0, pclath, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3724 ;;      Params:         0       0       0       0
  3725 ;;      Locals:         0       0       0       0
  3726 ;;      Temps:          0       0       0       0
  3727 ;;      Totals:         0       0       0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 7
  3731 ;; This function calls:
  3732 ;;		_I2C_Write
  3733 ;; This function is called by:
  3734 ;;		_main
  3735 ;;		_sendAllDatatoMaster
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739     0EF3                     _sendVSNSDataToMaster:	
  3740                           ;psect for function _sendVSNSDataToMaster
  3741                           
  3742     0EF3                     l3137:	
  3743                           ;incstack = 0
  3744                           ; Regs used in _sendVSNSDataToMaster: [wreg+status,2+status,0+pclath+cstack]
  3745                           
  3746                           
  3747                           ;main.c: 300:     I2C_Write(converter.buffer[3]);
  3748     0EF3  0020               	movlb	0	; select bank0
  3749     0EF4  0856               	movf	_converter+3,w
  3750     0EF5  318D  2570  318E   	fcall	_I2C_Write
  3751     0EF8                     l632:	
  3752                           ;main.c: 301:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 1){ }
  3753                           
  3754     0EF8  0024               	movlb	4	; select bank4
  3755     0EF9  1C14               	btfss	20,0	;volatile
  3756     0EFA  2EFC               	goto	u2691
  3757     0EFB  2EFD               	goto	u2690
  3758     0EFC                     u2691:
  3759     0EFC  2F01               	goto	l3141
  3760     0EFD                     u2690:
  3761     0EFD                     l3139:
  3762     0EFD  1B16               	btfsc	22,6	;volatile
  3763     0EFE  2F00               	goto	u2701
  3764     0EFF  2F01               	goto	u2700
  3765     0F00                     u2701:
  3766     0F00  2EF8               	goto	l632
  3767     0F01                     u2700:
  3768     0F01                     l3141:
  3769                           
  3770                           ;main.c: 302:     I2C_Write(converter.buffer[2]);
  3771     0F01  0020               	movlb	0	; select bank0
  3772     0F02  0855               	movf	_converter+2,w
  3773     0F03  318D  2570  318E   	fcall	_I2C_Write
  3774     0F06                     l637:	
  3775                           ;main.c: 303:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 1){ }
  3776                           
  3777     0F06  0024               	movlb	4	; select bank4
  3778     0F07  1C14               	btfss	20,0	;volatile
  3779     0F08  2F0A               	goto	u2711
  3780     0F09  2F0B               	goto	u2710
  3781     0F0A                     u2711:
  3782     0F0A  2F0F               	goto	l3145
  3783     0F0B                     u2710:
  3784     0F0B                     l3143:
  3785     0F0B  1B16               	btfsc	22,6	;volatile
  3786     0F0C  2F0E               	goto	u2721
  3787     0F0D  2F0F               	goto	u2720
  3788     0F0E                     u2721:
  3789     0F0E  2F06               	goto	l637
  3790     0F0F                     u2720:
  3791     0F0F                     l3145:
  3792                           
  3793                           ;main.c: 304:     I2C_Write(converter.buffer[1]);
  3794     0F0F  0020               	movlb	0	; select bank0
  3795     0F10  0854               	movf	_converter+1,w
  3796     0F11  318D  2570  318E   	fcall	_I2C_Write
  3797     0F14                     l642:	
  3798                           ;main.c: 305:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 1){ }
  3799                           
  3800     0F14  0024               	movlb	4	; select bank4
  3801     0F15  1C14               	btfss	20,0	;volatile
  3802     0F16  2F18               	goto	u2731
  3803     0F17  2F19               	goto	u2730
  3804     0F18                     u2731:
  3805     0F18  2F1D               	goto	l3149
  3806     0F19                     u2730:
  3807     0F19                     l3147:
  3808     0F19  1B16               	btfsc	22,6	;volatile
  3809     0F1A  2F1C               	goto	u2741
  3810     0F1B  2F1D               	goto	u2740
  3811     0F1C                     u2741:
  3812     0F1C  2F14               	goto	l642
  3813     0F1D                     u2740:
  3814     0F1D                     l3149:
  3815                           
  3816                           ;main.c: 306:     I2C_Write(converter.buffer[0]);
  3817     0F1D  0020               	movlb	0	; select bank0
  3818     0F1E  0853               	movf	_converter,w
  3819     0F1F  318D  2570  318E   	fcall	_I2C_Write
  3820     0F22                     l647:	
  3821                           ;main.c: 307:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 1){ }
  3822                           
  3823     0F22  0024               	movlb	4	; select bank4
  3824     0F23  1C14               	btfss	20,0	;volatile
  3825     0F24  2F26               	goto	u2751
  3826     0F25  2F27               	goto	u2750
  3827     0F26                     u2751:
  3828     0F26  2F2B               	goto	l3153
  3829     0F27                     u2750:
  3830     0F27                     l3151:
  3831     0F27  1B16               	btfsc	22,6	;volatile
  3832     0F28  2F2A               	goto	u2761
  3833     0F29  2F2B               	goto	u2760
  3834     0F2A                     u2761:
  3835     0F2A  2F22               	goto	l647
  3836     0F2B                     u2760:
  3837     0F2B                     l3153:
  3838                           
  3839                           ;main.c: 308:     I2C_Command = No_Command;
  3840     0F2B  0020               	movlb	0	; select bank0
  3841     0F2C  01E5               	clrf	_I2C_Command
  3842     0F2D                     l652:
  3843     0F2D  0008               	return
  3844     0F2E                     __end_of_sendVSNSDataToMaster:
  3845                           
  3846                           	psect	text4
  3847     0E4B                     __ptext4:	
  3848 ;; *************** function _sendDataToMaster *****************
  3849 ;; Defined at:
  3850 ;;		line 289 in file "main.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  toSend          2    5[COMMON] unsigned short 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  low             1    1[BANK0 ] unsigned char 
  3855 ;;  high            1    0[BANK0 ] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      void 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0, pclath, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3865 ;;      Params:         2       0       0       0
  3866 ;;      Locals:         0       2       0       0
  3867 ;;      Temps:          0       0       0       0
  3868 ;;      Totals:         2       2       0       0
  3869 ;;Total ram usage:        4 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; Hardware stack levels required when called: 7
  3872 ;; This function calls:
  3873 ;;		_I2C_Write
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;;		_sendAllDatatoMaster
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880     0E4B                     _sendDataToMaster:	
  3881                           ;psect for function _sendDataToMaster
  3882                           
  3883     0E4B                     l3123:	
  3884                           ;incstack = 0
  3885                           ; Regs used in _sendDataToMaster: [wreg+status,2+status,0+pclath+cstack]
  3886                           
  3887                           
  3888                           ;main.c: 290:     uint8_t high = (uint8_t) (toSend >> 8) & 0x00FF;
  3889     0E4B  0876               	movf	sendDataToMaster@toSend+1,w
  3890     0E4C  0020               	movlb	0	; select bank0
  3891     0E4D  00A0               	movwf	sendDataToMaster@high
  3892     0E4E                     l3125:
  3893                           
  3894                           ;main.c: 291:     uint8_t low = (uint8_t) (toSend >> 0) & 0x00FF;
  3895     0E4E  0875               	movf	sendDataToMaster@toSend,w
  3896     0E4F  00A1               	movwf	sendDataToMaster@low
  3897     0E50                     l3127:
  3898                           
  3899                           ;main.c: 292:     I2C_Write(high);
  3900     0E50  0820               	movf	sendDataToMaster@high,w
  3901     0E51  318D  2570  318E   	fcall	_I2C_Write
  3902     0E54                     l624:	
  3903                           ;main.c: 293:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 1){ }
  3904                           
  3905     0E54  0024               	movlb	4	; select bank4
  3906     0E55  1C14               	btfss	20,0	;volatile
  3907     0E56  2E58               	goto	u2671
  3908     0E57  2E59               	goto	u2670
  3909     0E58                     u2671:
  3910     0E58  2E5D               	goto	l3131
  3911     0E59                     u2670:
  3912     0E59                     l3129:
  3913     0E59  1B16               	btfsc	22,6	;volatile
  3914     0E5A  2E5C               	goto	u2681
  3915     0E5B  2E5D               	goto	u2680
  3916     0E5C                     u2681:
  3917     0E5C  2E54               	goto	l624
  3918     0E5D                     u2680:
  3919     0E5D                     l3131:
  3920                           
  3921                           ;main.c: 294:     I2C_Write(low);
  3922     0E5D  0020               	movlb	0	; select bank0
  3923     0E5E  0821               	movf	sendDataToMaster@low,w
  3924     0E5F  318D  2570  318E   	fcall	_I2C_Write
  3925     0E62                     l3133:
  3926                           
  3927                           ;main.c: 295:     I2C_Command = No_Command;
  3928     0E62  0020               	movlb	0	; select bank0
  3929     0E63  01E5               	clrf	_I2C_Command
  3930     0E64                     l629:
  3931     0E64  0008               	return
  3932     0E65                     __end_of_sendDataToMaster:
  3933                           
  3934                           	psect	text5
  3935     0D70                     __ptext5:	
  3936 ;; *************** function _I2C_Write *****************
  3937 ;; Defined at:
  3938 ;;		line 140 in file "mcc_generated_files/i2c_slave.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  data            1    wreg     unsigned char 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  data            1    4[COMMON] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0, pclath, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3952 ;;      Params:         0       0       0       0
  3953 ;;      Locals:         1       0       0       0
  3954 ;;      Temps:          0       0       0       0
  3955 ;;      Totals:         1       0       0       0
  3956 ;;Total ram usage:        1 bytes
  3957 ;; Hardware stack levels used: 1
  3958 ;; Hardware stack levels required when called: 6
  3959 ;; This function calls:
  3960 ;;		_I2C_SlaveSendTxData
  3961 ;; This function is called by:
  3962 ;;		_main
  3963 ;;		_sendDataToMaster
  3964 ;;		_sendVSNSDataToMaster
  3965 ;;		_sendAllDatatoMaster
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969     0D70                     _I2C_Write:	
  3970                           ;psect for function _I2C_Write
  3971                           
  3972                           
  3973                           ;incstack = 0
  3974                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  3975                           ;I2C_Write@data stored from wreg
  3976     0D70  00F4               	movwf	I2C_Write@data
  3977     0D71                     l3027:
  3978                           
  3979                           ;mcc_generated_files/i2c_slave.c: 140: void I2C_Write(uint8_t data);mcc_generated_files/
      +                          i2c_slave.c: 141: {;mcc_generated_files/i2c_slave.c: 142:     I2C_SlaveSendTxData(data);
  3980     0D71  0874               	movf	I2C_Write@data,w
  3981     0D72  318D  2535  318D   	fcall	_I2C_SlaveSendTxData
  3982     0D75                     l341:
  3983     0D75  0008               	return
  3984     0D76                     __end_of_I2C_Write:
  3985                           
  3986                           	psect	text6
  3987     0D35                     __ptext6:	
  3988 ;; *************** function _I2C_SlaveSendTxData *****************
  3989 ;; Defined at:
  3990 ;;		line 391 in file "mcc_generated_files/i2c_slave.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  data            1    wreg     unsigned char 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  data            1    3[COMMON] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		wreg
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4004 ;;      Params:         0       0       0       0
  4005 ;;      Locals:         1       0       0       0
  4006 ;;      Temps:          0       0       0       0
  4007 ;;      Totals:         1       0       0       0
  4008 ;;Total ram usage:        1 bytes
  4009 ;; Hardware stack levels used: 1
  4010 ;; Hardware stack levels required when called: 5
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_I2C_Write
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018     0D35                     _I2C_SlaveSendTxData:	
  4019                           ;psect for function _I2C_SlaveSendTxData
  4020                           
  4021                           
  4022                           ;incstack = 0
  4023                           ; Regs used in _I2C_SlaveSendTxData: [wreg]
  4024                           ;I2C_SlaveSendTxData@data stored from wreg
  4025     0D35  00F3               	movwf	I2C_SlaveSendTxData@data
  4026     0D36                     l3023:
  4027                           
  4028                           ;mcc_generated_files/i2c_slave.c: 391: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 392: {;mcc_generated_files/i2c_sla
      +                          ve.c: 393:     SSP1BUF = data;
  4029     0D36  0873               	movf	I2C_SlaveSendTxData@data,w
  4030     0D37  0024               	movlb	4	; select bank4
  4031     0D38  0091               	movwf	17	;volatile
  4032     0D39                     l471:
  4033     0D39  0008               	return
  4034     0D3A                     __end_of_I2C_SlaveSendTxData:
  4035                           
  4036                           	psect	text7
  4037     06AF                     __ptext7:	
  4038 ;; *************** function ___xxtofl *****************
  4039 ;; Defined at:
  4040 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  sign            1    wreg     unsigned char 
  4043 ;;  val             4    3[COMMON] long 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  sign            1    4[BANK0 ] unsigned char 
  4046 ;;  arg             4    6[BANK0 ] unsigned long 
  4047 ;;  exp             1    5[BANK0 ] unsigned char 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  4    3[COMMON] unsigned char 
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4057 ;;      Params:         4       0       0       0
  4058 ;;      Locals:         0       6       0       0
  4059 ;;      Temps:          0       4       0       0
  4060 ;;      Totals:         4      10       0       0
  4061 ;;Total ram usage:       14 bytes
  4062 ;; Hardware stack levels used: 1
  4063 ;; Hardware stack levels required when called: 5
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_main
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071     06AF                     ___xxtofl:	
  4072                           ;psect for function ___xxtofl
  4073                           
  4074                           
  4075                           ;incstack = 0
  4076                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4077                           ;___xxtofl@sign stored from wreg
  4078     06AF  0020               	movlb	0	; select bank0
  4079     06B0  00A4               	movwf	___xxtofl@sign
  4080     06B1                     l3529:
  4081     06B1  0824               	movf	___xxtofl@sign,w
  4082     06B2  1903               	btfsc	3,2
  4083     06B3  2EB5               	goto	u3481
  4084     06B4  2EB6               	goto	u3480
  4085     06B5                     u3481:
  4086     06B5  2ECA               	goto	l3535
  4087     06B6                     u3480:
  4088     06B6                     l3531:
  4089     06B6  1FF6               	btfss	___xxtofl@val+3,7
  4090     06B7  2EB9               	goto	u3491
  4091     06B8  2EBA               	goto	u3490
  4092     06B9                     u3491:
  4093     06B9  2ECA               	goto	l3535
  4094     06BA                     u3490:
  4095     06BA                     l3533:
  4096     06BA  0973               	comf	___xxtofl@val,w
  4097     06BB  00A6               	movwf	___xxtofl@arg
  4098     06BC  0974               	comf	___xxtofl@val+1,w
  4099     06BD  00A7               	movwf	___xxtofl@arg+1
  4100     06BE  0975               	comf	___xxtofl@val+2,w
  4101     06BF  00A8               	movwf	___xxtofl@arg+2
  4102     06C0  0976               	comf	___xxtofl@val+3,w
  4103     06C1  00A9               	movwf	___xxtofl@arg+3
  4104     06C2  0AA6               	incf	___xxtofl@arg,f
  4105     06C3  1903               	skipnz
  4106     06C4  0AA7               	incf	___xxtofl@arg+1,f
  4107     06C5  1903               	skipnz
  4108     06C6  0AA8               	incf	___xxtofl@arg+2,f
  4109     06C7  1903               	skipnz
  4110     06C8  0AA9               	incf	___xxtofl@arg+3,f
  4111     06C9  2ED2               	goto	l1174
  4112     06CA                     l3535:
  4113     06CA  0876               	movf	___xxtofl@val+3,w
  4114     06CB  00A9               	movwf	___xxtofl@arg+3
  4115     06CC  0875               	movf	___xxtofl@val+2,w
  4116     06CD  00A8               	movwf	___xxtofl@arg+2
  4117     06CE  0874               	movf	___xxtofl@val+1,w
  4118     06CF  00A7               	movwf	___xxtofl@arg+1
  4119     06D0  0873               	movf	___xxtofl@val,w
  4120     06D1  00A6               	movwf	___xxtofl@arg
  4121     06D2                     l1174:
  4122     06D2  0876               	movf	___xxtofl@val+3,w
  4123     06D3  0475               	iorwf	___xxtofl@val+2,w
  4124     06D4  0474               	iorwf	___xxtofl@val+1,w
  4125     06D5  0473               	iorwf	___xxtofl@val,w
  4126     06D6  1D03               	skipz
  4127     06D7  2ED9               	goto	u3501
  4128     06D8  2EDA               	goto	u3500
  4129     06D9                     u3501:
  4130     06D9  2EE3               	goto	l3541
  4131     06DA                     u3500:
  4132     06DA                     l3537:
  4133     06DA  3000               	movlw	0
  4134     06DB  00F6               	movwf	?___xxtofl+3
  4135     06DC  3000               	movlw	0
  4136     06DD  00F5               	movwf	?___xxtofl+2
  4137     06DE  3000               	movlw	0
  4138     06DF  00F4               	movwf	?___xxtofl+1
  4139     06E0  3000               	movlw	0
  4140     06E1  00F3               	movwf	?___xxtofl
  4141     06E2  2F59               	goto	l1176
  4142     06E3                     l3541:
  4143     06E3  3096               	movlw	150
  4144     06E4  00A5               	movwf	___xxtofl@exp
  4145     06E5  2EF1               	goto	l3545
  4146     06E6                     l3543:
  4147     06E6  3001               	movlw	1
  4148     06E7  00A0               	movwf	??___xxtofl
  4149     06E8  0820               	movf	??___xxtofl,w
  4150     06E9  07A5               	addwf	___xxtofl@exp,f
  4151     06EA  3001               	movlw	1
  4152     06EB                     u3515:
  4153     06EB  36A9               	lsrf	___xxtofl@arg+3,f
  4154     06EC  0CA8               	rrf	___xxtofl@arg+2,f
  4155     06ED  0CA7               	rrf	___xxtofl@arg+1,f
  4156     06EE  0CA6               	rrf	___xxtofl@arg,f
  4157     06EF  0B89               	decfsz	9,f
  4158     06F0  2EEB               	goto	u3515
  4159     06F1                     l3545:
  4160     06F1  30FE               	movlw	254
  4161     06F2  0529               	andwf	___xxtofl@arg+3,w
  4162     06F3  1D03               	btfss	3,2
  4163     06F4  2EF6               	goto	u3521
  4164     06F5  2EF7               	goto	u3520
  4165     06F6                     u3521:
  4166     06F6  2EE6               	goto	l3543
  4167     06F7                     u3520:
  4168     06F7  2F0B               	goto	l1180
  4169     06F8                     l3547:
  4170     06F8  3001               	movlw	1
  4171     06F9  00A0               	movwf	??___xxtofl
  4172     06FA  0820               	movf	??___xxtofl,w
  4173     06FB  07A5               	addwf	___xxtofl@exp,f
  4174     06FC                     l3549:
  4175     06FC  3001               	movlw	1
  4176     06FD  07A6               	addwf	___xxtofl@arg,f
  4177     06FE  3000               	movlw	0
  4178     06FF  3DA7               	addwfc	___xxtofl@arg+1,f
  4179     0700  3000               	movlw	0
  4180     0701  3DA8               	addwfc	___xxtofl@arg+2,f
  4181     0702  3000               	movlw	0
  4182     0703  3DA9               	addwfc	___xxtofl@arg+3,f
  4183     0704                     l3551:
  4184     0704  3001               	movlw	1
  4185     0705                     u3535:
  4186     0705  36A9               	lsrf	___xxtofl@arg+3,f
  4187     0706  0CA8               	rrf	___xxtofl@arg+2,f
  4188     0707  0CA7               	rrf	___xxtofl@arg+1,f
  4189     0708  0CA6               	rrf	___xxtofl@arg,f
  4190     0709  0B89               	decfsz	9,f
  4191     070A  2F05               	goto	u3535
  4192     070B                     l1180:
  4193     070B  30FF               	movlw	255
  4194     070C  0529               	andwf	___xxtofl@arg+3,w
  4195     070D  1D03               	btfss	3,2
  4196     070E  2F10               	goto	u3541
  4197     070F  2F11               	goto	u3540
  4198     0710                     u3541:
  4199     0710  2EF8               	goto	l3547
  4200     0711                     u3540:
  4201     0711  2F1B               	goto	l3555
  4202     0712                     l3553:
  4203     0712  3001               	movlw	1
  4204     0713  02A5               	subwf	___xxtofl@exp,f
  4205     0714  3001               	movlw	1
  4206     0715                     u3555:
  4207     0715  35A6               	lslf	___xxtofl@arg,f
  4208     0716  0DA7               	rlf	___xxtofl@arg+1,f
  4209     0717  0DA8               	rlf	___xxtofl@arg+2,f
  4210     0718  0DA9               	rlf	___xxtofl@arg+3,f
  4211     0719  0B89               	decfsz	9,f
  4212     071A  2F15               	goto	u3555
  4213     071B                     l3555:
  4214     071B  1BA8               	btfsc	___xxtofl@arg+2,7
  4215     071C  2F1E               	goto	u3561
  4216     071D  2F1F               	goto	u3560
  4217     071E                     u3561:
  4218     071E  2F25               	goto	l1187
  4219     071F                     u3560:
  4220     071F                     l3557:
  4221     071F  3002               	movlw	2
  4222     0720  0225               	subwf	___xxtofl@exp,w
  4223     0721  1803               	skipnc
  4224     0722  2F24               	goto	u3571
  4225     0723  2F25               	goto	u3570
  4226     0724                     u3571:
  4227     0724  2F12               	goto	l3553
  4228     0725                     u3570:
  4229     0725                     l1187:
  4230     0725  1825               	btfsc	___xxtofl@exp,0
  4231     0726  2F28               	goto	u3581
  4232     0727  2F29               	goto	u3580
  4233     0728                     u3581:
  4234     0728  2F31               	goto	l1188
  4235     0729                     u3580:
  4236     0729                     l3559:
  4237     0729  30FF               	movlw	255
  4238     072A  05A6               	andwf	___xxtofl@arg,f
  4239     072B  30FF               	movlw	255
  4240     072C  05A7               	andwf	___xxtofl@arg+1,f
  4241     072D  307F               	movlw	127
  4242     072E  05A8               	andwf	___xxtofl@arg+2,f
  4243     072F  30FF               	movlw	255
  4244     0730  05A9               	andwf	___xxtofl@arg+3,f
  4245     0731                     l1188:
  4246     0731  1003               	clrc
  4247     0732  0CA5               	rrf	___xxtofl@exp,f
  4248     0733                     l3561:
  4249     0733  0825               	movf	___xxtofl@exp,w
  4250     0734  00A0               	movwf	??___xxtofl
  4251     0735  01A1               	clrf	??___xxtofl+1
  4252     0736  01A2               	clrf	??___xxtofl+2
  4253     0737  01A3               	clrf	??___xxtofl+3
  4254     0738  3018               	movlw	24
  4255     0739                     u3595:
  4256     0739  35A0               	lslf	??___xxtofl,f
  4257     073A  0DA1               	rlf	??___xxtofl+1,f
  4258     073B  0DA2               	rlf	??___xxtofl+2,f
  4259     073C  0DA3               	rlf	??___xxtofl+3,f
  4260     073D                     u3590:
  4261     073D  0B89               	decfsz	9,f
  4262     073E  2F39               	goto	u3595
  4263     073F  0820               	movf	??___xxtofl,w
  4264     0740  04A6               	iorwf	___xxtofl@arg,f
  4265     0741  0821               	movf	??___xxtofl+1,w
  4266     0742  04A7               	iorwf	___xxtofl@arg+1,f
  4267     0743  0822               	movf	??___xxtofl+2,w
  4268     0744  04A8               	iorwf	___xxtofl@arg+2,f
  4269     0745  0823               	movf	??___xxtofl+3,w
  4270     0746  04A9               	iorwf	___xxtofl@arg+3,f
  4271     0747                     l3563:
  4272     0747  0824               	movf	___xxtofl@sign,w
  4273     0748  1903               	btfsc	3,2
  4274     0749  2F4B               	goto	u3601
  4275     074A  2F4C               	goto	u3600
  4276     074B                     u3601:
  4277     074B  2F51               	goto	l3569
  4278     074C                     u3600:
  4279     074C                     l3565:
  4280     074C  1FF6               	btfss	___xxtofl@val+3,7
  4281     074D  2F4F               	goto	u3611
  4282     074E  2F50               	goto	u3610
  4283     074F                     u3611:
  4284     074F  2F51               	goto	l3569
  4285     0750                     u3610:
  4286     0750                     l3567:
  4287     0750  17A9               	bsf	___xxtofl@arg+3,7
  4288     0751                     l3569:
  4289     0751  0829               	movf	___xxtofl@arg+3,w
  4290     0752  00F6               	movwf	?___xxtofl+3
  4291     0753  0828               	movf	___xxtofl@arg+2,w
  4292     0754  00F5               	movwf	?___xxtofl+2
  4293     0755  0827               	movf	___xxtofl@arg+1,w
  4294     0756  00F4               	movwf	?___xxtofl+1
  4295     0757  0826               	movf	___xxtofl@arg,w
  4296     0758  00F3               	movwf	?___xxtofl
  4297     0759                     l1176:
  4298     0759  0008               	return
  4299     075A                     __end_of___xxtofl:
  4300                           
  4301                           	psect	text8
  4302     02CA                     __ptext8:	
  4303 ;; *************** function ___flmul *****************
  4304 ;; Defined at:
  4305 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  b               4    5[BANK0 ] unsigned char 
  4308 ;;  a               4    9[BANK0 ] unsigned char 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  prod            4   25[BANK0 ] struct .
  4311 ;;  grs             4   20[BANK0 ] unsigned long 
  4312 ;;  temp            2   29[BANK0 ] struct .
  4313 ;;  bexp            1   24[BANK0 ] unsigned char 
  4314 ;;  aexp            1   19[BANK0 ] unsigned char 
  4315 ;;  sign            1   18[BANK0 ] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  4    5[BANK0 ] unsigned char 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0, pclath, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4325 ;;      Params:         0       8       0       0
  4326 ;;      Locals:         0      13       0       0
  4327 ;;      Temps:          0       5       0       0
  4328 ;;      Totals:         0      26       0       0
  4329 ;;Total ram usage:       26 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; Hardware stack levels required when called: 6
  4332 ;; This function calls:
  4333 ;;		__Umul8_16
  4334 ;; This function is called by:
  4335 ;;		_main
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339     02CA                     ___flmul:	
  4340                           ;psect for function ___flmul
  4341                           
  4342     02CA                     l3389:	
  4343                           ;incstack = 0
  4344                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  4345                           
  4346     02CA  0020               	movlb	0	; select bank0
  4347     02CB  0828               	movf	___flmul@b+3,w
  4348     02CC  3980               	andlw	128
  4349     02CD  00B2               	movwf	___flmul@sign
  4350     02CE                     l3391:
  4351     02CE  3528               	lslf	___flmul@b+3,w
  4352     02CF  00B8               	movwf	___flmul@bexp
  4353     02D0                     l3393:
  4354     02D0  1FA7               	btfss	___flmul@b+2,7
  4355     02D1  2AD3               	goto	u3221
  4356     02D2  2AD4               	goto	u3220
  4357     02D3                     u3221:
  4358     02D3  2AD5               	goto	l3397
  4359     02D4                     u3220:
  4360     02D4                     l3395:
  4361     02D4  1438               	bsf	___flmul@bexp,0
  4362     02D5                     l3397:
  4363     02D5  0838               	movf	___flmul@bexp,w
  4364     02D6  1903               	btfsc	3,2
  4365     02D7  2AD9               	goto	u3231
  4366     02D8  2ADA               	goto	u3230
  4367     02D9                     u3231:
  4368     02D9  2AE9               	goto	l3405
  4369     02DA                     u3230:
  4370     02DA                     l3399:
  4371     02DA  0A38               	incf	___flmul@bexp,w
  4372     02DB  1D03               	btfss	3,2
  4373     02DC  2ADE               	goto	u3241
  4374     02DD  2ADF               	goto	u3240
  4375     02DE                     u3241:
  4376     02DE  2AE7               	goto	l3403
  4377     02DF                     u3240:
  4378     02DF                     l3401:
  4379     02DF  3000               	movlw	0
  4380     02E0  00A8               	movwf	___flmul@b+3
  4381     02E1  3000               	movlw	0
  4382     02E2  00A7               	movwf	___flmul@b+2
  4383     02E3  3000               	movlw	0
  4384     02E4  00A6               	movwf	___flmul@b+1
  4385     02E5  3000               	movlw	0
  4386     02E6  00A5               	movwf	___flmul@b
  4387     02E7                     l3403:
  4388     02E7  17A7               	bsf	___flmul@b+2,7
  4389     02E8  2AF1               	goto	l3407
  4390     02E9                     l3405:
  4391     02E9  3000               	movlw	0
  4392     02EA  00A8               	movwf	___flmul@b+3
  4393     02EB  3000               	movlw	0
  4394     02EC  00A7               	movwf	___flmul@b+2
  4395     02ED  3000               	movlw	0
  4396     02EE  00A6               	movwf	___flmul@b+1
  4397     02EF  3000               	movlw	0
  4398     02F0  00A5               	movwf	___flmul@b
  4399     02F1                     l3407:
  4400     02F1  082C               	movf	___flmul@a+3,w
  4401     02F2  3980               	andlw	128
  4402     02F3  00AD               	movwf	??___flmul
  4403     02F4  082D               	movf	??___flmul,w
  4404     02F5  06B2               	xorwf	___flmul@sign,f
  4405     02F6                     l3409:
  4406     02F6  352C               	lslf	___flmul@a+3,w
  4407     02F7  00B3               	movwf	___flmul@aexp
  4408     02F8                     l3411:
  4409     02F8  1FAB               	btfss	___flmul@a+2,7
  4410     02F9  2AFB               	goto	u3251
  4411     02FA  2AFC               	goto	u3250
  4412     02FB                     u3251:
  4413     02FB  2AFD               	goto	l3415
  4414     02FC                     u3250:
  4415     02FC                     l3413:
  4416     02FC  1433               	bsf	___flmul@aexp,0
  4417     02FD                     l3415:
  4418     02FD  0833               	movf	___flmul@aexp,w
  4419     02FE  1903               	btfsc	3,2
  4420     02FF  2B01               	goto	u3261
  4421     0300  2B02               	goto	u3260
  4422     0301                     u3261:
  4423     0301  2B11               	goto	l3423
  4424     0302                     u3260:
  4425     0302                     l3417:
  4426     0302  0A33               	incf	___flmul@aexp,w
  4427     0303  1D03               	btfss	3,2
  4428     0304  2B06               	goto	u3271
  4429     0305  2B07               	goto	u3270
  4430     0306                     u3271:
  4431     0306  2B0F               	goto	l3421
  4432     0307                     u3270:
  4433     0307                     l3419:
  4434     0307  3000               	movlw	0
  4435     0308  00AC               	movwf	___flmul@a+3
  4436     0309  3000               	movlw	0
  4437     030A  00AB               	movwf	___flmul@a+2
  4438     030B  3000               	movlw	0
  4439     030C  00AA               	movwf	___flmul@a+1
  4440     030D  3000               	movlw	0
  4441     030E  00A9               	movwf	___flmul@a
  4442     030F                     l3421:
  4443     030F  17AB               	bsf	___flmul@a+2,7
  4444     0310  2B19               	goto	l3425
  4445     0311                     l3423:
  4446     0311  3000               	movlw	0
  4447     0312  00AC               	movwf	___flmul@a+3
  4448     0313  3000               	movlw	0
  4449     0314  00AB               	movwf	___flmul@a+2
  4450     0315  3000               	movlw	0
  4451     0316  00AA               	movwf	___flmul@a+1
  4452     0317  3000               	movlw	0
  4453     0318  00A9               	movwf	___flmul@a
  4454     0319                     l3425:
  4455     0319  0833               	movf	___flmul@aexp,w
  4456     031A  1903               	btfsc	3,2
  4457     031B  2B1D               	goto	u3281
  4458     031C  2B1E               	goto	u3280
  4459     031D                     u3281:
  4460     031D  2B23               	goto	l3429
  4461     031E                     u3280:
  4462     031E                     l3427:
  4463     031E  0838               	movf	___flmul@bexp,w
  4464     031F  1D03               	btfss	3,2
  4465     0320  2B22               	goto	u3291
  4466     0321  2B23               	goto	u3290
  4467     0322                     u3291:
  4468     0322  2B2C               	goto	l3433
  4469     0323                     u3290:
  4470     0323                     l3429:
  4471     0323  3000               	movlw	0
  4472     0324  00A8               	movwf	?___flmul+3
  4473     0325  3000               	movlw	0
  4474     0326  00A7               	movwf	?___flmul+2
  4475     0327  3000               	movlw	0
  4476     0328  00A6               	movwf	?___flmul+1
  4477     0329  3000               	movlw	0
  4478     032A  00A5               	movwf	?___flmul
  4479     032B  2D04               	goto	l1130
  4480     032C                     l3433:
  4481     032C  0825               	movf	___flmul@b,w
  4482     032D  00F3               	movwf	__Umul8_16@multiplicand
  4483     032E  082B               	movf	___flmul@a+2,w
  4484     032F  318E  2665  3182   	fcall	__Umul8_16
  4485     0332  0874               	movf	?__Umul8_16+1,w
  4486     0333  0020               	movlb	0	; select bank0
  4487     0334  00BE               	movwf	___flmul@temp+1
  4488     0335  0873               	movf	?__Umul8_16,w
  4489     0336  00BD               	movwf	___flmul@temp
  4490     0337                     l3435:
  4491     0337  083D               	movf	___flmul@temp,w
  4492     0338  00AD               	movwf	??___flmul
  4493     0339  01AE               	clrf	??___flmul+1
  4494     033A  01AF               	clrf	??___flmul+2
  4495     033B  01B0               	clrf	??___flmul+3
  4496     033C  0830               	movf	??___flmul+3,w
  4497     033D  00B7               	movwf	___flmul@grs+3
  4498     033E  082F               	movf	??___flmul+2,w
  4499     033F  00B6               	movwf	___flmul@grs+2
  4500     0340  082E               	movf	??___flmul+1,w
  4501     0341  00B5               	movwf	___flmul@grs+1
  4502     0342  082D               	movf	??___flmul,w
  4503     0343  00B4               	movwf	___flmul@grs
  4504     0344                     l3437:
  4505     0344  083E               	movf	___flmul@temp+1,w
  4506     0345  00AD               	movwf	??___flmul
  4507     0346  01AE               	clrf	??___flmul+1
  4508     0347  01AF               	clrf	??___flmul+2
  4509     0348  01B0               	clrf	??___flmul+3
  4510     0349  0830               	movf	??___flmul+3,w
  4511     034A  00BC               	movwf	___flmul@prod+3
  4512     034B  082F               	movf	??___flmul+2,w
  4513     034C  00BB               	movwf	___flmul@prod+2
  4514     034D  082E               	movf	??___flmul+1,w
  4515     034E  00BA               	movwf	___flmul@prod+1
  4516     034F  082D               	movf	??___flmul,w
  4517     0350  00B9               	movwf	___flmul@prod
  4518     0351  0826               	movf	___flmul@b+1,w
  4519     0352  00F3               	movwf	__Umul8_16@multiplicand
  4520     0353  082A               	movf	___flmul@a+1,w
  4521     0354  318E  2665  3182   	fcall	__Umul8_16
  4522     0357  0874               	movf	?__Umul8_16+1,w
  4523     0358  0020               	movlb	0	; select bank0
  4524     0359  00BE               	movwf	___flmul@temp+1
  4525     035A  0873               	movf	?__Umul8_16,w
  4526     035B  00BD               	movwf	___flmul@temp
  4527     035C                     l3439:
  4528     035C  083D               	movf	___flmul@temp,w
  4529     035D  00AD               	movwf	??___flmul
  4530     035E  01AE               	clrf	??___flmul+1
  4531     035F  01AF               	clrf	??___flmul+2
  4532     0360  01B0               	clrf	??___flmul+3
  4533     0361  082D               	movf	??___flmul,w
  4534     0362  07B4               	addwf	___flmul@grs,f
  4535     0363  082E               	movf	??___flmul+1,w
  4536     0364  3DB5               	addwfc	___flmul@grs+1,f
  4537     0365  082F               	movf	??___flmul+2,w
  4538     0366  3DB6               	addwfc	___flmul@grs+2,f
  4539     0367  0830               	movf	??___flmul+3,w
  4540     0368  3DB7               	addwfc	___flmul@grs+3,f
  4541     0369                     l3441:
  4542     0369  083E               	movf	___flmul@temp+1,w
  4543     036A  00AD               	movwf	??___flmul
  4544     036B  01AE               	clrf	??___flmul+1
  4545     036C  01AF               	clrf	??___flmul+2
  4546     036D  01B0               	clrf	??___flmul+3
  4547     036E  082D               	movf	??___flmul,w
  4548     036F  07B9               	addwf	___flmul@prod,f
  4549     0370  082E               	movf	??___flmul+1,w
  4550     0371  3DBA               	addwfc	___flmul@prod+1,f
  4551     0372  082F               	movf	??___flmul+2,w
  4552     0373  3DBB               	addwfc	___flmul@prod+2,f
  4553     0374  0830               	movf	??___flmul+3,w
  4554     0375  3DBC               	addwfc	___flmul@prod+3,f
  4555     0376  0827               	movf	___flmul@b+2,w
  4556     0377  00F3               	movwf	__Umul8_16@multiplicand
  4557     0378  0829               	movf	___flmul@a,w
  4558     0379  318E  2665  3182   	fcall	__Umul8_16
  4559     037C  0874               	movf	?__Umul8_16+1,w
  4560     037D  0020               	movlb	0	; select bank0
  4561     037E  00BE               	movwf	___flmul@temp+1
  4562     037F  0873               	movf	?__Umul8_16,w
  4563     0380  00BD               	movwf	___flmul@temp
  4564     0381                     l3443:
  4565     0381  083D               	movf	___flmul@temp,w
  4566     0382  00AD               	movwf	??___flmul
  4567     0383  01AE               	clrf	??___flmul+1
  4568     0384  01AF               	clrf	??___flmul+2
  4569     0385  01B0               	clrf	??___flmul+3
  4570     0386  082D               	movf	??___flmul,w
  4571     0387  07B4               	addwf	___flmul@grs,f
  4572     0388  082E               	movf	??___flmul+1,w
  4573     0389  3DB5               	addwfc	___flmul@grs+1,f
  4574     038A  082F               	movf	??___flmul+2,w
  4575     038B  3DB6               	addwfc	___flmul@grs+2,f
  4576     038C  0830               	movf	??___flmul+3,w
  4577     038D  3DB7               	addwfc	___flmul@grs+3,f
  4578     038E                     l3445:
  4579     038E  083E               	movf	___flmul@temp+1,w
  4580     038F  00AD               	movwf	??___flmul
  4581     0390  01AE               	clrf	??___flmul+1
  4582     0391  01AF               	clrf	??___flmul+2
  4583     0392  01B0               	clrf	??___flmul+3
  4584     0393  082D               	movf	??___flmul,w
  4585     0394  07B9               	addwf	___flmul@prod,f
  4586     0395  082E               	movf	??___flmul+1,w
  4587     0396  3DBA               	addwfc	___flmul@prod+1,f
  4588     0397  082F               	movf	??___flmul+2,w
  4589     0398  3DBB               	addwfc	___flmul@prod+2,f
  4590     0399  0830               	movf	??___flmul+3,w
  4591     039A  3DBC               	addwfc	___flmul@prod+3,f
  4592     039B                     l3447:
  4593     039B  3008               	movlw	8
  4594     039C                     u3305:
  4595     039C  35B4               	lslf	___flmul@grs,f
  4596     039D  0DB5               	rlf	___flmul@grs+1,f
  4597     039E  0DB6               	rlf	___flmul@grs+2,f
  4598     039F  0DB7               	rlf	___flmul@grs+3,f
  4599     03A0  0B89               	decfsz	9,f
  4600     03A1  2B9C               	goto	u3305
  4601     03A2                     l3449:
  4602     03A2  0826               	movf	___flmul@b+1,w
  4603     03A3  00F3               	movwf	__Umul8_16@multiplicand
  4604     03A4  0829               	movf	___flmul@a,w
  4605     03A5  318E  2665  3182   	fcall	__Umul8_16
  4606     03A8  0874               	movf	?__Umul8_16+1,w
  4607     03A9  0020               	movlb	0	; select bank0
  4608     03AA  00BE               	movwf	___flmul@temp+1
  4609     03AB  0873               	movf	?__Umul8_16,w
  4610     03AC  00BD               	movwf	___flmul@temp
  4611     03AD                     l3451:
  4612     03AD  083D               	movf	___flmul@temp,w
  4613     03AE  07B4               	addwf	___flmul@grs,f
  4614     03AF  083E               	movf	___flmul@temp+1,w
  4615     03B0  3DB5               	addwfc	___flmul@grs+1,f
  4616     03B1  3000               	movlw	0
  4617     03B2  3DB6               	addwfc	___flmul@grs+2,f
  4618     03B3  3DB7               	addwfc	___flmul@grs+3,f
  4619     03B4                     l3453:
  4620     03B4  0825               	movf	___flmul@b,w
  4621     03B5  00F3               	movwf	__Umul8_16@multiplicand
  4622     03B6  082A               	movf	___flmul@a+1,w
  4623     03B7  318E  2665  3182   	fcall	__Umul8_16
  4624     03BA  0874               	movf	?__Umul8_16+1,w
  4625     03BB  0020               	movlb	0	; select bank0
  4626     03BC  00BE               	movwf	___flmul@temp+1
  4627     03BD  0873               	movf	?__Umul8_16,w
  4628     03BE  00BD               	movwf	___flmul@temp
  4629     03BF                     l3455:
  4630     03BF  083D               	movf	___flmul@temp,w
  4631     03C0  07B4               	addwf	___flmul@grs,f
  4632     03C1  083E               	movf	___flmul@temp+1,w
  4633     03C2  3DB5               	addwfc	___flmul@grs+1,f
  4634     03C3  3000               	movlw	0
  4635     03C4  3DB6               	addwfc	___flmul@grs+2,f
  4636     03C5  3DB7               	addwfc	___flmul@grs+3,f
  4637     03C6                     l3457:
  4638     03C6  3008               	movlw	8
  4639     03C7                     u3315:
  4640     03C7  35B4               	lslf	___flmul@grs,f
  4641     03C8  0DB5               	rlf	___flmul@grs+1,f
  4642     03C9  0DB6               	rlf	___flmul@grs+2,f
  4643     03CA  0DB7               	rlf	___flmul@grs+3,f
  4644     03CB  0B89               	decfsz	9,f
  4645     03CC  2BC7               	goto	u3315
  4646     03CD  0825               	movf	___flmul@b,w
  4647     03CE  00F3               	movwf	__Umul8_16@multiplicand
  4648     03CF  0829               	movf	___flmul@a,w
  4649     03D0  318E  2665  3182   	fcall	__Umul8_16
  4650     03D3  0874               	movf	?__Umul8_16+1,w
  4651     03D4  0020               	movlb	0	; select bank0
  4652     03D5  00BE               	movwf	___flmul@temp+1
  4653     03D6  0873               	movf	?__Umul8_16,w
  4654     03D7  00BD               	movwf	___flmul@temp
  4655     03D8                     l3459:
  4656     03D8  083D               	movf	___flmul@temp,w
  4657     03D9  07B4               	addwf	___flmul@grs,f
  4658     03DA  083E               	movf	___flmul@temp+1,w
  4659     03DB  3DB5               	addwfc	___flmul@grs+1,f
  4660     03DC  3000               	movlw	0
  4661     03DD  3DB6               	addwfc	___flmul@grs+2,f
  4662     03DE  3DB7               	addwfc	___flmul@grs+3,f
  4663     03DF                     l3461:
  4664     03DF  0826               	movf	___flmul@b+1,w
  4665     03E0  00F3               	movwf	__Umul8_16@multiplicand
  4666     03E1  082B               	movf	___flmul@a+2,w
  4667     03E2  318E  2665  3182   	fcall	__Umul8_16
  4668     03E5  0874               	movf	?__Umul8_16+1,w
  4669     03E6  0020               	movlb	0	; select bank0
  4670     03E7  00BE               	movwf	___flmul@temp+1
  4671     03E8  0873               	movf	?__Umul8_16,w
  4672     03E9  00BD               	movwf	___flmul@temp
  4673     03EA  083D               	movf	___flmul@temp,w
  4674     03EB  07B9               	addwf	___flmul@prod,f
  4675     03EC  083E               	movf	___flmul@temp+1,w
  4676     03ED  3DBA               	addwfc	___flmul@prod+1,f
  4677     03EE  3000               	movlw	0
  4678     03EF  3DBB               	addwfc	___flmul@prod+2,f
  4679     03F0  3DBC               	addwfc	___flmul@prod+3,f
  4680     03F1                     l3463:
  4681     03F1  0827               	movf	___flmul@b+2,w
  4682     03F2  00F3               	movwf	__Umul8_16@multiplicand
  4683     03F3  082A               	movf	___flmul@a+1,w
  4684     03F4  318E  2665  3182   	fcall	__Umul8_16
  4685     03F7  0874               	movf	?__Umul8_16+1,w
  4686     03F8  0020               	movlb	0	; select bank0
  4687     03F9  00BE               	movwf	___flmul@temp+1
  4688     03FA  0873               	movf	?__Umul8_16,w
  4689     03FB  00BD               	movwf	___flmul@temp
  4690     03FC                     l3465:
  4691     03FC  083D               	movf	___flmul@temp,w
  4692     03FD  07B9               	addwf	___flmul@prod,f
  4693     03FE  083E               	movf	___flmul@temp+1,w
  4694     03FF  3DBA               	addwfc	___flmul@prod+1,f
  4695     0400  3000               	movlw	0
  4696     0401  3DBB               	addwfc	___flmul@prod+2,f
  4697     0402  3DBC               	addwfc	___flmul@prod+3,f
  4698     0403  0827               	movf	___flmul@b+2,w
  4699     0404  00F3               	movwf	__Umul8_16@multiplicand
  4700     0405  082B               	movf	___flmul@a+2,w
  4701     0406  318E  2665  3182   	fcall	__Umul8_16
  4702     0409  0874               	movf	?__Umul8_16+1,w
  4703     040A  0020               	movlb	0	; select bank0
  4704     040B  00BE               	movwf	___flmul@temp+1
  4705     040C  0873               	movf	?__Umul8_16,w
  4706     040D  00BD               	movwf	___flmul@temp
  4707     040E                     l3467:
  4708     040E  083D               	movf	___flmul@temp,w
  4709     040F  00AD               	movwf	??___flmul
  4710     0410  083E               	movf	___flmul@temp+1,w
  4711     0411  00AE               	movwf	??___flmul+1
  4712     0412  01AF               	clrf	??___flmul+2
  4713     0413  01B0               	clrf	??___flmul+3
  4714     0414  3008               	movlw	8
  4715     0415                     u3325:
  4716     0415  35AD               	lslf	??___flmul,f
  4717     0416  0DAE               	rlf	??___flmul+1,f
  4718     0417  0DAF               	rlf	??___flmul+2,f
  4719     0418  0DB0               	rlf	??___flmul+3,f
  4720     0419                     u3320:
  4721     0419  0B89               	decfsz	9,f
  4722     041A  2C15               	goto	u3325
  4723     041B  082D               	movf	??___flmul,w
  4724     041C  07B9               	addwf	___flmul@prod,f
  4725     041D  082E               	movf	??___flmul+1,w
  4726     041E  3DBA               	addwfc	___flmul@prod+1,f
  4727     041F  082F               	movf	??___flmul+2,w
  4728     0420  3DBB               	addwfc	___flmul@prod+2,f
  4729     0421  0830               	movf	??___flmul+3,w
  4730     0422  3DBC               	addwfc	___flmul@prod+3,f
  4731     0423                     l3469:
  4732     0423  0834               	movf	___flmul@grs,w
  4733     0424  00AD               	movwf	??___flmul
  4734     0425  0835               	movf	___flmul@grs+1,w
  4735     0426  00AE               	movwf	??___flmul+1
  4736     0427  0836               	movf	___flmul@grs+2,w
  4737     0428  00AF               	movwf	??___flmul+2
  4738     0429  0837               	movf	___flmul@grs+3,w
  4739     042A  00B0               	movwf	??___flmul+3
  4740     042B  3018               	movlw	24
  4741     042C                     u3335:
  4742     042C  36B0               	lsrf	??___flmul+3,f
  4743     042D  0CAF               	rrf	??___flmul+2,f
  4744     042E  0CAE               	rrf	??___flmul+1,f
  4745     042F  0CAD               	rrf	??___flmul,f
  4746     0430                     u3330:
  4747     0430  0B89               	decfsz	9,f
  4748     0431  2C2C               	goto	u3335
  4749     0432  082D               	movf	??___flmul,w
  4750     0433  07B9               	addwf	___flmul@prod,f
  4751     0434  082E               	movf	??___flmul+1,w
  4752     0435  3DBA               	addwfc	___flmul@prod+1,f
  4753     0436  082F               	movf	??___flmul+2,w
  4754     0437  3DBB               	addwfc	___flmul@prod+2,f
  4755     0438  0830               	movf	??___flmul+3,w
  4756     0439  3DBC               	addwfc	___flmul@prod+3,f
  4757     043A                     l3471:
  4758     043A  3008               	movlw	8
  4759     043B                     u3345:
  4760     043B  35B4               	lslf	___flmul@grs,f
  4761     043C  0DB5               	rlf	___flmul@grs+1,f
  4762     043D  0DB6               	rlf	___flmul@grs+2,f
  4763     043E  0DB7               	rlf	___flmul@grs+3,f
  4764     043F  0B89               	decfsz	9,f
  4765     0440  2C3B               	goto	u3345
  4766     0441                     l3473:
  4767     0441  0838               	movf	___flmul@bexp,w
  4768     0442  0733               	addwf	___flmul@aexp,w
  4769     0443  00AD               	movwf	??___flmul
  4770     0444  01AE               	clrf	??___flmul+1
  4771     0445  0DAE               	rlf	??___flmul+1,f
  4772     0446  082D               	movf	??___flmul,w
  4773     0447  3E82               	addlw	130
  4774     0448  00BD               	movwf	___flmul@temp
  4775     0449  30FF               	movlw	255
  4776     044A  3D2E               	addwfc	??___flmul+1,w
  4777     044B  00BE               	movwf	___flmul@temp+1
  4778     044C  2C64               	goto	l3485
  4779     044D                     l3475:
  4780     044D  3001               	movlw	1
  4781     044E                     u3355:
  4782     044E  35B9               	lslf	___flmul@prod,f
  4783     044F  0DBA               	rlf	___flmul@prod+1,f
  4784     0450  0DBB               	rlf	___flmul@prod+2,f
  4785     0451  0DBC               	rlf	___flmul@prod+3,f
  4786     0452  0B89               	decfsz	9,f
  4787     0453  2C4E               	goto	u3355
  4788     0454                     l3477:
  4789     0454  1FB7               	btfss	___flmul@grs+3,7
  4790     0455  2C57               	goto	u3361
  4791     0456  2C58               	goto	u3360
  4792     0457                     u3361:
  4793     0457  2C59               	goto	l3481
  4794     0458                     u3360:
  4795     0458                     l3479:
  4796     0458  1439               	bsf	___flmul@prod,0
  4797     0459                     l3481:
  4798     0459  3001               	movlw	1
  4799     045A                     u3375:
  4800     045A  35B4               	lslf	___flmul@grs,f
  4801     045B  0DB5               	rlf	___flmul@grs+1,f
  4802     045C  0DB6               	rlf	___flmul@grs+2,f
  4803     045D  0DB7               	rlf	___flmul@grs+3,f
  4804     045E  0B89               	decfsz	9,f
  4805     045F  2C5A               	goto	u3375
  4806     0460                     l3483:
  4807     0460  30FF               	movlw	255
  4808     0461  07BD               	addwf	___flmul@temp,f
  4809     0462  30FF               	movlw	255
  4810     0463  3DBE               	addwfc	___flmul@temp+1,f
  4811     0464                     l3485:
  4812     0464  1FBB               	btfss	___flmul@prod+2,7
  4813     0465  2C67               	goto	u3381
  4814     0466  2C68               	goto	u3380
  4815     0467                     u3381:
  4816     0467  2C4D               	goto	l3475
  4817     0468                     u3380:
  4818     0468                     l3487:
  4819     0468  01B3               	clrf	___flmul@aexp
  4820     0469                     l3489:
  4821     0469  1FB7               	btfss	___flmul@grs+3,7
  4822     046A  2C6C               	goto	u3391
  4823     046B  2C6D               	goto	u3390
  4824     046C                     u3391:
  4825     046C  2C89               	goto	l3497
  4826     046D                     u3390:
  4827     046D                     l3491:
  4828     046D  30FF               	movlw	255
  4829     046E  0534               	andwf	___flmul@grs,w
  4830     046F  00AD               	movwf	??___flmul
  4831     0470  30FF               	movlw	255
  4832     0471  0535               	andwf	___flmul@grs+1,w
  4833     0472  00AE               	movwf	??___flmul+1
  4834     0473  30FF               	movlw	255
  4835     0474  0536               	andwf	___flmul@grs+2,w
  4836     0475  00AF               	movwf	??___flmul+2
  4837     0476  307F               	movlw	127
  4838     0477  0537               	andwf	___flmul@grs+3,w
  4839     0478  00B0               	movwf	??___flmul+3
  4840     0479  0830               	movf	??___flmul+3,w
  4841     047A  042F               	iorwf	??___flmul+2,w
  4842     047B  042E               	iorwf	??___flmul+1,w
  4843     047C  042D               	iorwf	??___flmul,w
  4844     047D  1903               	skipnz
  4845     047E  2C80               	goto	u3401
  4846     047F  2C81               	goto	u3400
  4847     0480                     u3401:
  4848     0480  2C84               	goto	l1136
  4849     0481                     u3400:
  4850     0481                     l3493:
  4851     0481  01B3               	clrf	___flmul@aexp
  4852     0482  0AB3               	incf	___flmul@aexp,f
  4853     0483  2C89               	goto	l3497
  4854     0484                     l1136:
  4855     0484  1C39               	btfss	___flmul@prod,0
  4856     0485  2C87               	goto	u3411
  4857     0486  2C88               	goto	u3410
  4858     0487                     u3411:
  4859     0487  2C89               	goto	l3497
  4860     0488                     u3410:
  4861     0488  2C81               	goto	l3493
  4862     0489                     l3497:
  4863     0489  0833               	movf	___flmul@aexp,w
  4864     048A  1903               	btfsc	3,2
  4865     048B  2C8D               	goto	u3421
  4866     048C  2C8E               	goto	u3420
  4867     048D                     u3421:
  4868     048D  2CB6               	goto	l3507
  4869     048E                     u3420:
  4870     048E                     l3499:
  4871     048E  3001               	movlw	1
  4872     048F  07B9               	addwf	___flmul@prod,f
  4873     0490  3000               	movlw	0
  4874     0491  3DBA               	addwfc	___flmul@prod+1,f
  4875     0492  3000               	movlw	0
  4876     0493  3DBB               	addwfc	___flmul@prod+2,f
  4877     0494  3000               	movlw	0
  4878     0495  3DBC               	addwfc	___flmul@prod+3,f
  4879     0496                     l3501:
  4880     0496  1C3C               	btfss	___flmul@prod+3,0
  4881     0497  2C99               	goto	u3431
  4882     0498  2C9A               	goto	u3430
  4883     0499                     u3431:
  4884     0499  2CB6               	goto	l3507
  4885     049A                     u3430:
  4886     049A                     l3503:
  4887     049A  0839               	movf	___flmul@prod,w
  4888     049B  00AD               	movwf	??___flmul
  4889     049C  083A               	movf	___flmul@prod+1,w
  4890     049D  00AE               	movwf	??___flmul+1
  4891     049E  083B               	movf	___flmul@prod+2,w
  4892     049F  00AF               	movwf	??___flmul+2
  4893     04A0  083C               	movf	___flmul@prod+3,w
  4894     04A1  00B0               	movwf	??___flmul+3
  4895     04A2  3001               	movlw	1
  4896     04A3  00B1               	movwf	??___flmul+4
  4897     04A4                     u3445:
  4898     04A4  37B0               	asrf	??___flmul+3,f
  4899     04A5  0CAF               	rrf	??___flmul+2,f
  4900     04A6  0CAE               	rrf	??___flmul+1,f
  4901     04A7  0CAD               	rrf	??___flmul,f
  4902     04A8                     u3440:
  4903     04A8  0BB1               	decfsz	??___flmul+4,f
  4904     04A9  2CA4               	goto	u3445
  4905     04AA  0830               	movf	??___flmul+3,w
  4906     04AB  00BC               	movwf	___flmul@prod+3
  4907     04AC  082F               	movf	??___flmul+2,w
  4908     04AD  00BB               	movwf	___flmul@prod+2
  4909     04AE  082E               	movf	??___flmul+1,w
  4910     04AF  00BA               	movwf	___flmul@prod+1
  4911     04B0  082D               	movf	??___flmul,w
  4912     04B1  00B9               	movwf	___flmul@prod
  4913     04B2                     l3505:
  4914     04B2  3001               	movlw	1
  4915     04B3  07BD               	addwf	___flmul@temp,f
  4916     04B4  3000               	movlw	0
  4917     04B5  3DBE               	addwfc	___flmul@temp+1,f
  4918     04B6                     l3507:
  4919     04B6  083E               	movf	___flmul@temp+1,w
  4920     04B7  3A80               	xorlw	128
  4921     04B8  00AD               	movwf	??___flmul
  4922     04B9  3080               	movlw	128
  4923     04BA  022D               	subwf	??___flmul,w
  4924     04BB  1D03               	skipz
  4925     04BC  2CBF               	goto	u3455
  4926     04BD  30FF               	movlw	255
  4927     04BE  023D               	subwf	___flmul@temp,w
  4928     04BF                     u3455:
  4929     04BF  1C03               	skipc
  4930     04C0  2CC2               	goto	u3451
  4931     04C1  2CC3               	goto	u3450
  4932     04C2                     u3451:
  4933     04C2  2CCD               	goto	l3511
  4934     04C3                     u3450:
  4935     04C3                     l3509:
  4936     04C3  307F               	movlw	127
  4937     04C4  0020               	movlb	0	; select bank0
  4938     04C5  00BC               	movwf	___flmul@prod+3
  4939     04C6  3080               	movlw	128
  4940     04C7  00BB               	movwf	___flmul@prod+2
  4941     04C8  3000               	movlw	0
  4942     04C9  00BA               	movwf	___flmul@prod+1
  4943     04CA  3000               	movlw	0
  4944     04CB  00B9               	movwf	___flmul@prod
  4945     04CC  2CF8               	goto	l1142
  4946     04CD                     l3511:
  4947     04CD  0020               	movlb	0	; select bank0
  4948     04CE  083E               	movf	___flmul@temp+1,w
  4949     04CF  3A80               	xorlw	128
  4950     04D0  00AD               	movwf	??___flmul
  4951     04D1  3080               	movlw	128
  4952     04D2  022D               	subwf	??___flmul,w
  4953     04D3  1D03               	skipz
  4954     04D4  2CD7               	goto	u3465
  4955     04D5  3001               	movlw	1
  4956     04D6  023D               	subwf	___flmul@temp,w
  4957     04D7                     u3465:
  4958     04D7  1803               	skipnc
  4959     04D8  2CDA               	goto	u3461
  4960     04D9  2CDB               	goto	u3460
  4961     04DA                     u3461:
  4962     04DA  2CE6               	goto	l3517
  4963     04DB                     u3460:
  4964     04DB                     l3513:
  4965     04DB  3000               	movlw	0
  4966     04DC  0020               	movlb	0	; select bank0
  4967     04DD  00BC               	movwf	___flmul@prod+3
  4968     04DE  3000               	movlw	0
  4969     04DF  00BB               	movwf	___flmul@prod+2
  4970     04E0  3000               	movlw	0
  4971     04E1  00BA               	movwf	___flmul@prod+1
  4972     04E2  3000               	movlw	0
  4973     04E3  00B9               	movwf	___flmul@prod
  4974     04E4                     l3515:
  4975     04E4  01B2               	clrf	___flmul@sign
  4976     04E5  2CF8               	goto	l1142
  4977     04E6                     l3517:
  4978     04E6  0020               	movlb	0	; select bank0
  4979     04E7  083D               	movf	___flmul@temp,w
  4980     04E8  00B8               	movwf	___flmul@bexp
  4981     04E9  30FF               	movlw	255
  4982     04EA  05B9               	andwf	___flmul@prod,f
  4983     04EB  30FF               	movlw	255
  4984     04EC  05BA               	andwf	___flmul@prod+1,f
  4985     04ED  307F               	movlw	127
  4986     04EE  05BB               	andwf	___flmul@prod+2,f
  4987     04EF  3000               	movlw	0
  4988     04F0  05BC               	andwf	___flmul@prod+3,f
  4989     04F1                     l3519:
  4990     04F1  1C38               	btfss	___flmul@bexp,0
  4991     04F2  2CF4               	goto	u3471
  4992     04F3  2CF5               	goto	u3470
  4993     04F4                     u3471:
  4994     04F4  2CF6               	goto	l3523
  4995     04F5                     u3470:
  4996     04F5                     l3521:
  4997     04F5  17BB               	bsf	___flmul@prod+2,7
  4998     04F6                     l3523:
  4999     04F6  3638               	lsrf	___flmul@bexp,w
  5000     04F7  00BC               	movwf	___flmul@prod+3
  5001     04F8                     l1142:
  5002     04F8  0832               	movf	___flmul@sign,w
  5003     04F9  00AD               	movwf	??___flmul
  5004     04FA  082D               	movf	??___flmul,w
  5005     04FB  04BC               	iorwf	___flmul@prod+3,f
  5006     04FC                     l3525:
  5007     04FC  083C               	movf	___flmul@prod+3,w
  5008     04FD  00A8               	movwf	?___flmul+3
  5009     04FE  083B               	movf	___flmul@prod+2,w
  5010     04FF  00A7               	movwf	?___flmul+2
  5011     0500  083A               	movf	___flmul@prod+1,w
  5012     0501  00A6               	movwf	?___flmul+1
  5013     0502  0839               	movf	___flmul@prod,w
  5014     0503  00A5               	movwf	?___flmul
  5015     0504                     l1130:
  5016     0504  0008               	return
  5017     0505                     __end_of___flmul:
  5018                           
  5019                           	psect	text9
  5020     0E65                     __ptext9:	
  5021 ;; *************** function __Umul8_16 *****************
  5022 ;; Defined at:
  5023 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  multiplier      1    wreg     unsigned char 
  5026 ;;  multiplicand    1    3[COMMON] unsigned char 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5029 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5030 ;;  product         2    0[BANK0 ] unsigned int 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  2    3[COMMON] unsigned int 
  5033 ;; Registers used:
  5034 ;;		wreg, status,2, status,0
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5040 ;;      Params:         2       0       0       0
  5041 ;;      Locals:         0       5       0       0
  5042 ;;      Temps:          2       0       0       0
  5043 ;;      Totals:         4       5       0       0
  5044 ;;Total ram usage:        9 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; Hardware stack levels required when called: 5
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		___flmul
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054     0E65                     __Umul8_16:	
  5055                           ;psect for function __Umul8_16
  5056                           
  5057                           
  5058                           ;incstack = 0
  5059                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5060                           ;__Umul8_16@multiplier stored from wreg
  5061     0E65  0020               	movlb	0	; select bank0
  5062     0E66  00A4               	movwf	__Umul8_16@multiplier
  5063     0E67                     l3157:
  5064     0E67  01A0               	clrf	__Umul8_16@product
  5065     0E68  01A1               	clrf	__Umul8_16@product+1
  5066     0E69                     l3159:
  5067     0E69  0873               	movf	__Umul8_16@multiplicand,w
  5068     0E6A  00F5               	movwf	??__Umul8_16
  5069     0E6B  01F6               	clrf	??__Umul8_16+1
  5070     0E6C  0875               	movf	??__Umul8_16,w
  5071     0E6D  00A2               	movwf	__Umul8_16@word_mpld
  5072     0E6E  0876               	movf	??__Umul8_16+1,w
  5073     0E6F  00A3               	movwf	__Umul8_16@word_mpld+1
  5074     0E70                     l3161:
  5075     0E70  1C24               	btfss	__Umul8_16@multiplier,0
  5076     0E71  2E73               	goto	u2771
  5077     0E72  2E74               	goto	u2770
  5078     0E73                     u2771:
  5079     0E73  2E78               	goto	l1149
  5080     0E74                     u2770:
  5081     0E74                     l3163:
  5082     0E74  0822               	movf	__Umul8_16@word_mpld,w
  5083     0E75  07A0               	addwf	__Umul8_16@product,f
  5084     0E76  0823               	movf	__Umul8_16@word_mpld+1,w
  5085     0E77  3DA1               	addwfc	__Umul8_16@product+1,f
  5086     0E78                     l1149:
  5087     0E78  3001               	movlw	1
  5088     0E79                     u2785:
  5089     0E79  35A2               	lslf	__Umul8_16@word_mpld,f
  5090     0E7A  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5091     0E7B  0B89               	decfsz	9,f
  5092     0E7C  2E79               	goto	u2785
  5093     0E7D  1003               	clrc
  5094     0E7E  0CA4               	rrf	__Umul8_16@multiplier,f
  5095     0E7F                     l3165:
  5096     0E7F  0824               	movf	__Umul8_16@multiplier,w
  5097     0E80  1D03               	btfss	3,2
  5098     0E81  2E83               	goto	u2791
  5099     0E82  2E84               	goto	u2790
  5100     0E83                     u2791:
  5101     0E83  2E70               	goto	l3161
  5102     0E84                     u2790:
  5103     0E84                     l3167:
  5104     0E84  0821               	movf	__Umul8_16@product+1,w
  5105     0E85  00F4               	movwf	?__Umul8_16+1
  5106     0E86  0820               	movf	__Umul8_16@product,w
  5107     0E87  00F3               	movwf	?__Umul8_16
  5108     0E88                     l1151:
  5109     0E88  0008               	return
  5110     0E89                     __end_of__Umul8_16:
  5111                           
  5112                           	psect	text10
  5113     075A                     __ptext10:	
  5114 ;; *************** function ___flge *****************
  5115 ;; Defined at:
  5116 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  ff1             4    0[BANK0 ] unsigned int 
  5119 ;;  ff2             4    4[BANK0 ] unsigned int 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;		None
  5122 ;; Return value:  Size  Location     Type
  5123 ;;		None               void
  5124 ;; Registers used:
  5125 ;;		wreg, status,2, status,0
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5131 ;;      Params:         0       8       0       0
  5132 ;;      Locals:         0       0       0       0
  5133 ;;      Temps:          4       0       0       0
  5134 ;;      Totals:         4       8       0       0
  5135 ;;Total ram usage:       12 bytes
  5136 ;; Hardware stack levels used: 1
  5137 ;; Hardware stack levels required when called: 5
  5138 ;; This function calls:
  5139 ;;		Nothing
  5140 ;; This function is called by:
  5141 ;;		_main
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145     075A                     ___flge:	
  5146                           ;psect for function ___flge
  5147                           
  5148     075A                     l3229:	
  5149                           ;incstack = 0
  5150                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5151                           
  5152     075A  3000               	movlw	0
  5153     075B  0020               	movlb	0	; select bank0
  5154     075C  0520               	andwf	___flge@ff1,w
  5155     075D  00F3               	movwf	??___flge
  5156     075E  3000               	movlw	0
  5157     075F  0521               	andwf	___flge@ff1+1,w
  5158     0760  00F4               	movwf	??___flge+1
  5159     0761  3080               	movlw	128
  5160     0762  0522               	andwf	___flge@ff1+2,w
  5161     0763  00F5               	movwf	??___flge+2
  5162     0764  307F               	movlw	127
  5163     0765  0523               	andwf	___flge@ff1+3,w
  5164     0766  00F6               	movwf	??___flge+3
  5165     0767  0876               	movf	??___flge+3,w
  5166     0768  0475               	iorwf	??___flge+2,w
  5167     0769  0474               	iorwf	??___flge+1,w
  5168     076A  0473               	iorwf	??___flge,w
  5169     076B  1D03               	skipz
  5170     076C  2F6E               	goto	u2881
  5171     076D  2F6F               	goto	u2880
  5172     076E                     u2881:
  5173     076E  2F77               	goto	l911
  5174     076F                     u2880:
  5175     076F                     l3231:
  5176     076F  3000               	movlw	0
  5177     0770  00A3               	movwf	___flge@ff1+3
  5178     0771  3000               	movlw	0
  5179     0772  00A2               	movwf	___flge@ff1+2
  5180     0773  3000               	movlw	0
  5181     0774  00A1               	movwf	___flge@ff1+1
  5182     0775  3000               	movlw	0
  5183     0776  00A0               	movwf	___flge@ff1
  5184     0777                     l911:
  5185     0777  3000               	movlw	0
  5186     0778  0524               	andwf	___flge@ff2,w
  5187     0779  00F3               	movwf	??___flge
  5188     077A  3000               	movlw	0
  5189     077B  0525               	andwf	___flge@ff2+1,w
  5190     077C  00F4               	movwf	??___flge+1
  5191     077D  3080               	movlw	128
  5192     077E  0526               	andwf	___flge@ff2+2,w
  5193     077F  00F5               	movwf	??___flge+2
  5194     0780  307F               	movlw	127
  5195     0781  0527               	andwf	___flge@ff2+3,w
  5196     0782  00F6               	movwf	??___flge+3
  5197     0783  0876               	movf	??___flge+3,w
  5198     0784  0475               	iorwf	??___flge+2,w
  5199     0785  0474               	iorwf	??___flge+1,w
  5200     0786  0473               	iorwf	??___flge,w
  5201     0787  1D03               	skipz
  5202     0788  2F8A               	goto	u2891
  5203     0789  2F8B               	goto	u2890
  5204     078A                     u2891:
  5205     078A  2F93               	goto	l3235
  5206     078B                     u2890:
  5207     078B                     l3233:
  5208     078B  3000               	movlw	0
  5209     078C  00A7               	movwf	___flge@ff2+3
  5210     078D  3000               	movlw	0
  5211     078E  00A6               	movwf	___flge@ff2+2
  5212     078F  3000               	movlw	0
  5213     0790  00A5               	movwf	___flge@ff2+1
  5214     0791  3000               	movlw	0
  5215     0792  00A4               	movwf	___flge@ff2
  5216     0793                     l3235:
  5217     0793  1FA3               	btfss	___flge@ff1+3,7
  5218     0794  2F96               	goto	u2901
  5219     0795  2F97               	goto	u2900
  5220     0796                     u2901:
  5221     0796  2FAF               	goto	l3239
  5222     0797                     u2900:
  5223     0797                     l3237:
  5224     0797  3000               	movlw	0
  5225     0798  00F3               	movwf	??___flge
  5226     0799  3000               	movlw	0
  5227     079A  00F4               	movwf	??___flge+1
  5228     079B  3000               	movlw	0
  5229     079C  00F5               	movwf	??___flge+2
  5230     079D  3080               	movlw	128
  5231     079E  00F6               	movwf	??___flge+3
  5232     079F  0820               	movf	___flge@ff1,w
  5233     07A0  02F3               	subwf	??___flge,f
  5234     07A1  0821               	movf	___flge@ff1+1,w
  5235     07A2  3BF4               	subwfb	??___flge+1,f
  5236     07A3  0822               	movf	___flge@ff1+2,w
  5237     07A4  3BF5               	subwfb	??___flge+2,f
  5238     07A5  0823               	movf	___flge@ff1+3,w
  5239     07A6  3BF6               	subwfb	??___flge+3,f
  5240     07A7  0876               	movf	??___flge+3,w
  5241     07A8  00A3               	movwf	___flge@ff1+3
  5242     07A9  0875               	movf	??___flge+2,w
  5243     07AA  00A2               	movwf	___flge@ff1+2
  5244     07AB  0874               	movf	??___flge+1,w
  5245     07AC  00A1               	movwf	___flge@ff1+1
  5246     07AD  0873               	movf	??___flge,w
  5247     07AE  00A0               	movwf	___flge@ff1
  5248     07AF                     l3239:
  5249     07AF  1FA7               	btfss	___flge@ff2+3,7
  5250     07B0  2FB2               	goto	u2911
  5251     07B1  2FB3               	goto	u2910
  5252     07B2                     u2911:
  5253     07B2  2FCB               	goto	l914
  5254     07B3                     u2910:
  5255     07B3                     l3241:
  5256     07B3  3000               	movlw	0
  5257     07B4  00F3               	movwf	??___flge
  5258     07B5  3000               	movlw	0
  5259     07B6  00F4               	movwf	??___flge+1
  5260     07B7  3000               	movlw	0
  5261     07B8  00F5               	movwf	??___flge+2
  5262     07B9  3080               	movlw	128
  5263     07BA  00F6               	movwf	??___flge+3
  5264     07BB  0824               	movf	___flge@ff2,w
  5265     07BC  02F3               	subwf	??___flge,f
  5266     07BD  0825               	movf	___flge@ff2+1,w
  5267     07BE  3BF4               	subwfb	??___flge+1,f
  5268     07BF  0826               	movf	___flge@ff2+2,w
  5269     07C0  3BF5               	subwfb	??___flge+2,f
  5270     07C1  0827               	movf	___flge@ff2+3,w
  5271     07C2  3BF6               	subwfb	??___flge+3,f
  5272     07C3  0876               	movf	??___flge+3,w
  5273     07C4  00A7               	movwf	___flge@ff2+3
  5274     07C5  0875               	movf	??___flge+2,w
  5275     07C6  00A6               	movwf	___flge@ff2+2
  5276     07C7  0874               	movf	??___flge+1,w
  5277     07C8  00A5               	movwf	___flge@ff2+1
  5278     07C9  0873               	movf	??___flge,w
  5279     07CA  00A4               	movwf	___flge@ff2
  5280     07CB                     l914:
  5281     07CB  3080               	movlw	128
  5282     07CC  06A3               	xorwf	___flge@ff1+3,f
  5283     07CD  3080               	movlw	128
  5284     07CE  06A7               	xorwf	___flge@ff2+3,f
  5285     07CF  0827               	movf	___flge@ff2+3,w
  5286     07D0  0223               	subwf	___flge@ff1+3,w
  5287     07D1  1D03               	skipz
  5288     07D2  2FDD               	goto	u2925
  5289     07D3  0826               	movf	___flge@ff2+2,w
  5290     07D4  0222               	subwf	___flge@ff1+2,w
  5291     07D5  1D03               	skipz
  5292     07D6  2FDD               	goto	u2925
  5293     07D7  0825               	movf	___flge@ff2+1,w
  5294     07D8  0221               	subwf	___flge@ff1+1,w
  5295     07D9  1D03               	skipz
  5296     07DA  2FDD               	goto	u2925
  5297     07DB  0824               	movf	___flge@ff2,w
  5298     07DC  0220               	subwf	___flge@ff1,w
  5299     07DD                     u2925:
  5300     07DD  1803               	skipnc
  5301     07DE  2FE0               	goto	u2921
  5302     07DF  2FE1               	goto	u2920
  5303     07E0                     u2921:
  5304     07E0  2FE3               	goto	l3245
  5305     07E1                     u2920:
  5306     07E1                     l3243:
  5307     07E1  1003               	clrc
  5308     07E2  2FE4               	goto	l919
  5309     07E3                     l3245:
  5310     07E3  1403               	setc
  5311     07E4                     l919:
  5312     07E4  0008               	return
  5313     07E5                     __end_of___flge:
  5314                           
  5315                           	psect	text11
  5316     0505                     __ptext11:	
  5317 ;; *************** function ___fldiv *****************
  5318 ;; Defined at:
  5319 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  a               4   10[BANK0 ] unsigned int 
  5322 ;;  b               4   14[BANK0 ] unsigned int 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  grs             4   30[BANK0 ] unsigned long 
  5325 ;;  rem             4   23[BANK0 ] unsigned long 
  5326 ;;  new_exp         2   28[BANK0 ] int 
  5327 ;;  aexp            1   35[BANK0 ] unsigned char 
  5328 ;;  bexp            1   34[BANK0 ] unsigned char 
  5329 ;;  sign            1   27[BANK0 ] unsigned char 
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  4   10[BANK0 ] unsigned char 
  5332 ;; Registers used:
  5333 ;;		wreg, status,2, status,0
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5339 ;;      Params:         0       8       0       0
  5340 ;;      Locals:         0      13       0       0
  5341 ;;      Temps:          0       5       0       0
  5342 ;;      Totals:         0      26       0       0
  5343 ;;Total ram usage:       26 bytes
  5344 ;; Hardware stack levels used: 1
  5345 ;; Hardware stack levels required when called: 5
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_main
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353     0505                     ___fldiv:	
  5354                           ;psect for function ___fldiv
  5355                           
  5356     0505                     l3249:	
  5357                           ;incstack = 0
  5358                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  5359                           
  5360     0505  0020               	movlb	0	; select bank0
  5361     0506  0831               	movf	___fldiv@b+3,w
  5362     0507  3980               	andlw	128
  5363     0508  00BB               	movwf	___fldiv@sign
  5364     0509                     l3251:
  5365     0509  3531               	lslf	___fldiv@b+3,w
  5366     050A  00C2               	movwf	___fldiv@bexp
  5367     050B                     l3253:
  5368     050B  1FB0               	btfss	___fldiv@b+2,7
  5369     050C  2D0E               	goto	u2931
  5370     050D  2D0F               	goto	u2930
  5371     050E                     u2931:
  5372     050E  2D10               	goto	l3257
  5373     050F                     u2930:
  5374     050F                     l3255:
  5375     050F  1442               	bsf	___fldiv@bexp,0
  5376     0510                     l3257:
  5377     0510  0842               	movf	___fldiv@bexp,w
  5378     0511  1903               	btfsc	3,2
  5379     0512  2D14               	goto	u2941
  5380     0513  2D15               	goto	u2940
  5381     0514                     u2941:
  5382     0514  2D25               	goto	l3267
  5383     0515                     u2940:
  5384     0515                     l3259:
  5385     0515  0A42               	incf	___fldiv@bexp,w
  5386     0516  1D03               	btfss	3,2
  5387     0517  2D19               	goto	u2951
  5388     0518  2D1A               	goto	u2950
  5389     0519                     u2951:
  5390     0519  2D22               	goto	l3263
  5391     051A                     u2950:
  5392     051A                     l3261:
  5393     051A  3000               	movlw	0
  5394     051B  00B1               	movwf	___fldiv@b+3
  5395     051C  3000               	movlw	0
  5396     051D  00B0               	movwf	___fldiv@b+2
  5397     051E  3000               	movlw	0
  5398     051F  00AF               	movwf	___fldiv@b+1
  5399     0520  3000               	movlw	0
  5400     0521  00AE               	movwf	___fldiv@b
  5401     0522                     l3263:
  5402     0522  17B0               	bsf	___fldiv@b+2,7
  5403     0523                     l3265:
  5404     0523  01B1               	clrf	___fldiv@b+3
  5405     0524  2D2D               	goto	l3269
  5406     0525                     l3267:
  5407     0525  3000               	movlw	0
  5408     0526  00B1               	movwf	___fldiv@b+3
  5409     0527  3000               	movlw	0
  5410     0528  00B0               	movwf	___fldiv@b+2
  5411     0529  3000               	movlw	0
  5412     052A  00AF               	movwf	___fldiv@b+1
  5413     052B  3000               	movlw	0
  5414     052C  00AE               	movwf	___fldiv@b
  5415     052D                     l3269:
  5416     052D  082D               	movf	___fldiv@a+3,w
  5417     052E  3980               	andlw	128
  5418     052F  00B2               	movwf	??___fldiv
  5419     0530  0832               	movf	??___fldiv,w
  5420     0531  06BB               	xorwf	___fldiv@sign,f
  5421     0532                     l3271:
  5422     0532  352D               	lslf	___fldiv@a+3,w
  5423     0533  00C3               	movwf	___fldiv@aexp
  5424     0534                     l3273:
  5425     0534  1FAC               	btfss	___fldiv@a+2,7
  5426     0535  2D37               	goto	u2961
  5427     0536  2D38               	goto	u2960
  5428     0537                     u2961:
  5429     0537  2D39               	goto	l3277
  5430     0538                     u2960:
  5431     0538                     l3275:
  5432     0538  1443               	bsf	___fldiv@aexp,0
  5433     0539                     l3277:
  5434     0539  0843               	movf	___fldiv@aexp,w
  5435     053A  1903               	btfsc	3,2
  5436     053B  2D3D               	goto	u2971
  5437     053C  2D3E               	goto	u2970
  5438     053D                     u2971:
  5439     053D  2D4E               	goto	l3287
  5440     053E                     u2970:
  5441     053E                     l3279:
  5442     053E  0A43               	incf	___fldiv@aexp,w
  5443     053F  1D03               	btfss	3,2
  5444     0540  2D42               	goto	u2981
  5445     0541  2D43               	goto	u2980
  5446     0542                     u2981:
  5447     0542  2D4B               	goto	l3283
  5448     0543                     u2980:
  5449     0543                     l3281:
  5450     0543  3000               	movlw	0
  5451     0544  00AD               	movwf	___fldiv@a+3
  5452     0545  3000               	movlw	0
  5453     0546  00AC               	movwf	___fldiv@a+2
  5454     0547  3000               	movlw	0
  5455     0548  00AB               	movwf	___fldiv@a+1
  5456     0549  3000               	movlw	0
  5457     054A  00AA               	movwf	___fldiv@a
  5458     054B                     l3283:
  5459     054B  17AC               	bsf	___fldiv@a+2,7
  5460     054C                     l3285:
  5461     054C  01AD               	clrf	___fldiv@a+3
  5462     054D  2D56               	goto	l1090
  5463     054E                     l3287:
  5464     054E  3000               	movlw	0
  5465     054F  00AD               	movwf	___fldiv@a+3
  5466     0550  3000               	movlw	0
  5467     0551  00AC               	movwf	___fldiv@a+2
  5468     0552  3000               	movlw	0
  5469     0553  00AB               	movwf	___fldiv@a+1
  5470     0554  3000               	movlw	0
  5471     0555  00AA               	movwf	___fldiv@a
  5472     0556                     l1090:
  5473     0556  082D               	movf	___fldiv@a+3,w
  5474     0557  042C               	iorwf	___fldiv@a+2,w
  5475     0558  042B               	iorwf	___fldiv@a+1,w
  5476     0559  042A               	iorwf	___fldiv@a,w
  5477     055A  1D03               	skipz
  5478     055B  2D5D               	goto	u2991
  5479     055C  2D5E               	goto	u2990
  5480     055D                     u2991:
  5481     055D  2D77               	goto	l3297
  5482     055E                     u2990:
  5483     055E                     l3289:
  5484     055E  3000               	movlw	0
  5485     055F  00B1               	movwf	___fldiv@b+3
  5486     0560  3000               	movlw	0
  5487     0561  00B0               	movwf	___fldiv@b+2
  5488     0562  3000               	movlw	0
  5489     0563  00AF               	movwf	___fldiv@b+1
  5490     0564  3000               	movlw	0
  5491     0565  00AE               	movwf	___fldiv@b
  5492     0566  3080               	movlw	128
  5493     0567  04B0               	iorwf	___fldiv@b+2,f
  5494     0568  307F               	movlw	127
  5495     0569  04B1               	iorwf	___fldiv@b+3,f
  5496     056A                     l3291:
  5497     056A  083B               	movf	___fldiv@sign,w
  5498     056B  00B2               	movwf	??___fldiv
  5499     056C  0832               	movf	??___fldiv,w
  5500     056D  04B1               	iorwf	___fldiv@b+3,f
  5501     056E                     l3293:
  5502     056E  0831               	movf	___fldiv@b+3,w
  5503     056F  00AD               	movwf	?___fldiv+3
  5504     0570  0830               	movf	___fldiv@b+2,w
  5505     0571  00AC               	movwf	?___fldiv+2
  5506     0572  082F               	movf	___fldiv@b+1,w
  5507     0573  00AB               	movwf	?___fldiv+1
  5508     0574  082E               	movf	___fldiv@b,w
  5509     0575  00AA               	movwf	?___fldiv
  5510     0576  2EAE               	goto	l1092
  5511     0577                     l3297:
  5512     0577  0842               	movf	___fldiv@bexp,w
  5513     0578  1D03               	btfss	3,2
  5514     0579  2D7B               	goto	u3001
  5515     057A  2D7C               	goto	u3000
  5516     057B                     u3001:
  5517     057B  2D85               	goto	l3303
  5518     057C                     u3000:
  5519     057C                     l3299:
  5520     057C  3000               	movlw	0
  5521     057D  00AD               	movwf	?___fldiv+3
  5522     057E  3000               	movlw	0
  5523     057F  00AC               	movwf	?___fldiv+2
  5524     0580  3000               	movlw	0
  5525     0581  00AB               	movwf	?___fldiv+1
  5526     0582  3000               	movlw	0
  5527     0583  00AA               	movwf	?___fldiv
  5528     0584  2EAE               	goto	l1092
  5529     0585                     l3303:
  5530     0585  0842               	movf	___fldiv@bexp,w
  5531     0586  00B2               	movwf	??___fldiv
  5532     0587  01B3               	clrf	??___fldiv+1
  5533     0588  0833               	movf	??___fldiv+1,w
  5534     0589  00B5               	movwf	??___fldiv+3
  5535     058A  0843               	movf	___fldiv@aexp,w
  5536     058B  0232               	subwf	??___fldiv,w
  5537     058C  00B4               	movwf	??___fldiv+2
  5538     058D  1C03               	skipc
  5539     058E  03B5               	decf	??___fldiv+3,f
  5540     058F  0834               	movf	??___fldiv+2,w
  5541     0590  3E7F               	addlw	127
  5542     0591  00BC               	movwf	___fldiv@new_exp
  5543     0592  3000               	movlw	0
  5544     0593  3D35               	addwfc	??___fldiv+3,w
  5545     0594  00BD               	movwf	___fldiv@new_exp+1
  5546     0595                     l3305:
  5547     0595  0831               	movf	___fldiv@b+3,w
  5548     0596  00BA               	movwf	___fldiv@rem+3
  5549     0597  0830               	movf	___fldiv@b+2,w
  5550     0598  00B9               	movwf	___fldiv@rem+2
  5551     0599  082F               	movf	___fldiv@b+1,w
  5552     059A  00B8               	movwf	___fldiv@rem+1
  5553     059B  082E               	movf	___fldiv@b,w
  5554     059C  00B7               	movwf	___fldiv@rem
  5555     059D                     l3307:
  5556     059D  3000               	movlw	0
  5557     059E  00B1               	movwf	___fldiv@b+3
  5558     059F  3000               	movlw	0
  5559     05A0  00B0               	movwf	___fldiv@b+2
  5560     05A1  3000               	movlw	0
  5561     05A2  00AF               	movwf	___fldiv@b+1
  5562     05A3  3000               	movlw	0
  5563     05A4  00AE               	movwf	___fldiv@b
  5564     05A5                     l3309:
  5565     05A5  3000               	movlw	0
  5566     05A6  00C1               	movwf	___fldiv@grs+3
  5567     05A7  3000               	movlw	0
  5568     05A8  00C0               	movwf	___fldiv@grs+2
  5569     05A9  3000               	movlw	0
  5570     05AA  00BF               	movwf	___fldiv@grs+1
  5571     05AB  3000               	movlw	0
  5572     05AC  00BE               	movwf	___fldiv@grs
  5573     05AD                     l3311:
  5574     05AD  01C3               	clrf	___fldiv@aexp
  5575     05AE  2DED               	goto	l3331
  5576     05AF                     l3313:
  5577     05AF  0843               	movf	___fldiv@aexp,w
  5578     05B0  1903               	btfsc	3,2
  5579     05B1  2DB3               	goto	u3011
  5580     05B2  2DB4               	goto	u3010
  5581     05B3                     u3011:
  5582     05B3  2DCE               	goto	l3323
  5583     05B4                     u3010:
  5584     05B4                     l3315:
  5585     05B4  3001               	movlw	1
  5586     05B5                     u3025:
  5587     05B5  35B7               	lslf	___fldiv@rem,f
  5588     05B6  0DB8               	rlf	___fldiv@rem+1,f
  5589     05B7  0DB9               	rlf	___fldiv@rem+2,f
  5590     05B8  0DBA               	rlf	___fldiv@rem+3,f
  5591     05B9  0B89               	decfsz	9,f
  5592     05BA  2DB5               	goto	u3025
  5593     05BB  3001               	movlw	1
  5594     05BC                     u3035:
  5595     05BC  35AE               	lslf	___fldiv@b,f
  5596     05BD  0DAF               	rlf	___fldiv@b+1,f
  5597     05BE  0DB0               	rlf	___fldiv@b+2,f
  5598     05BF  0DB1               	rlf	___fldiv@b+3,f
  5599     05C0  0B89               	decfsz	9,f
  5600     05C1  2DBC               	goto	u3035
  5601     05C2                     l3317:
  5602     05C2  1FC1               	btfss	___fldiv@grs+3,7
  5603     05C3  2DC5               	goto	u3041
  5604     05C4  2DC6               	goto	u3040
  5605     05C5                     u3041:
  5606     05C5  2DC7               	goto	l3321
  5607     05C6                     u3040:
  5608     05C6                     l3319:
  5609     05C6  142E               	bsf	___fldiv@b,0
  5610     05C7                     l3321:
  5611     05C7  3001               	movlw	1
  5612     05C8                     u3055:
  5613     05C8  35BE               	lslf	___fldiv@grs,f
  5614     05C9  0DBF               	rlf	___fldiv@grs+1,f
  5615     05CA  0DC0               	rlf	___fldiv@grs+2,f
  5616     05CB  0DC1               	rlf	___fldiv@grs+3,f
  5617     05CC  0B89               	decfsz	9,f
  5618     05CD  2DC8               	goto	u3055
  5619     05CE                     l3323:
  5620     05CE  082D               	movf	___fldiv@a+3,w
  5621     05CF  023A               	subwf	___fldiv@rem+3,w
  5622     05D0  1D03               	skipz
  5623     05D1  2DDC               	goto	u3065
  5624     05D2  082C               	movf	___fldiv@a+2,w
  5625     05D3  0239               	subwf	___fldiv@rem+2,w
  5626     05D4  1D03               	skipz
  5627     05D5  2DDC               	goto	u3065
  5628     05D6  082B               	movf	___fldiv@a+1,w
  5629     05D7  0238               	subwf	___fldiv@rem+1,w
  5630     05D8  1D03               	skipz
  5631     05D9  2DDC               	goto	u3065
  5632     05DA  082A               	movf	___fldiv@a,w
  5633     05DB  0237               	subwf	___fldiv@rem,w
  5634     05DC                     u3065:
  5635     05DC  1C03               	skipc
  5636     05DD  2DDF               	goto	u3061
  5637     05DE  2DE0               	goto	u3060
  5638     05DF                     u3061:
  5639     05DF  2DE9               	goto	l3329
  5640     05E0                     u3060:
  5641     05E0                     l3325:
  5642     05E0  1741               	bsf	___fldiv@grs+3,6
  5643     05E1                     l3327:
  5644     05E1  082A               	movf	___fldiv@a,w
  5645     05E2  02B7               	subwf	___fldiv@rem,f
  5646     05E3  082B               	movf	___fldiv@a+1,w
  5647     05E4  3BB8               	subwfb	___fldiv@rem+1,f
  5648     05E5  082C               	movf	___fldiv@a+2,w
  5649     05E6  3BB9               	subwfb	___fldiv@rem+2,f
  5650     05E7  082D               	movf	___fldiv@a+3,w
  5651     05E8  3BBA               	subwfb	___fldiv@rem+3,f
  5652     05E9                     l3329:
  5653     05E9  3001               	movlw	1
  5654     05EA  00B2               	movwf	??___fldiv
  5655     05EB  0832               	movf	??___fldiv,w
  5656     05EC  07C3               	addwf	___fldiv@aexp,f
  5657     05ED                     l3331:
  5658     05ED  301A               	movlw	26
  5659     05EE  0243               	subwf	___fldiv@aexp,w
  5660     05EF  1C03               	skipc
  5661     05F0  2DF2               	goto	u3071
  5662     05F1  2DF3               	goto	u3070
  5663     05F2                     u3071:
  5664     05F2  2DAF               	goto	l3313
  5665     05F3                     u3070:
  5666     05F3                     l3333:
  5667     05F3  083A               	movf	___fldiv@rem+3,w
  5668     05F4  0439               	iorwf	___fldiv@rem+2,w
  5669     05F5  0438               	iorwf	___fldiv@rem+1,w
  5670     05F6  0437               	iorwf	___fldiv@rem,w
  5671     05F7  1903               	skipnz
  5672     05F8  2DFA               	goto	u3081
  5673     05F9  2DFB               	goto	u3080
  5674     05FA                     u3081:
  5675     05FA  2E14               	goto	l3347
  5676     05FB                     u3080:
  5677     05FB                     l3335:
  5678     05FB  143E               	bsf	___fldiv@grs,0
  5679     05FC  2E14               	goto	l3347
  5680     05FD                     l3337:
  5681     05FD  3001               	movlw	1
  5682     05FE                     u3095:
  5683     05FE  35AE               	lslf	___fldiv@b,f
  5684     05FF  0DAF               	rlf	___fldiv@b+1,f
  5685     0600  0DB0               	rlf	___fldiv@b+2,f
  5686     0601  0DB1               	rlf	___fldiv@b+3,f
  5687     0602  0B89               	decfsz	9,f
  5688     0603  2DFE               	goto	u3095
  5689     0604                     l3339:
  5690     0604  1FC1               	btfss	___fldiv@grs+3,7
  5691     0605  2E07               	goto	u3101
  5692     0606  2E08               	goto	u3100
  5693     0607                     u3101:
  5694     0607  2E09               	goto	l3343
  5695     0608                     u3100:
  5696     0608                     l3341:
  5697     0608  142E               	bsf	___fldiv@b,0
  5698     0609                     l3343:
  5699     0609  3001               	movlw	1
  5700     060A                     u3115:
  5701     060A  35BE               	lslf	___fldiv@grs,f
  5702     060B  0DBF               	rlf	___fldiv@grs+1,f
  5703     060C  0DC0               	rlf	___fldiv@grs+2,f
  5704     060D  0DC1               	rlf	___fldiv@grs+3,f
  5705     060E  0B89               	decfsz	9,f
  5706     060F  2E0A               	goto	u3115
  5707     0610                     l3345:
  5708     0610  30FF               	movlw	255
  5709     0611  07BC               	addwf	___fldiv@new_exp,f
  5710     0612  30FF               	movlw	255
  5711     0613  3DBD               	addwfc	___fldiv@new_exp+1,f
  5712     0614                     l3347:
  5713     0614  1FB0               	btfss	___fldiv@b+2,7
  5714     0615  2E17               	goto	u3121
  5715     0616  2E18               	goto	u3120
  5716     0617                     u3121:
  5717     0617  2DFD               	goto	l3337
  5718     0618                     u3120:
  5719     0618                     l3349:
  5720     0618  01C3               	clrf	___fldiv@aexp
  5721     0619                     l3351:
  5722     0619  1FC1               	btfss	___fldiv@grs+3,7
  5723     061A  2E1C               	goto	u3131
  5724     061B  2E1D               	goto	u3130
  5725     061C                     u3131:
  5726     061C  2E39               	goto	l3359
  5727     061D                     u3130:
  5728     061D                     l3353:
  5729     061D  30FF               	movlw	255
  5730     061E  053E               	andwf	___fldiv@grs,w
  5731     061F  00B2               	movwf	??___fldiv
  5732     0620  30FF               	movlw	255
  5733     0621  053F               	andwf	___fldiv@grs+1,w
  5734     0622  00B3               	movwf	??___fldiv+1
  5735     0623  30FF               	movlw	255
  5736     0624  0540               	andwf	___fldiv@grs+2,w
  5737     0625  00B4               	movwf	??___fldiv+2
  5738     0626  307F               	movlw	127
  5739     0627  0541               	andwf	___fldiv@grs+3,w
  5740     0628  00B5               	movwf	??___fldiv+3
  5741     0629  0835               	movf	??___fldiv+3,w
  5742     062A  0434               	iorwf	??___fldiv+2,w
  5743     062B  0433               	iorwf	??___fldiv+1,w
  5744     062C  0432               	iorwf	??___fldiv,w
  5745     062D  1903               	skipnz
  5746     062E  2E30               	goto	u3141
  5747     062F  2E31               	goto	u3140
  5748     0630                     u3141:
  5749     0630  2E34               	goto	l1106
  5750     0631                     u3140:
  5751     0631                     l3355:
  5752     0631  01C3               	clrf	___fldiv@aexp
  5753     0632  0AC3               	incf	___fldiv@aexp,f
  5754     0633  2E39               	goto	l3359
  5755     0634                     l1106:
  5756     0634  1C2E               	btfss	___fldiv@b,0
  5757     0635  2E37               	goto	u3151
  5758     0636  2E38               	goto	u3150
  5759     0637                     u3151:
  5760     0637  2E39               	goto	l3359
  5761     0638                     u3150:
  5762     0638  2E31               	goto	l3355
  5763     0639                     l3359:
  5764     0639  0843               	movf	___fldiv@aexp,w
  5765     063A  1903               	btfsc	3,2
  5766     063B  2E3D               	goto	u3161
  5767     063C  2E3E               	goto	u3160
  5768     063D                     u3161:
  5769     063D  2E66               	goto	l3369
  5770     063E                     u3160:
  5771     063E                     l3361:
  5772     063E  3001               	movlw	1
  5773     063F  07AE               	addwf	___fldiv@b,f
  5774     0640  3000               	movlw	0
  5775     0641  3DAF               	addwfc	___fldiv@b+1,f
  5776     0642  3000               	movlw	0
  5777     0643  3DB0               	addwfc	___fldiv@b+2,f
  5778     0644  3000               	movlw	0
  5779     0645  3DB1               	addwfc	___fldiv@b+3,f
  5780     0646                     l3363:
  5781     0646  1C31               	btfss	___fldiv@b+3,0
  5782     0647  2E49               	goto	u3171
  5783     0648  2E4A               	goto	u3170
  5784     0649                     u3171:
  5785     0649  2E66               	goto	l3369
  5786     064A                     u3170:
  5787     064A                     l3365:
  5788     064A  082E               	movf	___fldiv@b,w
  5789     064B  00B2               	movwf	??___fldiv
  5790     064C  082F               	movf	___fldiv@b+1,w
  5791     064D  00B3               	movwf	??___fldiv+1
  5792     064E  0830               	movf	___fldiv@b+2,w
  5793     064F  00B4               	movwf	??___fldiv+2
  5794     0650  0831               	movf	___fldiv@b+3,w
  5795     0651  00B5               	movwf	??___fldiv+3
  5796     0652  3001               	movlw	1
  5797     0653  00B6               	movwf	??___fldiv+4
  5798     0654                     u3185:
  5799     0654  37B5               	asrf	??___fldiv+3,f
  5800     0655  0CB4               	rrf	??___fldiv+2,f
  5801     0656  0CB3               	rrf	??___fldiv+1,f
  5802     0657  0CB2               	rrf	??___fldiv,f
  5803     0658                     u3180:
  5804     0658  0BB6               	decfsz	??___fldiv+4,f
  5805     0659  2E54               	goto	u3185
  5806     065A  0835               	movf	??___fldiv+3,w
  5807     065B  00B1               	movwf	___fldiv@b+3
  5808     065C  0834               	movf	??___fldiv+2,w
  5809     065D  00B0               	movwf	___fldiv@b+2
  5810     065E  0833               	movf	??___fldiv+1,w
  5811     065F  00AF               	movwf	___fldiv@b+1
  5812     0660  0832               	movf	??___fldiv,w
  5813     0661  00AE               	movwf	___fldiv@b
  5814     0662                     l3367:
  5815     0662  3001               	movlw	1
  5816     0663  07BC               	addwf	___fldiv@new_exp,f
  5817     0664  3000               	movlw	0
  5818     0665  3DBD               	addwfc	___fldiv@new_exp+1,f
  5819     0666                     l3369:
  5820     0666  083D               	movf	___fldiv@new_exp+1,w
  5821     0667  3A80               	xorlw	128
  5822     0668  00B2               	movwf	??___fldiv
  5823     0669  3080               	movlw	128
  5824     066A  0232               	subwf	??___fldiv,w
  5825     066B  1D03               	skipz
  5826     066C  2E6F               	goto	u3195
  5827     066D  30FF               	movlw	255
  5828     066E  023C               	subwf	___fldiv@new_exp,w
  5829     066F                     u3195:
  5830     066F  1C03               	skipc
  5831     0670  2E72               	goto	u3191
  5832     0671  2E73               	goto	u3190
  5833     0672                     u3191:
  5834     0672  2E80               	goto	l1111
  5835     0673                     u3190:
  5836     0673                     l3371:
  5837     0673  30FF               	movlw	255
  5838     0674  0020               	movlb	0	; select bank0
  5839     0675  00BC               	movwf	___fldiv@new_exp
  5840     0676  3000               	movlw	0
  5841     0677  00BD               	movwf	___fldiv@new_exp+1
  5842     0678  3000               	movlw	0
  5843     0679  00B1               	movwf	___fldiv@b+3
  5844     067A  3000               	movlw	0
  5845     067B  00B0               	movwf	___fldiv@b+2
  5846     067C  3000               	movlw	0
  5847     067D  00AF               	movwf	___fldiv@b+1
  5848     067E  3000               	movlw	0
  5849     067F  00AE               	movwf	___fldiv@b
  5850     0680                     l1111:
  5851     0680  0020               	movlb	0	; select bank0
  5852     0681  083D               	movf	___fldiv@new_exp+1,w
  5853     0682  3A80               	xorlw	128
  5854     0683  00B2               	movwf	??___fldiv
  5855     0684  3080               	movlw	128
  5856     0685  0232               	subwf	??___fldiv,w
  5857     0686  1D03               	skipz
  5858     0687  2E8A               	goto	u3205
  5859     0688  3001               	movlw	1
  5860     0689  023C               	subwf	___fldiv@new_exp,w
  5861     068A                     u3205:
  5862     068A  1803               	skipnc
  5863     068B  2E8D               	goto	u3201
  5864     068C  2E8E               	goto	u3200
  5865     068D                     u3201:
  5866     068D  2E9A               	goto	l1112
  5867     068E                     u3200:
  5868     068E                     l3373:
  5869     068E  0020               	movlb	0	; select bank0
  5870     068F  01BC               	clrf	___fldiv@new_exp
  5871     0690  01BD               	clrf	___fldiv@new_exp+1
  5872     0691                     l3375:
  5873     0691  3000               	movlw	0
  5874     0692  00B1               	movwf	___fldiv@b+3
  5875     0693  3000               	movlw	0
  5876     0694  00B0               	movwf	___fldiv@b+2
  5877     0695  3000               	movlw	0
  5878     0696  00AF               	movwf	___fldiv@b+1
  5879     0697  3000               	movlw	0
  5880     0698  00AE               	movwf	___fldiv@b
  5881     0699                     l3377:
  5882     0699  01BB               	clrf	___fldiv@sign
  5883     069A                     l1112:
  5884     069A  0020               	movlb	0	; select bank0
  5885     069B  083C               	movf	___fldiv@new_exp,w
  5886     069C  00C2               	movwf	___fldiv@bexp
  5887     069D                     l3379:
  5888     069D  1C42               	btfss	___fldiv@bexp,0
  5889     069E  2EA0               	goto	u3211
  5890     069F  2EA1               	goto	u3210
  5891     06A0                     u3211:
  5892     06A0  2EA3               	goto	l3383
  5893     06A1                     u3210:
  5894     06A1                     l3381:
  5895     06A1  17B0               	bsf	___fldiv@b+2,7
  5896     06A2  2EA7               	goto	l1114
  5897     06A3                     l3383:
  5898     06A3  307F               	movlw	127
  5899     06A4  00B2               	movwf	??___fldiv
  5900     06A5  0832               	movf	??___fldiv,w
  5901     06A6  05B0               	andwf	___fldiv@b+2,f
  5902     06A7                     l1114:
  5903     06A7  3642               	lsrf	___fldiv@bexp,w
  5904     06A8  00B1               	movwf	___fldiv@b+3
  5905     06A9  083B               	movf	___fldiv@sign,w
  5906     06AA  00B2               	movwf	??___fldiv
  5907     06AB  0832               	movf	??___fldiv,w
  5908     06AC  04B1               	iorwf	___fldiv@b+3,f
  5909     06AD  2D6E               	goto	l3293
  5910     06AE                     l1092:
  5911     06AE  0008               	return
  5912     06AF                     __end_of___fldiv:
  5913                           
  5914                           	psect	text12
  5915     0E18                     __ptext12:	
  5916 ;; *************** function _SYSTEM_Initialize *****************
  5917 ;; Defined at:
  5918 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;		None
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      void 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0, pclath, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5932 ;;      Params:         0       0       0       0
  5933 ;;      Locals:         0       0       0       0
  5934 ;;      Temps:          0       0       0       0
  5935 ;;      Totals:         0       0       0       0
  5936 ;;Total ram usage:        0 bytes
  5937 ;; Hardware stack levels used: 1
  5938 ;; Hardware stack levels required when called: 7
  5939 ;; This function calls:
  5940 ;;		_ADC_Initialize
  5941 ;;		_FVR_Initialize
  5942 ;;		_I2C_Initialize
  5943 ;;		_OSCILLATOR_Initialize
  5944 ;;		_PIN_MANAGER_Initialize
  5945 ;;		_TMR1_Initialize
  5946 ;;		_TMR2_Initialize
  5947 ;;		_WDT_Initialize
  5948 ;; This function is called by:
  5949 ;;		_main
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953     0E18                     _SYSTEM_Initialize:	
  5954                           ;psect for function _SYSTEM_Initialize
  5955                           
  5956     0E18                     l3171:	
  5957                           ;incstack = 0
  5958                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5959                           
  5960                           
  5961                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  5962     0E18  318D  259B  318E   	fcall	_I2C_Initialize
  5963                           
  5964                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5965     0E1B  318E  2631  318E   	fcall	_PIN_MANAGER_Initialize
  5966                           
  5967                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5968     0E1E  318D  2564  318E   	fcall	_OSCILLATOR_Initialize
  5969                           
  5970                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  5971     0E21  318D  2513  318E   	fcall	_WDT_Initialize
  5972                           
  5973                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  5974     0E24  318D  250F  318E   	fcall	_FVR_Initialize
  5975                           
  5976                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  5977     0E27  318D  2592  318E   	fcall	_ADC_Initialize
  5978                           
  5979                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  5980     0E2A  318D  258A  318E   	fcall	_TMR2_Initialize
  5981                           
  5982                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  5983     0E2D  318D  25FF  318E   	fcall	_TMR1_Initialize
  5984     0E30                     l37:
  5985     0E30  0008               	return
  5986     0E31                     __end_of_SYSTEM_Initialize:
  5987                           
  5988                           	psect	text13
  5989     0D13                     __ptext13:	
  5990 ;; *************** function _WDT_Initialize *****************
  5991 ;; Defined at:
  5992 ;;		line 71 in file "mcc_generated_files/mcc.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;		None
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      void 
  5999 ;; Registers used:
  6000 ;;		wreg
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6006 ;;      Params:         0       0       0       0
  6007 ;;      Locals:         0       0       0       0
  6008 ;;      Temps:          0       0       0       0
  6009 ;;      Totals:         0       0       0       0
  6010 ;;Total ram usage:        0 bytes
  6011 ;; Hardware stack levels used: 1
  6012 ;; Hardware stack levels required when called: 5
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_SYSTEM_Initialize
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020     0D13                     _WDT_Initialize:	
  6021                           ;psect for function _WDT_Initialize
  6022                           
  6023     0D13                     l3057:	
  6024                           ;incstack = 0
  6025                           ; Regs used in _WDT_Initialize: [wreg]
  6026                           
  6027                           
  6028                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x1A;
  6029     0D13  301A               	movlw	26
  6030     0D14  0021               	movlb	1	; select bank1
  6031     0D15  0097               	movwf	23	;volatile
  6032     0D16                     l43:
  6033     0D16  0008               	return
  6034     0D17                     __end_of_WDT_Initialize:
  6035                           
  6036                           	psect	text14
  6037     0D8A                     __ptext14:	
  6038 ;; *************** function _TMR2_Initialize *****************
  6039 ;; Defined at:
  6040 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6054 ;;      Params:         0       0       0       0
  6055 ;;      Locals:         0       0       0       0
  6056 ;;      Temps:          0       0       0       0
  6057 ;;      Totals:         0       0       0       0
  6058 ;;Total ram usage:        0 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; Hardware stack levels required when called: 5
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_SYSTEM_Initialize
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068     0D8A                     _TMR2_Initialize:	
  6069                           ;psect for function _TMR2_Initialize
  6070                           
  6071     0D8A                     l3071:	
  6072                           ;incstack = 0
  6073                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6074                           
  6075                           
  6076                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xF9;
  6077     0D8A  30F9               	movlw	249
  6078     0D8B  0020               	movlb	0	; select bank0
  6079     0D8C  009B               	movwf	27	;volatile
  6080     0D8D                     l3073:
  6081                           
  6082                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6083     0D8D  019A               	clrf	26	;volatile
  6084     0D8E                     l3075:
  6085                           
  6086                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6087     0D8E  1091               	bcf	17,1	;volatile
  6088     0D8F                     l3077:
  6089                           
  6090                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x7C;
  6091     0D8F  307C               	movlw	124
  6092     0D90  009C               	movwf	28	;volatile
  6093     0D91                     l499:
  6094     0D91  0008               	return
  6095     0D92                     __end_of_TMR2_Initialize:
  6096                           
  6097                           	psect	text15
  6098     0DFF                     __ptext15:	
  6099 ;; *************** function _TMR1_Initialize *****************
  6100 ;; Defined at:
  6101 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		wreg, status,2, status,0, pclath, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6115 ;;      Params:         0       0       0       0
  6116 ;;      Locals:         0       0       0       0
  6117 ;;      Temps:          0       0       0       0
  6118 ;;      Totals:         0       0       0       0
  6119 ;;Total ram usage:        0 bytes
  6120 ;; Hardware stack levels used: 1
  6121 ;; Hardware stack levels required when called: 6
  6122 ;; This function calls:
  6123 ;;		_TMR1_SetInterruptHandler
  6124 ;; This function is called by:
  6125 ;;		_SYSTEM_Initialize
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129     0DFF                     _TMR1_Initialize:	
  6130                           ;psect for function _TMR1_Initialize
  6131                           
  6132     0DFF                     l3079:	
  6133                           ;incstack = 0
  6134                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6135                           
  6136                           
  6137                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x01;
  6138     0DFF  3001               	movlw	1
  6139     0E00  0020               	movlb	0	; select bank0
  6140     0E01  0099               	movwf	25	;volatile
  6141                           
  6142                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xC3;
  6143     0E02  30C3               	movlw	195
  6144     0E03  0097               	movwf	23	;volatile
  6145                           
  6146                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x74;
  6147     0E04  3074               	movlw	116
  6148     0E05  0096               	movwf	22	;volatile
  6149     0E06                     l3081:
  6150                           
  6151                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  6152     0E06  1011               	bcf	17,0	;volatile
  6153                           
  6154                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6155     0E07  0817               	movf	23,w	;volatile
  6156     0E08  00EB               	movwf	_timer1ReloadVal+1	;volatile
  6157     0E09  0816               	movf	22,w	;volatile
  6158     0E0A  00EA               	movwf	_timer1ReloadVal	;volatile
  6159     0E0B                     l3083:
  6160                           
  6161                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  6162     0E0B  0021               	movlb	1	; select bank1
  6163     0E0C  1411               	bsf	17,0	;volatile
  6164     0E0D                     l3085:
  6165                           
  6166                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6167     0E0D  3003               	movlw	low _TMR1_DefaultInterruptHandler
  6168     0E0E  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6169     0E0F  3000               	movlw	high _TMR1_DefaultInterruptHandler
  6170     0E10  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6171     0E11  318D  256A  318D   	fcall	_TMR1_SetInterruptHandler
  6172     0E14                     l3087:
  6173                           
  6174                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0xC4;
  6175     0E14  30C4               	movlw	196
  6176     0E15  0020               	movlb	0	; select bank0
  6177     0E16  0098               	movwf	24	;volatile
  6178     0E17                     l139:
  6179     0E17  0008               	return
  6180     0E18                     __end_of_TMR1_Initialize:
  6181                           
  6182                           	psect	text16
  6183     0D6A                     __ptext16:	
  6184 ;; *************** function _TMR1_SetInterruptHandler *****************
  6185 ;; Defined at:
  6186 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  6189 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;		None
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      void 
  6194 ;; Registers used:
  6195 ;;		wreg
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6201 ;;      Params:         2       0       0       0
  6202 ;;      Locals:         0       0       0       0
  6203 ;;      Temps:          0       0       0       0
  6204 ;;      Totals:         2       0       0       0
  6205 ;;Total ram usage:        2 bytes
  6206 ;; Hardware stack levels used: 1
  6207 ;; Hardware stack levels required when called: 5
  6208 ;; This function calls:
  6209 ;;		Nothing
  6210 ;; This function is called by:
  6211 ;;		_TMR1_Initialize
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215     0D6A                     _TMR1_SetInterruptHandler:	
  6216                           ;psect for function _TMR1_SetInterruptHandler
  6217                           
  6218     0D6A                     l3025:	
  6219                           ;incstack = 0
  6220                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6221                           
  6222                           
  6223                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  6224     0D6A  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  6225     0D6B  0020               	movlb	0	; select bank0
  6226     0D6C  00E9               	movwf	_TMR1_InterruptHandler+1
  6227     0D6D  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6228     0D6E  00E8               	movwf	_TMR1_InterruptHandler
  6229     0D6F                     l169:
  6230     0D6F  0008               	return
  6231     0D70                     __end_of_TMR1_SetInterruptHandler:
  6232                           
  6233                           	psect	text17
  6234     0E31                     __ptext17:	
  6235 ;; *************** function _PIN_MANAGER_Initialize *****************
  6236 ;; Defined at:
  6237 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;		None
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;		None
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      void 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6251 ;;      Params:         0       0       0       0
  6252 ;;      Locals:         0       0       0       0
  6253 ;;      Temps:          0       0       0       0
  6254 ;;      Totals:         0       0       0       0
  6255 ;;Total ram usage:        0 bytes
  6256 ;; Hardware stack levels used: 1
  6257 ;; Hardware stack levels required when called: 5
  6258 ;; This function calls:
  6259 ;;		Nothing
  6260 ;; This function is called by:
  6261 ;;		_SYSTEM_Initialize
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265     0E31                     _PIN_MANAGER_Initialize:	
  6266                           ;psect for function _PIN_MANAGER_Initialize
  6267                           
  6268     0E31                     l3037:	
  6269                           ;incstack = 0
  6270                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6271                           
  6272                           
  6273                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6274     0E31  0022               	movlb	2	; select bank2
  6275     0E32  018C               	clrf	12	;volatile
  6276                           
  6277                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6278     0E33  018D               	clrf	13	;volatile
  6279                           
  6280                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6281     0E34  018E               	clrf	14	;volatile
  6282     0E35                     l3039:
  6283                           
  6284                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  6285     0E35  303F               	movlw	63
  6286     0E36  0021               	movlb	1	; select bank1
  6287     0E37  008C               	movwf	12	;volatile
  6288     0E38                     l3041:
  6289                           
  6290                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  6291     0E38  3070               	movlw	112
  6292     0E39  008D               	movwf	13	;volatile
  6293     0E3A                     l3043:
  6294                           
  6295                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xF8;
  6296     0E3A  30F8               	movlw	248
  6297     0E3B  008E               	movwf	14	;volatile
  6298     0E3C                     l3045:
  6299                           
  6300                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  6301     0E3C  30CF               	movlw	207
  6302     0E3D  0023               	movlb	3	; select bank3
  6303     0E3E  008E               	movwf	14	;volatile
  6304     0E3F                     l3047:
  6305                           
  6306                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x20;
  6307     0E3F  3020               	movlw	32
  6308     0E40  008D               	movwf	13	;volatile
  6309     0E41                     l3049:
  6310                           
  6311                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  6312     0E41  3017               	movlw	23
  6313     0E42  008C               	movwf	12	;volatile
  6314                           
  6315                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6316     0E43  0024               	movlb	4	; select bank4
  6317     0E44  018D               	clrf	13	;volatile
  6318                           
  6319                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  6320     0E45  018C               	clrf	12	;volatile
  6321     0E46                     l3051:
  6322                           
  6323                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  6324     0E46  0021               	movlb	1	; select bank1
  6325     0E47  1795               	bsf	21,7	;volatile
  6326                           
  6327                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  6328     0E48  0022               	movlb	2	; select bank2
  6329     0E49  019D               	clrf	29	;volatile
  6330     0E4A                     l72:
  6331     0E4A  0008               	return
  6332     0E4B                     __end_of_PIN_MANAGER_Initialize:
  6333                           
  6334                           	psect	text18
  6335     0D64                     __ptext18:	
  6336 ;; *************** function _OSCILLATOR_Initialize *****************
  6337 ;; Defined at:
  6338 ;;		line 63 in file "mcc_generated_files/mcc.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;		None
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      void 
  6345 ;; Registers used:
  6346 ;;		wreg, status,2
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6352 ;;      Params:         0       0       0       0
  6353 ;;      Locals:         0       0       0       0
  6354 ;;      Temps:          0       0       0       0
  6355 ;;      Totals:         0       0       0       0
  6356 ;;Total ram usage:        0 bytes
  6357 ;; Hardware stack levels used: 1
  6358 ;; Hardware stack levels required when called: 5
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_SYSTEM_Initialize
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366     0D64                     _OSCILLATOR_Initialize:	
  6367                           ;psect for function _OSCILLATOR_Initialize
  6368                           
  6369     0D64                     l3053:	
  6370                           ;incstack = 0
  6371                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6372                           
  6373                           
  6374                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x7A;
  6375     0D64  307A               	movlw	122
  6376     0D65  0021               	movlb	1	; select bank1
  6377     0D66  0099               	movwf	25	;volatile
  6378     0D67                     l3055:
  6379                           
  6380                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  6381     0D67  0022               	movlb	2	; select bank2
  6382     0D68  0196               	clrf	22	;volatile
  6383     0D69                     l40:
  6384     0D69  0008               	return
  6385     0D6A                     __end_of_OSCILLATOR_Initialize:
  6386                           
  6387                           	psect	text19
  6388     0D9B                     __ptext19:	
  6389 ;; *************** function _I2C_Initialize *****************
  6390 ;; Defined at:
  6391 ;;		line 108 in file "mcc_generated_files/i2c_slave.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;		None
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6405 ;;      Params:         0       0       0       0
  6406 ;;      Locals:         0       0       0       0
  6407 ;;      Temps:          1       0       0       0
  6408 ;;      Totals:         1       0       0       0
  6409 ;;Total ram usage:        1 bytes
  6410 ;; Hardware stack levels used: 1
  6411 ;; Hardware stack levels required when called: 5
  6412 ;; This function calls:
  6413 ;;		Nothing
  6414 ;; This function is called by:
  6415 ;;		_SYSTEM_Initialize
  6416 ;;		_I2C_Enable
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420     0D9B                     _I2C_Initialize:	
  6421                           ;psect for function _I2C_Initialize
  6422                           
  6423     0D9B                     l3029:	
  6424                           ;incstack = 0
  6425                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0]
  6426                           
  6427                           
  6428                           ;mcc_generated_files/i2c_slave.c: 110:     SSP1STAT = 0x00;
  6429     0D9B  0024               	movlb	4	; select bank4
  6430     0D9C  0194               	clrf	20	;volatile
  6431     0D9D                     l3031:
  6432                           
  6433                           ;mcc_generated_files/i2c_slave.c: 111:     SSP1CON1 |= 0x06;
  6434     0D9D  3006               	movlw	6
  6435     0D9E  00F3               	movwf	??_I2C_Initialize
  6436     0D9F  0873               	movf	??_I2C_Initialize,w
  6437     0DA0  0495               	iorwf	21,f	;volatile
  6438     0DA1                     l3033:
  6439                           
  6440                           ;mcc_generated_files/i2c_slave.c: 112:     SSP1CON2 = 0x00;
  6441     0DA1  0196               	clrf	22	;volatile
  6442     0DA2                     l3035:
  6443                           
  6444                           ;mcc_generated_files/i2c_slave.c: 113:     SSP1CON1bits.SSPEN = 0;
  6445     0DA2  1295               	bcf	21,5	;volatile
  6446     0DA3                     l329:
  6447     0DA3  0008               	return
  6448     0DA4                     __end_of_I2C_Initialize:
  6449                           
  6450                           	psect	text20
  6451     0D0F                     __ptext20:	
  6452 ;; *************** function _FVR_Initialize *****************
  6453 ;; Defined at:
  6454 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6468 ;;      Params:         0       0       0       0
  6469 ;;      Locals:         0       0       0       0
  6470 ;;      Temps:          0       0       0       0
  6471 ;;      Totals:         0       0       0       0
  6472 ;;Total ram usage:        0 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 5
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_SYSTEM_Initialize
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482     0D0F                     _FVR_Initialize:	
  6483                           ;psect for function _FVR_Initialize
  6484                           
  6485     0D0F                     l3059:	
  6486                           ;incstack = 0
  6487                           ; Regs used in _FVR_Initialize: [wreg]
  6488                           
  6489                           
  6490                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  6491     0D0F  3082               	movlw	130
  6492     0D10  0022               	movlb	2	; select bank2
  6493     0D11  0097               	movwf	23	;volatile
  6494     0D12                     l219:
  6495     0D12  0008               	return
  6496     0D13                     __end_of_FVR_Initialize:
  6497                           
  6498                           	psect	text21
  6499     0D92                     __ptext21:	
  6500 ;; *************** function _ADC_Initialize *****************
  6501 ;; Defined at:
  6502 ;;		line 67 in file "mcc_generated_files/adc.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;		None
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6516 ;;      Params:         0       0       0       0
  6517 ;;      Locals:         0       0       0       0
  6518 ;;      Temps:          0       0       0       0
  6519 ;;      Totals:         0       0       0       0
  6520 ;;Total ram usage:        0 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 5
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_SYSTEM_Initialize
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530     0D92                     _ADC_Initialize:	
  6531                           ;psect for function _ADC_Initialize
  6532                           
  6533     0D92                     l3061:	
  6534                           ;incstack = 0
  6535                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6536                           
  6537                           
  6538                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD0;
  6539     0D92  30D0               	movlw	208
  6540     0D93  0021               	movlb	1	; select bank1
  6541     0D94  009E               	movwf	30	;volatile
  6542     0D95                     l3063:
  6543                           
  6544                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
  6545     0D95  019F               	clrf	31	;volatile
  6546     0D96                     l3065:
  6547                           
  6548                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  6549     0D96  019B               	clrf	27	;volatile
  6550     0D97                     l3067:
  6551                           
  6552                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  6553     0D97  019C               	clrf	28	;volatile
  6554     0D98                     l3069:
  6555                           
  6556                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  6557     0D98  3001               	movlw	1
  6558     0D99  009D               	movwf	29	;volatile
  6559     0D9A                     l191:
  6560     0D9A  0008               	return
  6561     0D9B                     __end_of_ADC_Initialize:
  6562                           
  6563                           	psect	text22
  6564     0D0B                     __ptext22:	
  6565 ;; *************** function _I2C_Read *****************
  6566 ;; Defined at:
  6567 ;;		line 135 in file "mcc_generated_files/i2c_slave.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      unsigned char 
  6574 ;; Registers used:
  6575 ;;		wreg, pclath, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6581 ;;      Params:         0       0       0       0
  6582 ;;      Locals:         0       0       0       0
  6583 ;;      Temps:          0       0       0       0
  6584 ;;      Totals:         0       0       0       0
  6585 ;;Total ram usage:        0 bytes
  6586 ;; Hardware stack levels used: 1
  6587 ;; Hardware stack levels required when called: 6
  6588 ;; This function calls:
  6589 ;;		_I2C_SlaveGetRxData
  6590 ;; This function is called by:
  6591 ;;		_main
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595     0D0B                     _I2C_Read:	
  6596                           ;psect for function _I2C_Read
  6597                           
  6598     0D0B                     l3189:	
  6599                           ;incstack = 0
  6600                           ; Regs used in _I2C_Read: [wreg+pclath+cstack]
  6601                           
  6602                           
  6603                           ;mcc_generated_files/i2c_slave.c: 137:    return I2C_SlaveGetRxData();
  6604     0D0B  318D  2504  318D   	fcall	_I2C_SlaveGetRxData
  6605     0D0E                     l338:
  6606     0D0E  0008               	return
  6607     0D0F                     __end_of_I2C_Read:
  6608                           
  6609                           	psect	text23
  6610     0D04                     __ptext23:	
  6611 ;; *************** function _I2C_SlaveGetRxData *****************
  6612 ;; Defined at:
  6613 ;;		line 396 in file "mcc_generated_files/i2c_slave.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;		None
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;		None
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  1    wreg      unsigned char 
  6620 ;; Registers used:
  6621 ;;		wreg
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6627 ;;      Params:         0       0       0       0
  6628 ;;      Locals:         0       0       0       0
  6629 ;;      Temps:          0       0       0       0
  6630 ;;      Totals:         0       0       0       0
  6631 ;;Total ram usage:        0 bytes
  6632 ;; Hardware stack levels used: 1
  6633 ;; Hardware stack levels required when called: 5
  6634 ;; This function calls:
  6635 ;;		Nothing
  6636 ;; This function is called by:
  6637 ;;		_I2C_Read
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641     0D04                     _I2C_SlaveGetRxData:	
  6642                           ;psect for function _I2C_SlaveGetRxData
  6643                           
  6644     0D04                     l3119:	
  6645                           ;incstack = 0
  6646                           ; Regs used in _I2C_SlaveGetRxData: [wreg]
  6647                           
  6648                           
  6649                           ;mcc_generated_files/i2c_slave.c: 398:     return SSP1BUF;
  6650     0D04  0024               	movlb	4	; select bank4
  6651     0D05  0811               	movf	17,w	;volatile
  6652     0D06                     l474:
  6653     0D06  0008               	return
  6654     0D07                     __end_of_I2C_SlaveGetRxData:
  6655                           
  6656                           	psect	text24
  6657     0EBA                     __ptext24:	
  6658 ;; *************** function _I2C_Open *****************
  6659 ;; Defined at:
  6660 ;;		line 116 in file "mcc_generated_files/i2c_slave.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;		None
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;		None
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0, pclath, cstack
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6674 ;;      Params:         0       0       0       0
  6675 ;;      Locals:         0       0       0       0
  6676 ;;      Temps:          0       0       0       0
  6677 ;;      Totals:         0       0       0       0
  6678 ;;Total ram usage:        0 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; Hardware stack levels required when called: 6
  6681 ;; This function calls:
  6682 ;;		_I2C_SlaveEnableIrq
  6683 ;;		_I2C_SlaveOpen
  6684 ;;		_I2C_SlaveSetAddrIntHandler
  6685 ;;		_I2C_SlaveSetBusColIntHandler
  6686 ;;		_I2C_SlaveSetIsrHandler
  6687 ;;		_I2C_SlaveSetReadIntHandler
  6688 ;;		_I2C_SlaveSetSlaveAddr
  6689 ;;		_I2C_SlaveSetSlaveMask
  6690 ;;		_I2C_SlaveSetWrColIntHandler
  6691 ;;		_I2C_SlaveSetWriteIntHandler
  6692 ;; This function is called by:
  6693 ;;		_main
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697     0EBA                     _I2C_Open:	
  6698                           ;psect for function _I2C_Open
  6699                           
  6700     0EBA                     l3185:	
  6701                           ;incstack = 0
  6702                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  6703                           
  6704                           
  6705                           ;mcc_generated_files/i2c_slave.c: 118:     I2C_SlaveOpen();
  6706     0EBA  318D  25CB  318E   	fcall	_I2C_SlaveOpen
  6707                           
  6708                           ;mcc_generated_files/i2c_slave.c: 119:     I2C_SlaveSetSlaveAddr(8);
  6709     0EBD  3008               	movlw	8
  6710     0EBE  318D  252B  318E   	fcall	_I2C_SlaveSetSlaveAddr
  6711                           
  6712                           ;mcc_generated_files/i2c_slave.c: 120:     I2C_SlaveSetSlaveMask(0);
  6713     0EC1  3000               	movlw	0
  6714     0EC2  318D  2530  318E   	fcall	_I2C_SlaveSetSlaveMask
  6715                           
  6716                           ;mcc_generated_files/i2c_slave.c: 121:     I2C_SlaveSetIsrHandler(I2C_Isr);
  6717     0EC5  308B               	movlw	low _I2C_Isr
  6718     0EC6  00F3               	movwf	I2C_SlaveSetIsrHandler@handler
  6719     0EC7  300F               	movlw	high _I2C_Isr
  6720     0EC8  00F4               	movwf	I2C_SlaveSetIsrHandler@handler+1
  6721     0EC9  318D  254C  318E   	fcall	_I2C_SlaveSetIsrHandler
  6722                           
  6723                           ;mcc_generated_files/i2c_slave.c: 122:     I2C_SlaveSetBusColIntHandler(I2C_SlaveDefBusC
      +                          olInterruptHandler);
  6724     0ECC  3000               	movlw	0
  6725     0ECD  00F3               	movwf	I2C_SlaveSetBusColIntHandler@handler
  6726     0ECE  3000               	movlw	0
  6727     0ECF  00F4               	movwf	I2C_SlaveSetBusColIntHandler@handler+1
  6728     0ED0  318D  2546  318E   	fcall	_I2C_SlaveSetBusColIntHandler
  6729                           
  6730                           ;mcc_generated_files/i2c_slave.c: 123:     I2C_SlaveSetWriteIntHandler(I2C_SlaveDefWrInt
      +                          erruptHandler);
  6731     0ED3  3026               	movlw	low _I2C_SlaveDefWrInterruptHandler
  6732     0ED4  00F3               	movwf	I2C_SlaveSetWriteIntHandler@handler
  6733     0ED5  300D               	movlw	high _I2C_SlaveDefWrInterruptHandler
  6734     0ED6  00F4               	movwf	I2C_SlaveSetWriteIntHandler@handler+1
  6735     0ED7  318D  255E  318E   	fcall	_I2C_SlaveSetWriteIntHandler
  6736                           
  6737                           ;mcc_generated_files/i2c_slave.c: 124:     I2C_SlaveSetReadIntHandler(I2C_SlaveDefRdInte
      +                          rruptHandler);
  6738     0EDA  301C               	movlw	low _I2C_SlaveDefRdInterruptHandler
  6739     0EDB  00F3               	movwf	I2C_SlaveSetReadIntHandler@handler
  6740     0EDC  300D               	movlw	high _I2C_SlaveDefRdInterruptHandler
  6741     0EDD  00F4               	movwf	I2C_SlaveSetReadIntHandler@handler+1
  6742     0EDE  318D  2552  318E   	fcall	_I2C_SlaveSetReadIntHandler
  6743                           
  6744                           ;mcc_generated_files/i2c_slave.c: 125:     I2C_SlaveSetAddrIntHandler(I2C_SlaveDefAddrIn
      +                          terruptHandler);
  6745     0EE1  303A               	movlw	low _I2C_SlaveDefAddrInterruptHandler
  6746     0EE2  00F3               	movwf	I2C_SlaveSetAddrIntHandler@handler
  6747     0EE3  300D               	movlw	high _I2C_SlaveDefAddrInterruptHandler
  6748     0EE4  00F4               	movwf	I2C_SlaveSetAddrIntHandler@handler+1
  6749     0EE5  318D  2540  318E   	fcall	_I2C_SlaveSetAddrIntHandler
  6750                           
  6751                           ;mcc_generated_files/i2c_slave.c: 126:     I2C_SlaveSetWrColIntHandler(I2C_SlaveDefWrCol
      +                          InterruptHandler);
  6752     0EE8  3000               	movlw	0
  6753     0EE9  00F3               	movwf	I2C_SlaveSetWrColIntHandler@handler
  6754     0EEA  3000               	movlw	0
  6755     0EEB  00F4               	movwf	I2C_SlaveSetWrColIntHandler@handler+1
  6756     0EEC  318D  2558  318E   	fcall	_I2C_SlaveSetWrColIntHandler
  6757     0EEF                     l3187:
  6758                           
  6759                           ;mcc_generated_files/i2c_slave.c: 127:     I2C_SlaveEnableIrq();
  6760     0EEF  318D  2501  318E   	fcall	_I2C_SlaveEnableIrq
  6761     0EF2                     l332:
  6762     0EF2  0008               	return
  6763     0EF3                     __end_of_I2C_Open:
  6764                           
  6765                           	psect	text25
  6766     0D5E                     __ptext25:	
  6767 ;; *************** function _I2C_SlaveSetWriteIntHandler *****************
  6768 ;; Defined at:
  6769 ;;		line 246 in file "mcc_generated_files/i2c_slave.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  handler         2    3[COMMON] PTR FTN()void 
  6772 ;;		 -> I2C_SlaveDefWrInterruptHandler(1), 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;		None
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  1    wreg      void 
  6777 ;; Registers used:
  6778 ;;		wreg
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6784 ;;      Params:         2       0       0       0
  6785 ;;      Locals:         0       0       0       0
  6786 ;;      Temps:          0       0       0       0
  6787 ;;      Totals:         2       0       0       0
  6788 ;;Total ram usage:        2 bytes
  6789 ;; Hardware stack levels used: 1
  6790 ;; Hardware stack levels required when called: 5
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_I2C_Open
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798     0D5E                     _I2C_SlaveSetWriteIntHandler:	
  6799                           ;psect for function _I2C_SlaveSetWriteIntHandler
  6800                           
  6801     0D5E                     l3109:	
  6802                           ;incstack = 0
  6803                           ; Regs used in _I2C_SlaveSetWriteIntHandler: [wreg]
  6804                           
  6805                           
  6806                           ;mcc_generated_files/i2c_slave.c: 247:     I2C_SlaveWrInterruptHandler = handler;
  6807     0D5E  0874               	movf	I2C_SlaveSetWriteIntHandler@handler+1,w
  6808     0D5F  0020               	movlb	0	; select bank0
  6809     0D60  00E0               	movwf	_I2C_SlaveWrInterruptHandler+1
  6810     0D61  0873               	movf	I2C_SlaveSetWriteIntHandler@handler,w
  6811     0D62  00DF               	movwf	_I2C_SlaveWrInterruptHandler
  6812     0D63                     l388:
  6813     0D63  0008               	return
  6814     0D64                     __end_of_I2C_SlaveSetWriteIntHandler:
  6815                           
  6816                           	psect	text26
  6817     0D58                     __ptext26:	
  6818 ;; *************** function _I2C_SlaveSetWrColIntHandler *****************
  6819 ;; Defined at:
  6820 ;;		line 279 in file "mcc_generated_files/i2c_slave.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  handler         2    3[COMMON] PTR FTN()void 
  6823 ;;		 -> I2C_SlaveDefWrColInterruptHandler(1), 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;		None
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      void 
  6828 ;; Registers used:
  6829 ;;		wreg
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6835 ;;      Params:         2       0       0       0
  6836 ;;      Locals:         0       0       0       0
  6837 ;;      Temps:          0       0       0       0
  6838 ;;      Totals:         2       0       0       0
  6839 ;;Total ram usage:        2 bytes
  6840 ;; Hardware stack levels used: 1
  6841 ;; Hardware stack levels required when called: 5
  6842 ;; This function calls:
  6843 ;;		Nothing
  6844 ;; This function is called by:
  6845 ;;		_I2C_Open
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849     0D58                     _I2C_SlaveSetWrColIntHandler:	
  6850                           ;psect for function _I2C_SlaveSetWrColIntHandler
  6851                           
  6852     0D58                     l3115:	
  6853                           ;incstack = 0
  6854                           ; Regs used in _I2C_SlaveSetWrColIntHandler: [wreg]
  6855                           
  6856                           
  6857                           ;mcc_generated_files/i2c_slave.c: 280:     I2C_SlaveWrColInterruptHandler = handler;
  6858     0D58  0874               	movf	I2C_SlaveSetWrColIntHandler@handler+1,w
  6859     0D59  0020               	movlb	0	; select bank0
  6860     0D5A  00DA               	movwf	_I2C_SlaveWrColInterruptHandler+1
  6861     0D5B  0873               	movf	I2C_SlaveSetWrColIntHandler@handler,w
  6862     0D5C  00D9               	movwf	_I2C_SlaveWrColInterruptHandler
  6863     0D5D                     l408:
  6864     0D5D  0008               	return
  6865     0D5E                     __end_of_I2C_SlaveSetWrColIntHandler:
  6866                           
  6867                           	psect	text27
  6868     0D30                     __ptext27:	
  6869 ;; *************** function _I2C_SlaveSetSlaveMask *****************
  6870 ;; Defined at:
  6871 ;;		line 336 in file "mcc_generated_files/i2c_slave.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  maskAddr        1    wreg     unsigned char 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  maskAddr        1    3[COMMON] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      void 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6885 ;;      Params:         0       0       0       0
  6886 ;;      Locals:         1       0       0       0
  6887 ;;      Temps:          0       0       0       0
  6888 ;;      Totals:         1       0       0       0
  6889 ;;Total ram usage:        1 bytes
  6890 ;; Hardware stack levels used: 1
  6891 ;; Hardware stack levels required when called: 5
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_I2C_Open
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899     0D30                     _I2C_SlaveSetSlaveMask:	
  6900                           ;psect for function _I2C_SlaveSetSlaveMask
  6901                           
  6902                           
  6903                           ;incstack = 0
  6904                           ; Regs used in _I2C_SlaveSetSlaveMask: [wreg+status,2+status,0]
  6905                           ;I2C_SlaveSetSlaveMask@maskAddr stored from wreg
  6906     0D30  00F3               	movwf	I2C_SlaveSetSlaveMask@maskAddr
  6907     0D31                     l3103:
  6908                           
  6909                           ;mcc_generated_files/i2c_slave.c: 336: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveMask(uint8_t maskAddr);mcc_generated_files/i2c_slave.c: 337: {;mcc_generated_files/i
      +                          2c_slave.c: 338:     SSP1MSK = (uint8_t) (maskAddr << 1);
  6910     0D31  3573               	lslf	I2C_SlaveSetSlaveMask@maskAddr,w
  6911     0D32  0024               	movlb	4	; select bank4
  6912     0D33  0093               	movwf	19	;volatile
  6913     0D34                     l438:
  6914     0D34  0008               	return
  6915     0D35                     __end_of_I2C_SlaveSetSlaveMask:
  6916                           
  6917                           	psect	text28
  6918     0D2B                     __ptext28:	
  6919 ;; *************** function _I2C_SlaveSetSlaveAddr *****************
  6920 ;; Defined at:
  6921 ;;		line 331 in file "mcc_generated_files/i2c_slave.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  slaveAddr       1    wreg     unsigned char 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;  slaveAddr       1    3[COMMON] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6935 ;;      Params:         0       0       0       0
  6936 ;;      Locals:         1       0       0       0
  6937 ;;      Temps:          0       0       0       0
  6938 ;;      Totals:         1       0       0       0
  6939 ;;Total ram usage:        1 bytes
  6940 ;; Hardware stack levels used: 1
  6941 ;; Hardware stack levels required when called: 5
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		_I2C_Open
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949     0D2B                     _I2C_SlaveSetSlaveAddr:	
  6950                           ;psect for function _I2C_SlaveSetSlaveAddr
  6951                           
  6952                           
  6953                           ;incstack = 0
  6954                           ; Regs used in _I2C_SlaveSetSlaveAddr: [wreg+status,2+status,0]
  6955                           ;I2C_SlaveSetSlaveAddr@slaveAddr stored from wreg
  6956     0D2B  00F3               	movwf	I2C_SlaveSetSlaveAddr@slaveAddr
  6957     0D2C                     l3101:
  6958                           
  6959                           ;mcc_generated_files/i2c_slave.c: 331: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveAddr(uint8_t slaveAddr);mcc_generated_files/i2c_slave.c: 332: {;mcc_generated_files/
      +                          i2c_slave.c: 333:     SSP1ADD = (uint8_t) (slaveAddr << 1);
  6960     0D2C  3573               	lslf	I2C_SlaveSetSlaveAddr@slaveAddr,w
  6961     0D2D  0024               	movlb	4	; select bank4
  6962     0D2E  0092               	movwf	18	;volatile
  6963     0D2F                     l435:
  6964     0D2F  0008               	return
  6965     0D30                     __end_of_I2C_SlaveSetSlaveAddr:
  6966                           
  6967                           	psect	text29
  6968     0D52                     __ptext29:	
  6969 ;; *************** function _I2C_SlaveSetReadIntHandler *****************
  6970 ;; Defined at:
  6971 ;;		line 229 in file "mcc_generated_files/i2c_slave.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  handler         2    3[COMMON] PTR FTN()void 
  6974 ;;		 -> I2C_SlaveDefRdInterruptHandler(1), 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;		None
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  1    wreg      void 
  6979 ;; Registers used:
  6980 ;;		wreg
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6986 ;;      Params:         2       0       0       0
  6987 ;;      Locals:         0       0       0       0
  6988 ;;      Temps:          0       0       0       0
  6989 ;;      Totals:         2       0       0       0
  6990 ;;Total ram usage:        2 bytes
  6991 ;; Hardware stack levels used: 1
  6992 ;; Hardware stack levels required when called: 5
  6993 ;; This function calls:
  6994 ;;		Nothing
  6995 ;; This function is called by:
  6996 ;;		_I2C_Open
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000     0D52                     _I2C_SlaveSetReadIntHandler:	
  7001                           ;psect for function _I2C_SlaveSetReadIntHandler
  7002                           
  7003     0D52                     l3111:	
  7004                           ;incstack = 0
  7005                           ; Regs used in _I2C_SlaveSetReadIntHandler: [wreg]
  7006                           
  7007                           
  7008                           ;mcc_generated_files/i2c_slave.c: 230:     I2C_SlaveRdInterruptHandler = handler;
  7009     0D52  0874               	movf	I2C_SlaveSetReadIntHandler@handler+1,w
  7010     0D53  0020               	movlb	0	; select bank0
  7011     0D54  00E2               	movwf	_I2C_SlaveRdInterruptHandler+1
  7012     0D55  0873               	movf	I2C_SlaveSetReadIntHandler@handler,w
  7013     0D56  00E1               	movwf	_I2C_SlaveRdInterruptHandler
  7014     0D57                     l378:
  7015     0D57  0008               	return
  7016     0D58                     __end_of_I2C_SlaveSetReadIntHandler:
  7017                           
  7018                           	psect	text30
  7019     0D4C                     __ptext30:	
  7020 ;; *************** function _I2C_SlaveSetIsrHandler *****************
  7021 ;; Defined at:
  7022 ;;		line 223 in file "mcc_generated_files/i2c_slave.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  handler         2    3[COMMON] PTR FTN()void 
  7025 ;;		 -> I2C_Isr(1), 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		wreg
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7037 ;;      Params:         2       0       0       0
  7038 ;;      Locals:         0       0       0       0
  7039 ;;      Temps:          0       0       0       0
  7040 ;;      Totals:         2       0       0       0
  7041 ;;Total ram usage:        2 bytes
  7042 ;; Hardware stack levels used: 1
  7043 ;; Hardware stack levels required when called: 5
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_I2C_Open
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051     0D4C                     _I2C_SlaveSetIsrHandler:	
  7052                           ;psect for function _I2C_SlaveSetIsrHandler
  7053                           
  7054     0D4C                     l3105:	
  7055                           ;incstack = 0
  7056                           ; Regs used in _I2C_SlaveSetIsrHandler: [wreg]
  7057                           
  7058                           
  7059                           ;mcc_generated_files/i2c_slave.c: 223: void I2C_SlaveSetIsrHandler(i2cInterruptHandler h
      +                          andler);mcc_generated_files/i2c_slave.c: 224: {;mcc_generated_files/i2c_slave.c: 225:   
      +                            MSSP_InterruptHandler = handler;
  7060     0D4C  0874               	movf	I2C_SlaveSetIsrHandler@handler+1,w
  7061     0D4D  0020               	movlb	0	; select bank0
  7062     0D4E  00E4               	movwf	_MSSP_InterruptHandler+1
  7063     0D4F  0873               	movf	I2C_SlaveSetIsrHandler@handler,w
  7064     0D50  00E3               	movwf	_MSSP_InterruptHandler
  7065     0D51                     l375:
  7066     0D51  0008               	return
  7067     0D52                     __end_of_I2C_SlaveSetIsrHandler:
  7068                           
  7069                           	psect	text31
  7070     0D46                     __ptext31:	
  7071 ;; *************** function _I2C_SlaveSetBusColIntHandler *****************
  7072 ;; Defined at:
  7073 ;;		line 295 in file "mcc_generated_files/i2c_slave.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  handler         2    3[COMMON] PTR FTN()void 
  7076 ;;		 -> I2C_SlaveDefBusColInterruptHandler(1), 
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;		None
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  1    wreg      void 
  7081 ;; Registers used:
  7082 ;;		wreg
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7088 ;;      Params:         2       0       0       0
  7089 ;;      Locals:         0       0       0       0
  7090 ;;      Temps:          0       0       0       0
  7091 ;;      Totals:         2       0       0       0
  7092 ;;Total ram usage:        2 bytes
  7093 ;; Hardware stack levels used: 1
  7094 ;; Hardware stack levels required when called: 5
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		_I2C_Open
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102     0D46                     _I2C_SlaveSetBusColIntHandler:	
  7103                           ;psect for function _I2C_SlaveSetBusColIntHandler
  7104                           
  7105     0D46                     l3107:	
  7106                           ;incstack = 0
  7107                           ; Regs used in _I2C_SlaveSetBusColIntHandler: [wreg]
  7108                           
  7109                           
  7110                           ;mcc_generated_files/i2c_slave.c: 296:     I2C_SlaveBusColInterruptHandler = handler;
  7111     0D46  0874               	movf	I2C_SlaveSetBusColIntHandler@handler+1,w
  7112     0D47  0020               	movlb	0	; select bank0
  7113     0D48  00DC               	movwf	_I2C_SlaveBusColInterruptHandler+1
  7114     0D49  0873               	movf	I2C_SlaveSetBusColIntHandler@handler,w
  7115     0D4A  00DB               	movwf	_I2C_SlaveBusColInterruptHandler
  7116     0D4B                     l418:
  7117     0D4B  0008               	return
  7118     0D4C                     __end_of_I2C_SlaveSetBusColIntHandler:
  7119                           
  7120                           	psect	text32
  7121     0D40                     __ptext32:	
  7122 ;; *************** function _I2C_SlaveSetAddrIntHandler *****************
  7123 ;; Defined at:
  7124 ;;		line 263 in file "mcc_generated_files/i2c_slave.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;  handler         2    3[COMMON] PTR FTN()void 
  7127 ;;		 -> I2C_SlaveDefAddrInterruptHandler(1), 
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;		None
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  1    wreg      void 
  7132 ;; Registers used:
  7133 ;;		wreg
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7139 ;;      Params:         2       0       0       0
  7140 ;;      Locals:         0       0       0       0
  7141 ;;      Temps:          0       0       0       0
  7142 ;;      Totals:         2       0       0       0
  7143 ;;Total ram usage:        2 bytes
  7144 ;; Hardware stack levels used: 1
  7145 ;; Hardware stack levels required when called: 5
  7146 ;; This function calls:
  7147 ;;		Nothing
  7148 ;; This function is called by:
  7149 ;;		_I2C_Open
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153     0D40                     _I2C_SlaveSetAddrIntHandler:	
  7154                           ;psect for function _I2C_SlaveSetAddrIntHandler
  7155                           
  7156     0D40                     l3113:	
  7157                           ;incstack = 0
  7158                           ; Regs used in _I2C_SlaveSetAddrIntHandler: [wreg]
  7159                           
  7160                           
  7161                           ;mcc_generated_files/i2c_slave.c: 264:     I2C_SlaveAddrInterruptHandler = handler;
  7162     0D40  0874               	movf	I2C_SlaveSetAddrIntHandler@handler+1,w
  7163     0D41  0020               	movlb	0	; select bank0
  7164     0D42  00DE               	movwf	_I2C_SlaveAddrInterruptHandler+1
  7165     0D43  0873               	movf	I2C_SlaveSetAddrIntHandler@handler,w
  7166     0D44  00DD               	movwf	_I2C_SlaveAddrInterruptHandler
  7167     0D45                     l398:
  7168     0D45  0008               	return
  7169     0D46                     __end_of_I2C_SlaveSetAddrIntHandler:
  7170                           
  7171                           	psect	text33
  7172     0DCB                     __ptext33:	
  7173 ;; *************** function _I2C_SlaveOpen *****************
  7174 ;; Defined at:
  7175 ;;		line 310 in file "mcc_generated_files/i2c_slave.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;		None
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;		None
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  1    wreg      _Bool 
  7182 ;; Registers used:
  7183 ;;		wreg, status,2, status,0
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7189 ;;      Params:         0       0       0       0
  7190 ;;      Locals:         0       0       0       0
  7191 ;;      Temps:          1       0       0       0
  7192 ;;      Totals:         1       0       0       0
  7193 ;;Total ram usage:        1 bytes
  7194 ;; Hardware stack levels used: 1
  7195 ;; Hardware stack levels required when called: 5
  7196 ;; This function calls:
  7197 ;;		Nothing
  7198 ;; This function is called by:
  7199 ;;		_I2C_Open
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203     0DCB                     _I2C_SlaveOpen:	
  7204                           ;psect for function _I2C_SlaveOpen
  7205                           
  7206     0DCB                     l3089:	
  7207                           ;incstack = 0
  7208                           ; Regs used in _I2C_SlaveOpen: [wreg+status,2+status,0]
  7209                           
  7210                           
  7211                           ;mcc_generated_files/i2c_slave.c: 312:     if(!SSP1CON1bits.SSPEN)
  7212     0DCB  0024               	movlb	4	; select bank4
  7213     0DCC  1A95               	btfsc	21,5	;volatile
  7214     0DCD  2DCF               	goto	u2661
  7215     0DCE  2DD0               	goto	u2660
  7216     0DCF                     u2661:
  7217     0DCF  2DD7               	goto	l429
  7218     0DD0                     u2660:
  7219     0DD0                     l3091:
  7220                           
  7221                           ;mcc_generated_files/i2c_slave.c: 313:     {;mcc_generated_files/i2c_slave.c: 314:      
      +                             SSP1STAT = 0x00;
  7222     0DD0  0194               	clrf	20	;volatile
  7223     0DD1                     l3093:
  7224                           
  7225                           ;mcc_generated_files/i2c_slave.c: 315:         SSP1CON1 |= 0x06;
  7226     0DD1  3006               	movlw	6
  7227     0DD2  00F3               	movwf	??_I2C_SlaveOpen
  7228     0DD3  0873               	movf	??_I2C_SlaveOpen,w
  7229     0DD4  0495               	iorwf	21,f	;volatile
  7230     0DD5                     l3095:
  7231                           
  7232                           ;mcc_generated_files/i2c_slave.c: 316:         SSP1CON2 = 0x00;
  7233     0DD5  0196               	clrf	22	;volatile
  7234     0DD6                     l3097:
  7235                           
  7236                           ;mcc_generated_files/i2c_slave.c: 317:         SSP1CON1bits.SSPEN = 1;
  7237     0DD6  1695               	bsf	21,5	;volatile
  7238     0DD7                     l429:
  7239     0DD7  0008               	return
  7240     0DD8                     __end_of_I2C_SlaveOpen:
  7241                           
  7242                           	psect	text34
  7243     0D01                     __ptext34:	
  7244 ;; *************** function _I2C_SlaveEnableIrq *****************
  7245 ;; Defined at:
  7246 ;;		line 341 in file "mcc_generated_files/i2c_slave.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;		None
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;		None
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  1    wreg      void 
  7253 ;; Registers used:
  7254 ;;		None
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7260 ;;      Params:         0       0       0       0
  7261 ;;      Locals:         0       0       0       0
  7262 ;;      Temps:          0       0       0       0
  7263 ;;      Totals:         0       0       0       0
  7264 ;;Total ram usage:        0 bytes
  7265 ;; Hardware stack levels used: 1
  7266 ;; Hardware stack levels required when called: 5
  7267 ;; This function calls:
  7268 ;;		Nothing
  7269 ;; This function is called by:
  7270 ;;		_I2C_Open
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274     0D01                     _I2C_SlaveEnableIrq:	
  7275                           ;psect for function _I2C_SlaveEnableIrq
  7276                           
  7277     0D01                     l3117:	
  7278                           ;incstack = 0
  7279                           ; Regs used in _I2C_SlaveEnableIrq: []
  7280                           
  7281                           
  7282                           ;mcc_generated_files/i2c_slave.c: 343:     PIE1bits.SSP1IE = 1;
  7283     0D01  0021               	movlb	1	; select bank1
  7284     0D02  1591               	bsf	17,3	;volatile
  7285     0D03                     l441:
  7286     0D03  0008               	return
  7287     0D04                     __end_of_I2C_SlaveEnableIrq:
  7288                           
  7289                           	psect	text35
  7290     07E5                     __ptext35:	
  7291 ;; *************** function _ADC_GetConversion *****************
  7292 ;; Defined at:
  7293 ;;		line 115 in file "mcc_generated_files/adc.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;  channel         1    wreg     enum E3500
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  channel         1    6[COMMON] enum E3500
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  2    3[COMMON] unsigned short 
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7307 ;;      Params:         2       0       0       0
  7308 ;;      Locals:         1       0       0       0
  7309 ;;      Temps:          1       0       0       0
  7310 ;;      Totals:         4       0       0       0
  7311 ;;Total ram usage:        4 bytes
  7312 ;; Hardware stack levels used: 1
  7313 ;; Hardware stack levels required when called: 5
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_main
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321     07E5                     _ADC_GetConversion:	
  7322                           ;psect for function _ADC_GetConversion
  7323                           
  7324                           
  7325                           ;incstack = 0
  7326                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7327                           ;ADC_GetConversion@channel stored from wreg
  7328     07E5  00F6               	movwf	ADC_GetConversion@channel
  7329     07E6                     l3173:
  7330                           
  7331                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  7332     07E6  0876               	movf	ADC_GetConversion@channel,w
  7333     07E7  00F5               	movwf	??_ADC_GetConversion
  7334     07E8  0DF5               	rlf	??_ADC_GetConversion,f
  7335     07E9  0DF5               	rlf	??_ADC_GetConversion,f
  7336     07EA  0021               	movlb	1	; select bank1
  7337     07EB  081D               	movf	29,w	;volatile
  7338     07EC  0675               	xorwf	??_ADC_GetConversion,w
  7339     07ED  3983               	andlw	-125
  7340     07EE  0675               	xorwf	??_ADC_GetConversion,w
  7341     07EF  009D               	movwf	29	;volatile
  7342     07F0                     l3175:
  7343                           
  7344                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  7345     07F0  141D               	bsf	29,0	;volatile
  7346     07F1                     l3177:
  7347                           
  7348                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  7349     07F1  3006               	movlw	6
  7350     07F2                     u3807:
  7351     07F2  0B89               	decfsz	9,f
  7352     07F3  2FF2               	goto	u3807
  7353     07F4  3200               	nop2
  7354     07F5                     l3179:
  7355                           
  7356                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GO_nDONE = 1;
  7357     07F5  0021               	movlb	1	; select bank1
  7358     07F6  149D               	bsf	29,1	;volatile
  7359     07F7                     l206:	
  7360                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  7361                           
  7362                           
  7363                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GO_nDONE)
  7364     07F7  189D               	btfsc	29,1	;volatile
  7365     07F8  2FFA               	goto	u2801
  7366     07F9  2FFB               	goto	u2800
  7367     07FA                     u2801:
  7368     07FA  2FF7               	goto	l206
  7369     07FB                     u2800:
  7370     07FB                     l3181:
  7371                           
  7372                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7373     07FB  081C               	movf	28,w	;volatile
  7374     07FC  00F4               	movwf	?_ADC_GetConversion+1
  7375     07FD  081B               	movf	27,w	;volatile
  7376     07FE  00F3               	movwf	?_ADC_GetConversion
  7377     07FF                     l209:
  7378     07FF  0008               	return
  7379     0800                     __end_of_ADC_GetConversion:
  7380                           
  7381                           	psect	intentry
  7382     0004                     __pintentry:	
  7383 ;; *************** function _INTERRUPT_InterruptManager *****************
  7384 ;; Defined at:
  7385 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;		None
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      void 
  7392 ;; Registers used:
  7393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7399 ;;      Params:         0       0       0       0
  7400 ;;      Locals:         0       0       0       0
  7401 ;;      Temps:          0       0       0       0
  7402 ;;      Totals:         0       0       0       0
  7403 ;;Total ram usage:        0 bytes
  7404 ;; Hardware stack levels used: 1
  7405 ;; Hardware stack levels required when called: 4
  7406 ;; This function calls:
  7407 ;;		Absolute function
  7408 ;;		_I2C_Isr
  7409 ;;		_TMR1_ISR
  7410 ;; This function is called by:
  7411 ;;		Interrupt level 1
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415     0004                     _INTERRUPT_InterruptManager:
  7416                           
  7417                           ;incstack = 0
  7418     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7419                           
  7420                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7421     0005  3180               	pagesel	$
  7422     0006                     i1l2819:
  7423                           
  7424                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  7425     0006  1F0B               	btfss	11,6	;volatile
  7426     0007  2809               	goto	u243_21
  7427     0008  280A               	goto	u243_20
  7428     0009                     u243_21:
  7429     0009  2833               	goto	i1l112
  7430     000A                     u243_20:
  7431     000A                     i1l2821:
  7432                           
  7433                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  7434     000A  0021               	movlb	1	; select bank1
  7435     000B  1D92               	btfss	18,3	;volatile
  7436     000C  280E               	goto	u244_21
  7437     000D  280F               	goto	u244_20
  7438     000E                     u244_21:
  7439     000E  281A               	goto	i1l105
  7440     000F                     u244_20:
  7441     000F                     i1l2823:
  7442     000F  0020               	movlb	0	; select bank0
  7443     0010  1D92               	btfss	18,3	;volatile
  7444     0011  2813               	goto	u245_21
  7445     0012  2814               	goto	u245_20
  7446     0013                     u245_21:
  7447     0013  281A               	goto	i1l105
  7448     0014                     u245_20:
  7449     0014                     i1l2825:
  7450                           
  7451                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             MSSP_InterruptHandler();
  7452     0014  0864               	movf	_MSSP_InterruptHandler+1,w
  7453     0015  008A               	movwf	10
  7454     0016  0863               	movf	_MSSP_InterruptHandler,w
  7455     0017  000A               	callw
  7456     0018  3180               	pagesel	$
  7457                           
  7458                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  7459     0019  2833               	goto	i1l112
  7460     001A                     i1l105:	
  7461                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  7462                           
  7463     001A  0021               	movlb	1	; select bank1
  7464     001B  1D91               	btfss	17,3	;volatile
  7465     001C  281E               	goto	u246_21
  7466     001D  281F               	goto	u246_20
  7467     001E                     u246_21:
  7468     001E  2825               	goto	i1l107
  7469     001F                     u246_20:
  7470     001F                     i1l2827:
  7471     001F  0020               	movlb	0	; select bank0
  7472     0020  1D91               	btfss	17,3	;volatile
  7473     0021  2823               	goto	u247_21
  7474     0022  2824               	goto	u247_20
  7475     0023                     u247_21:
  7476     0023  2825               	goto	i1l107
  7477     0024                     u247_20:
  7478     0024  2814               	goto	i1l2825
  7479     0025                     i1l107:	
  7480                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
  7481                           
  7482     0025  0021               	movlb	1	; select bank1
  7483     0026  1C11               	btfss	17,0	;volatile
  7484     0027  2829               	goto	u248_21
  7485     0028  282A               	goto	u248_20
  7486     0029                     u248_21:
  7487     0029  2833               	goto	i1l106
  7488     002A                     u248_20:
  7489     002A                     i1l2831:
  7490     002A  0020               	movlb	0	; select bank0
  7491     002B  1C11               	btfss	17,0	;volatile
  7492     002C  282E               	goto	u249_21
  7493     002D  282F               	goto	u249_20
  7494     002E                     u249_21:
  7495     002E  2833               	goto	i1l106
  7496     002F                     u249_20:
  7497     002F                     i1l2833:
  7498                           
  7499                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  7500     002F  318D  25E9  3180   	fcall	_TMR1_ISR
  7501                           
  7502                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  7503     0032  2833               	goto	i1l112
  7504     0033                     i1l106:
  7505     0033                     i1l112:	
  7506                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  7507                           
  7508     0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7509     0034  0009               	retfie
  7510     0035                     __end_of_INTERRUPT_InterruptManager:
  7511                           
  7512                           	psect	text37
  7513     0DE9                     __ptext37:	
  7514 ;; *************** function _TMR1_ISR *****************
  7515 ;; Defined at:
  7516 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;		None
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  1    wreg      void 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0, pclath, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7530 ;;      Params:         0       0       0       0
  7531 ;;      Locals:         0       0       0       0
  7532 ;;      Temps:          0       0       0       0
  7533 ;;      Totals:         0       0       0       0
  7534 ;;Total ram usage:        0 bytes
  7535 ;; Hardware stack levels used: 1
  7536 ;; Hardware stack levels required when called: 1
  7537 ;; This function calls:
  7538 ;;		Absolute function
  7539 ;;		_TMR1_DefaultInterruptHandler
  7540 ;;		_TMR1_WriteTimer
  7541 ;; This function is called by:
  7542 ;;		_INTERRUPT_InterruptManager
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546     0DE9                     _TMR1_ISR:	
  7547                           ;psect for function _TMR1_ISR
  7548                           
  7549     0DE9                     i1l2365:	
  7550                           ;incstack = 0
  7551                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  7552                           
  7553                           
  7554                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  7555     0DE9  0020               	movlb	0	; select bank0
  7556     0DEA  1011               	bcf	17,0	;volatile
  7557     0DEB                     i1l2367:
  7558                           
  7559                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  7560     0DEB  086B               	movf	_timer1ReloadVal+1,w	;volatile
  7561     0DEC  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  7562     0DED  086A               	movf	_timer1ReloadVal,w	;volatile
  7563     0DEE  00F0               	movwf	TMR1_WriteTimer@timerVal
  7564     0DEF  318D  25D8  318D   	fcall	_TMR1_WriteTimer
  7565     0DF2                     i1l2369:
  7566                           
  7567                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  7568     0DF2  0020               	movlb	0	; select bank0
  7569     0DF3  0868               	movf	_TMR1_InterruptHandler,w
  7570     0DF4  0469               	iorwf	_TMR1_InterruptHandler+1,w
  7571     0DF5  1903               	btfsc	3,2
  7572     0DF6  2DF8               	goto	u152_21
  7573     0DF7  2DF9               	goto	u152_20
  7574     0DF8                     u152_21:
  7575     0DF8  2DFE               	goto	i1l166
  7576     0DF9                     u152_20:
  7577     0DF9                     i1l2371:
  7578                           
  7579                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  7580     0DF9  0869               	movf	_TMR1_InterruptHandler+1,w
  7581     0DFA  008A               	movwf	10
  7582     0DFB  0868               	movf	_TMR1_InterruptHandler,w
  7583     0DFC  000A               	callw
  7584     0DFD  318D               	pagesel	$
  7585     0DFE                     i1l166:
  7586     0DFE  0008               	return
  7587     0DFF                     __end_of_TMR1_ISR:
  7588                           
  7589                           	psect	text38
  7590     0DD8                     __ptext38:	
  7591 ;; *************** function _TMR1_WriteTimer *****************
  7592 ;; Defined at:
  7593 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;  timerVal        2    0[COMMON] unsigned short 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  1    wreg      void 
  7600 ;; Registers used:
  7601 ;;		wreg, status,2
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7607 ;;      Params:         2       0       0       0
  7608 ;;      Locals:         0       0       0       0
  7609 ;;      Temps:          0       0       0       0
  7610 ;;      Totals:         2       0       0       0
  7611 ;;Total ram usage:        2 bytes
  7612 ;; Hardware stack levels used: 1
  7613 ;; This function calls:
  7614 ;;		Nothing
  7615 ;; This function is called by:
  7616 ;;		_TMR1_ISR
  7617 ;;		_TMR1_Reload
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621     0DD8                     _TMR1_WriteTimer:	
  7622                           ;psect for function _TMR1_WriteTimer
  7623                           
  7624     0DD8                     i1l2235:	
  7625                           ;incstack = 0
  7626                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  7627                           
  7628                           
  7629                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  7630     0DD8  0020               	movlb	0	; select bank0
  7631     0DD9  1D18               	btfss	24,2	;volatile
  7632     0DDA  2DDC               	goto	u134_21
  7633     0DDB  2DDD               	goto	u134_20
  7634     0DDC                     u134_21:
  7635     0DDC  2DE4               	goto	i1l2245
  7636     0DDD                     u134_20:
  7637     0DDD                     i1l2237:
  7638                           
  7639                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  7640     0DDD  1018               	bcf	24,0	;volatile
  7641     0DDE                     i1l2239:
  7642                           
  7643                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  7644     0DDE  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7645     0DDF  0097               	movwf	23	;volatile
  7646     0DE0                     i1l2241:
  7647                           
  7648                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  7649     0DE0  0870               	movf	TMR1_WriteTimer@timerVal,w
  7650     0DE1  0096               	movwf	22	;volatile
  7651     0DE2                     i1l2243:
  7652                           
  7653                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  7654     0DE2  1418               	bsf	24,0	;volatile
  7655                           
  7656                           ;mcc_generated_files/tmr1.c: 133:     }
  7657     0DE3  2DE8               	goto	i1l153
  7658     0DE4                     i1l2245:
  7659                           
  7660                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  7661     0DE4  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7662     0DE5  0097               	movwf	23	;volatile
  7663     0DE6                     i1l2247:
  7664                           
  7665                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  7666     0DE6  0870               	movf	TMR1_WriteTimer@timerVal,w
  7667     0DE7  0096               	movwf	22	;volatile
  7668     0DE8                     i1l153:
  7669     0DE8  0008               	return
  7670     0DE9                     __end_of_TMR1_WriteTimer:
  7671                           
  7672                           	psect	text39
  7673     0003                     __ptext39:	
  7674 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  7675 ;; Defined at:
  7676 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;		None
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  1    wreg      void 
  7683 ;; Registers used:
  7684 ;;		None
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7690 ;;      Params:         0       0       0       0
  7691 ;;      Locals:         0       0       0       0
  7692 ;;      Temps:          0       0       0       0
  7693 ;;      Totals:         0       0       0       0
  7694 ;;Total ram usage:        0 bytes
  7695 ;; Hardware stack levels used: 1
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_TMR1_Initialize
  7700 ;;		_TMR1_ISR
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704     0003                     _TMR1_DefaultInterruptHandler:	
  7705                           ;psect for function _TMR1_DefaultInterruptHandler
  7706                           
  7707     0003                     i1l172:	
  7708                           ;incstack = 0
  7709                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  7710                           
  7711     0003  0008               	return
  7712     0004                     __end_of_TMR1_DefaultInterruptHandler:
  7713                           
  7714                           	psect	text40
  7715     0F8B                     __ptext40:	
  7716 ;; *************** function _I2C_Isr *****************
  7717 ;; Defined at:
  7718 ;;		line 165 in file "mcc_generated_files/i2c_slave.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;		None
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;		None
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  1    wreg      void 
  7725 ;; Registers used:
  7726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7732 ;;      Params:         0       0       0       0
  7733 ;;      Locals:         0       0       0       0
  7734 ;;      Temps:          2       0       0       0
  7735 ;;      Totals:         2       0       0       0
  7736 ;;Total ram usage:        2 bytes
  7737 ;; Hardware stack levels used: 1
  7738 ;; Hardware stack levels required when called: 3
  7739 ;; This function calls:
  7740 ;;		_I2C_SlaveAddrCallBack
  7741 ;;		_I2C_SlaveClearIrq
  7742 ;;		_I2C_SlaveIsAddr
  7743 ;;		_I2C_SlaveIsRead
  7744 ;;		_I2C_SlaveIsRxBufFull
  7745 ;;		_I2C_SlaveIsTxBufEmpty
  7746 ;;		_I2C_SlaveRdCallBack
  7747 ;;		_I2C_SlaveReleaseClock
  7748 ;;		_I2C_SlaveWrCallBack
  7749 ;; This function is called by:
  7750 ;;		_I2C_Open
  7751 ;;		_INTERRUPT_InterruptManager
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755     0F8B                     _I2C_Isr:	
  7756                           ;psect for function _I2C_Isr
  7757                           
  7758     0F8B                     i1l2393:	
  7759                           ;incstack = 0
  7760                           ; Regs used in _I2C_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7761                           
  7762                           
  7763                           ;mcc_generated_files/i2c_slave.c: 167:     I2C_SlaveClearIrq();
  7764     0F8B  318C  24FB  318F   	fcall	_I2C_SlaveClearIrq
  7765     0F8E                     i1l2395:
  7766                           
  7767                           ;mcc_generated_files/i2c_slave.c: 168:     LATCbits.LATC0 = ~LATCbits.LATC0;
  7768     0F8E  1003               	clrc
  7769     0F8F  0022               	movlb	2	; select bank2
  7770     0F90  1C0E               	btfss	14,0	;volatile
  7771     0F91  1403               	setc
  7772     0F92  1803               	btfsc	3,0
  7773     0F93  2F95               	goto	u154_21
  7774     0F94  2F98               	goto	u154_20
  7775     0F95                     u154_21:
  7776     0F95  0022               	movlb	2	; select bank2
  7777     0F96  140E               	bsf	14,0	;volatile
  7778     0F97  2F9A               	goto	u155_24
  7779     0F98                     u154_20:
  7780     0F98  0022               	movlb	2	; select bank2
  7781     0F99  100E               	bcf	14,0	;volatile
  7782     0F9A                     u155_24:
  7783     0F9A                     i1l2397:
  7784                           
  7785                           ;mcc_generated_files/i2c_slave.c: 169:     if(I2C_SlaveIsAddr())
  7786     0F9A  318D  257C  318F   	fcall	_I2C_SlaveIsAddr
  7787     0F9D  3A00               	xorlw	0
  7788     0F9E  1903               	skipnz
  7789     0F9F  2FA1               	goto	u156_21
  7790     0FA0  2FA2               	goto	u156_20
  7791     0FA1                     u156_21:
  7792     0FA1  2FB0               	goto	i1l2405
  7793     0FA2                     u156_20:
  7794     0FA2                     i1l2399:
  7795                           
  7796                           ;mcc_generated_files/i2c_slave.c: 170:     {;mcc_generated_files/i2c_slave.c: 171:      
      +                             if(I2C_SlaveIsRead())
  7797     0FA2  318D  2517  318F   	fcall	_I2C_SlaveIsRead
  7798     0FA5  3A00               	xorlw	0
  7799     0FA6  1903               	skipnz
  7800     0FA7  2FA9               	goto	u157_21
  7801     0FA8  2FAA               	goto	u157_20
  7802     0FA9                     u157_21:
  7803     0FA9  2FAD               	goto	i1l2403
  7804     0FAA                     u157_20:
  7805     0FAA                     i1l2401:
  7806                           
  7807                           ;mcc_generated_files/i2c_slave.c: 172:         {;mcc_generated_files/i2c_slave.c: 173:  
      +                                     i2cSlaveState = I2C_ADDR_TX;
  7808     0FAA  3001               	movlw	1
  7809     0FAB  00F7               	movwf	_i2cSlaveState	;volatile
  7810                           
  7811                           ;mcc_generated_files/i2c_slave.c: 174:         }
  7812     0FAC  2FE6               	goto	i1l2429
  7813     0FAD                     i1l2403:
  7814                           
  7815                           ;mcc_generated_files/i2c_slave.c: 176:         {;mcc_generated_files/i2c_slave.c: 177:  
      +                                     i2cSlaveState = I2C_ADDR_RX;
  7816     0FAD  3002               	movlw	2
  7817     0FAE  00F7               	movwf	_i2cSlaveState	;volatile
  7818     0FAF  2FE6               	goto	i1l2429
  7819     0FB0                     i1l2405:
  7820                           
  7821                           ;mcc_generated_files/i2c_slave.c: 181:     {;mcc_generated_files/i2c_slave.c: 182:      
      +                             if(I2C_SlaveIsRead())
  7822     0FB0  318D  2517  318F   	fcall	_I2C_SlaveIsRead
  7823     0FB3  3A00               	xorlw	0
  7824     0FB4  1903               	skipnz
  7825     0FB5  2FB7               	goto	u158_21
  7826     0FB6  2FB8               	goto	u158_20
  7827     0FB7                     u158_21:
  7828     0FB7  2FBB               	goto	i1l2409
  7829     0FB8                     u158_20:
  7830     0FB8                     i1l2407:
  7831                           
  7832                           ;mcc_generated_files/i2c_slave.c: 183:         {;mcc_generated_files/i2c_slave.c: 184:  
      +                                     i2cSlaveState = I2C_DATA_TX;
  7833     0FB8  3003               	movlw	3
  7834     0FB9  00F7               	movwf	_i2cSlaveState	;volatile
  7835                           
  7836                           ;mcc_generated_files/i2c_slave.c: 185:         }
  7837     0FBA  2FE6               	goto	i1l2429
  7838     0FBB                     i1l2409:
  7839                           
  7840                           ;mcc_generated_files/i2c_slave.c: 187:         {;mcc_generated_files/i2c_slave.c: 188:  
      +                                     i2cSlaveState = I2C_DATA_RX;
  7841     0FBB  3004               	movlw	4
  7842     0FBC  00F7               	movwf	_i2cSlaveState	;volatile
  7843     0FBD  2FE6               	goto	i1l2429
  7844     0FBE                     i1l2411:
  7845                           
  7846                           ;mcc_generated_files/i2c_slave.c: 195:             I2C_SlaveAddrCallBack();
  7847     0FBE  318D  25A4  318F   	fcall	_I2C_SlaveAddrCallBack
  7848     0FC1                     i1l2413:
  7849                           
  7850                           ;mcc_generated_files/i2c_slave.c: 196:             if(I2C_SlaveIsTxBufEmpty())
  7851     0FC1  318D  2583  318F   	fcall	_I2C_SlaveIsTxBufEmpty
  7852     0FC4  3A00               	xorlw	0
  7853     0FC5  1903               	skipnz
  7854     0FC6  2FC8               	goto	u159_21
  7855     0FC7  2FC9               	goto	u159_20
  7856     0FC8                     u159_21:
  7857     0FC8  2FFC               	goto	i1l2431
  7858     0FC9                     u159_20:
  7859     0FC9                     i1l2415:
  7860                           
  7861                           ;mcc_generated_files/i2c_slave.c: 197:             {;mcc_generated_files/i2c_slave.c: 19
      +                          8:                 I2C_SlaveWrCallBack();
  7862     0FC9  318D  25BE  318F   	fcall	_I2C_SlaveWrCallBack
  7863     0FCC  2FFC               	goto	i1l2431
  7864     0FCD                     i1l2417:
  7865                           
  7866                           ;mcc_generated_files/i2c_slave.c: 202:             I2C_SlaveAddrCallBack();
  7867     0FCD  318D  25A4  318F   	fcall	_I2C_SlaveAddrCallBack
  7868                           
  7869                           ;mcc_generated_files/i2c_slave.c: 203:             break;
  7870     0FD0  2FFC               	goto	i1l2431
  7871     0FD1                     i1l2419:
  7872                           
  7873                           ;mcc_generated_files/i2c_slave.c: 205:             if(I2C_SlaveIsTxBufEmpty())
  7874     0FD1  318D  2583  318F   	fcall	_I2C_SlaveIsTxBufEmpty
  7875     0FD4  3A00               	xorlw	0
  7876     0FD5  1903               	skipnz
  7877     0FD6  2FD8               	goto	u160_21
  7878     0FD7  2FD9               	goto	u160_20
  7879     0FD8                     u160_21:
  7880     0FD8  2FFC               	goto	i1l2431
  7881     0FD9                     u160_20:
  7882     0FD9  2FC9               	goto	i1l2415
  7883     0FDA                     i1l2423:
  7884                           
  7885                           ;mcc_generated_files/i2c_slave.c: 211:             if(I2C_SlaveIsRxBufFull())
  7886     0FDA  318D  2507  318F   	fcall	_I2C_SlaveIsRxBufFull
  7887     0FDD  3A00               	xorlw	0
  7888     0FDE  1903               	skipnz
  7889     0FDF  2FE1               	goto	u161_21
  7890     0FE0  2FE2               	goto	u161_20
  7891     0FE1                     u161_21:
  7892     0FE1  2FFC               	goto	i1l2431
  7893     0FE2                     u161_20:
  7894     0FE2                     i1l2425:
  7895                           
  7896                           ;mcc_generated_files/i2c_slave.c: 212:             {;mcc_generated_files/i2c_slave.c: 21
      +                          3:                 I2C_SlaveRdCallBack();
  7897     0FE2  318D  25B1  318F   	fcall	_I2C_SlaveRdCallBack
  7898     0FE5  2FFC               	goto	i1l2431
  7899     0FE6                     i1l2429:
  7900     0FE6  0877               	movf	_i2cSlaveState,w	;volatile
  7901     0FE7  00F1               	movwf	??_I2C_Isr
  7902     0FE8  01F2               	clrf	??_I2C_Isr+1
  7903                           
  7904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7905                           ; Switch size 1, requested type "simple"
  7906                           ; Number of cases is 1, Range of values is 0 to 0
  7907                           ; switch strategies available:
  7908                           ; Name         Instructions Cycles
  7909                           ; simple_byte            4     3 (average)
  7910                           ; direct_byte            8     6 (fixed)
  7911                           ; jumptable            260     6 (fixed)
  7912                           ;	Chosen strategy is simple_byte
  7913     0FE9  0872               	movf	??_I2C_Isr+1,w
  7914     0FEA  3A00               	xorlw	0	; case 0
  7915     0FEB  1903               	skipnz
  7916     0FEC  2FEE               	goto	i1l3749
  7917     0FED  2FFC               	goto	i1l2431
  7918     0FEE                     i1l3749:
  7919                           
  7920                           ; Switch size 1, requested type "simple"
  7921                           ; Number of cases is 4, Range of values is 1 to 4
  7922                           ; switch strategies available:
  7923                           ; Name         Instructions Cycles
  7924                           ; simple_byte           13     7 (average)
  7925                           ; direct_byte           17     9 (fixed)
  7926                           ; jumptable            263     9 (fixed)
  7927                           ;	Chosen strategy is simple_byte
  7928     0FEE  0871               	movf	??_I2C_Isr,w
  7929     0FEF  3A01               	xorlw	1	; case 1
  7930     0FF0  1903               	skipnz
  7931     0FF1  2FBE               	goto	i1l2411
  7932     0FF2  3A03               	xorlw	3	; case 2
  7933     0FF3  1903               	skipnz
  7934     0FF4  2FCD               	goto	i1l2417
  7935     0FF5  3A01               	xorlw	1	; case 3
  7936     0FF6  1903               	skipnz
  7937     0FF7  2FD1               	goto	i1l2419
  7938     0FF8  3A07               	xorlw	7	; case 4
  7939     0FF9  1903               	skipnz
  7940     0FFA  2FDA               	goto	i1l2423
  7941     0FFB  2FFC               	goto	i1l2431
  7942     0FFC                     i1l2431:
  7943                           
  7944                           ;mcc_generated_files/i2c_slave.c: 219:     I2C_SlaveReleaseClock();
  7945     0FFC  318C  24FE  318F   	fcall	_I2C_SlaveReleaseClock
  7946     0FFF                     i1l372:
  7947     0FFF  0008               	return
  7948     1000                     __end_of_I2C_Isr:
  7949                           
  7950                           	psect	text41
  7951     0DBE                     __ptext41:	
  7952 ;; *************** function _I2C_SlaveWrCallBack *****************
  7953 ;; Defined at:
  7954 ;;		line 250 in file "mcc_generated_files/i2c_slave.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;		None
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      void 
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0, pclath, cstack
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7968 ;;      Params:         0       0       0       0
  7969 ;;      Locals:         0       0       0       0
  7970 ;;      Temps:          0       0       0       0
  7971 ;;      Totals:         0       0       0       0
  7972 ;;Total ram usage:        0 bytes
  7973 ;; Hardware stack levels used: 1
  7974 ;; Hardware stack levels required when called: 2
  7975 ;; This function calls:
  7976 ;;		Absolute function
  7977 ;;		_I2C_SlaveDefWrInterruptHandler
  7978 ;; This function is called by:
  7979 ;;		_I2C_Isr
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983     0DBE                     _I2C_SlaveWrCallBack:	
  7984                           ;psect for function _I2C_SlaveWrCallBack
  7985                           
  7986     0DBE                     i1l2301:	
  7987                           ;incstack = 0
  7988                           ; Regs used in _I2C_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  7989                           
  7990                           
  7991                           ;mcc_generated_files/i2c_slave.c: 252:     if (I2C_SlaveWrInterruptHandler)
  7992     0DBE  0020               	movlb	0	; select bank0
  7993     0DBF  085F               	movf	_I2C_SlaveWrInterruptHandler,w
  7994     0DC0  0460               	iorwf	_I2C_SlaveWrInterruptHandler+1,w
  7995     0DC1  1903               	btfsc	3,2
  7996     0DC2  2DC4               	goto	u137_21
  7997     0DC3  2DC5               	goto	u137_20
  7998     0DC4                     u137_21:
  7999     0DC4  2DCA               	goto	i1l392
  8000     0DC5                     u137_20:
  8001     0DC5                     i1l2303:
  8002                           
  8003                           ;mcc_generated_files/i2c_slave.c: 253:     {;mcc_generated_files/i2c_slave.c: 254:      
      +                             I2C_SlaveWrInterruptHandler();
  8004     0DC5  0860               	movf	_I2C_SlaveWrInterruptHandler+1,w
  8005     0DC6  008A               	movwf	10
  8006     0DC7  085F               	movf	_I2C_SlaveWrInterruptHandler,w
  8007     0DC8  000A               	callw
  8008     0DC9  318D               	pagesel	$
  8009     0DCA                     i1l392:
  8010     0DCA  0008               	return
  8011     0DCB                     __end_of_I2C_SlaveWrCallBack:
  8012                           
  8013                           	psect	text42
  8014     0D26                     __ptext42:	
  8015 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  8016 ;; Defined at:
  8017 ;;		line 258 in file "mcc_generated_files/i2c_slave.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;		None
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;		None
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  1    wreg      void 
  8024 ;; Registers used:
  8025 ;;		wreg, status,2, status,0, pclath, cstack
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8031 ;;      Params:         0       0       0       0
  8032 ;;      Locals:         0       0       0       0
  8033 ;;      Temps:          0       0       0       0
  8034 ;;      Totals:         0       0       0       0
  8035 ;;Total ram usage:        0 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; Hardware stack levels required when called: 1
  8038 ;; This function calls:
  8039 ;;		i1_I2C_SlaveSendTxData
  8040 ;; This function is called by:
  8041 ;;		_I2C_Open
  8042 ;;		_I2C_SlaveWrCallBack
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046     0D26                     _I2C_SlaveDefWrInterruptHandler:	
  8047                           ;psect for function _I2C_SlaveDefWrInterruptHandler
  8048                           
  8049     0D26                     i1l2171:	
  8050                           ;incstack = 0
  8051                           ; Regs used in _I2C_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  8052                           
  8053                           
  8054                           ;mcc_generated_files/i2c_slave.c: 259:     I2C_SlaveSendTxData(i2cWrData);
  8055     0D26  0879               	movf	_i2cWrData,w	;volatile
  8056     0D27  318D  2521  318D   	fcall	i1_I2C_SlaveSendTxData
  8057     0D2A                     i1l395:
  8058     0D2A  0008               	return
  8059     0D2B                     __end_of_I2C_SlaveDefWrInterruptHandler:
  8060                           
  8061                           	psect	text43
  8062     0D21                     __ptext43:	
  8063 ;; *************** function i1_I2C_SlaveSendTxData *****************
  8064 ;; Defined at:
  8065 ;;		line 391 in file "mcc_generated_files/i2c_slave.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;  data            1    wreg     unsigned char 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;  data            1    0[COMMON] unsigned char 
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		wreg
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8079 ;;      Params:         0       0       0       0
  8080 ;;      Locals:         1       0       0       0
  8081 ;;      Temps:          0       0       0       0
  8082 ;;      Totals:         1       0       0       0
  8083 ;;Total ram usage:        1 bytes
  8084 ;; Hardware stack levels used: 1
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_I2C_SlaveDefWrInterruptHandler
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092     0D21                     i1_I2C_SlaveSendTxData:	
  8093                           ;psect for function i1_I2C_SlaveSendTxData
  8094                           
  8095                           
  8096                           ;incstack = 0
  8097                           ; Regs used in i1_I2C_SlaveSendTxData: [wreg]
  8098                           ;i1I2C_SlaveSendTxData@data stored from wreg
  8099     0D21  00F0               	movwf	i1I2C_SlaveSendTxData@data
  8100     0D22                     i1l2159:
  8101                           
  8102                           ;mcc_generated_files/i2c_slave.c: 391: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 392: {;mcc_generated_files/i2c_sla
      +                          ve.c: 393:     SSP1BUF = data;
  8103     0D22  0870               	movf	i1I2C_SlaveSendTxData@data,w
  8104     0D23  0024               	movlb	4	; select bank4
  8105     0D24  0091               	movwf	17	;volatile
  8106     0D25                     i1l471:
  8107     0D25  0008               	return
  8108     0D26                     __end_ofi1_I2C_SlaveSendTxData:
  8109                           
  8110                           	psect	text44
  8111     0CFE                     __ptext44:	
  8112 ;; *************** function _I2C_SlaveReleaseClock *****************
  8113 ;; Defined at:
  8114 ;;		line 361 in file "mcc_generated_files/i2c_slave.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;		None
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		None
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8128 ;;      Params:         0       0       0       0
  8129 ;;      Locals:         0       0       0       0
  8130 ;;      Temps:          0       0       0       0
  8131 ;;      Totals:         0       0       0       0
  8132 ;;Total ram usage:        0 bytes
  8133 ;; Hardware stack levels used: 1
  8134 ;; This function calls:
  8135 ;;		Nothing
  8136 ;; This function is called by:
  8137 ;;		_I2C_Isr
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141     0CFE                     _I2C_SlaveReleaseClock:	
  8142                           ;psect for function _I2C_SlaveReleaseClock
  8143                           
  8144     0CFE                     i1l2313:	
  8145                           ;incstack = 0
  8146                           ; Regs used in _I2C_SlaveReleaseClock: []
  8147                           
  8148                           
  8149                           ;mcc_generated_files/i2c_slave.c: 363:     SSP1CON1bits.CKP = 1;
  8150     0CFE  0024               	movlb	4	; select bank4
  8151     0CFF  1615               	bsf	21,4	;volatile
  8152     0D00                     i1l453:
  8153     0D00  0008               	return
  8154     0D01                     __end_of_I2C_SlaveReleaseClock:
  8155                           
  8156                           	psect	text45
  8157     0DB1                     __ptext45:	
  8158 ;; *************** function _I2C_SlaveRdCallBack *****************
  8159 ;; Defined at:
  8160 ;;		line 233 in file "mcc_generated_files/i2c_slave.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;		None
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		wreg, status,2, status,0, pclath, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8174 ;;      Params:         0       0       0       0
  8175 ;;      Locals:         0       0       0       0
  8176 ;;      Temps:          0       0       0       0
  8177 ;;      Totals:         0       0       0       0
  8178 ;;Total ram usage:        0 bytes
  8179 ;; Hardware stack levels used: 1
  8180 ;; Hardware stack levels required when called: 2
  8181 ;; This function calls:
  8182 ;;		Absolute function
  8183 ;;		_I2C_SlaveDefRdInterruptHandler
  8184 ;; This function is called by:
  8185 ;;		_I2C_Isr
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189     0DB1                     _I2C_SlaveRdCallBack:	
  8190                           ;psect for function _I2C_SlaveRdCallBack
  8191                           
  8192     0DB1                     i1l2309:	
  8193                           ;incstack = 0
  8194                           ; Regs used in _I2C_SlaveRdCallBack: [wreg+status,2+status,0+pclath+cstack]
  8195                           
  8196                           
  8197                           ;mcc_generated_files/i2c_slave.c: 235:     if (I2C_SlaveRdInterruptHandler)
  8198     0DB1  0020               	movlb	0	; select bank0
  8199     0DB2  0861               	movf	_I2C_SlaveRdInterruptHandler,w
  8200     0DB3  0462               	iorwf	_I2C_SlaveRdInterruptHandler+1,w
  8201     0DB4  1903               	btfsc	3,2
  8202     0DB5  2DB7               	goto	u138_21
  8203     0DB6  2DB8               	goto	u138_20
  8204     0DB7                     u138_21:
  8205     0DB7  2DBD               	goto	i1l382
  8206     0DB8                     u138_20:
  8207     0DB8                     i1l2311:
  8208                           
  8209                           ;mcc_generated_files/i2c_slave.c: 236:     {;mcc_generated_files/i2c_slave.c: 237:      
      +                             I2C_SlaveRdInterruptHandler();
  8210     0DB8  0862               	movf	_I2C_SlaveRdInterruptHandler+1,w
  8211     0DB9  008A               	movwf	10
  8212     0DBA  0861               	movf	_I2C_SlaveRdInterruptHandler,w
  8213     0DBB  000A               	callw
  8214     0DBC  318D               	pagesel	$
  8215     0DBD                     i1l382:
  8216     0DBD  0008               	return
  8217     0DBE                     __end_of_I2C_SlaveRdCallBack:
  8218                           
  8219                           	psect	text46
  8220     0D1C                     __ptext46:	
  8221 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
  8222 ;; Defined at:
  8223 ;;		line 241 in file "mcc_generated_files/i2c_slave.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;		None
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;		None
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  1    wreg      void 
  8230 ;; Registers used:
  8231 ;;		wreg, pclath, cstack
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8237 ;;      Params:         0       0       0       0
  8238 ;;      Locals:         0       0       0       0
  8239 ;;      Temps:          0       0       0       0
  8240 ;;      Totals:         0       0       0       0
  8241 ;;Total ram usage:        0 bytes
  8242 ;; Hardware stack levels used: 1
  8243 ;; Hardware stack levels required when called: 1
  8244 ;; This function calls:
  8245 ;;		i1_I2C_SlaveGetRxData
  8246 ;; This function is called by:
  8247 ;;		_I2C_Open
  8248 ;;		_I2C_SlaveRdCallBack
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252     0D1C                     _I2C_SlaveDefRdInterruptHandler:	
  8253                           ;psect for function _I2C_SlaveDefRdInterruptHandler
  8254                           
  8255     0D1C                     i1l2169:	
  8256                           ;incstack = 0
  8257                           ; Regs used in _I2C_SlaveDefRdInterruptHandler: [wreg+pclath+cstack]
  8258                           
  8259                           
  8260                           ;mcc_generated_files/i2c_slave.c: 242:     i2cRdData = I2C_SlaveGetRxData();
  8261     0D1C  318C  24F8  318D   	fcall	i1_I2C_SlaveGetRxData
  8262     0D1F  00F8               	movwf	_i2cRdData	;volatile
  8263     0D20                     i1l385:
  8264     0D20  0008               	return
  8265     0D21                     __end_of_I2C_SlaveDefRdInterruptHandler:
  8266                           
  8267                           	psect	text47
  8268     0D83                     __ptext47:	
  8269 ;; *************** function _I2C_SlaveIsTxBufEmpty *****************
  8270 ;; Defined at:
  8271 ;;		line 381 in file "mcc_generated_files/i2c_slave.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;		None
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;		None
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  1    wreg      _Bool 
  8278 ;; Registers used:
  8279 ;;		wreg, status,0
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8285 ;;      Params:         0       0       0       0
  8286 ;;      Locals:         0       0       0       0
  8287 ;;      Temps:          0       0       0       0
  8288 ;;      Totals:         0       0       0       0
  8289 ;;Total ram usage:        0 bytes
  8290 ;; Hardware stack levels used: 1
  8291 ;; This function calls:
  8292 ;;		Nothing
  8293 ;; This function is called by:
  8294 ;;		_I2C_Isr
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298     0D83                     _I2C_SlaveIsTxBufEmpty:	
  8299                           ;psect for function _I2C_SlaveIsTxBufEmpty
  8300                           
  8301     0D83                     i1l2297:	
  8302                           ;incstack = 0
  8303                           ; Regs used in _I2C_SlaveIsTxBufEmpty: [wreg+status,0]
  8304                           
  8305                           
  8306                           ;mcc_generated_files/i2c_slave.c: 383:     return !SSP1STATbits.BF;
  8307     0D83  1003               	clrc
  8308     0D84  0024               	movlb	4	; select bank4
  8309     0D85  1C14               	btfss	20,0	;volatile
  8310     0D86  1403               	setc
  8311     0D87  3000               	movlw	0
  8312     0D88  3D09               	addwfc	9,w
  8313     0D89                     i1l465:
  8314     0D89  0008               	return
  8315     0D8A                     __end_of_I2C_SlaveIsTxBufEmpty:
  8316                           
  8317                           	psect	text48
  8318     0D07                     __ptext48:	
  8319 ;; *************** function _I2C_SlaveIsRxBufFull *****************
  8320 ;; Defined at:
  8321 ;;		line 386 in file "mcc_generated_files/i2c_slave.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;		None
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      _Bool 
  8328 ;; Registers used:
  8329 ;;		wreg, status,2, status,0
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8335 ;;      Params:         0       0       0       0
  8336 ;;      Locals:         0       0       0       0
  8337 ;;      Temps:          0       0       0       0
  8338 ;;      Totals:         0       0       0       0
  8339 ;;Total ram usage:        0 bytes
  8340 ;; Hardware stack levels used: 1
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_I2C_Isr
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348     0D07                     _I2C_SlaveIsRxBufFull:	
  8349                           ;psect for function _I2C_SlaveIsRxBufFull
  8350                           
  8351     0D07                     i1l2305:	
  8352                           ;incstack = 0
  8353                           ; Regs used in _I2C_SlaveIsRxBufFull: [wreg+status,2+status,0]
  8354                           
  8355                           
  8356                           ;mcc_generated_files/i2c_slave.c: 388:     return SSP1STATbits.BF;
  8357     0D07  0024               	movlb	4	; select bank4
  8358     0D08  0814               	movf	20,w	;volatile
  8359     0D09  3901               	andlw	1
  8360     0D0A                     i1l468:
  8361     0D0A  0008               	return
  8362     0D0B                     __end_of_I2C_SlaveIsRxBufFull:
  8363                           
  8364                           	psect	text49
  8365     0D17                     __ptext49:	
  8366 ;; *************** function _I2C_SlaveIsRead *****************
  8367 ;; Defined at:
  8368 ;;		line 351 in file "mcc_generated_files/i2c_slave.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;		None
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;		None
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  1    wreg      _Bool 
  8375 ;; Registers used:
  8376 ;;		wreg, status,2, status,0
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8382 ;;      Params:         0       0       0       0
  8383 ;;      Locals:         0       0       0       0
  8384 ;;      Temps:          0       0       0       0
  8385 ;;      Totals:         0       0       0       0
  8386 ;;Total ram usage:        0 bytes
  8387 ;; Hardware stack levels used: 1
  8388 ;; This function calls:
  8389 ;;		Nothing
  8390 ;; This function is called by:
  8391 ;;		_I2C_Isr
  8392 ;;		_I2C_IsRead
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396     0D17                     _I2C_SlaveIsRead:	
  8397                           ;psect for function _I2C_SlaveIsRead
  8398                           
  8399     0D17                     i1l2283:	
  8400                           ;incstack = 0
  8401                           ; Regs used in _I2C_SlaveIsRead: [wreg+status,2+status,0]
  8402                           
  8403                           
  8404                           ;mcc_generated_files/i2c_slave.c: 353:     return (SSP1STATbits.R_nW);
  8405     0D17  0024               	movlb	4	; select bank4
  8406     0D18  0C14               	rrf	20,w	;volatile
  8407     0D19  0C89               	rrf	9,f
  8408     0D1A  3901               	andlw	1
  8409     0D1B                     i1l447:
  8410     0D1B  0008               	return
  8411     0D1C                     __end_of_I2C_SlaveIsRead:
  8412                           
  8413                           	psect	text50
  8414     0D7C                     __ptext50:	
  8415 ;; *************** function _I2C_SlaveIsAddr *****************
  8416 ;; Defined at:
  8417 ;;		line 346 in file "mcc_generated_files/i2c_slave.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;		None
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      _Bool 
  8424 ;; Registers used:
  8425 ;;		wreg, status,0
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8431 ;;      Params:         0       0       0       0
  8432 ;;      Locals:         0       0       0       0
  8433 ;;      Temps:          0       0       0       0
  8434 ;;      Totals:         0       0       0       0
  8435 ;;Total ram usage:        0 bytes
  8436 ;; Hardware stack levels used: 1
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		_I2C_Isr
  8441 ;; This function uses a non-reentrant model
  8442 ;;
  8443                           
  8444     0D7C                     _I2C_SlaveIsAddr:	
  8445                           ;psect for function _I2C_SlaveIsAddr
  8446                           
  8447     0D7C                     i1l2289:	
  8448                           ;incstack = 0
  8449                           ; Regs used in _I2C_SlaveIsAddr: [wreg+status,0]
  8450                           
  8451                           
  8452                           ;mcc_generated_files/i2c_slave.c: 348:     return !(SSP1STATbits.D_nA);
  8453     0D7C  1003               	clrc
  8454     0D7D  0024               	movlb	4	; select bank4
  8455     0D7E  1E94               	btfss	20,5	;volatile
  8456     0D7F  1403               	setc
  8457     0D80  3000               	movlw	0
  8458     0D81  3D09               	addwfc	9,w
  8459     0D82                     i1l444:
  8460     0D82  0008               	return
  8461     0D83                     __end_of_I2C_SlaveIsAddr:
  8462                           
  8463                           	psect	text51
  8464     0CFB                     __ptext51:	
  8465 ;; *************** function _I2C_SlaveClearIrq *****************
  8466 ;; Defined at:
  8467 ;;		line 356 in file "mcc_generated_files/i2c_slave.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;		None
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;		None
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  1    wreg      void 
  8474 ;; Registers used:
  8475 ;;		None
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8481 ;;      Params:         0       0       0       0
  8482 ;;      Locals:         0       0       0       0
  8483 ;;      Temps:          0       0       0       0
  8484 ;;      Totals:         0       0       0       0
  8485 ;;Total ram usage:        0 bytes
  8486 ;; Hardware stack levels used: 1
  8487 ;; This function calls:
  8488 ;;		Nothing
  8489 ;; This function is called by:
  8490 ;;		_I2C_Isr
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494     0CFB                     _I2C_SlaveClearIrq:	
  8495                           ;psect for function _I2C_SlaveClearIrq
  8496                           
  8497     0CFB                     i1l2287:	
  8498                           ;incstack = 0
  8499                           ; Regs used in _I2C_SlaveClearIrq: []
  8500                           
  8501                           
  8502                           ;mcc_generated_files/i2c_slave.c: 358:     PIR1bits.SSP1IF = 0;
  8503     0CFB  0020               	movlb	0	; select bank0
  8504     0CFC  1191               	bcf	17,3	;volatile
  8505     0CFD                     i1l450:
  8506     0CFD  0008               	return
  8507     0CFE                     __end_of_I2C_SlaveClearIrq:
  8508                           
  8509                           	psect	text52
  8510     0DA4                     __ptext52:	
  8511 ;; *************** function _I2C_SlaveAddrCallBack *****************
  8512 ;; Defined at:
  8513 ;;		line 267 in file "mcc_generated_files/i2c_slave.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;		None
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1    wreg      void 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0, pclath, cstack
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8527 ;;      Params:         0       0       0       0
  8528 ;;      Locals:         0       0       0       0
  8529 ;;      Temps:          0       0       0       0
  8530 ;;      Totals:         0       0       0       0
  8531 ;;Total ram usage:        0 bytes
  8532 ;; Hardware stack levels used: 1
  8533 ;; Hardware stack levels required when called: 2
  8534 ;; This function calls:
  8535 ;;		Absolute function
  8536 ;;		_I2C_SlaveDefAddrInterruptHandler
  8537 ;; This function is called by:
  8538 ;;		_I2C_Isr
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542     0DA4                     _I2C_SlaveAddrCallBack:	
  8543                           ;psect for function _I2C_SlaveAddrCallBack
  8544                           
  8545     0DA4                     i1l2293:	
  8546                           ;incstack = 0
  8547                           ; Regs used in _I2C_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  8548                           
  8549                           
  8550                           ;mcc_generated_files/i2c_slave.c: 269:     if (I2C_SlaveAddrInterruptHandler) {
  8551     0DA4  0020               	movlb	0	; select bank0
  8552     0DA5  085D               	movf	_I2C_SlaveAddrInterruptHandler,w
  8553     0DA6  045E               	iorwf	_I2C_SlaveAddrInterruptHandler+1,w
  8554     0DA7  1903               	btfsc	3,2
  8555     0DA8  2DAA               	goto	u136_21
  8556     0DA9  2DAB               	goto	u136_20
  8557     0DAA                     u136_21:
  8558     0DAA  2DB0               	goto	i1l402
  8559     0DAB                     u136_20:
  8560     0DAB                     i1l2295:
  8561                           
  8562                           ;mcc_generated_files/i2c_slave.c: 270:         I2C_SlaveAddrInterruptHandler();
  8563     0DAB  085E               	movf	_I2C_SlaveAddrInterruptHandler+1,w
  8564     0DAC  008A               	movwf	10
  8565     0DAD  085D               	movf	_I2C_SlaveAddrInterruptHandler,w
  8566     0DAE  000A               	callw
  8567     0DAF  318D               	pagesel	$
  8568     0DB0                     i1l402:
  8569     0DB0  0008               	return
  8570     0DB1                     __end_of_I2C_SlaveAddrCallBack:
  8571                           
  8572                           	psect	text53
  8573     0D3A                     __ptext53:	
  8574 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
  8575 ;; Defined at:
  8576 ;;		line 274 in file "mcc_generated_files/i2c_slave.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;		None
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1    wreg      void 
  8583 ;; Registers used:
  8584 ;;		wreg, pclath, cstack
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8590 ;;      Params:         0       0       0       0
  8591 ;;      Locals:         0       0       0       0
  8592 ;;      Temps:          0       0       0       0
  8593 ;;      Totals:         0       0       0       0
  8594 ;;Total ram usage:        0 bytes
  8595 ;; Hardware stack levels used: 1
  8596 ;; Hardware stack levels required when called: 1
  8597 ;; This function calls:
  8598 ;;		i1_I2C_SlaveGetRxData
  8599 ;; This function is called by:
  8600 ;;		_I2C_Open
  8601 ;;		_I2C_SlaveAddrCallBack
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605     0D3A                     _I2C_SlaveDefAddrInterruptHandler:	
  8606                           ;psect for function _I2C_SlaveDefAddrInterruptHandler
  8607                           
  8608     0D3A                     i1l2173:	
  8609                           ;incstack = 0
  8610                           ; Regs used in _I2C_SlaveDefAddrInterruptHandler: [wreg+pclath+cstack]
  8611                           
  8612                           
  8613                           ;mcc_generated_files/i2c_slave.c: 275:     i2cSlaveAddr = I2C_SlaveGetRxData();
  8614     0D3A  318C  24F8  318D   	fcall	i1_I2C_SlaveGetRxData
  8615     0D3D  0020               	movlb	0	; select bank0
  8616     0D3E  00E7               	movwf	_i2cSlaveAddr	;volatile
  8617     0D3F                     i1l405:
  8618     0D3F  0008               	return
  8619     0D40                     __end_of_I2C_SlaveDefAddrInterruptHandler:
  8620                           
  8621                           	psect	text54
  8622     0CF8                     __ptext54:	
  8623 ;; *************** function i1_I2C_SlaveGetRxData *****************
  8624 ;; Defined at:
  8625 ;;		line 396 in file "mcc_generated_files/i2c_slave.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;		None
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;		None
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      unsigned char 
  8632 ;; Registers used:
  8633 ;;		wreg
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8639 ;;      Params:         0       0       0       0
  8640 ;;      Locals:         0       0       0       0
  8641 ;;      Temps:          0       0       0       0
  8642 ;;      Totals:         0       0       0       0
  8643 ;;Total ram usage:        0 bytes
  8644 ;; Hardware stack levels used: 1
  8645 ;; This function calls:
  8646 ;;		Nothing
  8647 ;; This function is called by:
  8648 ;;		_I2C_SlaveDefRdInterruptHandler
  8649 ;;		_I2C_SlaveDefAddrInterruptHandler
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653     0CF8                     i1_I2C_SlaveGetRxData:	
  8654                           ;psect for function i1_I2C_SlaveGetRxData
  8655                           
  8656     0CF8                     i1l2161:	
  8657                           ;incstack = 0
  8658                           ; Regs used in i1_I2C_SlaveGetRxData: [wreg]
  8659                           
  8660                           
  8661                           ;mcc_generated_files/i2c_slave.c: 398:     return SSP1BUF;
  8662     0CF8  0024               	movlb	4	; select bank4
  8663     0CF9  0811               	movf	17,w	;volatile
  8664     0CFA                     i1l474:
  8665     0CFA  0008               	return
  8666     0CFB                     __end_ofi1_I2C_SlaveGetRxData:
  8667     007E                     btemp	set	126	;btemp
  8668     007E                     int$flags	set	126
  8669     007E                     wtemp0	set	126
  8670                           
  8671                           	psect	idloc
  8672                           
  8673                           ;Config register IDLOC0 @ 0x8000
  8674                           ;	unspecified, using default values
  8675     8000                     	org	32768
  8676     8000  3FFF               	dw	16383
  8677                           
  8678                           ;Config register IDLOC1 @ 0x8001
  8679                           ;	unspecified, using default values
  8680     8001                     	org	32769
  8681     8001  3FFF               	dw	16383
  8682                           
  8683                           ;Config register IDLOC2 @ 0x8002
  8684                           ;	unspecified, using default values
  8685     8002                     	org	32770
  8686     8002  3FFF               	dw	16383
  8687                           
  8688                           ;Config register IDLOC3 @ 0x8003
  8689                           ;	unspecified, using default values
  8690     8003                     	org	32771
  8691     8003  3FFF               	dw	16383
  8692                           
  8693                           	psect	config
  8694                           
  8695                           ;Config register CONFIG1 @ 0x8007
  8696                           ;	Oscillator Selection Bits
  8697                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8698                           ;	Watchdog Timer Enable
  8699                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  8700                           ;	Power-up Timer Enable
  8701                           ;	PWRTE = OFF, PWRT disabled
  8702                           ;	MCLR Pin Function Select
  8703                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  8704                           ;	Flash Program Memory Code Protection
  8705                           ;	CP = OFF, Program memory code protection is disabled
  8706                           ;	Brown-out Reset Enable
  8707                           ;	BOREN = ON, Brown-out Reset enabled
  8708                           ;	Clock Out Enable
  8709                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8710                           ;	Internal/External Switchover Mode
  8711                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  8712                           ;	Fail-Safe Clock Monitor Enable
  8713                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8714     8007                     	org	32775
  8715     8007  3FAC               	dw	16300
  8716                           
  8717                           ;Config register CONFIG2 @ 0x8008
  8718                           ;	Flash Memory Self-Write Protection
  8719                           ;	WRT = OFF, Write protection off
  8720                           ;	Stack Overflow/Underflow Reset Enable
  8721                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8722                           ;	Brown-out Reset Voltage Selection
  8723                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8724                           ;	Low-Power Brown Out Reset
  8725                           ;	LPBOR = OFF, Low-Power BOR is disabled
  8726                           ;	Low-Voltage Programming Enable
  8727                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  8728     8008                     	org	32776
  8729     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         35
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     40      76
    BANK1            80      6       6
    BANK2            80      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), Absolute function(), 

    I2C_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), Absolute function(), 

    I2C_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), Absolute function(), 

    I2C_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), Absolute function(), 

    I2C_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefRdInterruptHandler(), Absolute function(), 

    I2C_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), Absolute function(), 


Critical Paths under _main in COMMON

    _main->_ADC_GetConversion
    _main->___flge
    _main->___xxtofl
    _main->_sendDataToMaster
    _sendAllDatatoMaster->_sendDataToMaster
    _sendVSNSDataToMaster->_I2C_Write
    _sendDataToMaster->_I2C_Write
    _I2C_Write->_I2C_SlaveSendTxData
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _I2C_Open->_I2C_SlaveSetAddrIntHandler
    _I2C_Open->_I2C_SlaveSetBusColIntHandler
    _I2C_Open->_I2C_SlaveSetIsrHandler
    _I2C_Open->_I2C_SlaveSetReadIntHandler
    _I2C_Open->_I2C_SlaveSetWrColIntHandler
    _I2C_Open->_I2C_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_Isr
    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_SlaveDefWrInterruptHandler->i1_I2C_SlaveSendTxData

Critical Paths under _main in BANK0

    _main->___fldiv
    _sendAllDatatoMaster->_sendDataToMaster
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   10021
                                             36 BANK0      4     4      0
                                              0 BANK1      6     6      0
                  _ADC_GetConversion
                           _I2C_Open
                           _I2C_Read
                          _I2C_Write
                  _SYSTEM_Initialize
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                _sendAllDatatoMaster
                   _sendDataToMaster
               _sendVSNSDataToMaster
                _setDangerSignalLine
 ---------------------------------------------------------------------------------
 (1) _setDangerSignalLine                                  6     6      0     167
                                              3 COMMON     1     1      0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _sendAllDatatoMaster                                  0     0      0    1216
                          _I2C_Write
                   _sendDataToMaster
               _sendVSNSDataToMaster
 ---------------------------------------------------------------------------------
 (1) _sendVSNSDataToMaster                                 0     0      0      62
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _sendDataToMaster                                     4     2      2    1092
                                              5 COMMON     2     0      2
                                              0 BANK0      2     2      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      62
                                              4 COMMON     1     1      0
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (3) _I2C_SlaveSendTxData                                  1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3353
                                              5 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     626
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1863
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                     _ADC_Initialize
                     _FVR_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveGetRxData                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Open                                             0     0      0     788
                 _I2C_SlaveEnableIrq
                      _I2C_SlaveOpen
         _I2C_SlaveSetAddrIntHandler
       _I2C_SlaveSetBusColIntHandler
             _I2C_SlaveSetIsrHandler
         _I2C_SlaveSetReadIntHandler
              _I2C_SlaveSetSlaveAddr
              _I2C_SlaveSetSlaveMask
        _I2C_SlaveSetWrColIntHandler
        _I2C_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWriteIntHandler                          2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWrColIntHandler                          2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveMask                                1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveAddr                                1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetReadIntHandler                           2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetIsrHandler                               2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetBusColIntHandler                         2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetAddrIntHandler                           2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveOpen                                        1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveEnableIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     262
                   Absolute function *
                            _I2C_Isr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_Isr                                              2     2      0      22
                                              1 COMMON     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                    _I2C_SlaveIsAddr
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
              _I2C_SlaveIsTxBufEmpty
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                _I2C_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveWrCallBack                                  0     0      0      22
                   Absolute function *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_SlaveDefWrInterruptHandler                       0     0      0      22
              i1_I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (9) i1_I2C_SlaveSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveReleaseClock                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveRdCallBack                                  0     0      0       0
                   Absolute function *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_SlaveDefRdInterruptHandler                       0     0      0       0
               i1_I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveIsTxBufEmpty                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveIsRxBufFull                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveIsRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveIsAddr                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveClearIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveAddrCallBack                                0     0      0       0
                   Absolute function *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_SlaveDefAddrInterruptHandler                     0     0      0       0
               i1_I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (9) i1_I2C_SlaveGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _I2C_Open
     _I2C_SlaveEnableIrq
     _I2C_SlaveOpen
     _I2C_SlaveSetAddrIntHandler
     _I2C_SlaveSetBusColIntHandler
     _I2C_SlaveSetIsrHandler
     _I2C_SlaveSetReadIntHandler
     _I2C_SlaveSetSlaveAddr
     _I2C_SlaveSetSlaveMask
     _I2C_SlaveSetWrColIntHandler
     _I2C_SlaveSetWriteIntHandler
   _I2C_Read
     _I2C_SlaveGetRxData
   _I2C_Write
     _I2C_SlaveSendTxData
   _SYSTEM_Initialize
     _ADC_Initialize
     _FVR_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   ___fldiv
     ___xxtofl (ARG)
   ___flge
   ___flmul
     __Umul8_16
   ___xxtofl
   _sendAllDatatoMaster
     _I2C_Write
     _sendDataToMaster
       _I2C_Write
     _sendVSNSDataToMaster
       _I2C_Write
   _sendDataToMaster
   _sendVSNSDataToMaster
   _setDangerSignalLine

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         i1_I2C_SlaveGetRxData
     _I2C_SlaveClearIrq
     _I2C_SlaveIsAddr
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsTxBufEmpty
     _I2C_SlaveRdCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefRdInterruptHandler *
         i1_I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveWrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefWrInterruptHandler *
         i1_I2C_SlaveSendTxData
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      6       6       8        7.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      5C      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 18 14:44:21 2023

                            ___fldiv@aexp 0043                              ___fldiv@bexp 0042  
                            ___fldiv@sign 003B                                        l40 0D69  
                                      l43 0D16                                        l37 0E30  
                                      l72 0E4A                    __end_of_FVR_Initialize 0D13  
                     __Umul8_16@word_mpld 0022                                       l206 07F7  
                                     l209 07FF                                       l219 0D12  
                                     l139 0E17                                       l332 0EF2  
                                     l341 0D75                                       l191 0D9A  
                                     l408 0D5D                                       l600 0105  
                                     l441 0D03                                       l329 0DA3  
                                     l169 0D6F                                       l418 0D4B  
                                     l338 0D0E                                       l602 013B  
                                     l435 0D2F                                       l611 01E3  
                                     l429 0DD7                                       l605 0173  
                                     l438 0D34                                       l614 021B  
                                     l375 0D51                                       l471 0D39  
                                     l624 0E54                                       l632 0EF8  
                                     l608 01AB                                       l378 0D57  
                                     l474 0D06                                       l642 0F14  
                                     l618 02C3                                       l388 0D63  
                                     l652 0F2D                                       l660 0F5D  
                                     l629 0E64                                       l637 0F06  
                                     l398 0D45                                       l911 0777  
                                     l647 0F22                                       l655 0EB9  
                                     l664 0F88                                       l665 0F8A  
                                     l593 008D                                       l914 07CB  
                                     l594 0090                                       l499 0D91  
                                     l595 0093                                       l596 0099  
                                     l919 07E4                                       l599 00A8  
    __end_of_I2C_SlaveSetBusColIntHandler 0D4C              _I2C_SlaveSetBusColIntHandler 0D46  
                                     _PR2 001B                     ??_I2C_SlaveRdCallBack 0070  
            __end_ofi1_I2C_SlaveGetRxData 0CFB                           _timer1ReloadVal 006A  
                     _I2C_SlaveSendTxData 0D35             I2C_SlaveSetSlaveMask@maskAddr 0073  
                         __end_of_I2C_Isr 1000                           _TMR2_Initialize 0D8A  
                                     wreg 0009                       _I2C_SlaveWrCallBack 0DBE  
                       _selectedReference 0066                              ___flmul@aexp 0033  
                            ___flmul@bexp 0038                              ___flmul@sign 0032  
                            ___flmul@temp 003D                              ___flmul@prod 0039  
                                    l1111 0680                                      l1112 069A  
                                    l1114 06A7                                      l1106 0634  
                                    l1130 0504                                      l1142 04F8  
                                    l1151 0E88                                      l1136 0484  
                                    l1090 0556                                      l1092 06AE  
                                    l1180 070B                                      l3101 0D2C  
                                    l1149 0E78                                      l1174 06D2  
                                    l3111 0D52                                      l3103 0D31  
                                    l3031 0D9D                                      l3023 0D36  
                                    l1176 0759                                      l3113 0D40  
                                    l3105 0D4C                                      l3033 0DA1  
                                    l3041 0E38                                      l3025 0D6A  
                                    l3201 0F37                                      l3107 0D46  
                                    l3115 0D58                                      l3035 0DA2  
                                    l3051 0E46                                      l3043 0E3A  
                                    l1187 0725                                      l3027 0D71  
                                    l3131 0E5D                                      l3123 0E4B  
                                    l3203 0F3F                                      l3211 0F60  
                                    l1188 0731                                      l3117 0D01  
                                    l3109 0D5E                                      l3061 0D92  
                                    l3029 0D9B                                      l3053 0D64  
                                    l3045 0E3C                                      l3037 0E31  
                                    l3133 0E62                                      l3125 0E4E  
                                    l3141 0F01                                      l3221 0F76  
                                    l3205 0F4B                                      l3119 0D04  
                                    l3063 0D95                                      l3055 0D67  
                                    l3047 0E3F                                      l3039 0E35  
                                    l3071 0D8A                                      l3311 05AD  
                                    l3303 0585                                      l3231 076F  
                                    l3127 0E50                                      l3151 0F27  
                                    l3143 0F0B                                      l3223 0F7B  
                                    l3207 0F50                                      l3065 0D96  
                                    l3049 0E41                                      l3081 0E06  
                                    l3073 0D8D                                      l3057 0D13  
                                    l3321 05C7                                      l3313 05AF  
                                    l3305 0595                                      l3241 07B3  
                                    l3233 078B                                      l3161 0E70  
                                    l3401 02DF                                      l3129 0E59  
                                    l3153 0F2B                                      l3145 0F0F  
                                    l3137 0EF3                                      l3225 0E89  
                                    l3217 0F62                                      l3091 0DD0  
                                    l3067 0D97                                      l3059 0D0F  
                                    l3083 0E0B                                      l3075 0D8E  
                                    l3171 0E18                                      l3315 05B4  
                                    l3323 05CE                                      l3331 05ED  
                                    l3307 059D                                      l3251 0509  
                                    l3243 07E1                                      l3235 0793  
                                    l3163 0E74                                      l3411 02F8  
                                    l3403 02E7                                      l3147 0F19  
                                    l3139 0EFD                                      l3219 0F6A  
                                    l3181 07FB                                      l3173 07E6  
                                    l3093 0DD1                                      l3069 0D98  
                                    l3085 0E0D                                      l3077 0D8F  
                                    l3341 0608                                      l3333 05F3  
                                    l3325 05E0                                      l3317 05C2  
                                    l3309 05A5                                      l3261 051A  
                                    l3253 050B                                      l3245 07E3  
                                    l3237 0797                                      l3229 075A  
                                    l3165 0E7F                                      l3157 0E67  
                                    l3501 0496                                      l3421 030F  
                                    l3413 02FC                                      l3405 02E9  
                                    l3149 0F1D                                      l3175 07F0  
                                    l3095 0DD5                                      l3087 0E14  
                                    l3079 0DFF                                      l3351 0619  
                                    l3343 0609                                      l3335 05FB  
                                    l3327 05E1                                      l3319 05C6  
                                    l3271 0532                                      l3263 0522  
                                    l3255 050F                                      l3239 07AF  
                                    l3167 0E84                                      l3159 0E69  
                                    l3511 04CD                                      l3503 049A  
                                    l3423 0311                                      l3415 02FD  
                                    l3407 02F1                                      l3177 07F1  
                                    l3097 0DD6                                      l3089 0DCB  
                                    l3185 0EBA                                      l3361 063E  
                                    l3353 061D                                      l3345 0610  
                                    l3337 05FD                                      l3329 05E9  
                                    l3281 0543                                      l3273 0534  
                                    l3265 0523                                      l3257 0510  
                                    l3249 0505                                      l3521 04F5  
                                    l3513 04DB                                      l3505 04B2  
                                    l3441 0369                                      l3433 032C  
                                    l3425 0319                                      l3417 0302  
                                    l3409 02F6                                      l3193 0F30  
                                    l3601 0084                                      l3179 07F5  
                                    l3187 0EEF                                      l3371 0673  
                                    l3363 0646                                      l3355 0631  
                                    l3339 0604                                      l3347 0614  
                                    l3291 056A                                      l3283 054B  
                                    l3275 0538                                      l3259 0515  
                                    l3267 0525                                      l3523 04F6  
                                    l3515 04E4                                      l3507 04B6  
                                    l3451 03AD                                      l3443 0381  
                                    l3435 0337                                      l3427 031E  
                                    l3419 0307                                      l3531 06B6  
                                    l3195 0F35                                      l3603 0088  
                                    l3611 00E1                                      l3189 0D0B  
                                    l3381 06A1                                      l3373 068E  
                                    l3365 064A                                      l3349 0618  
                                    l3293 056E                                      l3285 054C  
                                    l3277 0539                                      l3269 052D  
                                    l3525 04FC                                      l3517 04E6  
                                    l3509 04C3                                      l3461 03DF  
                                    l3453 03B4                                      l3445 038E  
                                    l3437 0344                                      l3429 0323  
                                    l3541 06E3                                      l3533 06BA  
                                    l3621 0108                                      l3613 00E3  
                                    l3605 009F                                      l3383 06A3  
                                    l3375 0691                                      l3367 0662  
                                    l3359 0639                                      l3279 053E  
                                    l3287 054E                                      l3519 04F1  
                                    l3471 043A                                      l3463 03F1  
                                    l3455 03BF                                      l3447 039B  
                                    l3439 035C                                      l3391 02CE  
                                    l3551 0704                                      l3543 06E6  
                                    l3535 06CA                                      l3631 013D  
                                    l3623 0111                                      l3615 00E8  
                                    l3607 00A4                                      l3377 0699  
                                    l3369 0666                                      l3289 055E  
                                    l3297 0577                                      l3481 0459  
                                    l3473 0441                                      l3465 03FC  
                                    l3457 03C6                                      l3449 03A2  
                                    l3393 02D0                                      l3561 0733  
                                    l3553 0712                                      l3545 06F1  
                                    l3537 06DA                                      l3529 06B1  
                                    l3641 0170                                      l3633 0140  
                                    l3625 0123                                      l3617 00EA  
                                    l3609 00AA                                      l3379 069D  
                                    l3299 057C                                      l3491 046D  
                                    l3483 0460                                      l3475 044D  
                                    l3467 040E                                      l3459 03D8  
                                    l3395 02D4                                      l3563 0747  
                                    l3555 071B                                      l3547 06F8  
                                    l3651 0195                                      l3643 0175  
                                    l3635 0149                                      l3627 0125  
                                    l3619 00F7                                      l3493 0481  
                                    l3477 0454                                      l3485 0464  
                                    l3469 0423                                      l3397 02D5  
                                    l3389 02CA                                      l3565 074C  
                                    l3557 071F                                      l3549 06FC  
                                    l3661 01CB                                      l3653 01A8  
                                    l3645 0178                                      l3637 015B  
                                    l3629 0138                                      l3581 004E  
                                    l3487 0468                                      l3479 0458  
                                    l3399 02DA                                      l3567 0750  
                                    l3559 0729                                      l3671 01F1  
                                    l3663 01CD                                      l3655 01AD  
                                    l3647 0181                                      l3639 015D  
                                    l3591 005C                                      l3583 0050  
                                    l3575 0046                                      l3497 0489  
                                    l3489 0469                                      l3569 0751  
                                    l3681 0220                                      l3673 0203  
                                    l3665 01E0                                      l3657 01B0  
                                    l3649 0193                                      l3593 0064  
                                    l3585 0050                                      l3577 0049  
                                    l3499 048E                                      l3691 02C5  
                                    l3683 0229                                      l3675 0205  
                                    l3667 01E5                                      l3659 01B9  
                                    l3747 00B2                                      l3595 006C  
                                    l3587 0055                                      l3579 004A  
                                    l3685 0257                                      l3677 0218  
                                    l3669 01E8                                      l3597 0074  
                                    l3589 0056                                      l3687 027C  
                                    l3679 021D                                      l3599 007C  
                                    l3689 029F                                      u3000 057C  
                                    u3001 057B                                      u3010 05B4  
                                    u3011 05B3                                      u3100 0608  
                                    u3101 0607                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u3200 068E                                      u3120 0618  
                                    u3040 05C6                                      u3201 068D  
                                    u3121 0617                                      u3041 05C5  
                                    u3025 05B5                                      u3210 06A1  
                                    u3130 061D                                      u3211 06A0  
                                    u3131 061C                                      u3115 060A  
                                    u3035 05BC                                      u3140 0631  
                                    u3060 05E0                                      u3220 02D4  
                                    u3205 068A                                      u3141 0630  
                                    u3061 05DF                                      u3221 02D3  
                                    u3150 0638                                      u3070 05F3  
                                    u3230 02DA                                      u3151 0637  
                                    u3071 05F2                                      u3055 05C8  
                                    u3231 02D9                                      u3160 063E  
                                    u3080 05FB                                      u3400 0481  
                                    u3320 0419                                      u3240 02DF  
                                    u3161 063D                                      u3081 05FA  
                                    u3065 05DC                                      u3401 0480  
                                    u3305 039C                                      u3241 02DE  
                                    u3170 064A                                      u3410 0488  
                                    u3330 0430                                      u3250 02FC  
                                    u3171 0649                                      u3411 0487  
                                    u3315 03C7                                      u3251 02FB  
                                    u3180 0658                                      u3420 048E  
                                    u3260 0302                                      u3500 06DA  
                                    u2700 0F01                                      u3421 048D  
                                    u3325 0415                                      u3261 0301  
                                    u3501 06D9                                      u2701 0F00  
                                    u3190 0673                                      u3430 049A  
                                    u3270 0307                                      u2710 0F0B  
                                    u3191 0672                                      u3095 05FE  
                                    u3431 0499                                      u3335 042C  
                                    u3271 0306                                      u2711 0F0A  
                                    u2800 07FB                                      u3440 04A8  
                                    u3360 0458                                      u3280 031E  
                                    u3600 074C                                      u3520 06F7  
                                    u2720 0F0F                                      u2801 07FA  
                                    u3185 0654                                      u3361 0457  
                                    u3345 043B                                      u3281 031D  
                                    u3601 074B                                      u3521 06F6  
                                    u2721 0F0E                                      u3450 04C3  
                                    u3290 0323                                      u3610 0750  
                                    u2730 0F19                                      u2810 0F35  
                                    u3195 066F                                      u3451 04C2  
                                    u3355 044E                                      u3291 0322  
                                    u3611 074F                                      u3515 06EB  
                                    u2731 0F18                                      u2811 0F34  
                                    u2660 0DD0                                      u2900 0797  
                                    u3460 04DB                                      u3380 0468  
                                    u3540 0711                                      u2740 0F1D  
                                    u2820 0F49                                      u3700 01CB  
                                    u3620 0055                                      u2661 0DCF  
                                    u2901 0796                                      u3461 04DA  
                                    u3445 04A4                                      u3381 0467  
                                    u3541 0710                                      u2741 0F1C  
                                    u2821 0F46                                      u3701 01CA  
                                    u3621 0054                                      u2910 07B3  
                                    u3470 04F5                                      u3390 046D  
                                    u2670 0E59                                      u2750 0F27  
                                    u3710 01E0                                      u3630 00E8  
                                    u2911 07B2                                      u3471 04F4  
                                    u3455 04BF                                      u3391 046C  
                                    u3375 045A                                      u3535 0705  
                                    u2671 0E58                                      u2751 0F26  
                                    u3711 01DF                                      u3631 00E7  
                                    u2920 07E1                                      u3560 071F  
                                    u3480 06B6                                      u2680 0E5D  
                                    u2760 0F2B                                      u2840 0F5D  
                                    u3720 0203                                      u3640 0123  
                                    u2921 07E0                                      u3465 04D7  
                                    u3561 071E                                      u3481 06B5  
                                    u2681 0E5C                                      u2761 0F2A  
                                    u2841 0F5C                                      u3721 0202  
                                    u3705 01C7                                      u3641 0122  
                                    u2930 050F                                      u2770 0E74  
                                    u3570 0725                                      u3490 06BA  
                                    u2690 0EFD                                      u2850 0F74  
                                    u2834 0F4B                                      u3730 0218  
                                    u3650 0138                                      u2931 050E  
                                    u2771 0E73                                      u3571 0724  
                                    u3555 0715                                      u3491 06B9  
                                    u2691 0EFC                                      u2851 0F71  
                                    u3731 0217                                      u3715 01DC  
                                    u3651 0137                                      u2940 0515  
                                    u3580 0729                                      u3740 029F  
                                    u3660 015B                                      u2941 0514  
                                    u2925 07DD                                      u3581 0728  
                                    u2845 0F59                                      u3741 029E  
                                    u3725 01FF                                      u3661 015A  
                                    u3645 011F                                      u2950 051A  
                                    u2790 0E84                                      u3590 073D  
                                    u2870 0F88                                      u3750 02C3  
                                    u3670 0170                                      u3807 07F2  
                                    u2951 0519                                      u2791 0E83  
                                    u2871 0F87                                      u3751 02C2  
                                    u3735 0214                                      u3671 016F  
                                    u3655 0134                                      u2960 0538  
                                    u2880 076F                                      u2864 0F76  
                                    u3680 0193                                      u2961 0537  
                                    u2881 076E                                      u2785 0E79  
                                    u3681 0192                                      u3665 0157  
                                    u2970 053E                                      u2890 078B  
                                    u3690 01A8                                      u2971 053D  
                                    u2891 078A                                      u3595 0739  
                                    u2875 0F84                                      u3691 01A7  
                                    u3675 016C                                      u2980 0543  
                                    u2981 0542                                      u3685 018F  
                                    u2990 055E                                      u2991 055D  
                                    u3695 01A4                                      u3767 00F0  
                                    u3777 00FF                                      u3787 0F3A  
                                    u3797 0F65                                      _TMR2 001A  
                                    _WPUA 020C                                      _WPUB 020D  
                 __end_of_I2C_SlaveIsAddr 0D83                   __end_of_I2C_SlaveIsRead 0D1C  
                                    _main 0046         I2C_SlaveSetAddrIntHandler@handler 0073  
                        __end_of_I2C_Read 0D0F                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                        __end_of_I2C_Open 0EF3                                      btemp 007E  
                    ?_I2C_SlaveSendTxData 0070                                      start 0035  
                         ___fldiv@new_exp 003C                      ?_I2C_SlaveWrCallBack 0070  
              ??_TMR1_SetInterruptHandler 0075         I2C_SlaveSetReadIntHandler@handler 0073  
           __end_of_I2C_SlaveAddrCallBack 0DB1                      setDangerSignalLine@i 0021  
                         ?_FVR_Initialize 0070             __end_of_OSCILLATOR_Initialize 0D6A  
__end_of_I2C_SlaveDefAddrInterruptHandler 0D40        ??_I2C_SlaveDefAddrInterruptHandler 0070  
       ?_I2C_SlaveDefAddrInterruptHandler 0070          _I2C_SlaveDefAddrInterruptHandler 0D3A  
                                   ?_main 0070                           __end_of___fldiv 06AF  
                         __end_of___flmul 0505                                     _T1CON 0018  
                                   _T2CON 001C                                     i1l112 0033  
                                   i1l105 001A                                     i1l106 0033  
                                   i1l107 0025                                     i1l153 0DE8  
                                   i1l402 0DB0                                     i1l172 0003  
                                   i1l405 0D3F                                     i1l166 0DFE  
                                   i1l450 0CFD                                     i1l444 0D82  
                                   i1l372 0FFF                                     i1l453 0D00  
                                   i1l382 0DBD                                     i1l447 0D1B  
                                   i1l471 0D25                                     i1l392 0DCA  
                                   i1l465 0D89                                     i1l385 0D20  
                                   i1l474 0CFA                                     i1l395 0D2A  
                                   i1l468 0D0A                     _I2C_SlaveReleaseClock 0CFE  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                              main@fvr_Test 00A4  
           ?_I2C_SlaveSetBusColIntHandler 0073                          __end_of_TMR1_ISR 0DFF  
                  ??_I2C_SlaveIsRxBufFull 0070                            _WDT_Initialize 0D13  
                 __end_of_TMR1_Initialize 0E18                         __end_of_I2C_Write 0D76  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                     ??_I2C_SlaveSendTxData 0073  
                         _TMR1_WriteTimer 0DD8                       _setDangerSignalLine 0F2E  
                   ??_I2C_SlaveWrCallBack 0071                     _I2C_SlaveSetSlaveAddr 0D2B  
                         __initialization 0037                     _I2C_SlaveSetSlaveMask 0D30  
                            __end_of_main 02CA                   __end_of_TMR2_Initialize 0D92  
             ?_INTERRUPT_InterruptManager 0070                                 ??_I2C_Isr 0071  
           __end_ofi1_I2C_SlaveSendTxData 0D26                                    ??_main 0044  
                    ?_setDangerSignalLine 0070                    __end_of_WDT_Initialize 0D17  
             _I2C_SlaveRdInterruptHandler 0061               _I2C_SlaveWrInterruptHandler 005F  
              __end_of_I2C_SlaveEnableIrq 0D04                __end_of_I2C_SlaveGetRxData 0D07  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  _T1GCON 0019                   TMR1_WriteTimer@timerVal 0070  
                                  i1l2301 0DBE                                    i1l2311 0DB8  
                                  i1l2303 0DC5                                    i1l2161 0CF8  
                                  i1l2305 0D07                                    i1l2313 0CFE  
                                  i1l2401 0FAA                                    i1l2241 0DE0  
                                  i1l2171 0D26                                    i1l2411 0FBE  
                                  i1l2403 0FAD                                    i1l2243 0DE2  
                                  i1l2235 0DD8                                    i1l2173 0D3A  
                                  i1l2309 0DB1                                    i1l2413 0FC1  
                                  i1l2405 0FB0                                    i1l2237 0DDD  
                                  i1l2245 0DE4                                    i1l2159 0D22  
                                  i1l2423 0FDA                                    i1l2415 0FC9  
                                  i1l2431 0FFC                                    i1l2407 0FB8  
                                  i1l2247 0DE6                                    i1l2239 0DDE  
                                  i1l2169 0D1C                                    i1l2425 0FE2  
                                  i1l2417 0FCD                                    i1l2409 0FBB  
                                  i1l2283 0D17                                    i1l2419 0FD1  
                                  i1l2371 0DF9                                    i1l2293 0DA4  
                                  i1l2429 0FE6                                    i1l2365 0DE9  
                                  i1l2295 0DAB                                    i1l2287 0CFB  
                                  i1l2367 0DEB                                    i1l2289 0D7C  
                                  i1l2297 0D83                                    i1l2393 0F8B  
                                  i1l2369 0DF2                                    i1l2395 0F8E  
                                  i1l2397 0F9A                                    i1l2821 000A  
                                  i1l2399 0FA2                                    i1l2831 002A  
                                  i1l2823 000F                                    i1l2833 002F  
                                  i1l2825 0014                                    i1l2827 001F  
                                  i1l2819 0006                                    i1l3749 0FEE  
                                  u134_20 0DDD                                    u134_21 0DDC  
                                  u136_20 0DAB                                    u160_20 0FD9  
                                  u152_20 0DF9                                    u136_21 0DAA  
                                  u160_21 0FD8                                    u152_21 0DF8  
                                  u137_20 0DC5                                    u161_20 0FE2  
                                  u137_21 0DC4                                    u161_21 0FE1  
                                  u138_20 0DB8                                    u154_20 0F98  
                                  u138_21 0DB7                                    u154_21 0F95  
                                  u243_20 000A                                    _FVRCON 0117  
                                  u243_21 0009                                    u155_24 0F9A  
                                  u156_20 0FA2                                    u244_20 000F  
                                  u156_21 0FA1                                    u244_21 000E  
                                  u157_20 0FAA                                    u245_20 0014  
                                  u157_21 0FA9                                    u245_21 0013  
                                  u158_20 0FB8                                    u246_20 001F  
                                  u158_21 0FB7                                    u246_21 001E  
                                  u159_20 0FC9                                    u247_20 0024  
                                  u159_21 0FC8                                    u247_21 0023  
                                  u248_20 002A                                    u248_21 0029  
                                  u249_20 002F                                    u249_21 002E  
                                  _OSCCON 0099                          ?_I2C_SlaveIsAddr 0070  
                                  _WDTCON 0097                          ?_I2C_SlaveIsRead 0070  
                        __end_of___xxtofl 075A                      i1_I2C_SlaveGetRxData 0CF8  
                __end_of_sendDataToMaster 0E65      __end_of_TMR1_DefaultInterruptHandler 0004  
            _TMR1_DefaultInterruptHandler 0003                                    ___flge 075A  
                               ??___fldiv 0032                                 ??___flmul 002D  
                  _I2C_SlaveSetIsrHandler 0D4C                                    _memory 0048  
                                  _safety 0800                    ?_I2C_SlaveReleaseClock 0070  
                     _sendAllDatatoMaster 0E89                     ??_setDangerSignalLine 0073  
                 ??_I2C_SlaveIsTxBufEmpty 0070                                 ?_I2C_Read 0070  
                               ?_I2C_Open 0070       I2C_SlaveSetBusColIntHandler@handler 0073  
                         ?_WDT_Initialize 0070                             _I2C_SlaveOpen 0DCB  
                ADC_GetConversion@channel 0076  TMR1_SetInterruptHandler@InterruptHandler 0073  
                 __end_of_TMR1_WriteTimer 0DE9                                ___flge@ff1 0020  
                              ___flge@ff2 0024                          ?_TMR1_Initialize 0070  
                            ___xxtofl@arg 0026                              ___xxtofl@exp 0025  
                       _SYSTEM_Initialize 0E18                              ___xxtofl@val 0073  
                 __end_of__initialization 0042                      ?_sendAllDatatoMaster 0070  
      I2C_SlaveSetWrColIntHandler@handler 0073              ??_I2C_SlaveSetAddrIntHandler 0075  
                      ?_SYSTEM_Initialize 0070                     ?i1_I2C_SlaveGetRxData 0070  
                  ?_I2C_SlaveSetSlaveAddr 0070                    ?_I2C_SlaveSetSlaveMask 0070  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0075  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                        ?_TMR2_Initialize 0070            I2C_SlaveSetSlaveAddr@slaveAddr 0073  
            ??_I2C_SlaveSetReadIntHandler 0075                            _OPTION_REGbits 0095  
                              ??_I2C_Read 0073                                ??_I2C_Open 0075  
                          ?_I2C_SlaveOpen 0070                 __end_of_SYSTEM_Initialize 0E31  
                              __pbssBANK0 0048                     ??_sendAllDatatoMaster 0077  
     __end_of_I2C_SlaveSetWrColIntHandler 0D5E               _I2C_SlaveSetWrColIntHandler 0D58  
                       __end_of__Umul8_16 0E89                          ??_FVR_Initialize 0073  
                              __pmaintext 0046                                   ?___flge 0020  
                              ??_TMR1_ISR 0072                                __pintentry 0004  
             __end_of_I2C_SlaveRdCallBack 0DBE             ??_I2C_SlaveSetWrColIntHandler 0075  
                                 _I2C_Isr 0F8B                                 ?___xxtofl 0073  
                                 _SSP1ADD 0212                                   _SSP1BUF 0211  
                                 _SSP1MSK 0213                          ?_TMR1_WriteTimer 0070  
                    sendDataToMaster@high 0020                    ??i1_I2C_SlaveGetRxData 0070  
                               _I2C_Write 0D70                      _ADC_InterruptHandler 0057  
            setDangerSignalLine@isTurnOff 0020                                   ___fldiv 0505  
                 I2C_SlaveSendTxData@data 0073                                   ___flmul 02CA  
                   _I2C_SlaveAddrCallBack 0DA4                            _I2C_Initialize 0D9B  
                                 __ptext1 0F2E                                   __ptext2 0E89  
                                 __ptext3 0EF3                                   __ptext4 0E4B  
                                 __ptext5 0D70                                   __ptext6 0D35  
                                 __ptext7 06AF                                   __ptext8 02CA  
                                 __ptext9 0E65            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 0018                           ??_I2C_SlaveOpen 0073  
                   _OSCILLATOR_Initialize 0D64                                 _T2CONbits 001C  
                              ??___xxtofl 0020                  ??_PIN_MANAGER_Initialize 0073  
               ?_TMR1_SetInterruptHandler 0073                 i1I2C_SlaveSendTxData@data 0070  
           I2C_SlaveSetIsrHandler@handler 0073                                   clrloop0 0D77  
             __end_of_I2C_SlaveSendTxData 0D3A                      end_of_initialization 0042  
             __end_of_I2C_SlaveWrCallBack 0DCB        __end_of_I2C_SlaveSetAddrIntHandler 0D46  
              _I2C_SlaveSetAddrIntHandler 0D40                                ?_I2C_Write 0070  
                      _I2C_SlaveEnableIrq 0D01                        _I2C_SlaveGetRxData 0D04  
                 ?_I2C_SlaveSetIsrHandler 0073                              _i2cSlaveAddr 0067  
                       ?_sendDataToMaster 0075                    __end_of_I2C_Initialize 0DA4  
                 ??_I2C_SlaveReleaseClock 0070                        ??_sendDataToMaster 0077  
                     ?_I2C_SlaveEnableIrq 0070                       ?_I2C_SlaveGetRxData 0070  
      __end_of_I2C_SlaveSetReadIntHandler 0D58                _I2C_SlaveSetReadIntHandler 0D52  
                        ??_WDT_Initialize 0073              ?_I2C_SlaveSetWriteIntHandler 0073  
                   i1_I2C_SlaveSendTxData 0D21                             ___xxtofl@sign 0024  
           __end_of_I2C_SlaveIsTxBufEmpty 0D8A                               ___fldiv@grs 003E  
                             ___fldiv@rem 0037                      ??_I2C_SlaveEnableIrq 0073  
                    ??_I2C_SlaveGetRxData 0073                   ??_I2C_SlaveSetSlaveAddr 0073  
                             ___flmul@grs 0034                   ??_I2C_SlaveSetSlaveMask 0073  
          __end_of_I2C_SlaveSetIsrHandler 0D52                    sendDataToMaster@toSend 0075  
                  ?_I2C_SlaveAddrCallBack 0070               __end_of_setDangerSignalLine 0F8B  
                         ?_I2C_Initialize 0070                            __end_of___flge 07E5  
                             _I2C_Command 0065                            _ADC_Initialize 0D92  
                               _i2cRdData 0078                    ?_OSCILLATOR_Initialize 0070  
                          __end_of_safety 080C                                 _i2cWrData 0079  
                     start_initialization 0037              __end_of_sendVSNSDataToMaster 0F2E  
                             ??_I2C_Write 0074                                  ??___flge 0073  
                  __end_of_ADC_Initialize 0D9B                                 __Umul8_16 0E65  
                                ?_I2C_Isr 0070                    ?i1_I2C_SlaveSendTxData 0070  
                               ___fldiv@a 002A                                 ___fldiv@b 002E  
                               ___flmul@a 0029                                 ___flmul@b 0025  
                             __pbssCOMMON 0077                                 ___latbits 0001  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
             __end_of_sendAllDatatoMaster 0EBA            ??_I2C_SlaveSetBusColIntHandler 0075  
                               __pnvBANK0 0068                    _PIN_MANAGER_Initialize 0E31  
        __end_of_TMR1_SetInterruptHandler 0D70                                  ?___fldiv 002A  
                                ?___flmul 0025                                ?__Umul8_16 0073  
                         ?_ADC_Initialize 0070              ??_INTERRUPT_InterruptManager 0073  
                       ??_I2C_SlaveIsAddr 0070                         ??_I2C_SlaveIsRead 0070  
        ??_I2C_SlaveDefRdInterruptHandler 0070           ?_I2C_SlaveDefRdInterruptHandler 0070  
        ??_I2C_SlaveDefWrInterruptHandler 0071           ?_I2C_SlaveDefWrInterruptHandler 0070  
                     sendDataToMaster@low 0021                                 _converter 0053  
                                _I2C_Read 0D0B                                  _I2C_Open 0EBA  
             ?_I2C_SlaveSetAddrIntHandler 0073                                  _LATBbits 010D  
                                _LATCbits 010E                                 clear_ram0 0D76  
                                _PIE1bits 0091                                  _PIE2bits 0092  
                       _I2C_SlaveClearIrq 0CFB                                  _PIR1bits 0011  
                                _PIR2bits 0012                        ?_I2C_SlaveClearIrq 0070  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
            __end_of_I2C_SlaveIsRxBufFull 0D0B                                  _TMR1_ISR 0DE9  
                    _sendVSNSDataToMaster 0EF3                                  _SSP1STAT 0214  
             ?_I2C_SlaveSetReadIntHandler 0073             __end_of_I2C_SlaveReleaseClock 0D01  
                     ??_I2C_SlaveClearIrq 0070                         ??_TMR1_Initialize 0075  
                              _ADCON0bits 009D                     __end_of_I2C_SlaveOpen 0DD8  
       _I2C_SlaveDefWrColInterruptHandler 0000                         ??_TMR2_Initialize 0073  
               __end_of_I2C_SlaveClearIrq 0CFE             __end_of_I2C_SlaveSetSlaveAddr 0D30  
           __end_of_I2C_SlaveSetSlaveMask 0D35                          ??_I2C_Initialize 0073  
                 ??_I2C_SlaveAddrCallBack 0070                         _ADC_GetConversion 07E5  
                   ?_sendVSNSDataToMaster 0070                             I2C_Write@data 0074  
                 ??_OSCILLATOR_Initialize 0073                               ??__Umul8_16 0075  
                      ?_ADC_GetConversion 0073             _I2C_SlaveAddrInterruptHandler 005D  
                _TMR1_SetInterruptHandler 0D6A        _I2C_SlaveDefBusColInterruptHandler 0000  
                   _TMR1_InterruptHandler 0068                       ??_ADC_GetConversion 0075  
                                ___xxtofl 06AF            _I2C_SlaveWrColInterruptHandler 0059  
                                __ptext10 075A                                  __ptext11 0505  
                                __ptext20 0D0F                                  __ptext12 0E18  
                                __ptext21 0D92                                  __ptext13 0D13  
                              _T1GCONbits 0019                                  __ptext30 0D4C  
                                __ptext22 0D0B                                  __ptext14 0D8A  
                                __ptext31 0D46                                  __ptext23 0D04  
                                __ptext15 0DFF                                  __ptext40 0F8B  
                                __ptext32 0D40                                  __ptext24 0EBA  
                                __ptext16 0D6A                                  __ptext41 0DBE  
                                __ptext33 0DCB                                  __ptext25 0D5E  
                                __ptext17 0E31                                  __ptext50 0D7C  
                                __ptext42 0D26                                  __ptext34 0D01  
                                __ptext26 0D58                                  __ptext18 0D64  
                                __ptext51 0CFB                                  __ptext43 0D21  
                                __ptext35 07E5                                  __ptext27 0D30  
                                __ptext19 0D9B                                  __ptext52 0DA4  
                                __ptext44 0CFE                                  __ptext28 0D2B  
                                __ptext53 0D3A                                  __ptext45 0DB1  
                                __ptext37 0DE9                                  __ptext29 0D52  
                                __ptext54 0CF8                                  __ptext46 0D1C  
                                __ptext38 0DD8                                  __ptext47 0D83  
                                __ptext39 0003                                  __ptext48 0D07  
                                __ptext49 0D17                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                     _I2C_SlaveIsTxBufEmpty 0D83  
               __end_of_ADC_GetConversion 0800              ?_I2C_SlaveSetWrColIntHandler 0073  
                                int$flags 007E                   ??i1_I2C_SlaveSendTxData 0070  
                                main@Vbit 00A0        __end_of_INTERRUPT_InterruptManager 0035  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 0214  
                       ??_TMR1_WriteTimer 0072                                _INTCONbits 000B  
                              _FVRCONbits 0117                      _I2C_SlaveIsRxBufFull 0D07  
                                intlevel1 0000                 setDangerSignalLine@i_1261 0023  
         _I2C_SlaveBusColInterruptHandler 005B                   ?_PIN_MANAGER_Initialize 0070  
                     _I2C_SlaveRdCallBack 0DB1                          ??_ADC_Initialize 0073  
                         _I2C_SlaveIsAddr 0D7C                    ??_sendVSNSDataToMaster 0075  
                         _I2C_SlaveIsRead 0D17                             _i2cSlaveState 0077  
      I2C_SlaveSetWriteIntHandler@handler 0073       __end_of_I2C_SlaveSetWriteIntHandler 0D64  
             _I2C_SlaveSetWriteIntHandler 0D5E                             __pstringtext1 0800  
                          _FVR_Initialize 0D0F                    __Umul8_16@multiplicand 0073  
                    ?_I2C_SlaveRdCallBack 0070                          _sendDataToMaster 0E4B  
                  ?_I2C_SlaveIsTxBufEmpty 0070             ??_I2C_SlaveSetWriteIntHandler 0075  
                              _WDTCONbits 0097                  ??_I2C_SlaveSetIsrHandler 0075  
                   ?_I2C_SlaveIsRxBufFull 0070            __end_of_PIN_MANAGER_Initialize 0E4B  
  __end_of_I2C_SlaveDefRdInterruptHandler 0D21            _I2C_SlaveDefRdInterruptHandler 0D1C  
  __end_of_I2C_SlaveDefWrInterruptHandler 0D2B            _I2C_SlaveDefWrInterruptHandler 0D26  
                    __Umul8_16@multiplier 0024                     _MSSP_InterruptHandler 0063  
                         _TMR1_Initialize 0DFF                         __Umul8_16@product 0020  
