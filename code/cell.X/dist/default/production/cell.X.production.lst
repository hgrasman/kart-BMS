

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 10 16:28:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1508
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52     0000                     
    53                           ; Version 2.40
    54                           ; Generated 17/11/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F1508 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000D                     	;# 
   102     000E                     	;# 
   103     0011                     	;# 
   104     0012                     	;# 
   105     0013                     	;# 
   106     0015                     	;# 
   107     0016                     	;# 
   108     0016                     	;# 
   109     0017                     	;# 
   110     0018                     	;# 
   111     0019                     	;# 
   112     001A                     	;# 
   113     001B                     	;# 
   114     001C                     	;# 
   115     008C                     	;# 
   116     008D                     	;# 
   117     008E                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     0111                     	;# 
   136     0112                     	;# 
   137     0113                     	;# 
   138     0114                     	;# 
   139     0115                     	;# 
   140     0116                     	;# 
   141     0117                     	;# 
   142     0118                     	;# 
   143     0119                     	;# 
   144     011D                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     018E                     	;# 
   148     0191                     	;# 
   149     0191                     	;# 
   150     0192                     	;# 
   151     0193                     	;# 
   152     0193                     	;# 
   153     0194                     	;# 
   154     0195                     	;# 
   155     0196                     	;# 
   156     0197                     	;# 
   157     0199                     	;# 
   158     019A                     	;# 
   159     019B                     	;# 
   160     019B                     	;# 
   161     019C                     	;# 
   162     019D                     	;# 
   163     019E                     	;# 
   164     019F                     	;# 
   165     020C                     	;# 
   166     020D                     	;# 
   167     0211                     	;# 
   168     0211                     	;# 
   169     0212                     	;# 
   170     0212                     	;# 
   171     0213                     	;# 
   172     0213                     	;# 
   173     0214                     	;# 
   174     0214                     	;# 
   175     0215                     	;# 
   176     0215                     	;# 
   177     0215                     	;# 
   178     0216                     	;# 
   179     0216                     	;# 
   180     0217                     	;# 
   181     0217                     	;# 
   182     0391                     	;# 
   183     0392                     	;# 
   184     0393                     	;# 
   185     0394                     	;# 
   186     0395                     	;# 
   187     0396                     	;# 
   188     0498                     	;# 
   189     0498                     	;# 
   190     0499                     	;# 
   191     049A                     	;# 
   192     049B                     	;# 
   193     049B                     	;# 
   194     049C                     	;# 
   195     049D                     	;# 
   196     049E                     	;# 
   197     049F                     	;# 
   198     0611                     	;# 
   199     0612                     	;# 
   200     0613                     	;# 
   201     0613                     	;# 
   202     0614                     	;# 
   203     0615                     	;# 
   204     0616                     	;# 
   205     0616                     	;# 
   206     0617                     	;# 
   207     0618                     	;# 
   208     0619                     	;# 
   209     0619                     	;# 
   210     061A                     	;# 
   211     061B                     	;# 
   212     061C                     	;# 
   213     061C                     	;# 
   214     0691                     	;# 
   215     0692                     	;# 
   216     0693                     	;# 
   217     0694                     	;# 
   218     0695                     	;# 
   219     0F0F                     	;# 
   220     0F10                     	;# 
   221     0F11                     	;# 
   222     0F12                     	;# 
   223     0F13                     	;# 
   224     0F14                     	;# 
   225     0F15                     	;# 
   226     0F16                     	;# 
   227     0F17                     	;# 
   228     0F18                     	;# 
   229     0F19                     	;# 
   230     0F1A                     	;# 
   231     0F1B                     	;# 
   232     0F1C                     	;# 
   233     0F1D                     	;# 
   234     0F1E                     	;# 
   235     0F1F                     	;# 
   236     0F20                     	;# 
   237     0F21                     	;# 
   238     0F22                     	;# 
   239     0F23                     	;# 
   240     0F24                     	;# 
   241     0F25                     	;# 
   242     0F26                     	;# 
   243     0F27                     	;# 
   244     0F28                     	;# 
   245     0F29                     	;# 
   246     0F2A                     	;# 
   247     0F2B                     	;# 
   248     0F2C                     	;# 
   249     0F2D                     	;# 
   250     0F2E                     	;# 
   251     0F2F                     	;# 
   252     0F8C                     	;# 
   253     0F8D                     	;# 
   254     0F91                     	;# 
   255     0F95                     	;# 
   256     0F96                     	;# 
   257     0F97                     	;# 
   258     0F9C                     	;# 
   259     0F9D                     	;# 
   260     0F9E                     	;# 
   261     0FE3                     	;# 
   262     0FE4                     	;# 
   263     0FE5                     	;# 
   264     0FE6                     	;# 
   265     0FE7                     	;# 
   266     0FE8                     	;# 
   267     0FE9                     	;# 
   268     0FEA                     	;# 
   269     0FEB                     	;# 
   270     0FED                     	;# 
   271     0FEE                     	;# 
   272     0FEF                     	;# 
   273     0000                     	;# 
   274     0001                     	;# 
   275     0002                     	;# 
   276     0003                     	;# 
   277     0004                     	;# 
   278     0005                     	;# 
   279     0006                     	;# 
   280     0007                     	;# 
   281     0008                     	;# 
   282     0009                     	;# 
   283     000A                     	;# 
   284     000B                     	;# 
   285     000C                     	;# 
   286     000D                     	;# 
   287     000E                     	;# 
   288     0011                     	;# 
   289     0012                     	;# 
   290     0013                     	;# 
   291     0015                     	;# 
   292     0016                     	;# 
   293     0016                     	;# 
   294     0017                     	;# 
   295     0018                     	;# 
   296     0019                     	;# 
   297     001A                     	;# 
   298     001B                     	;# 
   299     001C                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     008E                     	;# 
   303     0091                     	;# 
   304     0092                     	;# 
   305     0093                     	;# 
   306     0095                     	;# 
   307     0096                     	;# 
   308     0097                     	;# 
   309     0099                     	;# 
   310     009A                     	;# 
   311     009B                     	;# 
   312     009B                     	;# 
   313     009C                     	;# 
   314     009D                     	;# 
   315     009E                     	;# 
   316     009F                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     010E                     	;# 
   320     0111                     	;# 
   321     0112                     	;# 
   322     0113                     	;# 
   323     0114                     	;# 
   324     0115                     	;# 
   325     0116                     	;# 
   326     0117                     	;# 
   327     0118                     	;# 
   328     0119                     	;# 
   329     011D                     	;# 
   330     018C                     	;# 
   331     018D                     	;# 
   332     018E                     	;# 
   333     0191                     	;# 
   334     0191                     	;# 
   335     0192                     	;# 
   336     0193                     	;# 
   337     0193                     	;# 
   338     0194                     	;# 
   339     0195                     	;# 
   340     0196                     	;# 
   341     0197                     	;# 
   342     0199                     	;# 
   343     019A                     	;# 
   344     019B                     	;# 
   345     019B                     	;# 
   346     019C                     	;# 
   347     019D                     	;# 
   348     019E                     	;# 
   349     019F                     	;# 
   350     020C                     	;# 
   351     020D                     	;# 
   352     0211                     	;# 
   353     0211                     	;# 
   354     0212                     	;# 
   355     0212                     	;# 
   356     0213                     	;# 
   357     0213                     	;# 
   358     0214                     	;# 
   359     0214                     	;# 
   360     0215                     	;# 
   361     0215                     	;# 
   362     0215                     	;# 
   363     0216                     	;# 
   364     0216                     	;# 
   365     0217                     	;# 
   366     0217                     	;# 
   367     0391                     	;# 
   368     0392                     	;# 
   369     0393                     	;# 
   370     0394                     	;# 
   371     0395                     	;# 
   372     0396                     	;# 
   373     0498                     	;# 
   374     0498                     	;# 
   375     0499                     	;# 
   376     049A                     	;# 
   377     049B                     	;# 
   378     049B                     	;# 
   379     049C                     	;# 
   380     049D                     	;# 
   381     049E                     	;# 
   382     049F                     	;# 
   383     0611                     	;# 
   384     0612                     	;# 
   385     0613                     	;# 
   386     0613                     	;# 
   387     0614                     	;# 
   388     0615                     	;# 
   389     0616                     	;# 
   390     0616                     	;# 
   391     0617                     	;# 
   392     0618                     	;# 
   393     0619                     	;# 
   394     0619                     	;# 
   395     061A                     	;# 
   396     061B                     	;# 
   397     061C                     	;# 
   398     061C                     	;# 
   399     0691                     	;# 
   400     0692                     	;# 
   401     0693                     	;# 
   402     0694                     	;# 
   403     0695                     	;# 
   404     0F0F                     	;# 
   405     0F10                     	;# 
   406     0F11                     	;# 
   407     0F12                     	;# 
   408     0F13                     	;# 
   409     0F14                     	;# 
   410     0F15                     	;# 
   411     0F16                     	;# 
   412     0F17                     	;# 
   413     0F18                     	;# 
   414     0F19                     	;# 
   415     0F1A                     	;# 
   416     0F1B                     	;# 
   417     0F1C                     	;# 
   418     0F1D                     	;# 
   419     0F1E                     	;# 
   420     0F1F                     	;# 
   421     0F20                     	;# 
   422     0F21                     	;# 
   423     0F22                     	;# 
   424     0F23                     	;# 
   425     0F24                     	;# 
   426     0F25                     	;# 
   427     0F26                     	;# 
   428     0F27                     	;# 
   429     0F28                     	;# 
   430     0F29                     	;# 
   431     0F2A                     	;# 
   432     0F2B                     	;# 
   433     0F2C                     	;# 
   434     0F2D                     	;# 
   435     0F2E                     	;# 
   436     0F2F                     	;# 
   437     0F8C                     	;# 
   438     0F8D                     	;# 
   439     0F91                     	;# 
   440     0F95                     	;# 
   441     0F96                     	;# 
   442     0F97                     	;# 
   443     0F9C                     	;# 
   444     0F9D                     	;# 
   445     0F9E                     	;# 
   446     0FE3                     	;# 
   447     0FE4                     	;# 
   448     0FE5                     	;# 
   449     0FE6                     	;# 
   450     0FE7                     	;# 
   451     0FE8                     	;# 
   452     0FE9                     	;# 
   453     0FEA                     	;# 
   454     0FEB                     	;# 
   455     0FED                     	;# 
   456     0FEE                     	;# 
   457     0FEF                     	;# 
   458     0000                     	;# 
   459     0001                     	;# 
   460     0002                     	;# 
   461     0003                     	;# 
   462     0004                     	;# 
   463     0005                     	;# 
   464     0006                     	;# 
   465     0007                     	;# 
   466     0008                     	;# 
   467     0009                     	;# 
   468     000A                     	;# 
   469     000B                     	;# 
   470     000C                     	;# 
   471     000D                     	;# 
   472     000E                     	;# 
   473     0011                     	;# 
   474     0012                     	;# 
   475     0013                     	;# 
   476     0015                     	;# 
   477     0016                     	;# 
   478     0016                     	;# 
   479     0017                     	;# 
   480     0018                     	;# 
   481     0019                     	;# 
   482     001A                     	;# 
   483     001B                     	;# 
   484     001C                     	;# 
   485     008C                     	;# 
   486     008D                     	;# 
   487     008E                     	;# 
   488     0091                     	;# 
   489     0092                     	;# 
   490     0093                     	;# 
   491     0095                     	;# 
   492     0096                     	;# 
   493     0097                     	;# 
   494     0099                     	;# 
   495     009A                     	;# 
   496     009B                     	;# 
   497     009B                     	;# 
   498     009C                     	;# 
   499     009D                     	;# 
   500     009E                     	;# 
   501     009F                     	;# 
   502     010C                     	;# 
   503     010D                     	;# 
   504     010E                     	;# 
   505     0111                     	;# 
   506     0112                     	;# 
   507     0113                     	;# 
   508     0114                     	;# 
   509     0115                     	;# 
   510     0116                     	;# 
   511     0117                     	;# 
   512     0118                     	;# 
   513     0119                     	;# 
   514     011D                     	;# 
   515     018C                     	;# 
   516     018D                     	;# 
   517     018E                     	;# 
   518     0191                     	;# 
   519     0191                     	;# 
   520     0192                     	;# 
   521     0193                     	;# 
   522     0193                     	;# 
   523     0194                     	;# 
   524     0195                     	;# 
   525     0196                     	;# 
   526     0197                     	;# 
   527     0199                     	;# 
   528     019A                     	;# 
   529     019B                     	;# 
   530     019B                     	;# 
   531     019C                     	;# 
   532     019D                     	;# 
   533     019E                     	;# 
   534     019F                     	;# 
   535     020C                     	;# 
   536     020D                     	;# 
   537     0211                     	;# 
   538     0211                     	;# 
   539     0212                     	;# 
   540     0212                     	;# 
   541     0213                     	;# 
   542     0213                     	;# 
   543     0214                     	;# 
   544     0214                     	;# 
   545     0215                     	;# 
   546     0215                     	;# 
   547     0215                     	;# 
   548     0216                     	;# 
   549     0216                     	;# 
   550     0217                     	;# 
   551     0217                     	;# 
   552     0391                     	;# 
   553     0392                     	;# 
   554     0393                     	;# 
   555     0394                     	;# 
   556     0395                     	;# 
   557     0396                     	;# 
   558     0498                     	;# 
   559     0498                     	;# 
   560     0499                     	;# 
   561     049A                     	;# 
   562     049B                     	;# 
   563     049B                     	;# 
   564     049C                     	;# 
   565     049D                     	;# 
   566     049E                     	;# 
   567     049F                     	;# 
   568     0611                     	;# 
   569     0612                     	;# 
   570     0613                     	;# 
   571     0613                     	;# 
   572     0614                     	;# 
   573     0615                     	;# 
   574     0616                     	;# 
   575     0616                     	;# 
   576     0617                     	;# 
   577     0618                     	;# 
   578     0619                     	;# 
   579     0619                     	;# 
   580     061A                     	;# 
   581     061B                     	;# 
   582     061C                     	;# 
   583     061C                     	;# 
   584     0691                     	;# 
   585     0692                     	;# 
   586     0693                     	;# 
   587     0694                     	;# 
   588     0695                     	;# 
   589     0F0F                     	;# 
   590     0F10                     	;# 
   591     0F11                     	;# 
   592     0F12                     	;# 
   593     0F13                     	;# 
   594     0F14                     	;# 
   595     0F15                     	;# 
   596     0F16                     	;# 
   597     0F17                     	;# 
   598     0F18                     	;# 
   599     0F19                     	;# 
   600     0F1A                     	;# 
   601     0F1B                     	;# 
   602     0F1C                     	;# 
   603     0F1D                     	;# 
   604     0F1E                     	;# 
   605     0F1F                     	;# 
   606     0F20                     	;# 
   607     0F21                     	;# 
   608     0F22                     	;# 
   609     0F23                     	;# 
   610     0F24                     	;# 
   611     0F25                     	;# 
   612     0F26                     	;# 
   613     0F27                     	;# 
   614     0F28                     	;# 
   615     0F29                     	;# 
   616     0F2A                     	;# 
   617     0F2B                     	;# 
   618     0F2C                     	;# 
   619     0F2D                     	;# 
   620     0F2E                     	;# 
   621     0F2F                     	;# 
   622     0F8C                     	;# 
   623     0F8D                     	;# 
   624     0F91                     	;# 
   625     0F95                     	;# 
   626     0F96                     	;# 
   627     0F97                     	;# 
   628     0F9C                     	;# 
   629     0F9D                     	;# 
   630     0F9E                     	;# 
   631     0FE3                     	;# 
   632     0FE4                     	;# 
   633     0FE5                     	;# 
   634     0FE6                     	;# 
   635     0FE7                     	;# 
   636     0FE8                     	;# 
   637     0FE9                     	;# 
   638     0FEA                     	;# 
   639     0FEB                     	;# 
   640     0FED                     	;# 
   641     0FEE                     	;# 
   642     0FEF                     	;# 
   643     0000                     	;# 
   644     0001                     	;# 
   645     0002                     	;# 
   646     0003                     	;# 
   647     0004                     	;# 
   648     0005                     	;# 
   649     0006                     	;# 
   650     0007                     	;# 
   651     0008                     	;# 
   652     0009                     	;# 
   653     000A                     	;# 
   654     000B                     	;# 
   655     000C                     	;# 
   656     000D                     	;# 
   657     000E                     	;# 
   658     0011                     	;# 
   659     0012                     	;# 
   660     0013                     	;# 
   661     0015                     	;# 
   662     0016                     	;# 
   663     0016                     	;# 
   664     0017                     	;# 
   665     0018                     	;# 
   666     0019                     	;# 
   667     001A                     	;# 
   668     001B                     	;# 
   669     001C                     	;# 
   670     008C                     	;# 
   671     008D                     	;# 
   672     008E                     	;# 
   673     0091                     	;# 
   674     0092                     	;# 
   675     0093                     	;# 
   676     0095                     	;# 
   677     0096                     	;# 
   678     0097                     	;# 
   679     0099                     	;# 
   680     009A                     	;# 
   681     009B                     	;# 
   682     009B                     	;# 
   683     009C                     	;# 
   684     009D                     	;# 
   685     009E                     	;# 
   686     009F                     	;# 
   687     010C                     	;# 
   688     010D                     	;# 
   689     010E                     	;# 
   690     0111                     	;# 
   691     0112                     	;# 
   692     0113                     	;# 
   693     0114                     	;# 
   694     0115                     	;# 
   695     0116                     	;# 
   696     0117                     	;# 
   697     0118                     	;# 
   698     0119                     	;# 
   699     011D                     	;# 
   700     018C                     	;# 
   701     018D                     	;# 
   702     018E                     	;# 
   703     0191                     	;# 
   704     0191                     	;# 
   705     0192                     	;# 
   706     0193                     	;# 
   707     0193                     	;# 
   708     0194                     	;# 
   709     0195                     	;# 
   710     0196                     	;# 
   711     0197                     	;# 
   712     0199                     	;# 
   713     019A                     	;# 
   714     019B                     	;# 
   715     019B                     	;# 
   716     019C                     	;# 
   717     019D                     	;# 
   718     019E                     	;# 
   719     019F                     	;# 
   720     020C                     	;# 
   721     020D                     	;# 
   722     0211                     	;# 
   723     0211                     	;# 
   724     0212                     	;# 
   725     0212                     	;# 
   726     0213                     	;# 
   727     0213                     	;# 
   728     0214                     	;# 
   729     0214                     	;# 
   730     0215                     	;# 
   731     0215                     	;# 
   732     0215                     	;# 
   733     0216                     	;# 
   734     0216                     	;# 
   735     0217                     	;# 
   736     0217                     	;# 
   737     0391                     	;# 
   738     0392                     	;# 
   739     0393                     	;# 
   740     0394                     	;# 
   741     0395                     	;# 
   742     0396                     	;# 
   743     0498                     	;# 
   744     0498                     	;# 
   745     0499                     	;# 
   746     049A                     	;# 
   747     049B                     	;# 
   748     049B                     	;# 
   749     049C                     	;# 
   750     049D                     	;# 
   751     049E                     	;# 
   752     049F                     	;# 
   753     0611                     	;# 
   754     0612                     	;# 
   755     0613                     	;# 
   756     0613                     	;# 
   757     0614                     	;# 
   758     0615                     	;# 
   759     0616                     	;# 
   760     0616                     	;# 
   761     0617                     	;# 
   762     0618                     	;# 
   763     0619                     	;# 
   764     0619                     	;# 
   765     061A                     	;# 
   766     061B                     	;# 
   767     061C                     	;# 
   768     061C                     	;# 
   769     0691                     	;# 
   770     0692                     	;# 
   771     0693                     	;# 
   772     0694                     	;# 
   773     0695                     	;# 
   774     0F0F                     	;# 
   775     0F10                     	;# 
   776     0F11                     	;# 
   777     0F12                     	;# 
   778     0F13                     	;# 
   779     0F14                     	;# 
   780     0F15                     	;# 
   781     0F16                     	;# 
   782     0F17                     	;# 
   783     0F18                     	;# 
   784     0F19                     	;# 
   785     0F1A                     	;# 
   786     0F1B                     	;# 
   787     0F1C                     	;# 
   788     0F1D                     	;# 
   789     0F1E                     	;# 
   790     0F1F                     	;# 
   791     0F20                     	;# 
   792     0F21                     	;# 
   793     0F22                     	;# 
   794     0F23                     	;# 
   795     0F24                     	;# 
   796     0F25                     	;# 
   797     0F26                     	;# 
   798     0F27                     	;# 
   799     0F28                     	;# 
   800     0F29                     	;# 
   801     0F2A                     	;# 
   802     0F2B                     	;# 
   803     0F2C                     	;# 
   804     0F2D                     	;# 
   805     0F2E                     	;# 
   806     0F2F                     	;# 
   807     0F8C                     	;# 
   808     0F8D                     	;# 
   809     0F91                     	;# 
   810     0F95                     	;# 
   811     0F96                     	;# 
   812     0F97                     	;# 
   813     0F9C                     	;# 
   814     0F9D                     	;# 
   815     0F9E                     	;# 
   816     0FE3                     	;# 
   817     0FE4                     	;# 
   818     0FE5                     	;# 
   819     0FE6                     	;# 
   820     0FE7                     	;# 
   821     0FE8                     	;# 
   822     0FE9                     	;# 
   823     0FEA                     	;# 
   824     0FEB                     	;# 
   825     0FED                     	;# 
   826     0FEE                     	;# 
   827     0FEF                     	;# 
   828     0000                     	;# 
   829     0001                     	;# 
   830     0002                     	;# 
   831     0003                     	;# 
   832     0004                     	;# 
   833     0005                     	;# 
   834     0006                     	;# 
   835     0007                     	;# 
   836     0008                     	;# 
   837     0009                     	;# 
   838     000A                     	;# 
   839     000B                     	;# 
   840     000C                     	;# 
   841     000D                     	;# 
   842     000E                     	;# 
   843     0011                     	;# 
   844     0012                     	;# 
   845     0013                     	;# 
   846     0015                     	;# 
   847     0016                     	;# 
   848     0016                     	;# 
   849     0017                     	;# 
   850     0018                     	;# 
   851     0019                     	;# 
   852     001A                     	;# 
   853     001B                     	;# 
   854     001C                     	;# 
   855     008C                     	;# 
   856     008D                     	;# 
   857     008E                     	;# 
   858     0091                     	;# 
   859     0092                     	;# 
   860     0093                     	;# 
   861     0095                     	;# 
   862     0096                     	;# 
   863     0097                     	;# 
   864     0099                     	;# 
   865     009A                     	;# 
   866     009B                     	;# 
   867     009B                     	;# 
   868     009C                     	;# 
   869     009D                     	;# 
   870     009E                     	;# 
   871     009F                     	;# 
   872     010C                     	;# 
   873     010D                     	;# 
   874     010E                     	;# 
   875     0111                     	;# 
   876     0112                     	;# 
   877     0113                     	;# 
   878     0114                     	;# 
   879     0115                     	;# 
   880     0116                     	;# 
   881     0117                     	;# 
   882     0118                     	;# 
   883     0119                     	;# 
   884     011D                     	;# 
   885     018C                     	;# 
   886     018D                     	;# 
   887     018E                     	;# 
   888     0191                     	;# 
   889     0191                     	;# 
   890     0192                     	;# 
   891     0193                     	;# 
   892     0193                     	;# 
   893     0194                     	;# 
   894     0195                     	;# 
   895     0196                     	;# 
   896     0197                     	;# 
   897     0199                     	;# 
   898     019A                     	;# 
   899     019B                     	;# 
   900     019B                     	;# 
   901     019C                     	;# 
   902     019D                     	;# 
   903     019E                     	;# 
   904     019F                     	;# 
   905     020C                     	;# 
   906     020D                     	;# 
   907     0211                     	;# 
   908     0211                     	;# 
   909     0212                     	;# 
   910     0212                     	;# 
   911     0213                     	;# 
   912     0213                     	;# 
   913     0214                     	;# 
   914     0214                     	;# 
   915     0215                     	;# 
   916     0215                     	;# 
   917     0215                     	;# 
   918     0216                     	;# 
   919     0216                     	;# 
   920     0217                     	;# 
   921     0217                     	;# 
   922     0391                     	;# 
   923     0392                     	;# 
   924     0393                     	;# 
   925     0394                     	;# 
   926     0395                     	;# 
   927     0396                     	;# 
   928     0498                     	;# 
   929     0498                     	;# 
   930     0499                     	;# 
   931     049A                     	;# 
   932     049B                     	;# 
   933     049B                     	;# 
   934     049C                     	;# 
   935     049D                     	;# 
   936     049E                     	;# 
   937     049F                     	;# 
   938     0611                     	;# 
   939     0612                     	;# 
   940     0613                     	;# 
   941     0613                     	;# 
   942     0614                     	;# 
   943     0615                     	;# 
   944     0616                     	;# 
   945     0616                     	;# 
   946     0617                     	;# 
   947     0618                     	;# 
   948     0619                     	;# 
   949     0619                     	;# 
   950     061A                     	;# 
   951     061B                     	;# 
   952     061C                     	;# 
   953     061C                     	;# 
   954     0691                     	;# 
   955     0692                     	;# 
   956     0693                     	;# 
   957     0694                     	;# 
   958     0695                     	;# 
   959     0F0F                     	;# 
   960     0F10                     	;# 
   961     0F11                     	;# 
   962     0F12                     	;# 
   963     0F13                     	;# 
   964     0F14                     	;# 
   965     0F15                     	;# 
   966     0F16                     	;# 
   967     0F17                     	;# 
   968     0F18                     	;# 
   969     0F19                     	;# 
   970     0F1A                     	;# 
   971     0F1B                     	;# 
   972     0F1C                     	;# 
   973     0F1D                     	;# 
   974     0F1E                     	;# 
   975     0F1F                     	;# 
   976     0F20                     	;# 
   977     0F21                     	;# 
   978     0F22                     	;# 
   979     0F23                     	;# 
   980     0F24                     	;# 
   981     0F25                     	;# 
   982     0F26                     	;# 
   983     0F27                     	;# 
   984     0F28                     	;# 
   985     0F29                     	;# 
   986     0F2A                     	;# 
   987     0F2B                     	;# 
   988     0F2C                     	;# 
   989     0F2D                     	;# 
   990     0F2E                     	;# 
   991     0F2F                     	;# 
   992     0F8C                     	;# 
   993     0F8D                     	;# 
   994     0F91                     	;# 
   995     0F95                     	;# 
   996     0F96                     	;# 
   997     0F97                     	;# 
   998     0F9C                     	;# 
   999     0F9D                     	;# 
  1000     0F9E                     	;# 
  1001     0FE3                     	;# 
  1002     0FE4                     	;# 
  1003     0FE5                     	;# 
  1004     0FE6                     	;# 
  1005     0FE7                     	;# 
  1006     0FE8                     	;# 
  1007     0FE9                     	;# 
  1008     0FEA                     	;# 
  1009     0FEB                     	;# 
  1010     0FED                     	;# 
  1011     0FEE                     	;# 
  1012     0FEF                     	;# 
  1013     0000                     	;# 
  1014     0001                     	;# 
  1015     0002                     	;# 
  1016     0003                     	;# 
  1017     0004                     	;# 
  1018     0005                     	;# 
  1019     0006                     	;# 
  1020     0007                     	;# 
  1021     0008                     	;# 
  1022     0009                     	;# 
  1023     000A                     	;# 
  1024     000B                     	;# 
  1025     000C                     	;# 
  1026     000D                     	;# 
  1027     000E                     	;# 
  1028     0011                     	;# 
  1029     0012                     	;# 
  1030     0013                     	;# 
  1031     0015                     	;# 
  1032     0016                     	;# 
  1033     0016                     	;# 
  1034     0017                     	;# 
  1035     0018                     	;# 
  1036     0019                     	;# 
  1037     001A                     	;# 
  1038     001B                     	;# 
  1039     001C                     	;# 
  1040     008C                     	;# 
  1041     008D                     	;# 
  1042     008E                     	;# 
  1043     0091                     	;# 
  1044     0092                     	;# 
  1045     0093                     	;# 
  1046     0095                     	;# 
  1047     0096                     	;# 
  1048     0097                     	;# 
  1049     0099                     	;# 
  1050     009A                     	;# 
  1051     009B                     	;# 
  1052     009B                     	;# 
  1053     009C                     	;# 
  1054     009D                     	;# 
  1055     009E                     	;# 
  1056     009F                     	;# 
  1057     010C                     	;# 
  1058     010D                     	;# 
  1059     010E                     	;# 
  1060     0111                     	;# 
  1061     0112                     	;# 
  1062     0113                     	;# 
  1063     0114                     	;# 
  1064     0115                     	;# 
  1065     0116                     	;# 
  1066     0117                     	;# 
  1067     0118                     	;# 
  1068     0119                     	;# 
  1069     011D                     	;# 
  1070     018C                     	;# 
  1071     018D                     	;# 
  1072     018E                     	;# 
  1073     0191                     	;# 
  1074     0191                     	;# 
  1075     0192                     	;# 
  1076     0193                     	;# 
  1077     0193                     	;# 
  1078     0194                     	;# 
  1079     0195                     	;# 
  1080     0196                     	;# 
  1081     0197                     	;# 
  1082     0199                     	;# 
  1083     019A                     	;# 
  1084     019B                     	;# 
  1085     019B                     	;# 
  1086     019C                     	;# 
  1087     019D                     	;# 
  1088     019E                     	;# 
  1089     019F                     	;# 
  1090     020C                     	;# 
  1091     020D                     	;# 
  1092     0211                     	;# 
  1093     0211                     	;# 
  1094     0212                     	;# 
  1095     0212                     	;# 
  1096     0213                     	;# 
  1097     0213                     	;# 
  1098     0214                     	;# 
  1099     0214                     	;# 
  1100     0215                     	;# 
  1101     0215                     	;# 
  1102     0215                     	;# 
  1103     0216                     	;# 
  1104     0216                     	;# 
  1105     0217                     	;# 
  1106     0217                     	;# 
  1107     0391                     	;# 
  1108     0392                     	;# 
  1109     0393                     	;# 
  1110     0394                     	;# 
  1111     0395                     	;# 
  1112     0396                     	;# 
  1113     0498                     	;# 
  1114     0498                     	;# 
  1115     0499                     	;# 
  1116     049A                     	;# 
  1117     049B                     	;# 
  1118     049B                     	;# 
  1119     049C                     	;# 
  1120     049D                     	;# 
  1121     049E                     	;# 
  1122     049F                     	;# 
  1123     0611                     	;# 
  1124     0612                     	;# 
  1125     0613                     	;# 
  1126     0613                     	;# 
  1127     0614                     	;# 
  1128     0615                     	;# 
  1129     0616                     	;# 
  1130     0616                     	;# 
  1131     0617                     	;# 
  1132     0618                     	;# 
  1133     0619                     	;# 
  1134     0619                     	;# 
  1135     061A                     	;# 
  1136     061B                     	;# 
  1137     061C                     	;# 
  1138     061C                     	;# 
  1139     0691                     	;# 
  1140     0692                     	;# 
  1141     0693                     	;# 
  1142     0694                     	;# 
  1143     0695                     	;# 
  1144     0F0F                     	;# 
  1145     0F10                     	;# 
  1146     0F11                     	;# 
  1147     0F12                     	;# 
  1148     0F13                     	;# 
  1149     0F14                     	;# 
  1150     0F15                     	;# 
  1151     0F16                     	;# 
  1152     0F17                     	;# 
  1153     0F18                     	;# 
  1154     0F19                     	;# 
  1155     0F1A                     	;# 
  1156     0F1B                     	;# 
  1157     0F1C                     	;# 
  1158     0F1D                     	;# 
  1159     0F1E                     	;# 
  1160     0F1F                     	;# 
  1161     0F20                     	;# 
  1162     0F21                     	;# 
  1163     0F22                     	;# 
  1164     0F23                     	;# 
  1165     0F24                     	;# 
  1166     0F25                     	;# 
  1167     0F26                     	;# 
  1168     0F27                     	;# 
  1169     0F28                     	;# 
  1170     0F29                     	;# 
  1171     0F2A                     	;# 
  1172     0F2B                     	;# 
  1173     0F2C                     	;# 
  1174     0F2D                     	;# 
  1175     0F2E                     	;# 
  1176     0F2F                     	;# 
  1177     0F8C                     	;# 
  1178     0F8D                     	;# 
  1179     0F91                     	;# 
  1180     0F95                     	;# 
  1181     0F96                     	;# 
  1182     0F97                     	;# 
  1183     0F9C                     	;# 
  1184     0F9D                     	;# 
  1185     0F9E                     	;# 
  1186     0FE3                     	;# 
  1187     0FE4                     	;# 
  1188     0FE5                     	;# 
  1189     0FE6                     	;# 
  1190     0FE7                     	;# 
  1191     0FE8                     	;# 
  1192     0FE9                     	;# 
  1193     0FEA                     	;# 
  1194     0FEB                     	;# 
  1195     0FED                     	;# 
  1196     0FEE                     	;# 
  1197     0FEF                     	;# 
  1198     0000                     	;# 
  1199     0001                     	;# 
  1200     0002                     	;# 
  1201     0003                     	;# 
  1202     0004                     	;# 
  1203     0005                     	;# 
  1204     0006                     	;# 
  1205     0007                     	;# 
  1206     0008                     	;# 
  1207     0009                     	;# 
  1208     000A                     	;# 
  1209     000B                     	;# 
  1210     000C                     	;# 
  1211     000D                     	;# 
  1212     000E                     	;# 
  1213     0011                     	;# 
  1214     0012                     	;# 
  1215     0013                     	;# 
  1216     0015                     	;# 
  1217     0016                     	;# 
  1218     0016                     	;# 
  1219     0017                     	;# 
  1220     0018                     	;# 
  1221     0019                     	;# 
  1222     001A                     	;# 
  1223     001B                     	;# 
  1224     001C                     	;# 
  1225     008C                     	;# 
  1226     008D                     	;# 
  1227     008E                     	;# 
  1228     0091                     	;# 
  1229     0092                     	;# 
  1230     0093                     	;# 
  1231     0095                     	;# 
  1232     0096                     	;# 
  1233     0097                     	;# 
  1234     0099                     	;# 
  1235     009A                     	;# 
  1236     009B                     	;# 
  1237     009B                     	;# 
  1238     009C                     	;# 
  1239     009D                     	;# 
  1240     009E                     	;# 
  1241     009F                     	;# 
  1242     010C                     	;# 
  1243     010D                     	;# 
  1244     010E                     	;# 
  1245     0111                     	;# 
  1246     0112                     	;# 
  1247     0113                     	;# 
  1248     0114                     	;# 
  1249     0115                     	;# 
  1250     0116                     	;# 
  1251     0117                     	;# 
  1252     0118                     	;# 
  1253     0119                     	;# 
  1254     011D                     	;# 
  1255     018C                     	;# 
  1256     018D                     	;# 
  1257     018E                     	;# 
  1258     0191                     	;# 
  1259     0191                     	;# 
  1260     0192                     	;# 
  1261     0193                     	;# 
  1262     0193                     	;# 
  1263     0194                     	;# 
  1264     0195                     	;# 
  1265     0196                     	;# 
  1266     0197                     	;# 
  1267     0199                     	;# 
  1268     019A                     	;# 
  1269     019B                     	;# 
  1270     019B                     	;# 
  1271     019C                     	;# 
  1272     019D                     	;# 
  1273     019E                     	;# 
  1274     019F                     	;# 
  1275     020C                     	;# 
  1276     020D                     	;# 
  1277     0211                     	;# 
  1278     0211                     	;# 
  1279     0212                     	;# 
  1280     0212                     	;# 
  1281     0213                     	;# 
  1282     0213                     	;# 
  1283     0214                     	;# 
  1284     0214                     	;# 
  1285     0215                     	;# 
  1286     0215                     	;# 
  1287     0215                     	;# 
  1288     0216                     	;# 
  1289     0216                     	;# 
  1290     0217                     	;# 
  1291     0217                     	;# 
  1292     0391                     	;# 
  1293     0392                     	;# 
  1294     0393                     	;# 
  1295     0394                     	;# 
  1296     0395                     	;# 
  1297     0396                     	;# 
  1298     0498                     	;# 
  1299     0498                     	;# 
  1300     0499                     	;# 
  1301     049A                     	;# 
  1302     049B                     	;# 
  1303     049B                     	;# 
  1304     049C                     	;# 
  1305     049D                     	;# 
  1306     049E                     	;# 
  1307     049F                     	;# 
  1308     0611                     	;# 
  1309     0612                     	;# 
  1310     0613                     	;# 
  1311     0613                     	;# 
  1312     0614                     	;# 
  1313     0615                     	;# 
  1314     0616                     	;# 
  1315     0616                     	;# 
  1316     0617                     	;# 
  1317     0618                     	;# 
  1318     0619                     	;# 
  1319     0619                     	;# 
  1320     061A                     	;# 
  1321     061B                     	;# 
  1322     061C                     	;# 
  1323     061C                     	;# 
  1324     0691                     	;# 
  1325     0692                     	;# 
  1326     0693                     	;# 
  1327     0694                     	;# 
  1328     0695                     	;# 
  1329     0F0F                     	;# 
  1330     0F10                     	;# 
  1331     0F11                     	;# 
  1332     0F12                     	;# 
  1333     0F13                     	;# 
  1334     0F14                     	;# 
  1335     0F15                     	;# 
  1336     0F16                     	;# 
  1337     0F17                     	;# 
  1338     0F18                     	;# 
  1339     0F19                     	;# 
  1340     0F1A                     	;# 
  1341     0F1B                     	;# 
  1342     0F1C                     	;# 
  1343     0F1D                     	;# 
  1344     0F1E                     	;# 
  1345     0F1F                     	;# 
  1346     0F20                     	;# 
  1347     0F21                     	;# 
  1348     0F22                     	;# 
  1349     0F23                     	;# 
  1350     0F24                     	;# 
  1351     0F25                     	;# 
  1352     0F26                     	;# 
  1353     0F27                     	;# 
  1354     0F28                     	;# 
  1355     0F29                     	;# 
  1356     0F2A                     	;# 
  1357     0F2B                     	;# 
  1358     0F2C                     	;# 
  1359     0F2D                     	;# 
  1360     0F2E                     	;# 
  1361     0F2F                     	;# 
  1362     0F8C                     	;# 
  1363     0F8D                     	;# 
  1364     0F91                     	;# 
  1365     0F95                     	;# 
  1366     0F96                     	;# 
  1367     0F97                     	;# 
  1368     0F9C                     	;# 
  1369     0F9D                     	;# 
  1370     0F9E                     	;# 
  1371     0FE3                     	;# 
  1372     0FE4                     	;# 
  1373     0FE5                     	;# 
  1374     0FE6                     	;# 
  1375     0FE7                     	;# 
  1376     0FE8                     	;# 
  1377     0FE9                     	;# 
  1378     0FEA                     	;# 
  1379     0FEB                     	;# 
  1380     0FED                     	;# 
  1381     0FEE                     	;# 
  1382     0FEF                     	;# 
  1383     0000                     	;# 
  1384     0001                     	;# 
  1385     0002                     	;# 
  1386     0003                     	;# 
  1387     0004                     	;# 
  1388     0005                     	;# 
  1389     0006                     	;# 
  1390     0007                     	;# 
  1391     0008                     	;# 
  1392     0009                     	;# 
  1393     000A                     	;# 
  1394     000B                     	;# 
  1395     000C                     	;# 
  1396     000D                     	;# 
  1397     000E                     	;# 
  1398     0011                     	;# 
  1399     0012                     	;# 
  1400     0013                     	;# 
  1401     0015                     	;# 
  1402     0016                     	;# 
  1403     0016                     	;# 
  1404     0017                     	;# 
  1405     0018                     	;# 
  1406     0019                     	;# 
  1407     001A                     	;# 
  1408     001B                     	;# 
  1409     001C                     	;# 
  1410     008C                     	;# 
  1411     008D                     	;# 
  1412     008E                     	;# 
  1413     0091                     	;# 
  1414     0092                     	;# 
  1415     0093                     	;# 
  1416     0095                     	;# 
  1417     0096                     	;# 
  1418     0097                     	;# 
  1419     0099                     	;# 
  1420     009A                     	;# 
  1421     009B                     	;# 
  1422     009B                     	;# 
  1423     009C                     	;# 
  1424     009D                     	;# 
  1425     009E                     	;# 
  1426     009F                     	;# 
  1427     010C                     	;# 
  1428     010D                     	;# 
  1429     010E                     	;# 
  1430     0111                     	;# 
  1431     0112                     	;# 
  1432     0113                     	;# 
  1433     0114                     	;# 
  1434     0115                     	;# 
  1435     0116                     	;# 
  1436     0117                     	;# 
  1437     0118                     	;# 
  1438     0119                     	;# 
  1439     011D                     	;# 
  1440     018C                     	;# 
  1441     018D                     	;# 
  1442     018E                     	;# 
  1443     0191                     	;# 
  1444     0191                     	;# 
  1445     0192                     	;# 
  1446     0193                     	;# 
  1447     0193                     	;# 
  1448     0194                     	;# 
  1449     0195                     	;# 
  1450     0196                     	;# 
  1451     0197                     	;# 
  1452     0199                     	;# 
  1453     019A                     	;# 
  1454     019B                     	;# 
  1455     019B                     	;# 
  1456     019C                     	;# 
  1457     019D                     	;# 
  1458     019E                     	;# 
  1459     019F                     	;# 
  1460     020C                     	;# 
  1461     020D                     	;# 
  1462     0211                     	;# 
  1463     0211                     	;# 
  1464     0212                     	;# 
  1465     0212                     	;# 
  1466     0213                     	;# 
  1467     0213                     	;# 
  1468     0214                     	;# 
  1469     0214                     	;# 
  1470     0215                     	;# 
  1471     0215                     	;# 
  1472     0215                     	;# 
  1473     0216                     	;# 
  1474     0216                     	;# 
  1475     0217                     	;# 
  1476     0217                     	;# 
  1477     0391                     	;# 
  1478     0392                     	;# 
  1479     0393                     	;# 
  1480     0394                     	;# 
  1481     0395                     	;# 
  1482     0396                     	;# 
  1483     0498                     	;# 
  1484     0498                     	;# 
  1485     0499                     	;# 
  1486     049A                     	;# 
  1487     049B                     	;# 
  1488     049B                     	;# 
  1489     049C                     	;# 
  1490     049D                     	;# 
  1491     049E                     	;# 
  1492     049F                     	;# 
  1493     0611                     	;# 
  1494     0612                     	;# 
  1495     0613                     	;# 
  1496     0613                     	;# 
  1497     0614                     	;# 
  1498     0615                     	;# 
  1499     0616                     	;# 
  1500     0616                     	;# 
  1501     0617                     	;# 
  1502     0618                     	;# 
  1503     0619                     	;# 
  1504     0619                     	;# 
  1505     061A                     	;# 
  1506     061B                     	;# 
  1507     061C                     	;# 
  1508     061C                     	;# 
  1509     0691                     	;# 
  1510     0692                     	;# 
  1511     0693                     	;# 
  1512     0694                     	;# 
  1513     0695                     	;# 
  1514     0F0F                     	;# 
  1515     0F10                     	;# 
  1516     0F11                     	;# 
  1517     0F12                     	;# 
  1518     0F13                     	;# 
  1519     0F14                     	;# 
  1520     0F15                     	;# 
  1521     0F16                     	;# 
  1522     0F17                     	;# 
  1523     0F18                     	;# 
  1524     0F19                     	;# 
  1525     0F1A                     	;# 
  1526     0F1B                     	;# 
  1527     0F1C                     	;# 
  1528     0F1D                     	;# 
  1529     0F1E                     	;# 
  1530     0F1F                     	;# 
  1531     0F20                     	;# 
  1532     0F21                     	;# 
  1533     0F22                     	;# 
  1534     0F23                     	;# 
  1535     0F24                     	;# 
  1536     0F25                     	;# 
  1537     0F26                     	;# 
  1538     0F27                     	;# 
  1539     0F28                     	;# 
  1540     0F29                     	;# 
  1541     0F2A                     	;# 
  1542     0F2B                     	;# 
  1543     0F2C                     	;# 
  1544     0F2D                     	;# 
  1545     0F2E                     	;# 
  1546     0F2F                     	;# 
  1547     0F8C                     	;# 
  1548     0F8D                     	;# 
  1549     0F91                     	;# 
  1550     0F95                     	;# 
  1551     0F96                     	;# 
  1552     0F97                     	;# 
  1553     0F9C                     	;# 
  1554     0F9D                     	;# 
  1555     0F9E                     	;# 
  1556     0FE3                     	;# 
  1557     0FE4                     	;# 
  1558     0FE5                     	;# 
  1559     0FE6                     	;# 
  1560     0FE7                     	;# 
  1561     0FE8                     	;# 
  1562     0FE9                     	;# 
  1563     0FEA                     	;# 
  1564     0FEB                     	;# 
  1565     0FED                     	;# 
  1566     0FEE                     	;# 
  1567     0FEF                     	;# 
  1568     0000                     	;# 
  1569     0001                     	;# 
  1570     0002                     	;# 
  1571     0003                     	;# 
  1572     0004                     	;# 
  1573     0005                     	;# 
  1574     0006                     	;# 
  1575     0007                     	;# 
  1576     0008                     	;# 
  1577     0009                     	;# 
  1578     000A                     	;# 
  1579     000B                     	;# 
  1580     000C                     	;# 
  1581     000D                     	;# 
  1582     000E                     	;# 
  1583     0011                     	;# 
  1584     0012                     	;# 
  1585     0013                     	;# 
  1586     0015                     	;# 
  1587     0016                     	;# 
  1588     0016                     	;# 
  1589     0017                     	;# 
  1590     0018                     	;# 
  1591     0019                     	;# 
  1592     001A                     	;# 
  1593     001B                     	;# 
  1594     001C                     	;# 
  1595     008C                     	;# 
  1596     008D                     	;# 
  1597     008E                     	;# 
  1598     0091                     	;# 
  1599     0092                     	;# 
  1600     0093                     	;# 
  1601     0095                     	;# 
  1602     0096                     	;# 
  1603     0097                     	;# 
  1604     0099                     	;# 
  1605     009A                     	;# 
  1606     009B                     	;# 
  1607     009B                     	;# 
  1608     009C                     	;# 
  1609     009D                     	;# 
  1610     009E                     	;# 
  1611     009F                     	;# 
  1612     010C                     	;# 
  1613     010D                     	;# 
  1614     010E                     	;# 
  1615     0111                     	;# 
  1616     0112                     	;# 
  1617     0113                     	;# 
  1618     0114                     	;# 
  1619     0115                     	;# 
  1620     0116                     	;# 
  1621     0117                     	;# 
  1622     0118                     	;# 
  1623     0119                     	;# 
  1624     011D                     	;# 
  1625     018C                     	;# 
  1626     018D                     	;# 
  1627     018E                     	;# 
  1628     0191                     	;# 
  1629     0191                     	;# 
  1630     0192                     	;# 
  1631     0193                     	;# 
  1632     0193                     	;# 
  1633     0194                     	;# 
  1634     0195                     	;# 
  1635     0196                     	;# 
  1636     0197                     	;# 
  1637     0199                     	;# 
  1638     019A                     	;# 
  1639     019B                     	;# 
  1640     019B                     	;# 
  1641     019C                     	;# 
  1642     019D                     	;# 
  1643     019E                     	;# 
  1644     019F                     	;# 
  1645     020C                     	;# 
  1646     020D                     	;# 
  1647     0211                     	;# 
  1648     0211                     	;# 
  1649     0212                     	;# 
  1650     0212                     	;# 
  1651     0213                     	;# 
  1652     0213                     	;# 
  1653     0214                     	;# 
  1654     0214                     	;# 
  1655     0215                     	;# 
  1656     0215                     	;# 
  1657     0215                     	;# 
  1658     0216                     	;# 
  1659     0216                     	;# 
  1660     0217                     	;# 
  1661     0217                     	;# 
  1662     0391                     	;# 
  1663     0392                     	;# 
  1664     0393                     	;# 
  1665     0394                     	;# 
  1666     0395                     	;# 
  1667     0396                     	;# 
  1668     0498                     	;# 
  1669     0498                     	;# 
  1670     0499                     	;# 
  1671     049A                     	;# 
  1672     049B                     	;# 
  1673     049B                     	;# 
  1674     049C                     	;# 
  1675     049D                     	;# 
  1676     049E                     	;# 
  1677     049F                     	;# 
  1678     0611                     	;# 
  1679     0612                     	;# 
  1680     0613                     	;# 
  1681     0613                     	;# 
  1682     0614                     	;# 
  1683     0615                     	;# 
  1684     0616                     	;# 
  1685     0616                     	;# 
  1686     0617                     	;# 
  1687     0618                     	;# 
  1688     0619                     	;# 
  1689     0619                     	;# 
  1690     061A                     	;# 
  1691     061B                     	;# 
  1692     061C                     	;# 
  1693     061C                     	;# 
  1694     0691                     	;# 
  1695     0692                     	;# 
  1696     0693                     	;# 
  1697     0694                     	;# 
  1698     0695                     	;# 
  1699     0F0F                     	;# 
  1700     0F10                     	;# 
  1701     0F11                     	;# 
  1702     0F12                     	;# 
  1703     0F13                     	;# 
  1704     0F14                     	;# 
  1705     0F15                     	;# 
  1706     0F16                     	;# 
  1707     0F17                     	;# 
  1708     0F18                     	;# 
  1709     0F19                     	;# 
  1710     0F1A                     	;# 
  1711     0F1B                     	;# 
  1712     0F1C                     	;# 
  1713     0F1D                     	;# 
  1714     0F1E                     	;# 
  1715     0F1F                     	;# 
  1716     0F20                     	;# 
  1717     0F21                     	;# 
  1718     0F22                     	;# 
  1719     0F23                     	;# 
  1720     0F24                     	;# 
  1721     0F25                     	;# 
  1722     0F26                     	;# 
  1723     0F27                     	;# 
  1724     0F28                     	;# 
  1725     0F29                     	;# 
  1726     0F2A                     	;# 
  1727     0F2B                     	;# 
  1728     0F2C                     	;# 
  1729     0F2D                     	;# 
  1730     0F2E                     	;# 
  1731     0F2F                     	;# 
  1732     0F8C                     	;# 
  1733     0F8D                     	;# 
  1734     0F91                     	;# 
  1735     0F95                     	;# 
  1736     0F96                     	;# 
  1737     0F97                     	;# 
  1738     0F9C                     	;# 
  1739     0F9D                     	;# 
  1740     0F9E                     	;# 
  1741     0FE3                     	;# 
  1742     0FE4                     	;# 
  1743     0FE5                     	;# 
  1744     0FE6                     	;# 
  1745     0FE7                     	;# 
  1746     0FE8                     	;# 
  1747     0FE9                     	;# 
  1748     0FEA                     	;# 
  1749     0FEB                     	;# 
  1750     0FED                     	;# 
  1751     0FEE                     	;# 
  1752     0FEF                     	;# 
  1753                           
  1754 ;; Function _I2C_SlaveDefWrColInterruptHandler is unused but had its address taken
  1755     0000                     
  1756 ;; Function _I2C_SlaveDefBusColInterruptHandler is unused but had its address taken
  1757     0000                     
  1758                           	psect	stringtext1
  1759     02F0                     __pstringtext1:
  1760     02F0                     _safety:
  1761     02F0  34CD               	retlw	205
  1762     02F1  34CC               	retlw	204
  1763     02F2  344C               	retlw	76
  1764     02F3  3440               	retlw	64
  1765     02F4  3400               	retlw	0
  1766     02F5  3400               	retlw	0
  1767     02F6  3480               	retlw	128
  1768     02F7  3440               	retlw	64
  1769     02F8  343D               	retlw	61
  1770     02F9  340A               	retlw	10
  1771     02FA  34BF               	retlw	191
  1772     02FB  3441               	retlw	65
  1773     02FC  345C               	retlw	92
  1774     02FD  348F               	retlw	143
  1775     02FE  34E6               	retlw	230
  1776     02FF  3441               	retlw	65
  1777     0300                     __end_of_safety:
  1778                           
  1779                           	psect	nvBANK0
  1780     003F                     __pnvBANK0:
  1781     003F                     _TMR1_InterruptHandler:
  1782     003F                     	ds	2
  1783     0041                     _timer1ReloadVal:
  1784     0041                     	ds	2
  1785     001C                     _T2CONbits	set	28
  1786     001C                     _T2CON	set	28
  1787     001A                     _TMR2	set	26
  1788     001B                     _PR2	set	27
  1789     0019                     _T1GCONbits	set	25
  1790     0018                     _T1CONbits	set	24
  1791     0018                     _T1CON	set	24
  1792     0016                     _TMR1L	set	22
  1793     0017                     _TMR1H	set	23
  1794     0019                     _T1GCON	set	25
  1795     0011                     _PIR1bits	set	17
  1796     0012                     _PIR2bits	set	18
  1797     000B                     _INTCONbits	set	11
  1798     009D                     _ADCON0bits	set	157
  1799     009D                     _ADCON0	set	157
  1800     009C                     _ADRESH	set	156
  1801     009B                     _ADRESL	set	155
  1802     009F                     _ADCON2	set	159
  1803     009E                     _ADCON1	set	158
  1804     0091                     _PIE1bits	set	145
  1805     0092                     _PIE2bits	set	146
  1806     0095                     _OPTION_REGbits	set	149
  1807     008E                     _TRISC	set	142
  1808     008D                     _TRISB	set	141
  1809     008C                     _TRISA	set	140
  1810     0097                     _WDTCON	set	151
  1811     0099                     _OSCCON	set	153
  1812     0097                     _WDTCONbits	set	151
  1813     0117                     _FVRCONbits	set	279
  1814     0117                     _FVRCON	set	279
  1815     011D                     _APFCON	set	285
  1816     010D                     _LATB	set	269
  1817     010C                     _LATA	set	268
  1818     0116                     _BORCON	set	278
  1819     010E                     _LATC	set	270
  1820     018C                     _ANSELA	set	396
  1821     018D                     _ANSELB	set	397
  1822     018E                     _ANSELC	set	398
  1823     0211                     _SSP1BUF	set	529
  1824     0213                     _SSP1MSK	set	531
  1825     0212                     _SSP1ADD	set	530
  1826     0215                     _SSP1CON1bits	set	533
  1827     0216                     _SSP1CON2	set	534
  1828     0215                     _SSP1CON1	set	533
  1829     0214                     _SSP1STAT	set	532
  1830     020C                     _WPUA	set	524
  1831     020D                     _WPUB	set	525
  1832     0216                     _SSP1CON2bits	set	534
  1833     0214                     _SSP1STATbits	set	532
  1834                           
  1835                           	psect	cinit
  1836     0037                     start_initialization:	
  1837                           ; #config settings
  1838                           
  1839     0037                     __initialization:
  1840                           
  1841                           ; Clear objects allocated to COMMON
  1842     0037  01F7               	clrf	__pbssCOMMON& (0+127)
  1843     0038  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1844     0039  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1845                           
  1846                           ; Clear objects allocated to BANK0
  1847     003A  3020               	movlw	low __pbssBANK0
  1848     003B  0084               	movwf	4
  1849     003C  3000               	movlw	high __pbssBANK0
  1850     003D  0085               	movwf	5
  1851     003E  301F               	movlw	31
  1852     003F  3183  2351  3180   	fcall	clear_ram0
  1853     0042                     end_of_initialization:	
  1854                           ;End of C runtime variable initialization code
  1855                           
  1856     0042                     __end_of__initialization:
  1857     0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1858     0043  0020               	movlb	0
  1859     0044  3180  2846         	ljmp	_main	;jump to C main() function
  1860                           
  1861                           	psect	bssCOMMON
  1862     0077                     __pbssCOMMON:
  1863     0077                     _i2cSlaveState:
  1864     0077                     	ds	1
  1865     0078                     _i2cWrData:
  1866     0078                     	ds	1
  1867     0079                     _selectedReference:
  1868     0079                     	ds	1
  1869                           
  1870                           	psect	bssBANK0
  1871     0020                     __pbssBANK0:
  1872     0020                     _memory:
  1873     0020                     	ds	13
  1874     002D                     _ADC_InterruptHandler:
  1875     002D                     	ds	2
  1876     002F                     _I2C_SlaveWrColInterruptHandler:
  1877     002F                     	ds	2
  1878     0031                     _I2C_SlaveBusColInterruptHandler:
  1879     0031                     	ds	2
  1880     0033                     _I2C_SlaveAddrInterruptHandler:
  1881     0033                     	ds	2
  1882     0035                     _I2C_SlaveWrInterruptHandler:
  1883     0035                     	ds	2
  1884     0037                     _I2C_SlaveRdInterruptHandler:
  1885     0037                     	ds	2
  1886     0039                     _MSSP_InterruptHandler:
  1887     0039                     	ds	2
  1888     003B                     _i2cSlaveAddr:
  1889     003B                     	ds	1
  1890     003C                     _i2cRdData:
  1891     003C                     	ds	1
  1892     003D                     _currentlyBalancing:
  1893     003D                     	ds	1
  1894     003E                     _I2C_Command:
  1895     003E                     	ds	1
  1896                           
  1897                           	psect	clrtext
  1898     0351                     clear_ram0:	
  1899                           ;	Called with FSR0 containing the base address, and
  1900                           ;	WREG with the size to clear
  1901                           
  1902     0351  0064               	clrwdt	;clear the watchdog before getting into this loop
  1903     0352                     clrloop0:
  1904     0352  0180               	clrf	0	;clear RAM location pointed to by FSR
  1905     0353  3101               	addfsr 0,1
  1906     0354  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1907     0355  2B52               	goto	clrloop0	;have we reached the end yet?
  1908     0356  3400               	retlw	0	;all done for this memory range, return
  1909                           
  1910                           	psect	cstackCOMMON
  1911     0070                     __pcstackCOMMON:
  1912     0070                     ?_SYSTEM_Initialize:
  1913     0070                     ?_I2C_Read:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916     0070                     ?_I2C_Write:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919     0070                     ?_sendAllDatatoMaster:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922     0070                     ?_I2C_Initialize:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925     0070                     ?_PIN_MANAGER_Initialize:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928     0070                     ?_OSCILLATOR_Initialize:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931     0070                     ?_WDT_Initialize:	
  1932                           ; 1 bytes @ 0x0
  1933                           
  1934     0070                     ?_FVR_Initialize:	
  1935                           ; 1 bytes @ 0x0
  1936                           
  1937     0070                     ?_ADC_Initialize:	
  1938                           ; 1 bytes @ 0x0
  1939                           
  1940     0070                     ?_TMR2_Initialize:	
  1941                           ; 1 bytes @ 0x0
  1942                           
  1943     0070                     ?_TMR1_Initialize:	
  1944                           ; 1 bytes @ 0x0
  1945                           
  1946     0070                     ?_TMR1_ISR:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949     0070                     ?_TMR1_DefaultInterruptHandler:	
  1950                           ; 1 bytes @ 0x0
  1951                           
  1952     0070                     ??_TMR1_DefaultInterruptHandler:	
  1953                           ; 1 bytes @ 0x0
  1954                           
  1955     0070                     ?_I2C_Isr:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958     0070                     ?_I2C_SlaveDefWrInterruptHandler:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961     0070                     ?_I2C_SlaveDefRdInterruptHandler:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964     0070                     ??_I2C_SlaveDefRdInterruptHandler:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967     0070                     ?_I2C_SlaveDefAddrInterruptHandler:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970     0070                     ??_I2C_SlaveDefAddrInterruptHandler:	
  1971                           ; 1 bytes @ 0x0
  1972                           
  1973     0070                     ?_I2C_SlaveGetRxData:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976     0070                     ?_I2C_SlaveSendTxData:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979     0070                     ?_I2C_SlaveIsRead:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982     0070                     ??_I2C_SlaveIsRead:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985     0070                     ?_I2C_SlaveClearIrq:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988     0070                     ??_I2C_SlaveClearIrq:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991     0070                     ?_I2C_SlaveIsAddr:	
  1992                           ; 1 bytes @ 0x0
  1993                           
  1994     0070                     ??_I2C_SlaveIsAddr:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997     0070                     ?_I2C_SlaveAddrCallBack:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000     0070                     ??_I2C_SlaveAddrCallBack:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003     0070                     ?_I2C_SlaveIsTxBufEmpty:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006     0070                     ??_I2C_SlaveIsTxBufEmpty:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009     0070                     ?_I2C_SlaveWrCallBack:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012     0070                     ?_I2C_SlaveIsRxBufFull:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015     0070                     ??_I2C_SlaveIsRxBufFull:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018     0070                     ?_I2C_SlaveRdCallBack:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021     0070                     ??_I2C_SlaveRdCallBack:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024     0070                     ?_I2C_SlaveReleaseClock:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027     0070                     ??_I2C_SlaveReleaseClock:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030     0070                     ?_main:	
  2031                           ; 1 bytes @ 0x0
  2032                           
  2033     0070                     ?_INTERRUPT_InterruptManager:	
  2034                           ; 1 bytes @ 0x0
  2035                           
  2036     0070                     ?_TMR1_WriteTimer:	
  2037                           ; 1 bytes @ 0x0
  2038                           
  2039     0070                     ?i1_I2C_SlaveSendTxData:	
  2040                           ; 1 bytes @ 0x0
  2041                           
  2042     0070                     ??i1_I2C_SlaveSendTxData:	
  2043                           ; 1 bytes @ 0x0
  2044                           
  2045     0070                     ?i1_I2C_SlaveGetRxData:	
  2046                           ; 1 bytes @ 0x0
  2047                           
  2048     0070                     ??i1_I2C_SlaveGetRxData:	
  2049                           ; 1 bytes @ 0x0
  2050                           
  2051     0070                     i1I2C_SlaveSendTxData@data:	
  2052                           ; 1 bytes @ 0x0
  2053                           
  2054     0070                     TMR1_WriteTimer@timerVal:	
  2055                           ; 1 bytes @ 0x0
  2056                           
  2057                           
  2058                           ; 2 bytes @ 0x0
  2059     0070                     	ds	1
  2060     0071                     ??_I2C_Isr:
  2061     0071                     ??_I2C_SlaveDefWrInterruptHandler:	
  2062                           ; 1 bytes @ 0x1
  2063                           
  2064     0071                     ??_I2C_SlaveWrCallBack:	
  2065                           ; 1 bytes @ 0x1
  2066                           
  2067                           
  2068                           ; 1 bytes @ 0x1
  2069     0071                     	ds	1
  2070     0072                     ??_TMR1_ISR:
  2071     0072                     ??_TMR1_WriteTimer:	
  2072                           ; 1 bytes @ 0x2
  2073                           
  2074                           
  2075                           ; 1 bytes @ 0x2
  2076     0072                     	ds	1
  2077     0073                     ??_I2C_Read:
  2078     0073                     ??_I2C_Initialize:	
  2079                           ; 1 bytes @ 0x3
  2080                           
  2081     0073                     ??_PIN_MANAGER_Initialize:	
  2082                           ; 1 bytes @ 0x3
  2083                           
  2084     0073                     ??_OSCILLATOR_Initialize:	
  2085                           ; 1 bytes @ 0x3
  2086                           
  2087     0073                     ??_WDT_Initialize:	
  2088                           ; 1 bytes @ 0x3
  2089                           
  2090     0073                     ??_FVR_Initialize:	
  2091                           ; 1 bytes @ 0x3
  2092                           
  2093     0073                     ??_ADC_Initialize:	
  2094                           ; 1 bytes @ 0x3
  2095                           
  2096     0073                     ??_TMR2_Initialize:	
  2097                           ; 1 bytes @ 0x3
  2098                           
  2099     0073                     ?_TMR1_SetInterruptHandler:	
  2100                           ; 1 bytes @ 0x3
  2101                           
  2102     0073                     ??_I2C_SlaveGetRxData:	
  2103                           ; 1 bytes @ 0x3
  2104                           
  2105     0073                     ??_I2C_SlaveSendTxData:	
  2106                           ; 1 bytes @ 0x3
  2107                           
  2108     0073                     ??_INTERRUPT_InterruptManager:	
  2109                           ; 1 bytes @ 0x3
  2110                           
  2111     0073                     ?_ADC_GetConversion:	
  2112                           ; 1 bytes @ 0x3
  2113                           
  2114     0073                     I2C_SlaveSendTxData@data:	
  2115                           ; 2 bytes @ 0x3
  2116                           
  2117     0073                     TMR1_SetInterruptHandler@InterruptHandler:	
  2118                           ; 1 bytes @ 0x3
  2119                           
  2120                           
  2121                           ; 2 bytes @ 0x3
  2122     0073                     	ds	1
  2123     0074                     ??_I2C_Write:
  2124     0074                     I2C_Write@data:	
  2125                           ; 1 bytes @ 0x4
  2126                           
  2127                           
  2128                           ; 1 bytes @ 0x4
  2129     0074                     	ds	1
  2130     0075                     ??_SYSTEM_Initialize:
  2131     0075                     ?_sendDataToMaster:	
  2132                           ; 1 bytes @ 0x5
  2133                           
  2134     0075                     ??_sendAllDatatoMaster:	
  2135                           ; 1 bytes @ 0x5
  2136                           
  2137     0075                     ??_ADC_GetConversion:	
  2138                           ; 1 bytes @ 0x5
  2139                           
  2140     0075                     ??_TMR1_Initialize:	
  2141                           ; 1 bytes @ 0x5
  2142                           
  2143     0075                     ??_TMR1_SetInterruptHandler:	
  2144                           ; 1 bytes @ 0x5
  2145                           
  2146     0075                     sendAllDatatoMaster@high:	
  2147                           ; 1 bytes @ 0x5
  2148                           
  2149     0075                     sendDataToMaster@toSend:	
  2150                           ; 1 bytes @ 0x5
  2151                           
  2152                           
  2153                           ; 2 bytes @ 0x5
  2154     0075                     	ds	1
  2155     0076                     sendAllDatatoMaster@low:
  2156     0076                     ADC_GetConversion@channel:	
  2157                           ; 1 bytes @ 0x6
  2158                           
  2159                           
  2160                           ; 1 bytes @ 0x6
  2161     0076                     	ds	1
  2162     0077                     ??_sendDataToMaster:
  2163                           
  2164                           	psect	cstackBANK0
  2165     0043                     __pcstackBANK0:	
  2166                           ; 1 bytes @ 0x7
  2167                           
  2168     0043                     sendDataToMaster@high:
  2169                           
  2170                           ; 1 bytes @ 0x0
  2171     0043                     	ds	1
  2172     0044                     sendDataToMaster@low:
  2173                           
  2174                           ; 1 bytes @ 0x1
  2175     0044                     	ds	1
  2176     0045                     ??_main:
  2177                           
  2178                           ; 1 bytes @ 0x2
  2179     0045                     	ds	2
  2180                           
  2181                           	psect	maintext
  2182     0046                     __pmaintext:	
  2183 ;;
  2184 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2185 ;;
  2186 ;; *************** function _main *****************
  2187 ;; Defined at:
  2188 ;;		line 119 in file "main.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : B1F/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2202 ;;      Params:         0       0       0       0
  2203 ;;      Locals:         0       0       0       0
  2204 ;;      Temps:          0       2       0       0
  2205 ;;      Totals:         0       2       0       0
  2206 ;;Total ram usage:        2 bytes
  2207 ;; Hardware stack levels required when called: 8
  2208 ;; This function calls:
  2209 ;;		_ADC_GetConversion
  2210 ;;		_I2C_Read
  2211 ;;		_I2C_Write
  2212 ;;		_SYSTEM_Initialize
  2213 ;;		_sendAllDatatoMaster
  2214 ;;		_sendDataToMaster
  2215 ;; This function is called by:
  2216 ;;		Startup code after reset
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220     0046                     _main:	
  2221                           ;psect for function _main
  2222                           
  2223     0046                     l2255:	
  2224                           ;incstack = 0
  2225                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2226                           
  2227                           
  2228                           ;main.c: 122:     SYSTEM_Initialize();
  2229     0046  3182  2297  3180   	fcall	_SYSTEM_Initialize
  2230     0049                     l2257:
  2231                           
  2232                           ;main.c: 128:     (INTCONbits.GIE = 1);
  2233     0049  178B               	bsf	11,7	;volatile
  2234     004A                     l2259:
  2235                           
  2236                           ;main.c: 131:     (INTCONbits.PEIE = 1);
  2237     004A  170B               	bsf	11,6	;volatile
  2238     004B                     l2261:
  2239                           
  2240                           ;main.c: 140:     WDTCONbits.SWDTEN = 0;
  2241     004B  0021               	movlb	1	; select bank1
  2242     004C  1017               	bcf	23,0	;volatile
  2243     004D                     l2263:
  2244                           
  2245                           ;main.c: 142:     {;main.c: 143:         if(WDTCONbits.SWDTEN == 1){
  2246     004D  0021               	movlb	1	; select bank1
  2247     004E  1C17               	btfss	23,0	;volatile
  2248     004F  2851               	goto	u1251
  2249     0050  2852               	goto	u1250
  2250     0051                     u1251:
  2251     0051  2853               	goto	l2267
  2252     0052                     u1250:
  2253     0052                     l2265:
  2254     0052  0063               	sleep	;# 
  2255     0053                     l2267:
  2256                           
  2257                           ;main.c: 146:         LATC = 0x01;
  2258     0053  3001               	movlw	1
  2259     0054  0022               	movlb	2	; select bank2
  2260     0055  008E               	movwf	14	;volatile
  2261     0056                     l2269:
  2262                           
  2263                           ;main.c: 147:         I2C_Command = I2C_Read();
  2264     0056  3183  2391  3180   	fcall	_I2C_Read
  2265     0059  0020               	movlb	0	; select bank0
  2266     005A  00BE               	movwf	_I2C_Command
  2267                           
  2268                           ;main.c: 148:         switch(I2C_Command){
  2269     005B  28A5               	goto	l2291
  2270     005C                     l2271:
  2271                           
  2272                           ;main.c: 152:                 sendDataToMaster(memory.TSNS1);
  2273     005C  0824               	movf	_memory+4,w
  2274     005D  00F6               	movwf	sendDataToMaster@toSend+1
  2275     005E  0823               	movf	_memory+3,w
  2276     005F  00F5               	movwf	sendDataToMaster@toSend
  2277     0060  3182  2263  3180   	fcall	_sendDataToMaster
  2278                           
  2279                           ;main.c: 153:                 break;
  2280     0063  28DC               	goto	l2293
  2281     0064                     l2273:
  2282                           
  2283                           ;main.c: 155:                 sendDataToMaster(memory.TSNS2);
  2284     0064  0826               	movf	_memory+6,w
  2285     0065  00F6               	movwf	sendDataToMaster@toSend+1
  2286     0066  0825               	movf	_memory+5,w
  2287     0067  00F5               	movwf	sendDataToMaster@toSend
  2288     0068  3182  2263  3180   	fcall	_sendDataToMaster
  2289                           
  2290                           ;main.c: 156:                 break;
  2291     006B  28DC               	goto	l2293
  2292     006C                     l2275:
  2293                           
  2294                           ;main.c: 158:                 sendDataToMaster(memory.TSNS3);
  2295     006C  0828               	movf	_memory+8,w
  2296     006D  00F6               	movwf	sendDataToMaster@toSend+1
  2297     006E  0827               	movf	_memory+7,w
  2298     006F  00F5               	movwf	sendDataToMaster@toSend
  2299     0070  3182  2263  3180   	fcall	_sendDataToMaster
  2300                           
  2301                           ;main.c: 159:                 break;
  2302     0073  28DC               	goto	l2293
  2303     0074                     l2277:
  2304                           
  2305                           ;main.c: 161:                 sendDataToMaster(memory.TSNS4);
  2306     0074  082A               	movf	_memory+10,w
  2307     0075  00F6               	movwf	sendDataToMaster@toSend+1
  2308     0076  0829               	movf	_memory+9,w
  2309     0077  00F5               	movwf	sendDataToMaster@toSend
  2310     0078  3182  2263  3180   	fcall	_sendDataToMaster
  2311                           
  2312                           ;main.c: 162:                 break;
  2313     007B  28DC               	goto	l2293
  2314     007C                     l2279:
  2315                           
  2316                           ;main.c: 164:                 sendDataToMaster(memory.TSNS5);
  2317     007C  082C               	movf	_memory+12,w
  2318     007D  00F6               	movwf	sendDataToMaster@toSend+1
  2319     007E  082B               	movf	_memory+11,w
  2320     007F  00F5               	movwf	sendDataToMaster@toSend
  2321     0080  3182  2263  3180   	fcall	_sendDataToMaster
  2322                           
  2323                           ;main.c: 165:                 break;
  2324     0083  28DC               	goto	l2293
  2325     0084                     l2281:
  2326                           
  2327                           ;main.c: 167:                 sendDataToMaster(memory.VSNS);
  2328     0084  0822               	movf	_memory+2,w
  2329     0085  00F6               	movwf	sendDataToMaster@toSend+1
  2330     0086  0821               	movf	_memory+1,w
  2331     0087  00F5               	movwf	sendDataToMaster@toSend
  2332     0088  3182  2263  3180   	fcall	_sendDataToMaster
  2333                           
  2334                           ;main.c: 168:                 break;
  2335     008B  28DC               	goto	l2293
  2336     008C                     l2283:
  2337                           
  2338                           ;main.c: 170:                 I2C_Write(memory.status);
  2339     008C  0820               	movf	_memory,w
  2340     008D  3183  2357  3180   	fcall	_I2C_Write
  2341                           
  2342                           ;main.c: 171:                 break;
  2343     0090  28DC               	goto	l2293
  2344     0091                     l61:	
  2345                           ;main.c: 172:             case Enable_Sleep_WDT:
  2346                           
  2347                           
  2348                           ;main.c: 173:                 WDTCONbits.SWDTEN = 1;
  2349     0091  0021               	movlb	1	; select bank1
  2350     0092  1417               	bsf	23,0	;volatile
  2351                           
  2352                           ;main.c: 174:                 break;
  2353     0093  28DC               	goto	l2293
  2354     0094                     l62:	
  2355                           ;main.c: 175:             case Disable_Sleep_WDT:
  2356                           
  2357                           
  2358                           ;main.c: 176:                 WDTCONbits.SWDTEN = 0;
  2359     0094  0021               	movlb	1	; select bank1
  2360     0095  1017               	bcf	23,0	;volatile
  2361                           
  2362                           ;main.c: 177:                 break;
  2363     0096  28DC               	goto	l2293
  2364     0097                     l63:	
  2365                           ;main.c: 178:             case Start_Balancing:
  2366                           
  2367                           
  2368                           ;main.c: 179:                 currentlyBalancing = 1;
  2369     0097  01BD               	clrf	_currentlyBalancing
  2370     0098  0ABD               	incf	_currentlyBalancing,f
  2371                           
  2372                           ;main.c: 180:                 break;
  2373     0099  28DC               	goto	l2293
  2374     009A                     l2285:
  2375                           
  2376                           ;main.c: 182:                 currentlyBalancing = 0;
  2377     009A  01BD               	clrf	_currentlyBalancing
  2378                           
  2379                           ;main.c: 183:                 break;
  2380     009B  28DC               	goto	l2293
  2381     009C                     l2287:
  2382                           
  2383                           ;main.c: 185:                 LATC = 0x00;
  2384     009C  0022               	movlb	2	; select bank2
  2385     009D  018E               	clrf	14	;volatile
  2386                           
  2387                           ;main.c: 186:                 break;
  2388     009E  28DC               	goto	l2293
  2389     009F                     l2289:
  2390                           
  2391                           ;main.c: 188:                 sendAllDatatoMaster();
  2392     009F  3181  2118  3180   	fcall	_sendAllDatatoMaster
  2393                           
  2394                           ;main.c: 189:                 break;
  2395     00A2  28DC               	goto	l2293
  2396     00A3                     l67:	
  2397                           ;main.c: 190:             case Controller_Restart:
  2398                           
  2399     00A3  0001               	reset	;# 
  2400                           
  2401                           ;main.c: 192:         }
  2402     00A4  28DC               	goto	l2293
  2403     00A5                     l2291:
  2404     00A5  083E               	movf	_I2C_Command,w
  2405     00A6  00C5               	movwf	??_main
  2406     00A7  01C6               	clrf	??_main+1
  2407                           
  2408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2409                           ; Switch size 1, requested type "simple"
  2410                           ; Number of cases is 1, Range of values is 0 to 0
  2411                           ; switch strategies available:
  2412                           ; Name         Instructions Cycles
  2413                           ; simple_byte            4     3 (average)
  2414                           ; direct_byte            8     6 (fixed)
  2415                           ; jumptable            260     6 (fixed)
  2416                           ;	Chosen strategy is simple_byte
  2417     00A8  0846               	movf	??_main+1,w
  2418     00A9  3A00               	xorlw	0	; case 0
  2419     00AA  1903               	skipnz
  2420     00AB  28AD               	goto	l2353
  2421     00AC  28DC               	goto	l2293
  2422     00AD                     l2353:
  2423                           
  2424                           ; Switch size 1, requested type "simple"
  2425                           ; Number of cases is 15, Range of values is 0 to 14
  2426                           ; switch strategies available:
  2427                           ; Name         Instructions Cycles
  2428                           ; direct_byte           36     6 (fixed)
  2429                           ; simple_byte           46    24 (average)
  2430                           ; jumptable            260     6 (fixed)
  2431                           ;	Chosen strategy is simple_byte
  2432     00AD  0845               	movf	??_main,w
  2433     00AE  3A00               	xorlw	0	; case 0
  2434     00AF  1903               	skipnz
  2435     00B0  28DC               	goto	l2293
  2436     00B1  3A01               	xorlw	1	; case 1
  2437     00B2  1903               	skipnz
  2438     00B3  285C               	goto	l2271
  2439     00B4  3A03               	xorlw	3	; case 2
  2440     00B5  1903               	skipnz
  2441     00B6  2864               	goto	l2273
  2442     00B7  3A01               	xorlw	1	; case 3
  2443     00B8  1903               	skipnz
  2444     00B9  286C               	goto	l2275
  2445     00BA  3A07               	xorlw	7	; case 4
  2446     00BB  1903               	skipnz
  2447     00BC  2874               	goto	l2277
  2448     00BD  3A01               	xorlw	1	; case 5
  2449     00BE  1903               	skipnz
  2450     00BF  287C               	goto	l2279
  2451     00C0  3A03               	xorlw	3	; case 6
  2452     00C1  1903               	skipnz
  2453     00C2  2884               	goto	l2281
  2454     00C3  3A01               	xorlw	1	; case 7
  2455     00C4  1903               	skipnz
  2456     00C5  288C               	goto	l2283
  2457     00C6  3A0F               	xorlw	15	; case 8
  2458     00C7  1903               	skipnz
  2459     00C8  2891               	goto	l61
  2460     00C9  3A01               	xorlw	1	; case 9
  2461     00CA  1903               	skipnz
  2462     00CB  2894               	goto	l62
  2463     00CC  3A03               	xorlw	3	; case 10
  2464     00CD  1903               	skipnz
  2465     00CE  2897               	goto	l63
  2466     00CF  3A01               	xorlw	1	; case 11
  2467     00D0  1903               	skipnz
  2468     00D1  289A               	goto	l2285
  2469     00D2  3A07               	xorlw	7	; case 12
  2470     00D3  1903               	skipnz
  2471     00D4  289C               	goto	l2287
  2472     00D5  3A01               	xorlw	1	; case 13
  2473     00D6  1903               	skipnz
  2474     00D7  289F               	goto	l2289
  2475     00D8  3A03               	xorlw	3	; case 14
  2476     00D9  1903               	skipnz
  2477     00DA  28A3               	goto	l67
  2478     00DB  28DC               	goto	l2293
  2479     00DC                     l2293:
  2480                           
  2481                           ;main.c: 194:         selectedReference = TSNS1;
  2482     00DC  3002               	movlw	2
  2483     00DD  00F9               	movwf	_selectedReference
  2484     00DE                     l2295:
  2485                           
  2486                           ;main.c: 195:         memory.TSNS1 = ADC_GetConversion(selectedReference);
  2487     00DE  3002               	movlw	2
  2488     00DF  3182  2248  3180   	fcall	_ADC_GetConversion
  2489     00E2  0874               	movf	?_ADC_GetConversion+1,w
  2490     00E3  0020               	movlb	0	; select bank0
  2491     00E4  00A4               	movwf	_memory+4
  2492     00E5  0873               	movf	?_ADC_GetConversion,w
  2493     00E6  00A3               	movwf	_memory+3
  2494     00E7                     l2297:
  2495                           
  2496                           ;main.c: 196:         selectedReference = TSNS2;
  2497     00E7  3003               	movlw	3
  2498     00E8  00F9               	movwf	_selectedReference
  2499                           
  2500                           ;main.c: 197:         memory.TSNS2 = ADC_GetConversion(selectedReference);
  2501     00E9  3003               	movlw	3
  2502     00EA  3182  2248  3180   	fcall	_ADC_GetConversion
  2503     00ED  0874               	movf	?_ADC_GetConversion+1,w
  2504     00EE  0020               	movlb	0	; select bank0
  2505     00EF  00A6               	movwf	_memory+6
  2506     00F0  0873               	movf	?_ADC_GetConversion,w
  2507     00F1  00A5               	movwf	_memory+5
  2508     00F2                     l2299:
  2509                           
  2510                           ;main.c: 198:         selectedReference = TSNS3;
  2511     00F2  3007               	movlw	7
  2512     00F3  00F9               	movwf	_selectedReference
  2513     00F4                     l2301:
  2514                           
  2515                           ;main.c: 199:         memory.TSNS3 = ADC_GetConversion(selectedReference);
  2516     00F4  3007               	movlw	7
  2517     00F5  3182  2248  3180   	fcall	_ADC_GetConversion
  2518     00F8  0874               	movf	?_ADC_GetConversion+1,w
  2519     00F9  0020               	movlb	0	; select bank0
  2520     00FA  00A8               	movwf	_memory+8
  2521     00FB  0873               	movf	?_ADC_GetConversion,w
  2522     00FC  00A7               	movwf	_memory+7
  2523                           
  2524                           ;main.c: 200:         selectedReference = TSNS4;
  2525     00FD  3008               	movlw	8
  2526     00FE  00F9               	movwf	_selectedReference
  2527     00FF                     l2303:
  2528                           
  2529                           ;main.c: 201:         memory.TSNS4 = ADC_GetConversion(selectedReference);
  2530     00FF  3008               	movlw	8
  2531     0100  3182  2248  3180   	fcall	_ADC_GetConversion
  2532     0103  0874               	movf	?_ADC_GetConversion+1,w
  2533     0104  0020               	movlb	0	; select bank0
  2534     0105  00AA               	movwf	_memory+10
  2535     0106  0873               	movf	?_ADC_GetConversion,w
  2536     0107  00A9               	movwf	_memory+9
  2537     0108                     l2305:
  2538                           
  2539                           ;main.c: 202:         selectedReference = TSNS5;
  2540     0108  3009               	movlw	9
  2541     0109  00F9               	movwf	_selectedReference
  2542                           
  2543                           ;main.c: 203:         memory.TSNS5 = ADC_GetConversion(selectedReference);
  2544     010A  3009               	movlw	9
  2545     010B  3182  2248  3180   	fcall	_ADC_GetConversion
  2546     010E  0874               	movf	?_ADC_GetConversion+1,w
  2547     010F  0020               	movlb	0	; select bank0
  2548     0110  00AC               	movwf	_memory+12
  2549     0111  0873               	movf	?_ADC_GetConversion,w
  2550     0112  00AB               	movwf	_memory+11
  2551     0113                     l2307:
  2552                           
  2553                           ;main.c: 204:         LATC = 0x00;
  2554     0113  0022               	movlb	2	; select bank2
  2555     0114  018E               	clrf	14	;volatile
  2556     0115  284D               	goto	l2263
  2557     0116  3180  2835         	ljmp	start
  2558     0118                     __end_of_main:
  2559                           
  2560                           	psect	text1
  2561     0263                     __ptext1:	
  2562 ;; *************** function _sendDataToMaster *****************
  2563 ;; Defined at:
  2564 ;;		line 208 in file "main.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  toSend          2    5[COMMON] unsigned short 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  low             1    1[BANK0 ] unsigned char 
  2569 ;;  high            1    0[BANK0 ] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0, pclath, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2579 ;;      Params:         2       0       0       0
  2580 ;;      Locals:         0       2       0       0
  2581 ;;      Temps:          0       0       0       0
  2582 ;;      Totals:         2       2       0       0
  2583 ;;Total ram usage:        4 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 7
  2586 ;; This function calls:
  2587 ;;		_I2C_Write
  2588 ;; This function is called by:
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593     0263                     _sendDataToMaster:	
  2594                           ;psect for function _sendDataToMaster
  2595                           
  2596     0263                     l2163:	
  2597                           ;incstack = 0
  2598                           ; Regs used in _sendDataToMaster: [wreg+status,2+status,0+pclath+cstack]
  2599                           
  2600                           
  2601                           ;main.c: 209:     uint8_t high = (uint8_t) (toSend >> 8) & 0x00FF;
  2602     0263  0876               	movf	sendDataToMaster@toSend+1,w
  2603     0264  0020               	movlb	0	; select bank0
  2604     0265  00C3               	movwf	sendDataToMaster@high
  2605     0266                     l2165:
  2606                           
  2607                           ;main.c: 210:     uint8_t low = (uint8_t) (toSend >> 0) & 0x00FF;
  2608     0266  0875               	movf	sendDataToMaster@toSend,w
  2609     0267  00C4               	movwf	sendDataToMaster@low
  2610     0268                     l2167:
  2611                           
  2612                           ;main.c: 211:     I2C_Write(high);
  2613     0268  0843               	movf	sendDataToMaster@high,w
  2614     0269  3183  2357  3182   	fcall	_I2C_Write
  2615     026C                     l73:	
  2616                           ;main.c: 212:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 1){ }
  2617                           
  2618     026C  0024               	movlb	4	; select bank4
  2619     026D  1C14               	btfss	20,0	;volatile
  2620     026E  2A70               	goto	u991
  2621     026F  2A71               	goto	u990
  2622     0270                     u991:
  2623     0270  2A75               	goto	l2171
  2624     0271                     u990:
  2625     0271                     l2169:
  2626     0271  1B16               	btfsc	22,6	;volatile
  2627     0272  2A74               	goto	u1001
  2628     0273  2A75               	goto	u1000
  2629     0274                     u1001:
  2630     0274  2A6C               	goto	l73
  2631     0275                     u1000:
  2632     0275                     l2171:
  2633                           
  2634                           ;main.c: 213:     I2C_Write(low);
  2635     0275  0020               	movlb	0	; select bank0
  2636     0276  0844               	movf	sendDataToMaster@low,w
  2637     0277  3183  2357  3182   	fcall	_I2C_Write
  2638     027A                     l2173:
  2639                           
  2640                           ;main.c: 214:     I2C_Command = No_Command;
  2641     027A  0020               	movlb	0	; select bank0
  2642     027B  01BE               	clrf	_I2C_Command
  2643     027C                     l78:
  2644     027C  0008               	return
  2645     027D                     __end_of_sendDataToMaster:
  2646                           
  2647                           	psect	text2
  2648     0118                     __ptext2:	
  2649 ;; *************** function _sendAllDatatoMaster *****************
  2650 ;; Defined at:
  2651 ;;		line 218 in file "main.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  low             1    6[COMMON] unsigned char 
  2656 ;;  high            1    5[COMMON] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0, pclath, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2666 ;;      Params:         0       0       0       0
  2667 ;;      Locals:         2       0       0       0
  2668 ;;      Temps:          0       0       0       0
  2669 ;;      Totals:         2       0       0       0
  2670 ;;Total ram usage:        2 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 7
  2673 ;; This function calls:
  2674 ;;		_I2C_Write
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680     0118                     _sendAllDatatoMaster:	
  2681                           ;psect for function _sendAllDatatoMaster
  2682                           
  2683     0118                     l2177:	
  2684                           ;incstack = 0
  2685                           ; Regs used in _sendAllDatatoMaster: [wreg+status,2+status,0+pclath+cstack]
  2686                           
  2687                           
  2688                           ;main.c: 219:     I2C_Write(memory.status);
  2689     0118  0020               	movlb	0	; select bank0
  2690     0119  0820               	movf	_memory,w
  2691     011A  3183  2357  3181   	fcall	_I2C_Write
  2692     011D                     l2179:
  2693                           
  2694                           ;main.c: 220:     uint8_t high = (uint8_t) (memory.TSNS1 >> 8) & 0x00FF;
  2695     011D  0020               	movlb	0	; select bank0
  2696     011E  0824               	movf	_memory+4,w
  2697     011F  00F5               	movwf	sendAllDatatoMaster@high
  2698     0120                     l2181:
  2699                           
  2700                           ;main.c: 221:     uint8_t low = (uint8_t) (memory.TSNS1 >> 0) & 0x00FF;
  2701     0120  0823               	movf	_memory+3,w
  2702     0121  00F6               	movwf	sendAllDatatoMaster@low
  2703     0122                     l81:	
  2704                           ;main.c: 222:     while(SSP1STATbits.BF && !SSP1CON2bits.ACKSTAT){ }
  2705                           
  2706     0122  0024               	movlb	4	; select bank4
  2707     0123  1C14               	btfss	20,0	;volatile
  2708     0124  2926               	goto	u1011
  2709     0125  2927               	goto	u1010
  2710     0126                     u1011:
  2711     0126  292B               	goto	l2185
  2712     0127                     u1010:
  2713     0127                     l2183:
  2714     0127  1F16               	btfss	22,6	;volatile
  2715     0128  292A               	goto	u1021
  2716     0129  292B               	goto	u1020
  2717     012A                     u1021:
  2718     012A  2922               	goto	l81
  2719     012B                     u1020:
  2720     012B                     l2185:
  2721                           
  2722                           ;main.c: 224:     I2C_Write(high);
  2723     012B  0875               	movf	sendAllDatatoMaster@high,w
  2724     012C  3183  2357  3181   	fcall	_I2C_Write
  2725     012F                     l86:	
  2726                           ;main.c: 225:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 0){ }
  2727                           
  2728     012F  0024               	movlb	4	; select bank4
  2729     0130  1C14               	btfss	20,0	;volatile
  2730     0131  2933               	goto	u1031
  2731     0132  2934               	goto	u1030
  2732     0133                     u1031:
  2733     0133  2938               	goto	l2189
  2734     0134                     u1030:
  2735     0134                     l2187:
  2736     0134  1F16               	btfss	22,6	;volatile
  2737     0135  2937               	goto	u1041
  2738     0136  2938               	goto	u1040
  2739     0137                     u1041:
  2740     0137  292F               	goto	l86
  2741     0138                     u1040:
  2742     0138                     l2189:
  2743                           
  2744                           ;main.c: 227:     I2C_Write(low);
  2745     0138  0876               	movf	sendAllDatatoMaster@low,w
  2746     0139  3183  2357  3181   	fcall	_I2C_Write
  2747     013C                     l2191:
  2748                           
  2749                           ;main.c: 228:     high = (uint8_t) (memory.TSNS2 >> 8) & 0x00FF;
  2750     013C  0020               	movlb	0	; select bank0
  2751     013D  0826               	movf	_memory+6,w
  2752     013E  00F5               	movwf	sendAllDatatoMaster@high
  2753     013F                     l91:	
  2754                           ;main.c: 229:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 0){ }
  2755                           
  2756     013F  0024               	movlb	4	; select bank4
  2757     0140  1C14               	btfss	20,0	;volatile
  2758     0141  2943               	goto	u1051
  2759     0142  2944               	goto	u1050
  2760     0143                     u1051:
  2761     0143  2948               	goto	l2195
  2762     0144                     u1050:
  2763     0144                     l2193:
  2764     0144  1F16               	btfss	22,6	;volatile
  2765     0145  2947               	goto	u1061
  2766     0146  2948               	goto	u1060
  2767     0147                     u1061:
  2768     0147  293F               	goto	l91
  2769     0148                     u1060:
  2770     0148                     l2195:
  2771                           
  2772                           ;main.c: 231:     I2C_Write(high);
  2773     0148  0875               	movf	sendAllDatatoMaster@high,w
  2774     0149  3183  2357  3181   	fcall	_I2C_Write
  2775     014C                     l2197:
  2776                           
  2777                           ;main.c: 232:     low = (uint8_t) (memory.TSNS2 >> 0) & 0x00FF;
  2778     014C  0020               	movlb	0	; select bank0
  2779     014D  0825               	movf	_memory+5,w
  2780     014E  00F6               	movwf	sendAllDatatoMaster@low
  2781     014F                     l96:	
  2782                           ;main.c: 233:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 0){ }
  2783                           
  2784     014F  0024               	movlb	4	; select bank4
  2785     0150  1C14               	btfss	20,0	;volatile
  2786     0151  2953               	goto	u1071
  2787     0152  2954               	goto	u1070
  2788     0153                     u1071:
  2789     0153  2958               	goto	l2201
  2790     0154                     u1070:
  2791     0154                     l2199:
  2792     0154  1F16               	btfss	22,6	;volatile
  2793     0155  2957               	goto	u1081
  2794     0156  2958               	goto	u1080
  2795     0157                     u1081:
  2796     0157  294F               	goto	l96
  2797     0158                     u1080:
  2798     0158                     l2201:
  2799                           
  2800                           ;main.c: 235:     I2C_Write(low);
  2801     0158  0876               	movf	sendAllDatatoMaster@low,w
  2802     0159  3183  2357  3181   	fcall	_I2C_Write
  2803     015C                     l2203:
  2804                           
  2805                           ;main.c: 236:     high = (uint8_t) (memory.TSNS3 >> 8) & 0x00FF;
  2806     015C  0020               	movlb	0	; select bank0
  2807     015D  0828               	movf	_memory+8,w
  2808     015E  00F5               	movwf	sendAllDatatoMaster@high
  2809     015F                     l101:	
  2810                           ;main.c: 237:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 0){ }
  2811                           
  2812     015F  0024               	movlb	4	; select bank4
  2813     0160  1C14               	btfss	20,0	;volatile
  2814     0161  2963               	goto	u1091
  2815     0162  2964               	goto	u1090
  2816     0163                     u1091:
  2817     0163  2968               	goto	l2207
  2818     0164                     u1090:
  2819     0164                     l2205:
  2820     0164  1F16               	btfss	22,6	;volatile
  2821     0165  2967               	goto	u1101
  2822     0166  2968               	goto	u1100
  2823     0167                     u1101:
  2824     0167  295F               	goto	l101
  2825     0168                     u1100:
  2826     0168                     l2207:
  2827                           
  2828                           ;main.c: 239:     I2C_Write(high);
  2829     0168  0875               	movf	sendAllDatatoMaster@high,w
  2830     0169  3183  2357  3181   	fcall	_I2C_Write
  2831     016C                     l2209:
  2832                           
  2833                           ;main.c: 240:     low = (uint8_t) (memory.TSNS3 >> 0) & 0x00FF;
  2834     016C  0020               	movlb	0	; select bank0
  2835     016D  0827               	movf	_memory+7,w
  2836     016E  00F6               	movwf	sendAllDatatoMaster@low
  2837     016F                     l106:	
  2838                           ;main.c: 241:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 0){ }
  2839                           
  2840     016F  0024               	movlb	4	; select bank4
  2841     0170  1C14               	btfss	20,0	;volatile
  2842     0171  2973               	goto	u1111
  2843     0172  2974               	goto	u1110
  2844     0173                     u1111:
  2845     0173  2978               	goto	l2213
  2846     0174                     u1110:
  2847     0174                     l2211:
  2848     0174  1F16               	btfss	22,6	;volatile
  2849     0175  2977               	goto	u1121
  2850     0176  2978               	goto	u1120
  2851     0177                     u1121:
  2852     0177  296F               	goto	l106
  2853     0178                     u1120:
  2854     0178                     l2213:
  2855                           
  2856                           ;main.c: 243:     I2C_Write(low);
  2857     0178  0876               	movf	sendAllDatatoMaster@low,w
  2858     0179  3183  2357  3181   	fcall	_I2C_Write
  2859     017C                     l2215:
  2860                           
  2861                           ;main.c: 244:     high = (uint8_t) (memory.TSNS4 >> 8) & 0x00FF;
  2862     017C  0020               	movlb	0	; select bank0
  2863     017D  082A               	movf	_memory+10,w
  2864     017E  00F5               	movwf	sendAllDatatoMaster@high
  2865     017F                     l111:	
  2866                           ;main.c: 245:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 0){ }
  2867                           
  2868     017F  0024               	movlb	4	; select bank4
  2869     0180  1C14               	btfss	20,0	;volatile
  2870     0181  2983               	goto	u1131
  2871     0182  2984               	goto	u1130
  2872     0183                     u1131:
  2873     0183  2988               	goto	l2219
  2874     0184                     u1130:
  2875     0184                     l2217:
  2876     0184  1F16               	btfss	22,6	;volatile
  2877     0185  2987               	goto	u1141
  2878     0186  2988               	goto	u1140
  2879     0187                     u1141:
  2880     0187  297F               	goto	l111
  2881     0188                     u1140:
  2882     0188                     l2219:
  2883                           
  2884                           ;main.c: 247:     I2C_Write(high);
  2885     0188  0875               	movf	sendAllDatatoMaster@high,w
  2886     0189  3183  2357  3181   	fcall	_I2C_Write
  2887     018C                     l2221:
  2888                           
  2889                           ;main.c: 248:     low = (uint8_t) (memory.TSNS4 >> 0) & 0x00FF;
  2890     018C  0020               	movlb	0	; select bank0
  2891     018D  0829               	movf	_memory+9,w
  2892     018E  00F6               	movwf	sendAllDatatoMaster@low
  2893     018F                     l116:	
  2894                           ;main.c: 249:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 0){ }
  2895                           
  2896     018F  0024               	movlb	4	; select bank4
  2897     0190  1C14               	btfss	20,0	;volatile
  2898     0191  2993               	goto	u1151
  2899     0192  2994               	goto	u1150
  2900     0193                     u1151:
  2901     0193  2998               	goto	l2225
  2902     0194                     u1150:
  2903     0194                     l2223:
  2904     0194  1F16               	btfss	22,6	;volatile
  2905     0195  2997               	goto	u1161
  2906     0196  2998               	goto	u1160
  2907     0197                     u1161:
  2908     0197  298F               	goto	l116
  2909     0198                     u1160:
  2910     0198                     l2225:
  2911                           
  2912                           ;main.c: 251:     I2C_Write(low);
  2913     0198  0876               	movf	sendAllDatatoMaster@low,w
  2914     0199  3183  2357  3181   	fcall	_I2C_Write
  2915     019C                     l2227:
  2916                           
  2917                           ;main.c: 252:     high = (uint8_t) (memory.TSNS5 >> 8) & 0x00FF;
  2918     019C  0020               	movlb	0	; select bank0
  2919     019D  082C               	movf	_memory+12,w
  2920     019E  00F5               	movwf	sendAllDatatoMaster@high
  2921     019F                     l121:	
  2922                           ;main.c: 253:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 0){ }
  2923                           
  2924     019F  0024               	movlb	4	; select bank4
  2925     01A0  1C14               	btfss	20,0	;volatile
  2926     01A1  29A3               	goto	u1171
  2927     01A2  29A4               	goto	u1170
  2928     01A3                     u1171:
  2929     01A3  29A8               	goto	l2231
  2930     01A4                     u1170:
  2931     01A4                     l2229:
  2932     01A4  1F16               	btfss	22,6	;volatile
  2933     01A5  29A7               	goto	u1181
  2934     01A6  29A8               	goto	u1180
  2935     01A7                     u1181:
  2936     01A7  299F               	goto	l121
  2937     01A8                     u1180:
  2938     01A8                     l2231:
  2939                           
  2940                           ;main.c: 255:     I2C_Write(high);
  2941     01A8  0875               	movf	sendAllDatatoMaster@high,w
  2942     01A9  3183  2357  3181   	fcall	_I2C_Write
  2943     01AC                     l2233:
  2944                           
  2945                           ;main.c: 256:     low = (uint8_t) (memory.TSNS5 >> 0) & 0x00FF;
  2946     01AC  0020               	movlb	0	; select bank0
  2947     01AD  082B               	movf	_memory+11,w
  2948     01AE  00F6               	movwf	sendAllDatatoMaster@low
  2949     01AF                     l126:	
  2950                           ;main.c: 257:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 0){ }
  2951                           
  2952     01AF  0024               	movlb	4	; select bank4
  2953     01B0  1C14               	btfss	20,0	;volatile
  2954     01B1  29B3               	goto	u1191
  2955     01B2  29B4               	goto	u1190
  2956     01B3                     u1191:
  2957     01B3  29B8               	goto	l2237
  2958     01B4                     u1190:
  2959     01B4                     l2235:
  2960     01B4  1F16               	btfss	22,6	;volatile
  2961     01B5  29B7               	goto	u1201
  2962     01B6  29B8               	goto	u1200
  2963     01B7                     u1201:
  2964     01B7  29AF               	goto	l126
  2965     01B8                     u1200:
  2966     01B8                     l2237:
  2967                           
  2968                           ;main.c: 259:     I2C_Write(low);
  2969     01B8  0876               	movf	sendAllDatatoMaster@low,w
  2970     01B9  3183  2357  3181   	fcall	_I2C_Write
  2971     01BC                     l2239:
  2972                           
  2973                           ;main.c: 260:     high = (uint8_t) (memory.VSNS >> 8) & 0x00FF;
  2974     01BC  0020               	movlb	0	; select bank0
  2975     01BD  0822               	movf	_memory+2,w
  2976     01BE  00F5               	movwf	sendAllDatatoMaster@high
  2977     01BF                     l131:	
  2978                           ;main.c: 261:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 0){ }
  2979                           
  2980     01BF  0024               	movlb	4	; select bank4
  2981     01C0  1C14               	btfss	20,0	;volatile
  2982     01C1  29C3               	goto	u1211
  2983     01C2  29C4               	goto	u1210
  2984     01C3                     u1211:
  2985     01C3  29C8               	goto	l2243
  2986     01C4                     u1210:
  2987     01C4                     l2241:
  2988     01C4  1F16               	btfss	22,6	;volatile
  2989     01C5  29C7               	goto	u1221
  2990     01C6  29C8               	goto	u1220
  2991     01C7                     u1221:
  2992     01C7  29BF               	goto	l131
  2993     01C8                     u1220:
  2994     01C8                     l2243:
  2995                           
  2996                           ;main.c: 263:     I2C_Write(high);
  2997     01C8  0875               	movf	sendAllDatatoMaster@high,w
  2998     01C9  3183  2357  3181   	fcall	_I2C_Write
  2999     01CC                     l2245:
  3000                           
  3001                           ;main.c: 264:     low = (uint8_t) (memory.VSNS >> 0) & 0x00FF;
  3002     01CC  0020               	movlb	0	; select bank0
  3003     01CD  0821               	movf	_memory+1,w
  3004     01CE  00F6               	movwf	sendAllDatatoMaster@low
  3005     01CF                     l136:	
  3006                           ;main.c: 265:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 0){ }
  3007                           
  3008     01CF  0024               	movlb	4	; select bank4
  3009     01D0  1C14               	btfss	20,0	;volatile
  3010     01D1  29D3               	goto	u1231
  3011     01D2  29D4               	goto	u1230
  3012     01D3                     u1231:
  3013     01D3  29D8               	goto	l2249
  3014     01D4                     u1230:
  3015     01D4                     l2247:
  3016     01D4  1F16               	btfss	22,6	;volatile
  3017     01D5  29D7               	goto	u1241
  3018     01D6  29D8               	goto	u1240
  3019     01D7                     u1241:
  3020     01D7  29CF               	goto	l136
  3021     01D8                     u1240:
  3022     01D8                     l2249:
  3023                           
  3024                           ;main.c: 267:     I2C_Write(low);
  3025     01D8  0876               	movf	sendAllDatatoMaster@low,w
  3026     01D9  3183  2357  3181   	fcall	_I2C_Write
  3027     01DC                     l2251:
  3028                           
  3029                           ;main.c: 269:     I2C_Command = No_Command;
  3030     01DC  0020               	movlb	0	; select bank0
  3031     01DD  01BE               	clrf	_I2C_Command
  3032     01DE                     l141:
  3033     01DE  0008               	return
  3034     01DF                     __end_of_sendAllDatatoMaster:
  3035                           
  3036                           	psect	text3
  3037     0357                     __ptext3:	
  3038 ;; *************** function _I2C_Write *****************
  3039 ;; Defined at:
  3040 ;;		line 140 in file "mcc_generated_files/i2c_slave.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  data            1    wreg     unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  data            1    4[COMMON] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0, pclath, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3054 ;;      Params:         0       0       0       0
  3055 ;;      Locals:         1       0       0       0
  3056 ;;      Temps:          0       0       0       0
  3057 ;;      Totals:         1       0       0       0
  3058 ;;Total ram usage:        1 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 6
  3061 ;; This function calls:
  3062 ;;		_I2C_SlaveSendTxData
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;;		_sendDataToMaster
  3066 ;;		_sendAllDatatoMaster
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070     0357                     _I2C_Write:	
  3071                           ;psect for function _I2C_Write
  3072                           
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  3076                           ;I2C_Write@data stored from wreg
  3077     0357  00F4               	movwf	I2C_Write@data
  3078     0358                     l2161:
  3079                           
  3080                           ;mcc_generated_files/i2c_slave.c: 140: void I2C_Write(uint8_t data);mcc_generated_files/
      +                          i2c_slave.c: 141: {;mcc_generated_files/i2c_slave.c: 142:     I2C_SlaveSendTxData(data);
  3081     0358  0874               	movf	I2C_Write@data,w
  3082     0359  3183  2375  3183   	fcall	_I2C_SlaveSendTxData
  3083     035C                     l480:
  3084     035C  0008               	return
  3085     035D                     __end_of_I2C_Write:
  3086                           
  3087                           	psect	text4
  3088     0375                     __ptext4:	
  3089 ;; *************** function _I2C_SlaveSendTxData *****************
  3090 ;; Defined at:
  3091 ;;		line 392 in file "mcc_generated_files/i2c_slave.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  data            1    wreg     unsigned char 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  data            1    3[COMMON] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		wreg
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3105 ;;      Params:         0       0       0       0
  3106 ;;      Locals:         1       0       0       0
  3107 ;;      Temps:          0       0       0       0
  3108 ;;      Totals:         1       0       0       0
  3109 ;;Total ram usage:        1 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 5
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_I2C_Write
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119     0375                     _I2C_SlaveSendTxData:	
  3120                           ;psect for function _I2C_SlaveSendTxData
  3121                           
  3122                           
  3123                           ;incstack = 0
  3124                           ; Regs used in _I2C_SlaveSendTxData: [wreg]
  3125                           ;I2C_SlaveSendTxData@data stored from wreg
  3126     0375  00F3               	movwf	I2C_SlaveSendTxData@data
  3127     0376                     l2159:
  3128                           
  3129                           ;mcc_generated_files/i2c_slave.c: 392: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 393: {;mcc_generated_files/i2c_sla
      +                          ve.c: 394:     SSP1BUF = data;
  3130     0376  0873               	movf	I2C_SlaveSendTxData@data,w
  3131     0377  0024               	movlb	4	; select bank4
  3132     0378  0091               	movwf	17	;volatile
  3133     0379                     l610:
  3134     0379  0008               	return
  3135     037A                     __end_of_I2C_SlaveSendTxData:
  3136                           
  3137                           	psect	text5
  3138     0297                     __ptext5:	
  3139 ;; *************** function _SYSTEM_Initialize *****************
  3140 ;; Defined at:
  3141 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;		None
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0, pclath, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3155 ;;      Params:         0       0       0       0
  3156 ;;      Locals:         0       0       0       0
  3157 ;;      Temps:          0       0       0       0
  3158 ;;      Totals:         0       0       0       0
  3159 ;;Total ram usage:        0 bytes
  3160 ;; Hardware stack levels used: 1
  3161 ;; Hardware stack levels required when called: 7
  3162 ;; This function calls:
  3163 ;;		_ADC_Initialize
  3164 ;;		_FVR_Initialize
  3165 ;;		_I2C_Initialize
  3166 ;;		_OSCILLATOR_Initialize
  3167 ;;		_PIN_MANAGER_Initialize
  3168 ;;		_TMR1_Initialize
  3169 ;;		_TMR2_Initialize
  3170 ;;		_WDT_Initialize
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176     0297                     _SYSTEM_Initialize:	
  3177                           ;psect for function _SYSTEM_Initialize
  3178                           
  3179     0297                     l1853:	
  3180                           ;incstack = 0
  3181                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3182                           
  3183                           
  3184                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  3185     0297  3183  2327  3182   	fcall	_I2C_Initialize
  3186                           
  3187                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3188     029A  3182  227D  3182   	fcall	_PIN_MANAGER_Initialize
  3189                           
  3190                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3191     029D  3183  2363  3182   	fcall	_OSCILLATOR_Initialize
  3192                           
  3193                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3194     02A0  3183  2389  3182   	fcall	_WDT_Initialize
  3195                           
  3196                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  3197     02A3  3183  238D  3182   	fcall	_FVR_Initialize
  3198                           
  3199                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  3200     02A6  3183  2331  3182   	fcall	_ADC_Initialize
  3201                           
  3202                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  3203     02A9  3183  233B  3182   	fcall	_TMR2_Initialize
  3204                           
  3205                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  3206     02AC  3182  22B0  3182   	fcall	_TMR1_Initialize
  3207     02AF                     l178:
  3208     02AF  0008               	return
  3209     02B0                     __end_of_SYSTEM_Initialize:
  3210                           
  3211                           	psect	text6
  3212     0389                     __ptext6:	
  3213 ;; *************** function _WDT_Initialize *****************
  3214 ;; Defined at:
  3215 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;		None
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;		None
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3229 ;;      Params:         0       0       0       0
  3230 ;;      Locals:         0       0       0       0
  3231 ;;      Temps:          0       0       0       0
  3232 ;;      Totals:         0       0       0       0
  3233 ;;Total ram usage:        0 bytes
  3234 ;; Hardware stack levels used: 1
  3235 ;; Hardware stack levels required when called: 5
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_SYSTEM_Initialize
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243     0389                     _WDT_Initialize:	
  3244                           ;psect for function _WDT_Initialize
  3245                           
  3246     0389                     l1775:	
  3247                           ;incstack = 0
  3248                           ; Regs used in _WDT_Initialize: [wreg]
  3249                           
  3250                           
  3251                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x1A;
  3252     0389  301A               	movlw	26
  3253     038A  0021               	movlb	1	; select bank1
  3254     038B  0097               	movwf	23	;volatile
  3255     038C                     l184:
  3256     038C  0008               	return
  3257     038D                     __end_of_WDT_Initialize:
  3258                           
  3259                           	psect	text7
  3260     033B                     __ptext7:	
  3261 ;; *************** function _TMR2_Initialize *****************
  3262 ;; Defined at:
  3263 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3277 ;;      Params:         0       0       0       0
  3278 ;;      Locals:         0       0       0       0
  3279 ;;      Temps:          0       0       0       0
  3280 ;;      Totals:         0       0       0       0
  3281 ;;Total ram usage:        0 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 5
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_SYSTEM_Initialize
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291     033B                     _TMR2_Initialize:	
  3292                           ;psect for function _TMR2_Initialize
  3293                           
  3294     033B                     l1785:	
  3295                           ;incstack = 0
  3296                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  3297                           
  3298                           
  3299                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xF9;
  3300     033B  30F9               	movlw	249
  3301     033C  0020               	movlb	0	; select bank0
  3302     033D  009B               	movwf	27	;volatile
  3303     033E                     l1787:
  3304                           
  3305                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  3306     033E  019A               	clrf	26	;volatile
  3307     033F                     l1789:
  3308                           
  3309                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  3310     033F  1091               	bcf	17,1	;volatile
  3311     0340                     l1791:
  3312                           
  3313                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x7C;
  3314     0340  307C               	movlw	124
  3315     0341  009C               	movwf	28	;volatile
  3316     0342                     l638:
  3317     0342  0008               	return
  3318     0343                     __end_of_TMR2_Initialize:
  3319                           
  3320                           	psect	text8
  3321     02B0                     __ptext8:	
  3322 ;; *************** function _TMR1_Initialize *****************
  3323 ;; Defined at:
  3324 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3338 ;;      Params:         0       0       0       0
  3339 ;;      Locals:         0       0       0       0
  3340 ;;      Temps:          0       0       0       0
  3341 ;;      Totals:         0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 6
  3345 ;; This function calls:
  3346 ;;		_TMR1_SetInterruptHandler
  3347 ;; This function is called by:
  3348 ;;		_SYSTEM_Initialize
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352     02B0                     _TMR1_Initialize:	
  3353                           ;psect for function _TMR1_Initialize
  3354                           
  3355     02B0                     l1793:	
  3356                           ;incstack = 0
  3357                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3358                           
  3359                           
  3360                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x01;
  3361     02B0  3001               	movlw	1
  3362     02B1  0020               	movlb	0	; select bank0
  3363     02B2  0099               	movwf	25	;volatile
  3364                           
  3365                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xC3;
  3366     02B3  30C3               	movlw	195
  3367     02B4  0097               	movwf	23	;volatile
  3368                           
  3369                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x74;
  3370     02B5  3074               	movlw	116
  3371     02B6  0096               	movwf	22	;volatile
  3372     02B7                     l1795:
  3373                           
  3374                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3375     02B7  1011               	bcf	17,0	;volatile
  3376                           
  3377                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3378     02B8  0817               	movf	23,w	;volatile
  3379     02B9  00C2               	movwf	_timer1ReloadVal+1	;volatile
  3380     02BA  0816               	movf	22,w	;volatile
  3381     02BB  00C1               	movwf	_timer1ReloadVal	;volatile
  3382     02BC                     l1797:
  3383                           
  3384                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3385     02BC  0021               	movlb	1	; select bank1
  3386     02BD  1411               	bsf	17,0	;volatile
  3387     02BE                     l1799:
  3388                           
  3389                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3390     02BE  30A5               	movlw	low _TMR1_DefaultInterruptHandler
  3391     02BF  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3392     02C0  3003               	movlw	high _TMR1_DefaultInterruptHandler
  3393     02C1  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3394     02C2  3183  235D  3182   	fcall	_TMR1_SetInterruptHandler
  3395     02C5                     l1801:
  3396                           
  3397                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0xC4;
  3398     02C5  30C4               	movlw	196
  3399     02C6  0020               	movlb	0	; select bank0
  3400     02C7  0098               	movwf	24	;volatile
  3401     02C8                     l280:
  3402     02C8  0008               	return
  3403     02C9                     __end_of_TMR1_Initialize:
  3404                           
  3405                           	psect	text9
  3406     035D                     __ptext9:	
  3407 ;; *************** function _TMR1_SetInterruptHandler *****************
  3408 ;; Defined at:
  3409 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  3412 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3424 ;;      Params:         2       0       0       0
  3425 ;;      Locals:         0       0       0       0
  3426 ;;      Temps:          0       0       0       0
  3427 ;;      Totals:         2       0       0       0
  3428 ;;Total ram usage:        2 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 5
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_TMR1_Initialize
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     035D                     _TMR1_SetInterruptHandler:	
  3439                           ;psect for function _TMR1_SetInterruptHandler
  3440                           
  3441     035D                     l1735:	
  3442                           ;incstack = 0
  3443                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3444                           
  3445                           
  3446                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  3447     035D  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  3448     035E  0020               	movlb	0	; select bank0
  3449     035F  00C0               	movwf	_TMR1_InterruptHandler+1
  3450     0360  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  3451     0361  00BF               	movwf	_TMR1_InterruptHandler
  3452     0362                     l310:
  3453     0362  0008               	return
  3454     0363                     __end_of_TMR1_SetInterruptHandler:
  3455                           
  3456                           	psect	text10
  3457     027D                     __ptext10:	
  3458 ;; *************** function _PIN_MANAGER_Initialize *****************
  3459 ;; Defined at:
  3460 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3474 ;;      Params:         0       0       0       0
  3475 ;;      Locals:         0       0       0       0
  3476 ;;      Temps:          0       0       0       0
  3477 ;;      Totals:         0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 5
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_SYSTEM_Initialize
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488     027D                     _PIN_MANAGER_Initialize:	
  3489                           ;psect for function _PIN_MANAGER_Initialize
  3490                           
  3491     027D                     l1755:	
  3492                           ;incstack = 0
  3493                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3494                           
  3495                           
  3496                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3497     027D  0022               	movlb	2	; select bank2
  3498     027E  018C               	clrf	12	;volatile
  3499                           
  3500                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3501     027F  018D               	clrf	13	;volatile
  3502                           
  3503                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3504     0280  018E               	clrf	14	;volatile
  3505     0281                     l1757:
  3506                           
  3507                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  3508     0281  303F               	movlw	63
  3509     0282  0021               	movlb	1	; select bank1
  3510     0283  008C               	movwf	12	;volatile
  3511     0284                     l1759:
  3512                           
  3513                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  3514     0284  30F0               	movlw	240
  3515     0285  008D               	movwf	13	;volatile
  3516     0286                     l1761:
  3517                           
  3518                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xF8;
  3519     0286  30F8               	movlw	248
  3520     0287  008E               	movwf	14	;volatile
  3521     0288                     l1763:
  3522                           
  3523                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  3524     0288  30CF               	movlw	207
  3525     0289  0023               	movlb	3	; select bank3
  3526     028A  008E               	movwf	14	;volatile
  3527     028B                     l1765:
  3528                           
  3529                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x20;
  3530     028B  3020               	movlw	32
  3531     028C  008D               	movwf	13	;volatile
  3532     028D                     l1767:
  3533                           
  3534                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  3535     028D  3017               	movlw	23
  3536     028E  008C               	movwf	12	;volatile
  3537                           
  3538                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3539     028F  0024               	movlb	4	; select bank4
  3540     0290  018D               	clrf	13	;volatile
  3541                           
  3542                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3543     0291  018C               	clrf	12	;volatile
  3544     0292                     l1769:
  3545                           
  3546                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  3547     0292  0021               	movlb	1	; select bank1
  3548     0293  1795               	bsf	21,7	;volatile
  3549                           
  3550                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  3551     0294  0022               	movlb	2	; select bank2
  3552     0295  019D               	clrf	29	;volatile
  3553     0296                     l213:
  3554     0296  0008               	return
  3555     0297                     __end_of_PIN_MANAGER_Initialize:
  3556                           
  3557                           	psect	text11
  3558     0363                     __ptext11:	
  3559 ;; *************** function _OSCILLATOR_Initialize *****************
  3560 ;; Defined at:
  3561 ;;		line 63 in file "mcc_generated_files/mcc.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3575 ;;      Params:         0       0       0       0
  3576 ;;      Locals:         0       0       0       0
  3577 ;;      Temps:          0       0       0       0
  3578 ;;      Totals:         0       0       0       0
  3579 ;;Total ram usage:        0 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 5
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_SYSTEM_Initialize
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589     0363                     _OSCILLATOR_Initialize:	
  3590                           ;psect for function _OSCILLATOR_Initialize
  3591                           
  3592     0363                     l1771:	
  3593                           ;incstack = 0
  3594                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3595                           
  3596                           
  3597                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x7A;
  3598     0363  307A               	movlw	122
  3599     0364  0021               	movlb	1	; select bank1
  3600     0365  0099               	movwf	25	;volatile
  3601     0366                     l1773:
  3602                           
  3603                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3604     0366  0022               	movlb	2	; select bank2
  3605     0367  0196               	clrf	22	;volatile
  3606     0368                     l181:
  3607     0368  0008               	return
  3608     0369                     __end_of_OSCILLATOR_Initialize:
  3609                           
  3610                           	psect	text12
  3611     0327                     __ptext12:	
  3612 ;; *************** function _I2C_Initialize *****************
  3613 ;; Defined at:
  3614 ;;		line 108 in file "mcc_generated_files/i2c_slave.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, status,2, status,0
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3628 ;;      Params:         0       0       0       0
  3629 ;;      Locals:         0       0       0       0
  3630 ;;      Temps:          1       0       0       0
  3631 ;;      Totals:         1       0       0       0
  3632 ;;Total ram usage:        1 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 5
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_SYSTEM_Initialize
  3639 ;;		_I2C_Enable
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643     0327                     _I2C_Initialize:	
  3644                           ;psect for function _I2C_Initialize
  3645                           
  3646     0327                     l1747:	
  3647                           ;incstack = 0
  3648                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0]
  3649                           
  3650                           
  3651                           ;mcc_generated_files/i2c_slave.c: 110:     SSP1STAT = 0x00;
  3652     0327  0024               	movlb	4	; select bank4
  3653     0328  0194               	clrf	20	;volatile
  3654     0329                     l1749:
  3655                           
  3656                           ;mcc_generated_files/i2c_slave.c: 111:     SSP1CON1 |= 0x06;
  3657     0329  3006               	movlw	6
  3658     032A  00F3               	movwf	??_I2C_Initialize
  3659     032B  0873               	movf	??_I2C_Initialize,w
  3660     032C  0495               	iorwf	21,f	;volatile
  3661     032D                     l1751:
  3662                           
  3663                           ;mcc_generated_files/i2c_slave.c: 112:     SSP1CON2 = 0x81;
  3664     032D  3081               	movlw	129
  3665     032E  0096               	movwf	22	;volatile
  3666     032F                     l1753:
  3667                           
  3668                           ;mcc_generated_files/i2c_slave.c: 113:     SSP1CON1bits.SSPEN = 0;
  3669     032F  1295               	bcf	21,5	;volatile
  3670     0330                     l468:
  3671     0330  0008               	return
  3672     0331                     __end_of_I2C_Initialize:
  3673                           
  3674                           	psect	text13
  3675     038D                     __ptext13:	
  3676 ;; *************** function _FVR_Initialize *****************
  3677 ;; Defined at:
  3678 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3692 ;;      Params:         0       0       0       0
  3693 ;;      Locals:         0       0       0       0
  3694 ;;      Temps:          0       0       0       0
  3695 ;;      Totals:         0       0       0       0
  3696 ;;Total ram usage:        0 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; Hardware stack levels required when called: 5
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_SYSTEM_Initialize
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706     038D                     _FVR_Initialize:	
  3707                           ;psect for function _FVR_Initialize
  3708                           
  3709     038D                     l1777:	
  3710                           ;incstack = 0
  3711                           ; Regs used in _FVR_Initialize: [wreg]
  3712                           
  3713                           
  3714                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  3715     038D  3082               	movlw	130
  3716     038E  0022               	movlb	2	; select bank2
  3717     038F  0097               	movwf	23	;volatile
  3718     0390                     l360:
  3719     0390  0008               	return
  3720     0391                     __end_of_FVR_Initialize:
  3721                           
  3722                           	psect	text14
  3723     0331                     __ptext14:	
  3724 ;; *************** function _ADC_Initialize *****************
  3725 ;; Defined at:
  3726 ;;		line 67 in file "mcc_generated_files/adc.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3740 ;;      Params:         0       0       0       0
  3741 ;;      Locals:         0       0       0       0
  3742 ;;      Temps:          0       0       0       0
  3743 ;;      Totals:         0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used: 1
  3746 ;; Hardware stack levels required when called: 5
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_SYSTEM_Initialize
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754     0331                     _ADC_Initialize:	
  3755                           ;psect for function _ADC_Initialize
  3756                           
  3757     0331                     l1779:	
  3758                           ;incstack = 0
  3759                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3760                           
  3761                           
  3762                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD0;
  3763     0331  30D0               	movlw	208
  3764     0332  0021               	movlb	1	; select bank1
  3765     0333  009E               	movwf	30	;volatile
  3766                           
  3767                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x30;
  3768     0334  3030               	movlw	48
  3769     0335  009F               	movwf	31	;volatile
  3770     0336                     l1781:
  3771                           
  3772                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  3773     0336  019B               	clrf	27	;volatile
  3774     0337                     l1783:
  3775                           
  3776                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  3777     0337  019C               	clrf	28	;volatile
  3778                           
  3779                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  3780     0338  3001               	movlw	1
  3781     0339  009D               	movwf	29	;volatile
  3782     033A                     l332:
  3783     033A  0008               	return
  3784     033B                     __end_of_ADC_Initialize:
  3785                           
  3786                           	psect	text15
  3787     0391                     __ptext15:	
  3788 ;; *************** function _I2C_Read *****************
  3789 ;; Defined at:
  3790 ;;		line 135 in file "mcc_generated_files/i2c_slave.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      unsigned char 
  3797 ;; Registers used:
  3798 ;;		wreg, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3804 ;;      Params:         0       0       0       0
  3805 ;;      Locals:         0       0       0       0
  3806 ;;      Temps:          0       0       0       0
  3807 ;;      Totals:         0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 6
  3811 ;; This function calls:
  3812 ;;		_I2C_SlaveGetRxData
  3813 ;; This function is called by:
  3814 ;;		_main
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818     0391                     _I2C_Read:	
  3819                           ;psect for function _I2C_Read
  3820                           
  3821     0391                     l1855:	
  3822                           ;incstack = 0
  3823                           ; Regs used in _I2C_Read: [wreg+pclath+cstack]
  3824                           
  3825                           
  3826                           ;mcc_generated_files/i2c_slave.c: 137:    return I2C_SlaveGetRxData();
  3827     0391  3183  2399  3183   	fcall	_I2C_SlaveGetRxData
  3828     0394                     l477:
  3829     0394  0008               	return
  3830     0395                     __end_of_I2C_Read:
  3831                           
  3832                           	psect	text16
  3833     0399                     __ptext16:	
  3834 ;; *************** function _I2C_SlaveGetRxData *****************
  3835 ;; Defined at:
  3836 ;;		line 397 in file "mcc_generated_files/i2c_slave.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      unsigned char 
  3843 ;; Registers used:
  3844 ;;		wreg
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3850 ;;      Params:         0       0       0       0
  3851 ;;      Locals:         0       0       0       0
  3852 ;;      Temps:          0       0       0       0
  3853 ;;      Totals:         0       0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 5
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_I2C_Read
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864     0399                     _I2C_SlaveGetRxData:	
  3865                           ;psect for function _I2C_SlaveGetRxData
  3866                           
  3867     0399                     l1817:	
  3868                           ;incstack = 0
  3869                           ; Regs used in _I2C_SlaveGetRxData: [wreg]
  3870                           
  3871                           
  3872                           ;mcc_generated_files/i2c_slave.c: 399:     return SSP1BUF;
  3873     0399  0024               	movlb	4	; select bank4
  3874     039A  0811               	movf	17,w	;volatile
  3875     039B                     l613:
  3876     039B  0008               	return
  3877     039C                     __end_of_I2C_SlaveGetRxData:
  3878                           
  3879                           	psect	text17
  3880     0248                     __ptext17:	
  3881 ;; *************** function _ADC_GetConversion *****************
  3882 ;; Defined at:
  3883 ;;		line 115 in file "mcc_generated_files/adc.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  channel         1    wreg     enum E3500
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  channel         1    6[COMMON] enum E3500
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  2    3[COMMON] unsigned short 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3897 ;;      Params:         2       0       0       0
  3898 ;;      Locals:         1       0       0       0
  3899 ;;      Temps:          1       0       0       0
  3900 ;;      Totals:         4       0       0       0
  3901 ;;Total ram usage:        4 bytes
  3902 ;; Hardware stack levels used: 1
  3903 ;; Hardware stack levels required when called: 5
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_main
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911     0248                     _ADC_GetConversion:	
  3912                           ;psect for function _ADC_GetConversion
  3913                           
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3917                           ;ADC_GetConversion@channel stored from wreg
  3918     0248  00F6               	movwf	ADC_GetConversion@channel
  3919     0249                     l1951:
  3920                           
  3921                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  3922     0249  0876               	movf	ADC_GetConversion@channel,w
  3923     024A  00F5               	movwf	??_ADC_GetConversion
  3924     024B  0DF5               	rlf	??_ADC_GetConversion,f
  3925     024C  0DF5               	rlf	??_ADC_GetConversion,f
  3926     024D  0021               	movlb	1	; select bank1
  3927     024E  081D               	movf	29,w	;volatile
  3928     024F  0675               	xorwf	??_ADC_GetConversion,w
  3929     0250  3983               	andlw	-125
  3930     0251  0675               	xorwf	??_ADC_GetConversion,w
  3931     0252  009D               	movwf	29	;volatile
  3932     0253                     l1953:
  3933                           
  3934                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  3935     0253  141D               	bsf	29,0	;volatile
  3936     0254                     l1955:
  3937                           
  3938                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3939     0254  3006               	movlw	6
  3940     0255                     u1267:
  3941     0255  0B89               	decfsz	9,f
  3942     0256  2A55               	goto	u1267
  3943     0257  3200               	nop2
  3944     0258                     l1957:
  3945                           
  3946                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GO_nDONE = 1;
  3947     0258  0021               	movlb	1	; select bank1
  3948     0259  149D               	bsf	29,1	;volatile
  3949     025A                     l347:	
  3950                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  3951                           
  3952                           
  3953                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GO_nDONE)
  3954     025A  189D               	btfsc	29,1	;volatile
  3955     025B  2A5D               	goto	u811
  3956     025C  2A5E               	goto	u810
  3957     025D                     u811:
  3958     025D  2A5A               	goto	l347
  3959     025E                     u810:
  3960     025E                     l1959:
  3961                           
  3962                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3963     025E  081C               	movf	28,w	;volatile
  3964     025F  00F4               	movwf	?_ADC_GetConversion+1
  3965     0260  081B               	movf	27,w	;volatile
  3966     0261  00F3               	movwf	?_ADC_GetConversion
  3967     0262                     l350:
  3968     0262  0008               	return
  3969     0263                     __end_of_ADC_GetConversion:
  3970                           
  3971                           	psect	intentry
  3972     0004                     __pintentry:	
  3973 ;; *************** function _INTERRUPT_InterruptManager *****************
  3974 ;; Defined at:
  3975 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3989 ;;      Params:         0       0       0       0
  3990 ;;      Locals:         0       0       0       0
  3991 ;;      Temps:          0       0       0       0
  3992 ;;      Totals:         0       0       0       0
  3993 ;;Total ram usage:        0 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 4
  3996 ;; This function calls:
  3997 ;;		Absolute function
  3998 ;;		_I2C_Isr
  3999 ;;		_TMR1_ISR
  4000 ;; This function is called by:
  4001 ;;		Interrupt level 1
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005     0004                     _INTERRUPT_InterruptManager:
  4006                           
  4007                           ;incstack = 0
  4008     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4009                           
  4010                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4011     0005  3180               	pagesel	$
  4012     0006                     i1l2071:
  4013                           
  4014                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4015     0006  1F0B               	btfss	11,6	;volatile
  4016     0007  2809               	goto	u90_21
  4017     0008  280A               	goto	u90_20
  4018     0009                     u90_21:
  4019     0009  2833               	goto	i1l253
  4020     000A                     u90_20:
  4021     000A                     i1l2073:
  4022                           
  4023                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  4024     000A  0021               	movlb	1	; select bank1
  4025     000B  1D92               	btfss	18,3	;volatile
  4026     000C  280E               	goto	u91_21
  4027     000D  280F               	goto	u91_20
  4028     000E                     u91_21:
  4029     000E  281A               	goto	i1l246
  4030     000F                     u91_20:
  4031     000F                     i1l2075:
  4032     000F  0020               	movlb	0	; select bank0
  4033     0010  1D92               	btfss	18,3	;volatile
  4034     0011  2813               	goto	u92_21
  4035     0012  2814               	goto	u92_20
  4036     0013                     u92_21:
  4037     0013  281A               	goto	i1l246
  4038     0014                     u92_20:
  4039     0014                     i1l2077:
  4040                           
  4041                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             MSSP_InterruptHandler();
  4042     0014  083A               	movf	_MSSP_InterruptHandler+1,w
  4043     0015  008A               	movwf	10
  4044     0016  0839               	movf	_MSSP_InterruptHandler,w
  4045     0017  000A               	callw
  4046     0018  3180               	pagesel	$
  4047                           
  4048                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4049     0019  2833               	goto	i1l253
  4050     001A                     i1l246:	
  4051                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  4052                           
  4053     001A  0021               	movlb	1	; select bank1
  4054     001B  1D91               	btfss	17,3	;volatile
  4055     001C  281E               	goto	u93_21
  4056     001D  281F               	goto	u93_20
  4057     001E                     u93_21:
  4058     001E  2825               	goto	i1l248
  4059     001F                     u93_20:
  4060     001F                     i1l2079:
  4061     001F  0020               	movlb	0	; select bank0
  4062     0020  1D91               	btfss	17,3	;volatile
  4063     0021  2823               	goto	u94_21
  4064     0022  2824               	goto	u94_20
  4065     0023                     u94_21:
  4066     0023  2825               	goto	i1l248
  4067     0024                     u94_20:
  4068     0024  2814               	goto	i1l2077
  4069     0025                     i1l248:	
  4070                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
  4071                           
  4072     0025  0021               	movlb	1	; select bank1
  4073     0026  1C11               	btfss	17,0	;volatile
  4074     0027  2829               	goto	u95_21
  4075     0028  282A               	goto	u95_20
  4076     0029                     u95_21:
  4077     0029  2833               	goto	i1l247
  4078     002A                     u95_20:
  4079     002A                     i1l2083:
  4080     002A  0020               	movlb	0	; select bank0
  4081     002B  1C11               	btfss	17,0	;volatile
  4082     002C  282E               	goto	u96_21
  4083     002D  282F               	goto	u96_20
  4084     002E                     u96_21:
  4085     002E  2833               	goto	i1l247
  4086     002F                     u96_20:
  4087     002F                     i1l2085:
  4088                           
  4089                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  4090     002F  3182  22C9  3180   	fcall	_TMR1_ISR
  4091                           
  4092                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  4093     0032  2833               	goto	i1l253
  4094     0033                     i1l247:
  4095     0033                     i1l253:	
  4096                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  4097                           
  4098     0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4099     0034  0009               	retfie
  4100     0035                     __end_of_INTERRUPT_InterruptManager:
  4101                           
  4102                           	psect	text19
  4103     02C9                     __ptext19:	
  4104 ;; *************** function _TMR1_ISR *****************
  4105 ;; Defined at:
  4106 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;		None
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      void 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0, pclath, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4120 ;;      Params:         0       0       0       0
  4121 ;;      Locals:         0       0       0       0
  4122 ;;      Temps:          0       0       0       0
  4123 ;;      Totals:         0       0       0       0
  4124 ;;Total ram usage:        0 bytes
  4125 ;; Hardware stack levels used: 1
  4126 ;; Hardware stack levels required when called: 1
  4127 ;; This function calls:
  4128 ;;		Absolute function
  4129 ;;		_TMR1_DefaultInterruptHandler
  4130 ;;		_TMR1_WriteTimer
  4131 ;; This function is called by:
  4132 ;;		_INTERRUPT_InterruptManager
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136     02C9                     _TMR1_ISR:	
  4137                           ;psect for function _TMR1_ISR
  4138                           
  4139     02C9                     i1l1963:	
  4140                           ;incstack = 0
  4141                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  4142                           
  4143                           
  4144                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  4145     02C9  0020               	movlb	0	; select bank0
  4146     02CA  1011               	bcf	17,0	;volatile
  4147     02CB                     i1l1965:
  4148                           
  4149                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  4150     02CB  0842               	movf	_timer1ReloadVal+1,w	;volatile
  4151     02CC  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4152     02CD  0841               	movf	_timer1ReloadVal,w	;volatile
  4153     02CE  00F0               	movwf	TMR1_WriteTimer@timerVal
  4154     02CF  3182  22DF  3182   	fcall	_TMR1_WriteTimer
  4155     02D2                     i1l1967:
  4156                           
  4157                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  4158     02D2  0020               	movlb	0	; select bank0
  4159     02D3  083F               	movf	_TMR1_InterruptHandler,w
  4160     02D4  0440               	iorwf	_TMR1_InterruptHandler+1,w
  4161     02D5  1903               	btfsc	3,2
  4162     02D6  2AD8               	goto	u82_21
  4163     02D7  2AD9               	goto	u82_20
  4164     02D8                     u82_21:
  4165     02D8  2ADE               	goto	i1l307
  4166     02D9                     u82_20:
  4167     02D9                     i1l1969:
  4168                           
  4169                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  4170     02D9  0840               	movf	_TMR1_InterruptHandler+1,w
  4171     02DA  008A               	movwf	10
  4172     02DB  083F               	movf	_TMR1_InterruptHandler,w
  4173     02DC  000A               	callw
  4174     02DD  3182               	pagesel	$
  4175     02DE                     i1l307:
  4176     02DE  0008               	return
  4177     02DF                     __end_of_TMR1_ISR:
  4178                           
  4179                           	psect	text20
  4180     02DF                     __ptext20:	
  4181 ;; *************** function _TMR1_WriteTimer *****************
  4182 ;; Defined at:
  4183 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  timerVal        2    0[COMMON] unsigned short 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;		None
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4197 ;;      Params:         2       0       0       0
  4198 ;;      Locals:         0       0       0       0
  4199 ;;      Temps:          0       0       0       0
  4200 ;;      Totals:         2       0       0       0
  4201 ;;Total ram usage:        2 bytes
  4202 ;; Hardware stack levels used: 1
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_TMR1_ISR
  4207 ;;		_TMR1_Reload
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211     02DF                     _TMR1_WriteTimer:	
  4212                           ;psect for function _TMR1_WriteTimer
  4213                           
  4214     02DF                     i1l1803:	
  4215                           ;incstack = 0
  4216                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4217                           
  4218                           
  4219                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  4220     02DF  0020               	movlb	0	; select bank0
  4221     02E0  1D18               	btfss	24,2	;volatile
  4222     02E1  2AE3               	goto	u51_21
  4223     02E2  2AE4               	goto	u51_20
  4224     02E3                     u51_21:
  4225     02E3  2AEB               	goto	i1l1813
  4226     02E4                     u51_20:
  4227     02E4                     i1l1805:
  4228                           
  4229                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  4230     02E4  1018               	bcf	24,0	;volatile
  4231     02E5                     i1l1807:
  4232                           
  4233                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  4234     02E5  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4235     02E6  0097               	movwf	23	;volatile
  4236     02E7                     i1l1809:
  4237                           
  4238                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  4239     02E7  0870               	movf	TMR1_WriteTimer@timerVal,w
  4240     02E8  0096               	movwf	22	;volatile
  4241     02E9                     i1l1811:
  4242                           
  4243                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  4244     02E9  1418               	bsf	24,0	;volatile
  4245                           
  4246                           ;mcc_generated_files/tmr1.c: 133:     }
  4247     02EA  2AEF               	goto	i1l294
  4248     02EB                     i1l1813:
  4249                           
  4250                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4251     02EB  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4252     02EC  0097               	movwf	23	;volatile
  4253     02ED                     i1l1815:
  4254                           
  4255                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  4256     02ED  0870               	movf	TMR1_WriteTimer@timerVal,w
  4257     02EE  0096               	movwf	22	;volatile
  4258     02EF                     i1l294:
  4259     02EF  0008               	return
  4260     02F0                     __end_of_TMR1_WriteTimer:
  4261                           
  4262                           	psect	text21
  4263     03A5                     __ptext21:	
  4264 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4265 ;; Defined at:
  4266 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		None
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4280 ;;      Params:         0       0       0       0
  4281 ;;      Locals:         0       0       0       0
  4282 ;;      Temps:          0       0       0       0
  4283 ;;      Totals:         0       0       0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_TMR1_Initialize
  4290 ;;		_TMR1_ISR
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294     03A5                     _TMR1_DefaultInterruptHandler:	
  4295                           ;psect for function _TMR1_DefaultInterruptHandler
  4296                           
  4297     03A5                     i1l313:	
  4298                           ;incstack = 0
  4299                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4300                           
  4301     03A5  0008               	return
  4302     03A6                     __end_of_TMR1_DefaultInterruptHandler:
  4303                           
  4304                           	psect	text22
  4305     01DF                     __ptext22:	
  4306 ;; *************** function _I2C_Isr *****************
  4307 ;; Defined at:
  4308 ;;		line 165 in file "mcc_generated_files/i2c_slave.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4322 ;;      Params:         0       0       0       0
  4323 ;;      Locals:         0       0       0       0
  4324 ;;      Temps:          2       0       0       0
  4325 ;;      Totals:         2       0       0       0
  4326 ;;Total ram usage:        2 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; Hardware stack levels required when called: 3
  4329 ;; This function calls:
  4330 ;;		_I2C_SlaveAddrCallBack
  4331 ;;		_I2C_SlaveClearIrq
  4332 ;;		_I2C_SlaveIsAddr
  4333 ;;		_I2C_SlaveIsRead
  4334 ;;		_I2C_SlaveIsRxBufFull
  4335 ;;		_I2C_SlaveIsTxBufEmpty
  4336 ;;		_I2C_SlaveRdCallBack
  4337 ;;		_I2C_SlaveReleaseClock
  4338 ;;		_I2C_SlaveWrCallBack
  4339 ;; This function is called by:
  4340 ;;		_I2C_Open
  4341 ;;		_INTERRUPT_InterruptManager
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345     01DF                     _I2C_Isr:	
  4346                           ;psect for function _I2C_Isr
  4347                           
  4348     01DF                     i1l1971:	
  4349                           ;incstack = 0
  4350                           ; Regs used in _I2C_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4351                           
  4352                           
  4353                           ;mcc_generated_files/i2c_slave.c: 167:     I2C_SlaveClearIrq();
  4354     01DF  3183  239F  3181   	fcall	_I2C_SlaveClearIrq
  4355     01E2                     i1l1973:
  4356                           
  4357                           ;mcc_generated_files/i2c_slave.c: 169:     if(I2C_SlaveIsAddr())
  4358     01E2  3183  234A  3181   	fcall	_I2C_SlaveIsAddr
  4359     01E5  3A00               	xorlw	0
  4360     01E6  1903               	skipnz
  4361     01E7  29E9               	goto	u83_21
  4362     01E8  29EA               	goto	u83_20
  4363     01E9                     u83_21:
  4364     01E9  29F8               	goto	i1l1981
  4365     01EA                     u83_20:
  4366     01EA                     i1l1975:
  4367                           
  4368                           ;mcc_generated_files/i2c_slave.c: 170:     {;mcc_generated_files/i2c_slave.c: 171:      
      +                             if(I2C_SlaveIsRead())
  4369     01EA  3183  2384  3181   	fcall	_I2C_SlaveIsRead
  4370     01ED  3A00               	xorlw	0
  4371     01EE  1903               	skipnz
  4372     01EF  29F1               	goto	u84_21
  4373     01F0  29F2               	goto	u84_20
  4374     01F1                     u84_21:
  4375     01F1  29F5               	goto	i1l1979
  4376     01F2                     u84_20:
  4377     01F2                     i1l1977:
  4378                           
  4379                           ;mcc_generated_files/i2c_slave.c: 172:         {;mcc_generated_files/i2c_slave.c: 173:  
      +                                     i2cSlaveState = I2C_ADDR_TX;
  4380     01F2  3001               	movlw	1
  4381     01F3  00F7               	movwf	_i2cSlaveState	;volatile
  4382                           
  4383                           ;mcc_generated_files/i2c_slave.c: 174:         }
  4384     01F4  2A2E               	goto	i1l2005
  4385     01F5                     i1l1979:
  4386                           
  4387                           ;mcc_generated_files/i2c_slave.c: 176:         {;mcc_generated_files/i2c_slave.c: 177:  
      +                                     i2cSlaveState = I2C_ADDR_RX;
  4388     01F5  3002               	movlw	2
  4389     01F6  00F7               	movwf	_i2cSlaveState	;volatile
  4390     01F7  2A2E               	goto	i1l2005
  4391     01F8                     i1l1981:
  4392                           
  4393                           ;mcc_generated_files/i2c_slave.c: 181:     {;mcc_generated_files/i2c_slave.c: 182:      
      +                             if(I2C_SlaveIsRead())
  4394     01F8  3183  2384  3181   	fcall	_I2C_SlaveIsRead
  4395     01FB  3A00               	xorlw	0
  4396     01FC  1903               	skipnz
  4397     01FD  29FF               	goto	u85_21
  4398     01FE  2A00               	goto	u85_20
  4399     01FF                     u85_21:
  4400     01FF  2A03               	goto	i1l1985
  4401     0200                     u85_20:
  4402     0200                     i1l1983:
  4403                           
  4404                           ;mcc_generated_files/i2c_slave.c: 183:         {;mcc_generated_files/i2c_slave.c: 184:  
      +                                     i2cSlaveState = I2C_DATA_TX;
  4405     0200  3003               	movlw	3
  4406     0201  00F7               	movwf	_i2cSlaveState	;volatile
  4407                           
  4408                           ;mcc_generated_files/i2c_slave.c: 185:         }
  4409     0202  2A2E               	goto	i1l2005
  4410     0203                     i1l1985:
  4411                           
  4412                           ;mcc_generated_files/i2c_slave.c: 187:         {;mcc_generated_files/i2c_slave.c: 188:  
      +                                     i2cSlaveState = I2C_DATA_RX;
  4413     0203  3004               	movlw	4
  4414     0204  00F7               	movwf	_i2cSlaveState	;volatile
  4415     0205  2A2E               	goto	i1l2005
  4416     0206                     i1l1987:
  4417                           
  4418                           ;mcc_generated_files/i2c_slave.c: 195:             I2C_SlaveAddrCallBack();
  4419     0206  3183  231A  3181   	fcall	_I2C_SlaveAddrCallBack
  4420     0209                     i1l1989:
  4421                           
  4422                           ;mcc_generated_files/i2c_slave.c: 196:             if(I2C_SlaveIsTxBufEmpty())
  4423     0209  3183  2343  3181   	fcall	_I2C_SlaveIsTxBufEmpty
  4424     020C  3A00               	xorlw	0
  4425     020D  1903               	skipnz
  4426     020E  2A10               	goto	u86_21
  4427     020F  2A11               	goto	u86_20
  4428     0210                     u86_21:
  4429     0210  2A44               	goto	i1l2007
  4430     0211                     u86_20:
  4431     0211                     i1l1991:
  4432                           
  4433                           ;mcc_generated_files/i2c_slave.c: 197:             {;mcc_generated_files/i2c_slave.c: 19
      +                          8:                 I2C_SlaveWrCallBack();
  4434     0211  3183  2300  3181   	fcall	_I2C_SlaveWrCallBack
  4435     0214  2A44               	goto	i1l2007
  4436     0215                     i1l1993:
  4437                           
  4438                           ;mcc_generated_files/i2c_slave.c: 202:             I2C_SlaveAddrCallBack();
  4439     0215  3183  231A  3181   	fcall	_I2C_SlaveAddrCallBack
  4440                           
  4441                           ;mcc_generated_files/i2c_slave.c: 203:             break;
  4442     0218  2A44               	goto	i1l2007
  4443     0219                     i1l1995:
  4444                           
  4445                           ;mcc_generated_files/i2c_slave.c: 205:             if(I2C_SlaveIsTxBufEmpty())
  4446     0219  3183  2343  3181   	fcall	_I2C_SlaveIsTxBufEmpty
  4447     021C  3A00               	xorlw	0
  4448     021D  1903               	skipnz
  4449     021E  2A20               	goto	u87_21
  4450     021F  2A21               	goto	u87_20
  4451     0220                     u87_21:
  4452     0220  2A44               	goto	i1l2007
  4453     0221                     u87_20:
  4454     0221  2A11               	goto	i1l1991
  4455     0222                     i1l1999:
  4456                           
  4457                           ;mcc_generated_files/i2c_slave.c: 211:             if(I2C_SlaveIsRxBufFull())
  4458     0222  3183  2395  3181   	fcall	_I2C_SlaveIsRxBufFull
  4459     0225  3A00               	xorlw	0
  4460     0226  1903               	skipnz
  4461     0227  2A29               	goto	u88_21
  4462     0228  2A2A               	goto	u88_20
  4463     0229                     u88_21:
  4464     0229  2A44               	goto	i1l2007
  4465     022A                     u88_20:
  4466     022A                     i1l2001:
  4467                           
  4468                           ;mcc_generated_files/i2c_slave.c: 212:             {;mcc_generated_files/i2c_slave.c: 21
      +                          3:                 I2C_SlaveRdCallBack();
  4469     022A  3183  230D  3181   	fcall	_I2C_SlaveRdCallBack
  4470     022D  2A44               	goto	i1l2007
  4471     022E                     i1l2005:
  4472     022E  0877               	movf	_i2cSlaveState,w	;volatile
  4473     022F  00F1               	movwf	??_I2C_Isr
  4474     0230  01F2               	clrf	??_I2C_Isr+1
  4475                           
  4476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4477                           ; Switch size 1, requested type "simple"
  4478                           ; Number of cases is 1, Range of values is 0 to 0
  4479                           ; switch strategies available:
  4480                           ; Name         Instructions Cycles
  4481                           ; simple_byte            4     3 (average)
  4482                           ; direct_byte            8     6 (fixed)
  4483                           ; jumptable            260     6 (fixed)
  4484                           ;	Chosen strategy is simple_byte
  4485     0231  0872               	movf	??_I2C_Isr+1,w
  4486     0232  3A00               	xorlw	0	; case 0
  4487     0233  1903               	skipnz
  4488     0234  2A36               	goto	i1l2355
  4489     0235  2A44               	goto	i1l2007
  4490     0236                     i1l2355:
  4491                           
  4492                           ; Switch size 1, requested type "simple"
  4493                           ; Number of cases is 4, Range of values is 1 to 4
  4494                           ; switch strategies available:
  4495                           ; Name         Instructions Cycles
  4496                           ; simple_byte           13     7 (average)
  4497                           ; direct_byte           17     9 (fixed)
  4498                           ; jumptable            263     9 (fixed)
  4499                           ;	Chosen strategy is simple_byte
  4500     0236  0871               	movf	??_I2C_Isr,w
  4501     0237  3A01               	xorlw	1	; case 1
  4502     0238  1903               	skipnz
  4503     0239  2A06               	goto	i1l1987
  4504     023A  3A03               	xorlw	3	; case 2
  4505     023B  1903               	skipnz
  4506     023C  2A15               	goto	i1l1993
  4507     023D  3A01               	xorlw	1	; case 3
  4508     023E  1903               	skipnz
  4509     023F  2A19               	goto	i1l1995
  4510     0240  3A07               	xorlw	7	; case 4
  4511     0241  1903               	skipnz
  4512     0242  2A22               	goto	i1l1999
  4513     0243  2A44               	goto	i1l2007
  4514     0244                     i1l2007:
  4515                           
  4516                           ;mcc_generated_files/i2c_slave.c: 219:     I2C_SlaveReleaseClock();
  4517     0244  3183  239C  3181   	fcall	_I2C_SlaveReleaseClock
  4518     0247                     i1l511:
  4519     0247  0008               	return
  4520     0248                     __end_of_I2C_Isr:
  4521                           
  4522                           	psect	text23
  4523     0300                     __ptext23:	
  4524 ;; *************** function _I2C_SlaveWrCallBack *****************
  4525 ;; Defined at:
  4526 ;;		line 250 in file "mcc_generated_files/i2c_slave.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0, pclath, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4540 ;;      Params:         0       0       0       0
  4541 ;;      Locals:         0       0       0       0
  4542 ;;      Temps:          0       0       0       0
  4543 ;;      Totals:         0       0       0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 2
  4547 ;; This function calls:
  4548 ;;		Absolute function
  4549 ;;		_I2C_SlaveDefWrInterruptHandler
  4550 ;; This function is called by:
  4551 ;;		_I2C_Isr
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555     0300                     _I2C_SlaveWrCallBack:	
  4556                           ;psect for function _I2C_SlaveWrCallBack
  4557                           
  4558     0300                     i1l1839:	
  4559                           ;incstack = 0
  4560                           ; Regs used in _I2C_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  4561                           
  4562                           
  4563                           ;mcc_generated_files/i2c_slave.c: 252:     if (I2C_SlaveWrInterruptHandler)
  4564     0300  0020               	movlb	0	; select bank0
  4565     0301  0835               	movf	_I2C_SlaveWrInterruptHandler,w
  4566     0302  0436               	iorwf	_I2C_SlaveWrInterruptHandler+1,w
  4567     0303  1903               	btfsc	3,2
  4568     0304  2B06               	goto	u53_21
  4569     0305  2B07               	goto	u53_20
  4570     0306                     u53_21:
  4571     0306  2B0C               	goto	i1l531
  4572     0307                     u53_20:
  4573     0307                     i1l1841:
  4574                           
  4575                           ;mcc_generated_files/i2c_slave.c: 253:     {;mcc_generated_files/i2c_slave.c: 254:      
      +                             I2C_SlaveWrInterruptHandler();
  4576     0307  0836               	movf	_I2C_SlaveWrInterruptHandler+1,w
  4577     0308  008A               	movwf	10
  4578     0309  0835               	movf	_I2C_SlaveWrInterruptHandler,w
  4579     030A  000A               	callw
  4580     030B  3183               	pagesel	$
  4581     030C                     i1l531:
  4582     030C  0008               	return
  4583     030D                     __end_of_I2C_SlaveWrCallBack:
  4584                           
  4585                           	psect	text24
  4586     037A                     __ptext24:	
  4587 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  4588 ;; Defined at:
  4589 ;;		line 258 in file "mcc_generated_files/i2c_slave.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0, pclath, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4603 ;;      Params:         0       0       0       0
  4604 ;;      Locals:         0       0       0       0
  4605 ;;      Temps:          0       0       0       0
  4606 ;;      Totals:         0       0       0       0
  4607 ;;Total ram usage:        0 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; Hardware stack levels required when called: 1
  4610 ;; This function calls:
  4611 ;;		i1_I2C_SlaveSendTxData
  4612 ;; This function is called by:
  4613 ;;		_I2C_Open
  4614 ;;		_I2C_SlaveWrCallBack
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618     037A                     _I2C_SlaveDefWrInterruptHandler:	
  4619                           ;psect for function _I2C_SlaveDefWrInterruptHandler
  4620                           
  4621     037A                     i1l1741:	
  4622                           ;incstack = 0
  4623                           ; Regs used in _I2C_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  4624                           
  4625                           
  4626                           ;mcc_generated_files/i2c_slave.c: 259:     I2C_SlaveSendTxData(i2cWrData);
  4627     037A  0878               	movf	_i2cWrData,w	;volatile
  4628     037B  3183  237F  3183   	fcall	i1_I2C_SlaveSendTxData
  4629     037E                     i1l534:
  4630     037E  0008               	return
  4631     037F                     __end_of_I2C_SlaveDefWrInterruptHandler:
  4632                           
  4633                           	psect	text25
  4634     037F                     __ptext25:	
  4635 ;; *************** function i1_I2C_SlaveSendTxData *****************
  4636 ;; Defined at:
  4637 ;;		line 392 in file "mcc_generated_files/i2c_slave.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  data            1    wreg     unsigned char 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  data            1    0[COMMON] unsigned char 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4651 ;;      Params:         0       0       0       0
  4652 ;;      Locals:         1       0       0       0
  4653 ;;      Temps:          0       0       0       0
  4654 ;;      Totals:         1       0       0       0
  4655 ;;Total ram usage:        1 bytes
  4656 ;; Hardware stack levels used: 1
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_I2C_SlaveDefWrInterruptHandler
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664     037F                     i1_I2C_SlaveSendTxData:	
  4665                           ;psect for function i1_I2C_SlaveSendTxData
  4666                           
  4667                           
  4668                           ;incstack = 0
  4669                           ; Regs used in i1_I2C_SlaveSendTxData: [wreg]
  4670                           ;i1I2C_SlaveSendTxData@data stored from wreg
  4671     037F  00F0               	movwf	i1I2C_SlaveSendTxData@data
  4672     0380                     i1l1729:
  4673                           
  4674                           ;mcc_generated_files/i2c_slave.c: 392: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 393: {;mcc_generated_files/i2c_sla
      +                          ve.c: 394:     SSP1BUF = data;
  4675     0380  0870               	movf	i1I2C_SlaveSendTxData@data,w
  4676     0381  0024               	movlb	4	; select bank4
  4677     0382  0091               	movwf	17	;volatile
  4678     0383                     i1l610:
  4679     0383  0008               	return
  4680     0384                     __end_ofi1_I2C_SlaveSendTxData:
  4681                           
  4682                           	psect	text26
  4683     039C                     __ptext26:	
  4684 ;; *************** function _I2C_SlaveReleaseClock *****************
  4685 ;; Defined at:
  4686 ;;		line 362 in file "mcc_generated_files/i2c_slave.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;		None
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      void 
  4693 ;; Registers used:
  4694 ;;		None
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4700 ;;      Params:         0       0       0       0
  4701 ;;      Locals:         0       0       0       0
  4702 ;;      Temps:          0       0       0       0
  4703 ;;      Totals:         0       0       0       0
  4704 ;;Total ram usage:        0 bytes
  4705 ;; Hardware stack levels used: 1
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_I2C_Isr
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713     039C                     _I2C_SlaveReleaseClock:	
  4714                           ;psect for function _I2C_SlaveReleaseClock
  4715                           
  4716     039C                     i1l1851:	
  4717                           ;incstack = 0
  4718                           ; Regs used in _I2C_SlaveReleaseClock: []
  4719                           
  4720                           
  4721                           ;mcc_generated_files/i2c_slave.c: 364:     SSP1CON1bits.CKP = 1;
  4722     039C  0024               	movlb	4	; select bank4
  4723     039D  1615               	bsf	21,4	;volatile
  4724     039E                     i1l592:
  4725     039E  0008               	return
  4726     039F                     __end_of_I2C_SlaveReleaseClock:
  4727                           
  4728                           	psect	text27
  4729     030D                     __ptext27:	
  4730 ;; *************** function _I2C_SlaveRdCallBack *****************
  4731 ;; Defined at:
  4732 ;;		line 233 in file "mcc_generated_files/i2c_slave.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0, pclath, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4746 ;;      Params:         0       0       0       0
  4747 ;;      Locals:         0       0       0       0
  4748 ;;      Temps:          0       0       0       0
  4749 ;;      Totals:         0       0       0       0
  4750 ;;Total ram usage:        0 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; Hardware stack levels required when called: 2
  4753 ;; This function calls:
  4754 ;;		Absolute function
  4755 ;;		_I2C_SlaveDefRdInterruptHandler
  4756 ;; This function is called by:
  4757 ;;		_I2C_Isr
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761     030D                     _I2C_SlaveRdCallBack:	
  4762                           ;psect for function _I2C_SlaveRdCallBack
  4763                           
  4764     030D                     i1l1847:	
  4765                           ;incstack = 0
  4766                           ; Regs used in _I2C_SlaveRdCallBack: [wreg+status,2+status,0+pclath+cstack]
  4767                           
  4768                           
  4769                           ;mcc_generated_files/i2c_slave.c: 235:     if (I2C_SlaveRdInterruptHandler)
  4770     030D  0020               	movlb	0	; select bank0
  4771     030E  0837               	movf	_I2C_SlaveRdInterruptHandler,w
  4772     030F  0438               	iorwf	_I2C_SlaveRdInterruptHandler+1,w
  4773     0310  1903               	btfsc	3,2
  4774     0311  2B13               	goto	u54_21
  4775     0312  2B14               	goto	u54_20
  4776     0313                     u54_21:
  4777     0313  2B19               	goto	i1l521
  4778     0314                     u54_20:
  4779     0314                     i1l1849:
  4780                           
  4781                           ;mcc_generated_files/i2c_slave.c: 236:     {;mcc_generated_files/i2c_slave.c: 237:      
      +                             I2C_SlaveRdInterruptHandler();
  4782     0314  0838               	movf	_I2C_SlaveRdInterruptHandler+1,w
  4783     0315  008A               	movwf	10
  4784     0316  0837               	movf	_I2C_SlaveRdInterruptHandler,w
  4785     0317  000A               	callw
  4786     0318  3183               	pagesel	$
  4787     0319                     i1l521:
  4788     0319  0008               	return
  4789     031A                     __end_of_I2C_SlaveRdCallBack:
  4790                           
  4791                           	psect	text28
  4792     0369                     __ptext28:	
  4793 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
  4794 ;; Defined at:
  4795 ;;		line 241 in file "mcc_generated_files/i2c_slave.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;		None
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;		None
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg, pclath, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4809 ;;      Params:         0       0       0       0
  4810 ;;      Locals:         0       0       0       0
  4811 ;;      Temps:          0       0       0       0
  4812 ;;      Totals:         0       0       0       0
  4813 ;;Total ram usage:        0 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; Hardware stack levels required when called: 1
  4816 ;; This function calls:
  4817 ;;		i1_I2C_SlaveGetRxData
  4818 ;; This function is called by:
  4819 ;;		_I2C_Open
  4820 ;;		_I2C_SlaveRdCallBack
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824     0369                     _I2C_SlaveDefRdInterruptHandler:	
  4825                           ;psect for function _I2C_SlaveDefRdInterruptHandler
  4826                           
  4827     0369                     i1l1739:	
  4828                           ;incstack = 0
  4829                           ; Regs used in _I2C_SlaveDefRdInterruptHandler: [wreg+pclath+cstack]
  4830                           
  4831                           
  4832                           ;mcc_generated_files/i2c_slave.c: 242:     i2cRdData = I2C_SlaveGetRxData();
  4833     0369  3183  23A2  3183   	fcall	i1_I2C_SlaveGetRxData
  4834     036C  0020               	movlb	0	; select bank0
  4835     036D  00BC               	movwf	_i2cRdData	;volatile
  4836     036E                     i1l524:
  4837     036E  0008               	return
  4838     036F                     __end_of_I2C_SlaveDefRdInterruptHandler:
  4839                           
  4840                           	psect	text29
  4841     0343                     __ptext29:	
  4842 ;; *************** function _I2C_SlaveIsTxBufEmpty *****************
  4843 ;; Defined at:
  4844 ;;		line 382 in file "mcc_generated_files/i2c_slave.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      _Bool 
  4851 ;; Registers used:
  4852 ;;		wreg, status,0
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4858 ;;      Params:         0       0       0       0
  4859 ;;      Locals:         0       0       0       0
  4860 ;;      Temps:          0       0       0       0
  4861 ;;      Totals:         0       0       0       0
  4862 ;;Total ram usage:        0 bytes
  4863 ;; Hardware stack levels used: 1
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_I2C_Isr
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871     0343                     _I2C_SlaveIsTxBufEmpty:	
  4872                           ;psect for function _I2C_SlaveIsTxBufEmpty
  4873                           
  4874     0343                     i1l1835:	
  4875                           ;incstack = 0
  4876                           ; Regs used in _I2C_SlaveIsTxBufEmpty: [wreg+status,0]
  4877                           
  4878                           
  4879                           ;mcc_generated_files/i2c_slave.c: 384:     return !SSP1STATbits.BF;
  4880     0343  1003               	clrc
  4881     0344  0024               	movlb	4	; select bank4
  4882     0345  1C14               	btfss	20,0	;volatile
  4883     0346  1403               	setc
  4884     0347  3000               	movlw	0
  4885     0348  3D09               	addwfc	9,w
  4886     0349                     i1l604:
  4887     0349  0008               	return
  4888     034A                     __end_of_I2C_SlaveIsTxBufEmpty:
  4889                           
  4890                           	psect	text30
  4891     0395                     __ptext30:	
  4892 ;; *************** function _I2C_SlaveIsRxBufFull *****************
  4893 ;; Defined at:
  4894 ;;		line 387 in file "mcc_generated_files/i2c_slave.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      _Bool 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4908 ;;      Params:         0       0       0       0
  4909 ;;      Locals:         0       0       0       0
  4910 ;;      Temps:          0       0       0       0
  4911 ;;      Totals:         0       0       0       0
  4912 ;;Total ram usage:        0 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_I2C_Isr
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921     0395                     _I2C_SlaveIsRxBufFull:	
  4922                           ;psect for function _I2C_SlaveIsRxBufFull
  4923                           
  4924     0395                     i1l1843:	
  4925                           ;incstack = 0
  4926                           ; Regs used in _I2C_SlaveIsRxBufFull: [wreg+status,2+status,0]
  4927                           
  4928                           
  4929                           ;mcc_generated_files/i2c_slave.c: 389:     return SSP1STATbits.BF;
  4930     0395  0024               	movlb	4	; select bank4
  4931     0396  0814               	movf	20,w	;volatile
  4932     0397  3901               	andlw	1
  4933     0398                     i1l607:
  4934     0398  0008               	return
  4935     0399                     __end_of_I2C_SlaveIsRxBufFull:
  4936                           
  4937                           	psect	text31
  4938     0384                     __ptext31:	
  4939 ;; *************** function _I2C_SlaveIsRead *****************
  4940 ;; Defined at:
  4941 ;;		line 352 in file "mcc_generated_files/i2c_slave.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      _Bool 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4955 ;;      Params:         0       0       0       0
  4956 ;;      Locals:         0       0       0       0
  4957 ;;      Temps:          0       0       0       0
  4958 ;;      Totals:         0       0       0       0
  4959 ;;Total ram usage:        0 bytes
  4960 ;; Hardware stack levels used: 1
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_I2C_Isr
  4965 ;;		_I2C_IsRead
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969     0384                     _I2C_SlaveIsRead:	
  4970                           ;psect for function _I2C_SlaveIsRead
  4971                           
  4972     0384                     i1l1821:	
  4973                           ;incstack = 0
  4974                           ; Regs used in _I2C_SlaveIsRead: [wreg+status,2+status,0]
  4975                           
  4976                           
  4977                           ;mcc_generated_files/i2c_slave.c: 354:     return (SSP1STATbits.R_nW);
  4978     0384  0024               	movlb	4	; select bank4
  4979     0385  0C14               	rrf	20,w	;volatile
  4980     0386  0C89               	rrf	9,f
  4981     0387  3901               	andlw	1
  4982     0388                     i1l586:
  4983     0388  0008               	return
  4984     0389                     __end_of_I2C_SlaveIsRead:
  4985                           
  4986                           	psect	text32
  4987     034A                     __ptext32:	
  4988 ;; *************** function _I2C_SlaveIsAddr *****************
  4989 ;; Defined at:
  4990 ;;		line 347 in file "mcc_generated_files/i2c_slave.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;		None
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;		None
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      _Bool 
  4997 ;; Registers used:
  4998 ;;		wreg, status,0
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5004 ;;      Params:         0       0       0       0
  5005 ;;      Locals:         0       0       0       0
  5006 ;;      Temps:          0       0       0       0
  5007 ;;      Totals:         0       0       0       0
  5008 ;;Total ram usage:        0 bytes
  5009 ;; Hardware stack levels used: 1
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_I2C_Isr
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017     034A                     _I2C_SlaveIsAddr:	
  5018                           ;psect for function _I2C_SlaveIsAddr
  5019                           
  5020     034A                     i1l1827:	
  5021                           ;incstack = 0
  5022                           ; Regs used in _I2C_SlaveIsAddr: [wreg+status,0]
  5023                           
  5024                           
  5025                           ;mcc_generated_files/i2c_slave.c: 349:     return !(SSP1STATbits.D_nA);
  5026     034A  1003               	clrc
  5027     034B  0024               	movlb	4	; select bank4
  5028     034C  1E94               	btfss	20,5	;volatile
  5029     034D  1403               	setc
  5030     034E  3000               	movlw	0
  5031     034F  3D09               	addwfc	9,w
  5032     0350                     i1l583:
  5033     0350  0008               	return
  5034     0351                     __end_of_I2C_SlaveIsAddr:
  5035                           
  5036                           	psect	text33
  5037     039F                     __ptext33:	
  5038 ;; *************** function _I2C_SlaveClearIrq *****************
  5039 ;; Defined at:
  5040 ;;		line 357 in file "mcc_generated_files/i2c_slave.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  1    wreg      void 
  5047 ;; Registers used:
  5048 ;;		None
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5054 ;;      Params:         0       0       0       0
  5055 ;;      Locals:         0       0       0       0
  5056 ;;      Temps:          0       0       0       0
  5057 ;;      Totals:         0       0       0       0
  5058 ;;Total ram usage:        0 bytes
  5059 ;; Hardware stack levels used: 1
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_I2C_Isr
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067     039F                     _I2C_SlaveClearIrq:	
  5068                           ;psect for function _I2C_SlaveClearIrq
  5069                           
  5070     039F                     i1l1825:	
  5071                           ;incstack = 0
  5072                           ; Regs used in _I2C_SlaveClearIrq: []
  5073                           
  5074                           
  5075                           ;mcc_generated_files/i2c_slave.c: 359:     PIR1bits.SSP1IF = 0;
  5076     039F  0020               	movlb	0	; select bank0
  5077     03A0  1191               	bcf	17,3	;volatile
  5078     03A1                     i1l589:
  5079     03A1  0008               	return
  5080     03A2                     __end_of_I2C_SlaveClearIrq:
  5081                           
  5082                           	psect	text34
  5083     031A                     __ptext34:	
  5084 ;; *************** function _I2C_SlaveAddrCallBack *****************
  5085 ;; Defined at:
  5086 ;;		line 267 in file "mcc_generated_files/i2c_slave.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0, pclath, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5100 ;;      Params:         0       0       0       0
  5101 ;;      Locals:         0       0       0       0
  5102 ;;      Temps:          0       0       0       0
  5103 ;;      Totals:         0       0       0       0
  5104 ;;Total ram usage:        0 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; Hardware stack levels required when called: 2
  5107 ;; This function calls:
  5108 ;;		Absolute function
  5109 ;;		_I2C_SlaveDefAddrInterruptHandler
  5110 ;; This function is called by:
  5111 ;;		_I2C_Isr
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115     031A                     _I2C_SlaveAddrCallBack:	
  5116                           ;psect for function _I2C_SlaveAddrCallBack
  5117                           
  5118     031A                     i1l1831:	
  5119                           ;incstack = 0
  5120                           ; Regs used in _I2C_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  5121                           
  5122                           
  5123                           ;mcc_generated_files/i2c_slave.c: 269:     if (I2C_SlaveAddrInterruptHandler) {
  5124     031A  0020               	movlb	0	; select bank0
  5125     031B  0833               	movf	_I2C_SlaveAddrInterruptHandler,w
  5126     031C  0434               	iorwf	_I2C_SlaveAddrInterruptHandler+1,w
  5127     031D  1903               	btfsc	3,2
  5128     031E  2B20               	goto	u52_21
  5129     031F  2B21               	goto	u52_20
  5130     0320                     u52_21:
  5131     0320  2B26               	goto	i1l541
  5132     0321                     u52_20:
  5133     0321                     i1l1833:
  5134                           
  5135                           ;mcc_generated_files/i2c_slave.c: 270:         I2C_SlaveAddrInterruptHandler();
  5136     0321  0834               	movf	_I2C_SlaveAddrInterruptHandler+1,w
  5137     0322  008A               	movwf	10
  5138     0323  0833               	movf	_I2C_SlaveAddrInterruptHandler,w
  5139     0324  000A               	callw
  5140     0325  3183               	pagesel	$
  5141     0326                     i1l541:
  5142     0326  0008               	return
  5143     0327                     __end_of_I2C_SlaveAddrCallBack:
  5144                           
  5145                           	psect	text35
  5146     036F                     __ptext35:	
  5147 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
  5148 ;; Defined at:
  5149 ;;		line 274 in file "mcc_generated_files/i2c_slave.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;		None
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      void 
  5156 ;; Registers used:
  5157 ;;		wreg, pclath, cstack
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5163 ;;      Params:         0       0       0       0
  5164 ;;      Locals:         0       0       0       0
  5165 ;;      Temps:          0       0       0       0
  5166 ;;      Totals:         0       0       0       0
  5167 ;;Total ram usage:        0 bytes
  5168 ;; Hardware stack levels used: 1
  5169 ;; Hardware stack levels required when called: 1
  5170 ;; This function calls:
  5171 ;;		i1_I2C_SlaveGetRxData
  5172 ;; This function is called by:
  5173 ;;		_I2C_Open
  5174 ;;		_I2C_SlaveAddrCallBack
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178     036F                     _I2C_SlaveDefAddrInterruptHandler:	
  5179                           ;psect for function _I2C_SlaveDefAddrInterruptHandler
  5180                           
  5181     036F                     i1l1743:	
  5182                           ;incstack = 0
  5183                           ; Regs used in _I2C_SlaveDefAddrInterruptHandler: [wreg+pclath+cstack]
  5184                           
  5185                           
  5186                           ;mcc_generated_files/i2c_slave.c: 275:     i2cSlaveAddr = I2C_SlaveGetRxData();
  5187     036F  3183  23A2  3183   	fcall	i1_I2C_SlaveGetRxData
  5188     0372  0020               	movlb	0	; select bank0
  5189     0373  00BB               	movwf	_i2cSlaveAddr	;volatile
  5190     0374                     i1l544:
  5191     0374  0008               	return
  5192     0375                     __end_of_I2C_SlaveDefAddrInterruptHandler:
  5193                           
  5194                           	psect	text36
  5195     03A2                     __ptext36:	
  5196 ;; *************** function i1_I2C_SlaveGetRxData *****************
  5197 ;; Defined at:
  5198 ;;		line 397 in file "mcc_generated_files/i2c_slave.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;		None
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;		None
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  1    wreg      unsigned char 
  5205 ;; Registers used:
  5206 ;;		wreg
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5212 ;;      Params:         0       0       0       0
  5213 ;;      Locals:         0       0       0       0
  5214 ;;      Temps:          0       0       0       0
  5215 ;;      Totals:         0       0       0       0
  5216 ;;Total ram usage:        0 bytes
  5217 ;; Hardware stack levels used: 1
  5218 ;; This function calls:
  5219 ;;		Nothing
  5220 ;; This function is called by:
  5221 ;;		_I2C_SlaveDefRdInterruptHandler
  5222 ;;		_I2C_SlaveDefAddrInterruptHandler
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226     03A2                     i1_I2C_SlaveGetRxData:	
  5227                           ;psect for function i1_I2C_SlaveGetRxData
  5228                           
  5229     03A2                     i1l1731:	
  5230                           ;incstack = 0
  5231                           ; Regs used in i1_I2C_SlaveGetRxData: [wreg]
  5232                           
  5233                           
  5234                           ;mcc_generated_files/i2c_slave.c: 399:     return SSP1BUF;
  5235     03A2  0024               	movlb	4	; select bank4
  5236     03A3  0811               	movf	17,w	;volatile
  5237     03A4                     i1l613:
  5238     03A4  0008               	return
  5239     03A5                     __end_ofi1_I2C_SlaveGetRxData:
  5240     007E                     btemp	set	126	;btemp
  5241     007E                     int$flags	set	126
  5242     007E                     wtemp0	set	126
  5243                           
  5244                           	psect	idloc
  5245                           
  5246                           ;Config register IDLOC0 @ 0x8000
  5247                           ;	unspecified, using default values
  5248     8000                     	org	32768
  5249     8000  3FFF               	dw	16383
  5250                           
  5251                           ;Config register IDLOC1 @ 0x8001
  5252                           ;	unspecified, using default values
  5253     8001                     	org	32769
  5254     8001  3FFF               	dw	16383
  5255                           
  5256                           ;Config register IDLOC2 @ 0x8002
  5257                           ;	unspecified, using default values
  5258     8002                     	org	32770
  5259     8002  3FFF               	dw	16383
  5260                           
  5261                           ;Config register IDLOC3 @ 0x8003
  5262                           ;	unspecified, using default values
  5263     8003                     	org	32771
  5264     8003  3FFF               	dw	16383
  5265                           
  5266                           	psect	config
  5267                           
  5268                           ;Config register CONFIG1 @ 0x8007
  5269                           ;	Oscillator Selection Bits
  5270                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5271                           ;	Watchdog Timer Enable
  5272                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  5273                           ;	Power-up Timer Enable
  5274                           ;	PWRTE = OFF, PWRT disabled
  5275                           ;	MCLR Pin Function Select
  5276                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  5277                           ;	Flash Program Memory Code Protection
  5278                           ;	CP = OFF, Program memory code protection is disabled
  5279                           ;	Brown-out Reset Enable
  5280                           ;	BOREN = ON, Brown-out Reset enabled
  5281                           ;	Clock Out Enable
  5282                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5283                           ;	Internal/External Switchover Mode
  5284                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  5285                           ;	Fail-Safe Clock Monitor Enable
  5286                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5287     8007                     	org	32775
  5288     8007  3FAC               	dw	16300
  5289                           
  5290                           ;Config register CONFIG2 @ 0x8008
  5291                           ;	Flash Memory Self-Write Protection
  5292                           ;	WRT = OFF, Write protection off
  5293                           ;	Stack Overflow/Underflow Reset Enable
  5294                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5295                           ;	Brown-out Reset Voltage Selection
  5296                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5297                           ;	Low-Power Brown Out Reset
  5298                           ;	LPBOR = OFF, Low-Power BOR is disabled
  5299                           ;	Low-Voltage Programming Enable
  5300                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5301     8008                     	org	32776
  5302     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         34
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      4      39
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), Absolute function(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), Absolute function(), 

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), Absolute function(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), Absolute function(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefRdInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), Absolute function(), 


Critical Paths under _main in COMMON

    _main->_ADC_GetConversion
    _main->_sendAllDatatoMaster
    _main->_sendDataToMaster
    _sendDataToMaster->_I2C_Write
    _sendAllDatatoMaster->_I2C_Write
    _I2C_Write->_I2C_SlaveSendTxData
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_Isr
    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_SlaveDefWrInterruptHandler->i1_I2C_SlaveSendTxData

Critical Paths under _main in BANK0

    _main->_sendDataToMaster

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1384
                                              2 BANK0      2     2      0
                  _ADC_GetConversion
                           _I2C_Read
                          _I2C_Write
                  _SYSTEM_Initialize
                _sendAllDatatoMaster
                   _sendDataToMaster
 ---------------------------------------------------------------------------------
 (1) _sendDataToMaster                                     4     2      2     732
                                              5 COMMON     2     0      2
                                              0 BANK0      2     2      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _sendAllDatatoMaster                                  2     2      0     470
                                              5 COMMON     2     2      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      62
                                              4 COMMON     1     1      0
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (3) _I2C_SlaveSendTxData                                  1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
                     _FVR_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveGetRxData                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     262
                   Absolute function *
                            _I2C_Isr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Isr                                              2     2      0      22
                                              1 COMMON     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                    _I2C_SlaveIsAddr
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
              _I2C_SlaveIsTxBufEmpty
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                _I2C_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveWrCallBack                                  0     0      0      22
                   Absolute function *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefWrInterruptHandler                       0     0      0      22
              i1_I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (8) i1_I2C_SlaveSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveReleaseClock                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveRdCallBack                                  0     0      0       0
                   Absolute function *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefRdInterruptHandler                       0     0      0       0
               i1_I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsTxBufEmpty                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsRxBufFull                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsAddr                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveClearIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveAddrCallBack                                0     0      0       0
                   Absolute function *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefAddrInterruptHandler                     0     0      0       0
               i1_I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (8) i1_I2C_SlaveGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _I2C_Read
     _I2C_SlaveGetRxData
   _I2C_Write
     _I2C_SlaveSendTxData
   _SYSTEM_Initialize
     _ADC_Initialize
     _FVR_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _sendAllDatatoMaster
     _I2C_Write
   _sendDataToMaster
     _I2C_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         i1_I2C_SlaveGetRxData
     _I2C_SlaveClearIrq
     _I2C_SlaveIsAddr
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsTxBufEmpty
     _I2C_SlaveRdCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefRdInterruptHandler *
         i1_I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveWrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefWrInterruptHandler *
         i1_I2C_SlaveSendTxData
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      31       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4      27       6       48.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      31      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 10 16:28:25 2023

                                      l61 0091                                        l62 0094  
                                      l63 0097                                        l81 0122  
                                      l73 026C                                        l91 013F  
                                      l67 00A3                                        l86 012F  
                                      l78 027C                                        l96 014F  
                  __end_of_FVR_Initialize 0391                                       l101 015F  
                                     l111 017F                                       l121 019F  
                                     l106 016F                                       l131 01BF  
                                     l116 018F                                       l213 0296  
                                     l141 01DE                                       l310 0362  
                                     l126 01AF                                       l136 01CF  
                                     l332 033A                                       l181 0368  
                                     l350 0262                                       l360 0390  
                                     l280 02C8                                       l184 038C  
                                     l178 02AF                                       l610 0379  
                                     l347 025A                                       l613 039B  
                                     l480 035C                                       l468 0330  
                                     l477 0394                                       l638 0342  
                                     _PR2 001B                                       u810 025E  
                                     u811 025D                                       u990 0271  
                                     u991 0270                     ??_I2C_SlaveRdCallBack 0070  
            __end_ofi1_I2C_SlaveGetRxData 03A5                           _timer1ReloadVal 0041  
                     _I2C_SlaveSendTxData 0375                           __end_of_I2C_Isr 0248  
                         _TMR2_Initialize 033B                                       wreg 0009  
                     _I2C_SlaveWrCallBack 0300                         _selectedReference 0079  
                                    l2201 0158                                      l2211 0174  
                                    l2203 015C                                      l2221 018C  
                                    l2213 0178                                      l2205 0164  
                                    l2301 00F4                                      l2231 01A8  
                                    l2223 0194                                      l2215 017C  
                                    l2207 0168                                      l2303 00FF  
                                    l2161 0358                                      l2241 01C4  
                                    l2233 01AC                                      l2225 0198  
                                    l2217 0184                                      l2209 016C  
                                    l2305 0108                                      l2251 01DC  
                                    l2243 01C8                                      l2235 01B4  
                                    l2227 019C                                      l2219 0188  
                                    l2171 0275                                      l2163 0263  
                                    l2307 0113                                      l2245 01CC  
                                    l2237 01B8                                      l2229 01A4  
                                    l2181 0120                                      l2173 027A  
                                    l2165 0266                                      l2261 004B  
                                    l2159 0376                                      l2247 01D4  
                                    l2239 01BC                                      l2191 013C  
                                    l2183 0127                                      l2167 0268  
                                    l2271 005C                                      l2263 004D  
                                    l2255 0046                                      l1801 02C5  
                                    l2249 01D8                                      l2193 0144  
                                    l2185 012B                                      l2177 0118  
                                    l2169 0271                                      l2353 00AD  
                                    l2281 0084                                      l2273 0064  
                                    l2265 0052                                      l2257 0049  
                                    l2195 0148                                      l2187 0134  
                                    l2179 011D                                      l2283 008C  
                                    l2275 006C                                      l2291 00A5  
                                    l2267 0053                                      l2259 004A  
                                    l2197 014C                                      l2189 0138  
                                    l2285 009A                                      l2277 0074  
                                    l2293 00DC                                      l2269 0056  
                                    l1751 032D                                      l1735 035D  
                                    l2199 0154                                      l2295 00DE  
                                    l2287 009C                                      l2279 007C  
                                    l1817 0399                                      l1753 032F  
                                    l1761 0286                                      l2297 00E7  
                                    l2289 009F                                      l1747 0327  
                                    l1771 0363                                      l1763 0288  
                                    l1755 027D                                      l2299 00F2  
                                    l1781 0336                                      l1749 0329  
                                    l1773 0366                                      l1765 028B  
                                    l1757 0281                                      l1853 0297  
                                    l1951 0249                                      l1855 0391  
                                    l1783 0337                                      l1767 028D  
                                    l1759 0284                                      l1791 0340  
                                    l1775 0389                                      l1953 0253  
                                    l1777 038D                                      l1769 0292  
                                    l1793 02B0                                      l1785 033B  
                                    l1955 0254                                      l1779 0331  
                                    l1795 02B7                                      l1787 033E  
                                    l1957 0258                                      l1797 02BC  
                                    l1789 033F                                      l1959 025E  
                                    l1799 02BE                                      u1000 0275  
                                    u1001 0274                                      u1010 0127  
                                    u1011 0126                                      u1100 0168  
                                    u1020 012B                                      u1101 0167  
                                    u1021 012A                                      u1110 0174  
                                    u1030 0134                                      u1111 0173  
                                    u1031 0133                                      u1200 01B8  
                                    u1120 0178                                      u1040 0138  
                                    u1201 01B7                                      u1121 0177  
                                    u1041 0137                                      u1210 01C4  
                                    u1130 0184                                      u1050 0144  
                                    u1211 01C3                                      u1131 0183  
                                    u1051 0143                                      u1220 01C8  
                                    u1140 0188                                      u1060 0148  
                                    u1221 01C7                                      u1141 0187  
                                    u1061 0147                                      u1230 01D4  
                                    u1150 0194                                      u1070 0154  
                                    u1231 01D3                                      u1151 0193  
                                    u1071 0153                                      u1240 01D8  
                                    u1160 0198                                      u1080 0158  
                                    u1241 01D7                                      u1161 0197  
                                    u1081 0157                                      u1170 01A4  
                                    u1090 0164                                      u1250 0052  
                                    u1171 01A3                                      u1091 0163  
                                    u1251 0051                                      u1180 01A8  
                                    u1181 01A7                                      _LATA 010C  
                                    u1190 01B4                                      _LATB 010D  
                                    u1191 01B3                                      _LATC 010E  
                                    u1267 0255                                      _TMR2 001A  
                                    _WPUA 020C                                      _WPUB 020D  
                 __end_of_I2C_SlaveIsAddr 0351                   __end_of_I2C_SlaveIsRead 0389  
                                    _main 0046                          __end_of_I2C_Read 0395  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                                      btemp 007E  
                    ?_I2C_SlaveSendTxData 0070                                      start 0035  
                    ?_I2C_SlaveWrCallBack 0070                ??_TMR1_SetInterruptHandler 0075  
           __end_of_I2C_SlaveAddrCallBack 0327                           ?_FVR_Initialize 0070  
           __end_of_OSCILLATOR_Initialize 0369  __end_of_I2C_SlaveDefAddrInterruptHandler 0375  
      ??_I2C_SlaveDefAddrInterruptHandler 0070         ?_I2C_SlaveDefAddrInterruptHandler 0070  
        _I2C_SlaveDefAddrInterruptHandler 036F                                     ?_main 0070  
                                   _T1CON 0018                                     _T2CON 001C  
                                   i1l313 03A5                                     i1l307 02DE  
                                   i1l253 0033                                     i1l246 001A  
                                   i1l511 0247                                     i1l247 0033  
                                   i1l248 0025                                     i1l521 0319  
                                   i1l610 0383                                     i1l531 030C  
                                   i1l604 0349                                     i1l524 036E  
                                   i1l613 03A4                                     i1l541 0326  
                                   i1l534 037E                                     i1l294 02EF  
                                   i1l607 0398                                     i1l544 0374  
                                   i1l583 0350                                     i1l592 039E  
                                   i1l586 0388                                     i1l589 03A1  
                   _I2C_SlaveReleaseClock 039C                                     _TMR1H 0017  
                                   _TMR1L 0016                                     u51_20 02E4  
                                   u51_21 02E3                                     u52_20 0321  
                                   u52_21 0320                                     u53_20 0307  
                                   u53_21 0306                                     u54_20 0314  
                                   u54_21 0313                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                                   u82_20 02D9                                     u90_20 000A  
                                   u82_21 02D8                                     u90_21 0009  
                                   u83_20 01EA                                     u91_20 000F  
                                   u83_21 01E9                                     u91_21 000E  
                                   u84_20 01F2                                     u92_20 0014  
                                   u84_21 01F1                                     u92_21 0013  
                                   u85_20 0200                                     u93_20 001F  
                                   u85_21 01FF                                     u93_21 001E  
                                   u86_20 0211                                     u94_20 0024  
                                   u86_21 0210                                     u94_21 0023  
                                   u87_20 0221                                     u95_20 002A  
                                   u87_21 0220                                     u95_21 0029  
                                   u88_20 022A                                     u96_20 002F  
                                   u88_21 0229                                     u96_21 002E  
                        __end_of_TMR1_ISR 02DF                    ??_I2C_SlaveIsRxBufFull 0070  
                          _WDT_Initialize 0389                   __end_of_TMR1_Initialize 02C9  
                       __end_of_I2C_Write 035D                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                   ??_I2C_SlaveSendTxData 0073                           _TMR1_WriteTimer 02DF  
                   ??_I2C_SlaveWrCallBack 0071                           __initialization 0037  
                            __end_of_main 0118                   __end_of_TMR2_Initialize 0343  
             ?_INTERRUPT_InterruptManager 0070                                 ??_I2C_Isr 0071  
           __end_ofi1_I2C_SlaveSendTxData 0384                                    ??_main 0045  
                  __end_of_WDT_Initialize 038D               _I2C_SlaveRdInterruptHandler 0037  
             _I2C_SlaveWrInterruptHandler 0035                __end_of_I2C_SlaveGetRxData 039C  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  _T1GCON 0019                        _currentlyBalancing 003D  
                                  i1l2001 022A                   TMR1_WriteTimer@timerVal 0070  
                                  i1l2005 022E                                    i1l2007 0244  
                                  i1l2071 0006                                    i1l2073 000A  
                                  i1l2083 002A                                    i1l2075 000F  
                                  i1l2085 002F                                    i1l2077 0014  
                                  i1l2079 001F                                    i1l1731 03A2  
                                  i1l2355 0236                                    i1l1811 02E9  
                                  i1l1803 02DF                                    i1l1821 0384  
                                  i1l1741 037A                                    i1l1805 02E4  
                                  i1l1813 02EB                                    i1l1743 036F  
                                  i1l1831 031A                                    i1l1815 02ED  
                                  i1l1807 02E5                                    i1l1833 0321  
                                  i1l1825 039F                                    i1l1729 0380  
                                  i1l1841 0307                                    i1l1809 02E7  
                                  i1l1827 034A                                    i1l1843 0395  
                                  i1l1835 0343                                    i1l1739 0369  
                                  i1l1851 039C                                    i1l1847 030D  
                                  i1l1839 0300                                    i1l1849 0314  
                                  i1l1971 01DF                                    i1l1963 02C9  
                                  i1l1981 01F8                                    i1l1973 01E2  
                                  i1l1965 02CB                                    i1l1991 0211  
                                  i1l1983 0200                                    i1l1975 01EA  
                                  i1l1967 02D2                                    i1l1993 0215  
                                  i1l1985 0203                                    i1l1977 01F2  
                                  i1l1969 02D9                                    i1l1995 0219  
                                  i1l1987 0206                                    i1l1979 01F5  
                                  i1l1989 0209                                    i1l1999 0222  
                                  _FVRCON 0117                                    _OSCCON 0099  
                        ?_I2C_SlaveIsAddr 0070                                    _WDTCON 0097  
                        ?_I2C_SlaveIsRead 0070                      i1_I2C_SlaveGetRxData 03A2  
                __end_of_sendDataToMaster 027D      __end_of_TMR1_DefaultInterruptHandler 03A6  
            _TMR1_DefaultInterruptHandler 03A5                                    _memory 0020  
                                  _safety 02F0                    ?_I2C_SlaveReleaseClock 0070  
                     _sendAllDatatoMaster 0118                   ??_I2C_SlaveIsTxBufEmpty 0070  
                               ?_I2C_Read 0070                           ?_WDT_Initialize 0070  
                ADC_GetConversion@channel 0076  TMR1_SetInterruptHandler@InterruptHandler 0073  
                 __end_of_TMR1_WriteTimer 02F0                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0297                   __end_of__initialization 0042  
                    ?_sendAllDatatoMaster 0070                        ?_SYSTEM_Initialize 0070  
                   ?i1_I2C_SlaveGetRxData 0070                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0075                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                          ?_TMR2_Initialize 0070  
                          _OPTION_REGbits 0095                                ??_I2C_Read 0073  
               __end_of_SYSTEM_Initialize 02B0                                __pbssBANK0 0020  
                   ??_sendAllDatatoMaster 0075                          ??_FVR_Initialize 0073  
                              __pmaintext 0046                                ??_TMR1_ISR 0072  
                              __pintentry 0004               __end_of_I2C_SlaveRdCallBack 031A  
                                 _I2C_Isr 01DF                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                                   _SSP1MSK 0213  
                        ?_TMR1_WriteTimer 0070                      sendDataToMaster@high 0043  
                  ??i1_I2C_SlaveGetRxData 0070                                 _I2C_Write 0357  
                    _ADC_InterruptHandler 002D                   I2C_SlaveSendTxData@data 0073  
                   _I2C_SlaveAddrCallBack 031A                            _I2C_Initialize 0327  
                                 __ptext1 0263                                   __ptext2 0118  
                                 __ptext3 0357                                   __ptext4 0375  
                                 __ptext5 0297                                   __ptext6 0389  
                                 __ptext7 033B                                   __ptext8 02B0  
                                 __ptext9 035D            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 0363  
                               _T2CONbits 001C                  ??_PIN_MANAGER_Initialize 0073  
               ?_TMR1_SetInterruptHandler 0073                 i1I2C_SlaveSendTxData@data 0070  
                                 clrloop0 0352               __end_of_I2C_SlaveSendTxData 037A  
                    end_of_initialization 0042               __end_of_I2C_SlaveWrCallBack 030D  
                              ?_I2C_Write 0070                        _I2C_SlaveGetRxData 0399  
                            _i2cSlaveAddr 003B                         ?_sendDataToMaster 0075  
                  __end_of_I2C_Initialize 0331                   ??_I2C_SlaveReleaseClock 0070  
                      ??_sendDataToMaster 0077                       ?_I2C_SlaveGetRxData 0070  
                        ??_WDT_Initialize 0073                     i1_I2C_SlaveSendTxData 037F  
           __end_of_I2C_SlaveIsTxBufEmpty 034A                      ??_I2C_SlaveGetRxData 0073  
                  sendDataToMaster@toSend 0075                    ?_I2C_SlaveAddrCallBack 0070  
                         ?_I2C_Initialize 0070                               _I2C_Command 003E  
                          _ADC_Initialize 0331                                 _i2cRdData 003C  
                  ?_OSCILLATOR_Initialize 0070                            __end_of_safety 0300  
                               _i2cWrData 0078                       start_initialization 0037  
                             ??_I2C_Write 0074                    __end_of_ADC_Initialize 033B  
                                ?_I2C_Isr 0070                    ?i1_I2C_SlaveSendTxData 0070  
                             __pbssCOMMON 0077                                 ___latbits 0001  
                           __pcstackBANK0 0043               __end_of_sendAllDatatoMaster 01DF  
                 sendAllDatatoMaster@high 0075                                 __pnvBANK0 003F  
                  _PIN_MANAGER_Initialize 027D          __end_of_TMR1_SetInterruptHandler 0363  
                         ?_ADC_Initialize 0070              ??_INTERRUPT_InterruptManager 0073  
                       ??_I2C_SlaveIsAddr 0070                         ??_I2C_SlaveIsRead 0070  
        ??_I2C_SlaveDefRdInterruptHandler 0070           ?_I2C_SlaveDefRdInterruptHandler 0070  
        ??_I2C_SlaveDefWrInterruptHandler 0071           ?_I2C_SlaveDefWrInterruptHandler 0070  
                     sendDataToMaster@low 0044                                  _I2C_Read 0391  
                               clear_ram0 0351                                  _PIE1bits 0091  
                                _PIE2bits 0092                         _I2C_SlaveClearIrq 039F  
                                _PIR1bits 0011                                  _PIR2bits 0012  
                      ?_I2C_SlaveClearIrq 0070                                  _SSP1CON1 0215  
                                _SSP1CON2 0216              __end_of_I2C_SlaveIsRxBufFull 0399  
                                _TMR1_ISR 02C9                                  _SSP1STAT 0214  
           __end_of_I2C_SlaveReleaseClock 039F                       ??_I2C_SlaveClearIrq 0070  
                       ??_TMR1_Initialize 0075                                _ADCON0bits 009D  
       _I2C_SlaveDefWrColInterruptHandler 0000                         ??_TMR2_Initialize 0073  
               __end_of_I2C_SlaveClearIrq 03A2                          ??_I2C_Initialize 0073  
                 ??_I2C_SlaveAddrCallBack 0070                         _ADC_GetConversion 0248  
                           I2C_Write@data 0074                   ??_OSCILLATOR_Initialize 0073  
                      ?_ADC_GetConversion 0073             _I2C_SlaveAddrInterruptHandler 0033  
                _TMR1_SetInterruptHandler 035D        _I2C_SlaveDefBusColInterruptHandler 0000  
                   _TMR1_InterruptHandler 003F                       ??_ADC_GetConversion 0075  
                  sendAllDatatoMaster@low 0076            _I2C_SlaveWrColInterruptHandler 002F  
                                __ptext10 027D                                  __ptext11 0363  
                                __ptext20 02DF                                  __ptext12 0327  
                                __ptext21 03A5                                  __ptext13 038D  
                              _T1GCONbits 0019                                  __ptext30 0395  
                                __ptext22 01DF                                  __ptext14 0331  
                                __ptext31 0384                                  __ptext23 0300  
                                __ptext15 0391                                  __ptext32 034A  
                                __ptext24 037A                                  __ptext16 0399  
                                __ptext33 039F                                  __ptext25 037F  
                                __ptext17 0248                                  __ptext34 031A  
                                __ptext26 039C                                  __ptext35 036F  
                                __ptext27 030D                                  __ptext19 02C9  
                                __ptext36 03A2                                  __ptext28 0369  
                                __ptext29 0343                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                     _I2C_SlaveIsTxBufEmpty 0343  
               __end_of_ADC_GetConversion 0263                                  int$flags 007E  
                 ??i1_I2C_SlaveSendTxData 0070        __end_of_INTERRUPT_InterruptManager 0035  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 0214  
                       ??_TMR1_WriteTimer 0072                                _INTCONbits 000B  
                              _FVRCONbits 0117                      _I2C_SlaveIsRxBufFull 0395  
                                intlevel1 0000           _I2C_SlaveBusColInterruptHandler 0031  
                 ?_PIN_MANAGER_Initialize 0070                       _I2C_SlaveRdCallBack 030D  
                        ??_ADC_Initialize 0073                           _I2C_SlaveIsAddr 034A  
                         _I2C_SlaveIsRead 0384                             _i2cSlaveState 0077  
                           __pstringtext1 02F0                            _FVR_Initialize 038D  
                    ?_I2C_SlaveRdCallBack 0070                          _sendDataToMaster 0263  
                  ?_I2C_SlaveIsTxBufEmpty 0070                                _WDTCONbits 0097  
                   ?_I2C_SlaveIsRxBufFull 0070            __end_of_PIN_MANAGER_Initialize 0297  
  __end_of_I2C_SlaveDefRdInterruptHandler 036F            _I2C_SlaveDefRdInterruptHandler 0369  
  __end_of_I2C_SlaveDefWrInterruptHandler 037F            _I2C_SlaveDefWrInterruptHandler 037A  
                   _MSSP_InterruptHandler 0039                           _TMR1_Initialize 02B0  
