

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 23:14:34 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1508
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.40
    53                           ; Generated 17/11/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1508 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011D                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  018E                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0197                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0216                     	;# 
   179  0217                     	;# 
   180  0217                     	;# 
   181  0391                     	;# 
   182  0392                     	;# 
   183  0393                     	;# 
   184  0394                     	;# 
   185  0395                     	;# 
   186  0396                     	;# 
   187  0498                     	;# 
   188  0498                     	;# 
   189  0499                     	;# 
   190  049A                     	;# 
   191  049B                     	;# 
   192  049B                     	;# 
   193  049C                     	;# 
   194  049D                     	;# 
   195  049E                     	;# 
   196  049F                     	;# 
   197  0611                     	;# 
   198  0612                     	;# 
   199  0613                     	;# 
   200  0613                     	;# 
   201  0614                     	;# 
   202  0615                     	;# 
   203  0616                     	;# 
   204  0616                     	;# 
   205  0617                     	;# 
   206  0618                     	;# 
   207  0619                     	;# 
   208  0619                     	;# 
   209  061A                     	;# 
   210  061B                     	;# 
   211  061C                     	;# 
   212  061C                     	;# 
   213  0691                     	;# 
   214  0692                     	;# 
   215  0693                     	;# 
   216  0694                     	;# 
   217  0695                     	;# 
   218  0F0F                     	;# 
   219  0F10                     	;# 
   220  0F11                     	;# 
   221  0F12                     	;# 
   222  0F13                     	;# 
   223  0F14                     	;# 
   224  0F15                     	;# 
   225  0F16                     	;# 
   226  0F17                     	;# 
   227  0F18                     	;# 
   228  0F19                     	;# 
   229  0F1A                     	;# 
   230  0F1B                     	;# 
   231  0F1C                     	;# 
   232  0F1D                     	;# 
   233  0F1E                     	;# 
   234  0F1F                     	;# 
   235  0F20                     	;# 
   236  0F21                     	;# 
   237  0F22                     	;# 
   238  0F23                     	;# 
   239  0F24                     	;# 
   240  0F25                     	;# 
   241  0F26                     	;# 
   242  0F27                     	;# 
   243  0F28                     	;# 
   244  0F29                     	;# 
   245  0F2A                     	;# 
   246  0F2B                     	;# 
   247  0F2C                     	;# 
   248  0F2D                     	;# 
   249  0F2E                     	;# 
   250  0F2F                     	;# 
   251  0F8C                     	;# 
   252  0F8D                     	;# 
   253  0F91                     	;# 
   254  0F95                     	;# 
   255  0F96                     	;# 
   256  0F97                     	;# 
   257  0F9C                     	;# 
   258  0F9D                     	;# 
   259  0F9E                     	;# 
   260  0FE3                     	;# 
   261  0FE4                     	;# 
   262  0FE5                     	;# 
   263  0FE6                     	;# 
   264  0FE7                     	;# 
   265  0FE8                     	;# 
   266  0FE9                     	;# 
   267  0FEA                     	;# 
   268  0FEB                     	;# 
   269  0FED                     	;# 
   270  0FEE                     	;# 
   271  0FEF                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0008                     	;# 
   281  0009                     	;# 
   282  000A                     	;# 
   283  000B                     	;# 
   284  000C                     	;# 
   285  000D                     	;# 
   286  000E                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0013                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  008E                     	;# 
   302  0091                     	;# 
   303  0092                     	;# 
   304  0093                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  0111                     	;# 
   320  0112                     	;# 
   321  0113                     	;# 
   322  0114                     	;# 
   323  0115                     	;# 
   324  0116                     	;# 
   325  0117                     	;# 
   326  0118                     	;# 
   327  0119                     	;# 
   328  011D                     	;# 
   329  018C                     	;# 
   330  018D                     	;# 
   331  018E                     	;# 
   332  0191                     	;# 
   333  0191                     	;# 
   334  0192                     	;# 
   335  0193                     	;# 
   336  0193                     	;# 
   337  0194                     	;# 
   338  0195                     	;# 
   339  0196                     	;# 
   340  0197                     	;# 
   341  0199                     	;# 
   342  019A                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019C                     	;# 
   346  019D                     	;# 
   347  019E                     	;# 
   348  019F                     	;# 
   349  020C                     	;# 
   350  020D                     	;# 
   351  0211                     	;# 
   352  0211                     	;# 
   353  0212                     	;# 
   354  0212                     	;# 
   355  0213                     	;# 
   356  0213                     	;# 
   357  0214                     	;# 
   358  0214                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0216                     	;# 
   363  0216                     	;# 
   364  0217                     	;# 
   365  0217                     	;# 
   366  0391                     	;# 
   367  0392                     	;# 
   368  0393                     	;# 
   369  0394                     	;# 
   370  0395                     	;# 
   371  0396                     	;# 
   372  0498                     	;# 
   373  0498                     	;# 
   374  0499                     	;# 
   375  049A                     	;# 
   376  049B                     	;# 
   377  049B                     	;# 
   378  049C                     	;# 
   379  049D                     	;# 
   380  049E                     	;# 
   381  049F                     	;# 
   382  0611                     	;# 
   383  0612                     	;# 
   384  0613                     	;# 
   385  0613                     	;# 
   386  0614                     	;# 
   387  0615                     	;# 
   388  0616                     	;# 
   389  0616                     	;# 
   390  0617                     	;# 
   391  0618                     	;# 
   392  0619                     	;# 
   393  0619                     	;# 
   394  061A                     	;# 
   395  061B                     	;# 
   396  061C                     	;# 
   397  061C                     	;# 
   398  0691                     	;# 
   399  0692                     	;# 
   400  0693                     	;# 
   401  0694                     	;# 
   402  0695                     	;# 
   403  0F0F                     	;# 
   404  0F10                     	;# 
   405  0F11                     	;# 
   406  0F12                     	;# 
   407  0F13                     	;# 
   408  0F14                     	;# 
   409  0F15                     	;# 
   410  0F16                     	;# 
   411  0F17                     	;# 
   412  0F18                     	;# 
   413  0F19                     	;# 
   414  0F1A                     	;# 
   415  0F1B                     	;# 
   416  0F1C                     	;# 
   417  0F1D                     	;# 
   418  0F1E                     	;# 
   419  0F1F                     	;# 
   420  0F20                     	;# 
   421  0F21                     	;# 
   422  0F22                     	;# 
   423  0F23                     	;# 
   424  0F24                     	;# 
   425  0F25                     	;# 
   426  0F26                     	;# 
   427  0F27                     	;# 
   428  0F28                     	;# 
   429  0F29                     	;# 
   430  0F2A                     	;# 
   431  0F2B                     	;# 
   432  0F2C                     	;# 
   433  0F2D                     	;# 
   434  0F2E                     	;# 
   435  0F2F                     	;# 
   436  0F8C                     	;# 
   437  0F8D                     	;# 
   438  0F91                     	;# 
   439  0F95                     	;# 
   440  0F96                     	;# 
   441  0F97                     	;# 
   442  0F9C                     	;# 
   443  0F9D                     	;# 
   444  0F9E                     	;# 
   445  0FE3                     	;# 
   446  0FE4                     	;# 
   447  0FE5                     	;# 
   448  0FE6                     	;# 
   449  0FE7                     	;# 
   450  0FE8                     	;# 
   451  0FE9                     	;# 
   452  0FEA                     	;# 
   453  0FEB                     	;# 
   454  0FED                     	;# 
   455  0FEE                     	;# 
   456  0FEF                     	;# 
   457  0000                     	;# 
   458  0001                     	;# 
   459  0002                     	;# 
   460  0003                     	;# 
   461  0004                     	;# 
   462  0005                     	;# 
   463  0006                     	;# 
   464  0007                     	;# 
   465  0008                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  0091                     	;# 
   488  0092                     	;# 
   489  0093                     	;# 
   490  0095                     	;# 
   491  0096                     	;# 
   492  0097                     	;# 
   493  0099                     	;# 
   494  009A                     	;# 
   495  009B                     	;# 
   496  009B                     	;# 
   497  009C                     	;# 
   498  009D                     	;# 
   499  009E                     	;# 
   500  009F                     	;# 
   501  010C                     	;# 
   502  010D                     	;# 
   503  010E                     	;# 
   504  0111                     	;# 
   505  0112                     	;# 
   506  0113                     	;# 
   507  0114                     	;# 
   508  0115                     	;# 
   509  0116                     	;# 
   510  0117                     	;# 
   511  0118                     	;# 
   512  0119                     	;# 
   513  011D                     	;# 
   514  018C                     	;# 
   515  018D                     	;# 
   516  018E                     	;# 
   517  0191                     	;# 
   518  0191                     	;# 
   519  0192                     	;# 
   520  0193                     	;# 
   521  0193                     	;# 
   522  0194                     	;# 
   523  0195                     	;# 
   524  0196                     	;# 
   525  0197                     	;# 
   526  0199                     	;# 
   527  019A                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019C                     	;# 
   531  019D                     	;# 
   532  019E                     	;# 
   533  019F                     	;# 
   534  020C                     	;# 
   535  020D                     	;# 
   536  0211                     	;# 
   537  0211                     	;# 
   538  0212                     	;# 
   539  0212                     	;# 
   540  0213                     	;# 
   541  0213                     	;# 
   542  0214                     	;# 
   543  0214                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0216                     	;# 
   548  0216                     	;# 
   549  0217                     	;# 
   550  0217                     	;# 
   551  0391                     	;# 
   552  0392                     	;# 
   553  0393                     	;# 
   554  0394                     	;# 
   555  0395                     	;# 
   556  0396                     	;# 
   557  0498                     	;# 
   558  0498                     	;# 
   559  0499                     	;# 
   560  049A                     	;# 
   561  049B                     	;# 
   562  049B                     	;# 
   563  049C                     	;# 
   564  049D                     	;# 
   565  049E                     	;# 
   566  049F                     	;# 
   567  0611                     	;# 
   568  0612                     	;# 
   569  0613                     	;# 
   570  0613                     	;# 
   571  0614                     	;# 
   572  0615                     	;# 
   573  0616                     	;# 
   574  0616                     	;# 
   575  0617                     	;# 
   576  0618                     	;# 
   577  0619                     	;# 
   578  0619                     	;# 
   579  061A                     	;# 
   580  061B                     	;# 
   581  061C                     	;# 
   582  061C                     	;# 
   583  0691                     	;# 
   584  0692                     	;# 
   585  0693                     	;# 
   586  0694                     	;# 
   587  0695                     	;# 
   588  0F0F                     	;# 
   589  0F10                     	;# 
   590  0F11                     	;# 
   591  0F12                     	;# 
   592  0F13                     	;# 
   593  0F14                     	;# 
   594  0F15                     	;# 
   595  0F16                     	;# 
   596  0F17                     	;# 
   597  0F18                     	;# 
   598  0F19                     	;# 
   599  0F1A                     	;# 
   600  0F1B                     	;# 
   601  0F1C                     	;# 
   602  0F1D                     	;# 
   603  0F1E                     	;# 
   604  0F1F                     	;# 
   605  0F20                     	;# 
   606  0F21                     	;# 
   607  0F22                     	;# 
   608  0F23                     	;# 
   609  0F24                     	;# 
   610  0F25                     	;# 
   611  0F26                     	;# 
   612  0F27                     	;# 
   613  0F28                     	;# 
   614  0F29                     	;# 
   615  0F2A                     	;# 
   616  0F2B                     	;# 
   617  0F2C                     	;# 
   618  0F2D                     	;# 
   619  0F2E                     	;# 
   620  0F2F                     	;# 
   621  0F8C                     	;# 
   622  0F8D                     	;# 
   623  0F91                     	;# 
   624  0F95                     	;# 
   625  0F96                     	;# 
   626  0F97                     	;# 
   627  0F9C                     	;# 
   628  0F9D                     	;# 
   629  0F9E                     	;# 
   630  0FE3                     	;# 
   631  0FE4                     	;# 
   632  0FE5                     	;# 
   633  0FE6                     	;# 
   634  0FE7                     	;# 
   635  0FE8                     	;# 
   636  0FE9                     	;# 
   637  0FEA                     	;# 
   638  0FEB                     	;# 
   639  0FED                     	;# 
   640  0FEE                     	;# 
   641  0FEF                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0008                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0013                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001B                     	;# 
   668  001C                     	;# 
   669  008C                     	;# 
   670  008D                     	;# 
   671  008E                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0093                     	;# 
   675  0095                     	;# 
   676  0096                     	;# 
   677  0097                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009B                     	;# 
   682  009C                     	;# 
   683  009D                     	;# 
   684  009E                     	;# 
   685  009F                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010E                     	;# 
   689  0111                     	;# 
   690  0112                     	;# 
   691  0113                     	;# 
   692  0114                     	;# 
   693  0115                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  0118                     	;# 
   697  0119                     	;# 
   698  011D                     	;# 
   699  018C                     	;# 
   700  018D                     	;# 
   701  018E                     	;# 
   702  0191                     	;# 
   703  0191                     	;# 
   704  0192                     	;# 
   705  0193                     	;# 
   706  0193                     	;# 
   707  0194                     	;# 
   708  0195                     	;# 
   709  0196                     	;# 
   710  0197                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  019D                     	;# 
   717  019E                     	;# 
   718  019F                     	;# 
   719  020C                     	;# 
   720  020D                     	;# 
   721  0211                     	;# 
   722  0211                     	;# 
   723  0212                     	;# 
   724  0212                     	;# 
   725  0213                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0214                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0391                     	;# 
   737  0392                     	;# 
   738  0393                     	;# 
   739  0394                     	;# 
   740  0395                     	;# 
   741  0396                     	;# 
   742  0498                     	;# 
   743  0498                     	;# 
   744  0499                     	;# 
   745  049A                     	;# 
   746  049B                     	;# 
   747  049B                     	;# 
   748  049C                     	;# 
   749  049D                     	;# 
   750  049E                     	;# 
   751  049F                     	;# 
   752  0611                     	;# 
   753  0612                     	;# 
   754  0613                     	;# 
   755  0613                     	;# 
   756  0614                     	;# 
   757  0615                     	;# 
   758  0616                     	;# 
   759  0616                     	;# 
   760  0617                     	;# 
   761  0618                     	;# 
   762  0619                     	;# 
   763  0619                     	;# 
   764  061A                     	;# 
   765  061B                     	;# 
   766  061C                     	;# 
   767  061C                     	;# 
   768  0691                     	;# 
   769  0692                     	;# 
   770  0693                     	;# 
   771  0694                     	;# 
   772  0695                     	;# 
   773  0F0F                     	;# 
   774  0F10                     	;# 
   775  0F11                     	;# 
   776  0F12                     	;# 
   777  0F13                     	;# 
   778  0F14                     	;# 
   779  0F15                     	;# 
   780  0F16                     	;# 
   781  0F17                     	;# 
   782  0F18                     	;# 
   783  0F19                     	;# 
   784  0F1A                     	;# 
   785  0F1B                     	;# 
   786  0F1C                     	;# 
   787  0F1D                     	;# 
   788  0F1E                     	;# 
   789  0F1F                     	;# 
   790  0F20                     	;# 
   791  0F21                     	;# 
   792  0F22                     	;# 
   793  0F23                     	;# 
   794  0F24                     	;# 
   795  0F25                     	;# 
   796  0F26                     	;# 
   797  0F27                     	;# 
   798  0F28                     	;# 
   799  0F29                     	;# 
   800  0F2A                     	;# 
   801  0F2B                     	;# 
   802  0F2C                     	;# 
   803  0F2D                     	;# 
   804  0F2E                     	;# 
   805  0F2F                     	;# 
   806  0F8C                     	;# 
   807  0F8D                     	;# 
   808  0F91                     	;# 
   809  0F95                     	;# 
   810  0F96                     	;# 
   811  0F97                     	;# 
   812  0F9C                     	;# 
   813  0F9D                     	;# 
   814  0F9E                     	;# 
   815  0FE3                     	;# 
   816  0FE4                     	;# 
   817  0FE5                     	;# 
   818  0FE6                     	;# 
   819  0FE7                     	;# 
   820  0FE8                     	;# 
   821  0FE9                     	;# 
   822  0FEA                     	;# 
   823  0FEB                     	;# 
   824  0FED                     	;# 
   825  0FEE                     	;# 
   826  0FEF                     	;# 
   827  0000                     	;# 
   828  0001                     	;# 
   829  0002                     	;# 
   830  0003                     	;# 
   831  0004                     	;# 
   832  0005                     	;# 
   833  0006                     	;# 
   834  0007                     	;# 
   835  0008                     	;# 
   836  0009                     	;# 
   837  000A                     	;# 
   838  000B                     	;# 
   839  000C                     	;# 
   840  000D                     	;# 
   841  000E                     	;# 
   842  0011                     	;# 
   843  0012                     	;# 
   844  0013                     	;# 
   845  0015                     	;# 
   846  0016                     	;# 
   847  0016                     	;# 
   848  0017                     	;# 
   849  0018                     	;# 
   850  0019                     	;# 
   851  001A                     	;# 
   852  001B                     	;# 
   853  001C                     	;# 
   854  008C                     	;# 
   855  008D                     	;# 
   856  008E                     	;# 
   857  0091                     	;# 
   858  0092                     	;# 
   859  0093                     	;# 
   860  0095                     	;# 
   861  0096                     	;# 
   862  0097                     	;# 
   863  0099                     	;# 
   864  009A                     	;# 
   865  009B                     	;# 
   866  009B                     	;# 
   867  009C                     	;# 
   868  009D                     	;# 
   869  009E                     	;# 
   870  009F                     	;# 
   871  010C                     	;# 
   872  010D                     	;# 
   873  010E                     	;# 
   874  0111                     	;# 
   875  0112                     	;# 
   876  0113                     	;# 
   877  0114                     	;# 
   878  0115                     	;# 
   879  0116                     	;# 
   880  0117                     	;# 
   881  0118                     	;# 
   882  0119                     	;# 
   883  011D                     	;# 
   884  018C                     	;# 
   885  018D                     	;# 
   886  018E                     	;# 
   887  0191                     	;# 
   888  0191                     	;# 
   889  0192                     	;# 
   890  0193                     	;# 
   891  0193                     	;# 
   892  0194                     	;# 
   893  0195                     	;# 
   894  0196                     	;# 
   895  0197                     	;# 
   896  0199                     	;# 
   897  019A                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019C                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  020C                     	;# 
   905  020D                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0391                     	;# 
   922  0392                     	;# 
   923  0393                     	;# 
   924  0394                     	;# 
   925  0395                     	;# 
   926  0396                     	;# 
   927  0498                     	;# 
   928  0498                     	;# 
   929  0499                     	;# 
   930  049A                     	;# 
   931  049B                     	;# 
   932  049B                     	;# 
   933  049C                     	;# 
   934  049D                     	;# 
   935  049E                     	;# 
   936  049F                     	;# 
   937  0611                     	;# 
   938  0612                     	;# 
   939  0613                     	;# 
   940  0613                     	;# 
   941  0614                     	;# 
   942  0615                     	;# 
   943  0616                     	;# 
   944  0616                     	;# 
   945  0617                     	;# 
   946  0618                     	;# 
   947  0619                     	;# 
   948  0619                     	;# 
   949  061A                     	;# 
   950  061B                     	;# 
   951  061C                     	;# 
   952  061C                     	;# 
   953  0691                     	;# 
   954  0692                     	;# 
   955  0693                     	;# 
   956  0694                     	;# 
   957  0695                     	;# 
   958  0F0F                     	;# 
   959  0F10                     	;# 
   960  0F11                     	;# 
   961  0F12                     	;# 
   962  0F13                     	;# 
   963  0F14                     	;# 
   964  0F15                     	;# 
   965  0F16                     	;# 
   966  0F17                     	;# 
   967  0F18                     	;# 
   968  0F19                     	;# 
   969  0F1A                     	;# 
   970  0F1B                     	;# 
   971  0F1C                     	;# 
   972  0F1D                     	;# 
   973  0F1E                     	;# 
   974  0F1F                     	;# 
   975  0F20                     	;# 
   976  0F21                     	;# 
   977  0F22                     	;# 
   978  0F23                     	;# 
   979  0F24                     	;# 
   980  0F25                     	;# 
   981  0F26                     	;# 
   982  0F27                     	;# 
   983  0F28                     	;# 
   984  0F29                     	;# 
   985  0F2A                     	;# 
   986  0F2B                     	;# 
   987  0F2C                     	;# 
   988  0F2D                     	;# 
   989  0F2E                     	;# 
   990  0F2F                     	;# 
   991  0F8C                     	;# 
   992  0F8D                     	;# 
   993  0F91                     	;# 
   994  0F95                     	;# 
   995  0F96                     	;# 
   996  0F97                     	;# 
   997  0F9C                     	;# 
   998  0F9D                     	;# 
   999  0F9E                     	;# 
  1000  0FE3                     	;# 
  1001  0FE4                     	;# 
  1002  0FE5                     	;# 
  1003  0FE6                     	;# 
  1004  0FE7                     	;# 
  1005  0FE8                     	;# 
  1006  0FE9                     	;# 
  1007  0FEA                     	;# 
  1008  0FEB                     	;# 
  1009  0FED                     	;# 
  1010  0FEE                     	;# 
  1011  0FEF                     	;# 
  1012  0000                     	;# 
  1013  0001                     	;# 
  1014  0002                     	;# 
  1015  0003                     	;# 
  1016  0004                     	;# 
  1017  0005                     	;# 
  1018  0006                     	;# 
  1019  0007                     	;# 
  1020  0008                     	;# 
  1021  0009                     	;# 
  1022  000A                     	;# 
  1023  000B                     	;# 
  1024  000C                     	;# 
  1025  000D                     	;# 
  1026  000E                     	;# 
  1027  0011                     	;# 
  1028  0012                     	;# 
  1029  0013                     	;# 
  1030  0015                     	;# 
  1031  0016                     	;# 
  1032  0016                     	;# 
  1033  0017                     	;# 
  1034  0018                     	;# 
  1035  0019                     	;# 
  1036  001A                     	;# 
  1037  001B                     	;# 
  1038  001C                     	;# 
  1039  008C                     	;# 
  1040  008D                     	;# 
  1041  008E                     	;# 
  1042  0091                     	;# 
  1043  0092                     	;# 
  1044  0093                     	;# 
  1045  0095                     	;# 
  1046  0096                     	;# 
  1047  0097                     	;# 
  1048  0099                     	;# 
  1049  009A                     	;# 
  1050  009B                     	;# 
  1051  009B                     	;# 
  1052  009C                     	;# 
  1053  009D                     	;# 
  1054  009E                     	;# 
  1055  009F                     	;# 
  1056  010C                     	;# 
  1057  010D                     	;# 
  1058  010E                     	;# 
  1059  0111                     	;# 
  1060  0112                     	;# 
  1061  0113                     	;# 
  1062  0114                     	;# 
  1063  0115                     	;# 
  1064  0116                     	;# 
  1065  0117                     	;# 
  1066  0118                     	;# 
  1067  0119                     	;# 
  1068  011D                     	;# 
  1069  018C                     	;# 
  1070  018D                     	;# 
  1071  018E                     	;# 
  1072  0191                     	;# 
  1073  0191                     	;# 
  1074  0192                     	;# 
  1075  0193                     	;# 
  1076  0193                     	;# 
  1077  0194                     	;# 
  1078  0195                     	;# 
  1079  0196                     	;# 
  1080  0197                     	;# 
  1081  0199                     	;# 
  1082  019A                     	;# 
  1083  019B                     	;# 
  1084  019B                     	;# 
  1085  019C                     	;# 
  1086  019D                     	;# 
  1087  019E                     	;# 
  1088  019F                     	;# 
  1089  020C                     	;# 
  1090  020D                     	;# 
  1091  0211                     	;# 
  1092  0211                     	;# 
  1093  0212                     	;# 
  1094  0212                     	;# 
  1095  0213                     	;# 
  1096  0213                     	;# 
  1097  0214                     	;# 
  1098  0214                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0216                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0217                     	;# 
  1106  0391                     	;# 
  1107  0392                     	;# 
  1108  0393                     	;# 
  1109  0394                     	;# 
  1110  0395                     	;# 
  1111  0396                     	;# 
  1112  0498                     	;# 
  1113  0498                     	;# 
  1114  0499                     	;# 
  1115  049A                     	;# 
  1116  049B                     	;# 
  1117  049B                     	;# 
  1118  049C                     	;# 
  1119  049D                     	;# 
  1120  049E                     	;# 
  1121  049F                     	;# 
  1122  0611                     	;# 
  1123  0612                     	;# 
  1124  0613                     	;# 
  1125  0613                     	;# 
  1126  0614                     	;# 
  1127  0615                     	;# 
  1128  0616                     	;# 
  1129  0616                     	;# 
  1130  0617                     	;# 
  1131  0618                     	;# 
  1132  0619                     	;# 
  1133  0619                     	;# 
  1134  061A                     	;# 
  1135  061B                     	;# 
  1136  061C                     	;# 
  1137  061C                     	;# 
  1138  0691                     	;# 
  1139  0692                     	;# 
  1140  0693                     	;# 
  1141  0694                     	;# 
  1142  0695                     	;# 
  1143  0F0F                     	;# 
  1144  0F10                     	;# 
  1145  0F11                     	;# 
  1146  0F12                     	;# 
  1147  0F13                     	;# 
  1148  0F14                     	;# 
  1149  0F15                     	;# 
  1150  0F16                     	;# 
  1151  0F17                     	;# 
  1152  0F18                     	;# 
  1153  0F19                     	;# 
  1154  0F1A                     	;# 
  1155  0F1B                     	;# 
  1156  0F1C                     	;# 
  1157  0F1D                     	;# 
  1158  0F1E                     	;# 
  1159  0F1F                     	;# 
  1160  0F20                     	;# 
  1161  0F21                     	;# 
  1162  0F22                     	;# 
  1163  0F23                     	;# 
  1164  0F24                     	;# 
  1165  0F25                     	;# 
  1166  0F26                     	;# 
  1167  0F27                     	;# 
  1168  0F28                     	;# 
  1169  0F29                     	;# 
  1170  0F2A                     	;# 
  1171  0F2B                     	;# 
  1172  0F2C                     	;# 
  1173  0F2D                     	;# 
  1174  0F2E                     	;# 
  1175  0F2F                     	;# 
  1176  0F8C                     	;# 
  1177  0F8D                     	;# 
  1178  0F91                     	;# 
  1179  0F95                     	;# 
  1180  0F96                     	;# 
  1181  0F97                     	;# 
  1182  0F9C                     	;# 
  1183  0F9D                     	;# 
  1184  0F9E                     	;# 
  1185  0FE3                     	;# 
  1186  0FE4                     	;# 
  1187  0FE5                     	;# 
  1188  0FE6                     	;# 
  1189  0FE7                     	;# 
  1190  0FE8                     	;# 
  1191  0FE9                     	;# 
  1192  0FEA                     	;# 
  1193  0FEB                     	;# 
  1194  0FED                     	;# 
  1195  0FEE                     	;# 
  1196  0FEF                     	;# 
  1197  0000                     	;# 
  1198  0001                     	;# 
  1199  0002                     	;# 
  1200  0003                     	;# 
  1201  0004                     	;# 
  1202  0005                     	;# 
  1203  0006                     	;# 
  1204  0007                     	;# 
  1205  0008                     	;# 
  1206  0009                     	;# 
  1207  000A                     	;# 
  1208  000B                     	;# 
  1209  000C                     	;# 
  1210  000D                     	;# 
  1211  000E                     	;# 
  1212  0011                     	;# 
  1213  0012                     	;# 
  1214  0013                     	;# 
  1215  0015                     	;# 
  1216  0016                     	;# 
  1217  0016                     	;# 
  1218  0017                     	;# 
  1219  0018                     	;# 
  1220  0019                     	;# 
  1221  001A                     	;# 
  1222  001B                     	;# 
  1223  001C                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  0091                     	;# 
  1228  0092                     	;# 
  1229  0093                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0097                     	;# 
  1233  0099                     	;# 
  1234  009A                     	;# 
  1235  009B                     	;# 
  1236  009B                     	;# 
  1237  009C                     	;# 
  1238  009D                     	;# 
  1239  009E                     	;# 
  1240  009F                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  010E                     	;# 
  1244  0111                     	;# 
  1245  0112                     	;# 
  1246  0113                     	;# 
  1247  0114                     	;# 
  1248  0115                     	;# 
  1249  0116                     	;# 
  1250  0117                     	;# 
  1251  0118                     	;# 
  1252  0119                     	;# 
  1253  011D                     	;# 
  1254  018C                     	;# 
  1255  018D                     	;# 
  1256  018E                     	;# 
  1257  0191                     	;# 
  1258  0191                     	;# 
  1259  0192                     	;# 
  1260  0193                     	;# 
  1261  0193                     	;# 
  1262  0194                     	;# 
  1263  0195                     	;# 
  1264  0196                     	;# 
  1265  0197                     	;# 
  1266  0199                     	;# 
  1267  019A                     	;# 
  1268  019B                     	;# 
  1269  019B                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019E                     	;# 
  1273  019F                     	;# 
  1274  020C                     	;# 
  1275  020D                     	;# 
  1276  0211                     	;# 
  1277  0211                     	;# 
  1278  0212                     	;# 
  1279  0212                     	;# 
  1280  0213                     	;# 
  1281  0213                     	;# 
  1282  0214                     	;# 
  1283  0214                     	;# 
  1284  0215                     	;# 
  1285  0215                     	;# 
  1286  0215                     	;# 
  1287  0216                     	;# 
  1288  0216                     	;# 
  1289  0217                     	;# 
  1290  0217                     	;# 
  1291  0391                     	;# 
  1292  0392                     	;# 
  1293  0393                     	;# 
  1294  0394                     	;# 
  1295  0395                     	;# 
  1296  0396                     	;# 
  1297  0498                     	;# 
  1298  0498                     	;# 
  1299  0499                     	;# 
  1300  049A                     	;# 
  1301  049B                     	;# 
  1302  049B                     	;# 
  1303  049C                     	;# 
  1304  049D                     	;# 
  1305  049E                     	;# 
  1306  049F                     	;# 
  1307  0611                     	;# 
  1308  0612                     	;# 
  1309  0613                     	;# 
  1310  0613                     	;# 
  1311  0614                     	;# 
  1312  0615                     	;# 
  1313  0616                     	;# 
  1314  0616                     	;# 
  1315  0617                     	;# 
  1316  0618                     	;# 
  1317  0619                     	;# 
  1318  0619                     	;# 
  1319  061A                     	;# 
  1320  061B                     	;# 
  1321  061C                     	;# 
  1322  061C                     	;# 
  1323  0691                     	;# 
  1324  0692                     	;# 
  1325  0693                     	;# 
  1326  0694                     	;# 
  1327  0695                     	;# 
  1328  0F0F                     	;# 
  1329  0F10                     	;# 
  1330  0F11                     	;# 
  1331  0F12                     	;# 
  1332  0F13                     	;# 
  1333  0F14                     	;# 
  1334  0F15                     	;# 
  1335  0F16                     	;# 
  1336  0F17                     	;# 
  1337  0F18                     	;# 
  1338  0F19                     	;# 
  1339  0F1A                     	;# 
  1340  0F1B                     	;# 
  1341  0F1C                     	;# 
  1342  0F1D                     	;# 
  1343  0F1E                     	;# 
  1344  0F1F                     	;# 
  1345  0F20                     	;# 
  1346  0F21                     	;# 
  1347  0F22                     	;# 
  1348  0F23                     	;# 
  1349  0F24                     	;# 
  1350  0F25                     	;# 
  1351  0F26                     	;# 
  1352  0F27                     	;# 
  1353  0F28                     	;# 
  1354  0F29                     	;# 
  1355  0F2A                     	;# 
  1356  0F2B                     	;# 
  1357  0F2C                     	;# 
  1358  0F2D                     	;# 
  1359  0F2E                     	;# 
  1360  0F2F                     	;# 
  1361  0F8C                     	;# 
  1362  0F8D                     	;# 
  1363  0F91                     	;# 
  1364  0F95                     	;# 
  1365  0F96                     	;# 
  1366  0F97                     	;# 
  1367  0F9C                     	;# 
  1368  0F9D                     	;# 
  1369  0F9E                     	;# 
  1370  0FE3                     	;# 
  1371  0FE4                     	;# 
  1372  0FE5                     	;# 
  1373  0FE6                     	;# 
  1374  0FE7                     	;# 
  1375  0FE8                     	;# 
  1376  0FE9                     	;# 
  1377  0FEA                     	;# 
  1378  0FEB                     	;# 
  1379  0FED                     	;# 
  1380  0FEE                     	;# 
  1381  0FEF                     	;# 
  1382  0000                     	;# 
  1383  0001                     	;# 
  1384  0002                     	;# 
  1385  0003                     	;# 
  1386  0004                     	;# 
  1387  0005                     	;# 
  1388  0006                     	;# 
  1389  0007                     	;# 
  1390  0008                     	;# 
  1391  0009                     	;# 
  1392  000A                     	;# 
  1393  000B                     	;# 
  1394  000C                     	;# 
  1395  000D                     	;# 
  1396  000E                     	;# 
  1397  0011                     	;# 
  1398  0012                     	;# 
  1399  0013                     	;# 
  1400  0015                     	;# 
  1401  0016                     	;# 
  1402  0016                     	;# 
  1403  0017                     	;# 
  1404  0018                     	;# 
  1405  0019                     	;# 
  1406  001A                     	;# 
  1407  001B                     	;# 
  1408  001C                     	;# 
  1409  008C                     	;# 
  1410  008D                     	;# 
  1411  008E                     	;# 
  1412  0091                     	;# 
  1413  0092                     	;# 
  1414  0093                     	;# 
  1415  0095                     	;# 
  1416  0096                     	;# 
  1417  0097                     	;# 
  1418  0099                     	;# 
  1419  009A                     	;# 
  1420  009B                     	;# 
  1421  009B                     	;# 
  1422  009C                     	;# 
  1423  009D                     	;# 
  1424  009E                     	;# 
  1425  009F                     	;# 
  1426  010C                     	;# 
  1427  010D                     	;# 
  1428  010E                     	;# 
  1429  0111                     	;# 
  1430  0112                     	;# 
  1431  0113                     	;# 
  1432  0114                     	;# 
  1433  0115                     	;# 
  1434  0116                     	;# 
  1435  0117                     	;# 
  1436  0118                     	;# 
  1437  0119                     	;# 
  1438  011D                     	;# 
  1439  018C                     	;# 
  1440  018D                     	;# 
  1441  018E                     	;# 
  1442  0191                     	;# 
  1443  0191                     	;# 
  1444  0192                     	;# 
  1445  0193                     	;# 
  1446  0193                     	;# 
  1447  0194                     	;# 
  1448  0195                     	;# 
  1449  0196                     	;# 
  1450  0197                     	;# 
  1451  0199                     	;# 
  1452  019A                     	;# 
  1453  019B                     	;# 
  1454  019B                     	;# 
  1455  019C                     	;# 
  1456  019D                     	;# 
  1457  019E                     	;# 
  1458  019F                     	;# 
  1459  020C                     	;# 
  1460  020D                     	;# 
  1461  0211                     	;# 
  1462  0211                     	;# 
  1463  0212                     	;# 
  1464  0212                     	;# 
  1465  0213                     	;# 
  1466  0213                     	;# 
  1467  0214                     	;# 
  1468  0214                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0215                     	;# 
  1472  0216                     	;# 
  1473  0216                     	;# 
  1474  0217                     	;# 
  1475  0217                     	;# 
  1476  0391                     	;# 
  1477  0392                     	;# 
  1478  0393                     	;# 
  1479  0394                     	;# 
  1480  0395                     	;# 
  1481  0396                     	;# 
  1482  0498                     	;# 
  1483  0498                     	;# 
  1484  0499                     	;# 
  1485  049A                     	;# 
  1486  049B                     	;# 
  1487  049B                     	;# 
  1488  049C                     	;# 
  1489  049D                     	;# 
  1490  049E                     	;# 
  1491  049F                     	;# 
  1492  0611                     	;# 
  1493  0612                     	;# 
  1494  0613                     	;# 
  1495  0613                     	;# 
  1496  0614                     	;# 
  1497  0615                     	;# 
  1498  0616                     	;# 
  1499  0616                     	;# 
  1500  0617                     	;# 
  1501  0618                     	;# 
  1502  0619                     	;# 
  1503  0619                     	;# 
  1504  061A                     	;# 
  1505  061B                     	;# 
  1506  061C                     	;# 
  1507  061C                     	;# 
  1508  0691                     	;# 
  1509  0692                     	;# 
  1510  0693                     	;# 
  1511  0694                     	;# 
  1512  0695                     	;# 
  1513  0F0F                     	;# 
  1514  0F10                     	;# 
  1515  0F11                     	;# 
  1516  0F12                     	;# 
  1517  0F13                     	;# 
  1518  0F14                     	;# 
  1519  0F15                     	;# 
  1520  0F16                     	;# 
  1521  0F17                     	;# 
  1522  0F18                     	;# 
  1523  0F19                     	;# 
  1524  0F1A                     	;# 
  1525  0F1B                     	;# 
  1526  0F1C                     	;# 
  1527  0F1D                     	;# 
  1528  0F1E                     	;# 
  1529  0F1F                     	;# 
  1530  0F20                     	;# 
  1531  0F21                     	;# 
  1532  0F22                     	;# 
  1533  0F23                     	;# 
  1534  0F24                     	;# 
  1535  0F25                     	;# 
  1536  0F26                     	;# 
  1537  0F27                     	;# 
  1538  0F28                     	;# 
  1539  0F29                     	;# 
  1540  0F2A                     	;# 
  1541  0F2B                     	;# 
  1542  0F2C                     	;# 
  1543  0F2D                     	;# 
  1544  0F2E                     	;# 
  1545  0F2F                     	;# 
  1546  0F8C                     	;# 
  1547  0F8D                     	;# 
  1548  0F91                     	;# 
  1549  0F95                     	;# 
  1550  0F96                     	;# 
  1551  0F97                     	;# 
  1552  0F9C                     	;# 
  1553  0F9D                     	;# 
  1554  0F9E                     	;# 
  1555  0FE3                     	;# 
  1556  0FE4                     	;# 
  1557  0FE5                     	;# 
  1558  0FE6                     	;# 
  1559  0FE7                     	;# 
  1560  0FE8                     	;# 
  1561  0FE9                     	;# 
  1562  0FEA                     	;# 
  1563  0FEB                     	;# 
  1564  0FED                     	;# 
  1565  0FEE                     	;# 
  1566  0FEF                     	;# 
  1567  0000                     	;# 
  1568  0001                     	;# 
  1569  0002                     	;# 
  1570  0003                     	;# 
  1571  0004                     	;# 
  1572  0005                     	;# 
  1573  0006                     	;# 
  1574  0007                     	;# 
  1575  0008                     	;# 
  1576  0009                     	;# 
  1577  000A                     	;# 
  1578  000B                     	;# 
  1579  000C                     	;# 
  1580  000D                     	;# 
  1581  000E                     	;# 
  1582  0011                     	;# 
  1583  0012                     	;# 
  1584  0013                     	;# 
  1585  0015                     	;# 
  1586  0016                     	;# 
  1587  0016                     	;# 
  1588  0017                     	;# 
  1589  0018                     	;# 
  1590  0019                     	;# 
  1591  001A                     	;# 
  1592  001B                     	;# 
  1593  001C                     	;# 
  1594  008C                     	;# 
  1595  008D                     	;# 
  1596  008E                     	;# 
  1597  0091                     	;# 
  1598  0092                     	;# 
  1599  0093                     	;# 
  1600  0095                     	;# 
  1601  0096                     	;# 
  1602  0097                     	;# 
  1603  0099                     	;# 
  1604  009A                     	;# 
  1605  009B                     	;# 
  1606  009B                     	;# 
  1607  009C                     	;# 
  1608  009D                     	;# 
  1609  009E                     	;# 
  1610  009F                     	;# 
  1611  010C                     	;# 
  1612  010D                     	;# 
  1613  010E                     	;# 
  1614  0111                     	;# 
  1615  0112                     	;# 
  1616  0113                     	;# 
  1617  0114                     	;# 
  1618  0115                     	;# 
  1619  0116                     	;# 
  1620  0117                     	;# 
  1621  0118                     	;# 
  1622  0119                     	;# 
  1623  011D                     	;# 
  1624  018C                     	;# 
  1625  018D                     	;# 
  1626  018E                     	;# 
  1627  0191                     	;# 
  1628  0191                     	;# 
  1629  0192                     	;# 
  1630  0193                     	;# 
  1631  0193                     	;# 
  1632  0194                     	;# 
  1633  0195                     	;# 
  1634  0196                     	;# 
  1635  0197                     	;# 
  1636  0199                     	;# 
  1637  019A                     	;# 
  1638  019B                     	;# 
  1639  019B                     	;# 
  1640  019C                     	;# 
  1641  019D                     	;# 
  1642  019E                     	;# 
  1643  019F                     	;# 
  1644  020C                     	;# 
  1645  020D                     	;# 
  1646  0211                     	;# 
  1647  0211                     	;# 
  1648  0212                     	;# 
  1649  0212                     	;# 
  1650  0213                     	;# 
  1651  0213                     	;# 
  1652  0214                     	;# 
  1653  0214                     	;# 
  1654  0215                     	;# 
  1655  0215                     	;# 
  1656  0215                     	;# 
  1657  0216                     	;# 
  1658  0216                     	;# 
  1659  0217                     	;# 
  1660  0217                     	;# 
  1661  0391                     	;# 
  1662  0392                     	;# 
  1663  0393                     	;# 
  1664  0394                     	;# 
  1665  0395                     	;# 
  1666  0396                     	;# 
  1667  0498                     	;# 
  1668  0498                     	;# 
  1669  0499                     	;# 
  1670  049A                     	;# 
  1671  049B                     	;# 
  1672  049B                     	;# 
  1673  049C                     	;# 
  1674  049D                     	;# 
  1675  049E                     	;# 
  1676  049F                     	;# 
  1677  0611                     	;# 
  1678  0612                     	;# 
  1679  0613                     	;# 
  1680  0613                     	;# 
  1681  0614                     	;# 
  1682  0615                     	;# 
  1683  0616                     	;# 
  1684  0616                     	;# 
  1685  0617                     	;# 
  1686  0618                     	;# 
  1687  0619                     	;# 
  1688  0619                     	;# 
  1689  061A                     	;# 
  1690  061B                     	;# 
  1691  061C                     	;# 
  1692  061C                     	;# 
  1693  0691                     	;# 
  1694  0692                     	;# 
  1695  0693                     	;# 
  1696  0694                     	;# 
  1697  0695                     	;# 
  1698  0F0F                     	;# 
  1699  0F10                     	;# 
  1700  0F11                     	;# 
  1701  0F12                     	;# 
  1702  0F13                     	;# 
  1703  0F14                     	;# 
  1704  0F15                     	;# 
  1705  0F16                     	;# 
  1706  0F17                     	;# 
  1707  0F18                     	;# 
  1708  0F19                     	;# 
  1709  0F1A                     	;# 
  1710  0F1B                     	;# 
  1711  0F1C                     	;# 
  1712  0F1D                     	;# 
  1713  0F1E                     	;# 
  1714  0F1F                     	;# 
  1715  0F20                     	;# 
  1716  0F21                     	;# 
  1717  0F22                     	;# 
  1718  0F23                     	;# 
  1719  0F24                     	;# 
  1720  0F25                     	;# 
  1721  0F26                     	;# 
  1722  0F27                     	;# 
  1723  0F28                     	;# 
  1724  0F29                     	;# 
  1725  0F2A                     	;# 
  1726  0F2B                     	;# 
  1727  0F2C                     	;# 
  1728  0F2D                     	;# 
  1729  0F2E                     	;# 
  1730  0F2F                     	;# 
  1731  0F8C                     	;# 
  1732  0F8D                     	;# 
  1733  0F91                     	;# 
  1734  0F95                     	;# 
  1735  0F96                     	;# 
  1736  0F97                     	;# 
  1737  0F9C                     	;# 
  1738  0F9D                     	;# 
  1739  0F9E                     	;# 
  1740  0FE3                     	;# 
  1741  0FE4                     	;# 
  1742  0FE5                     	;# 
  1743  0FE6                     	;# 
  1744  0FE7                     	;# 
  1745  0FE8                     	;# 
  1746  0FE9                     	;# 
  1747  0FEA                     	;# 
  1748  0FEB                     	;# 
  1749  0FED                     	;# 
  1750  0FEE                     	;# 
  1751  0FEF                     	;# 
  1752                           
  1753 ;; Function _I2C_SlaveDefWrColInterruptHandler is unused but had its address taken
  1754  0000                     
  1755 ;; Function _I2C_SlaveDefBusColInterruptHandler is unused but had its address taken
  1756  0000                     
  1757                           	psect	stringtext1
  1758  0000'                    __pstringtext1:
  1759  0000'                    _safety:
  1760  0000' 34CD               	retlw	205
  1761  0001' 34CC               	retlw	204
  1762  0002' 344C               	retlw	76
  1763  0003' 3440               	retlw	64
  1764  0004' 3400               	retlw	0
  1765  0005' 3400               	retlw	0
  1766  0006' 3480               	retlw	128
  1767  0007' 3440               	retlw	64
  1768  0008' 343D               	retlw	61
  1769  0009' 340A               	retlw	10
  1770  000A' 34BF               	retlw	191
  1771  000B' 3441               	retlw	65
  1772  000C' 345C               	retlw	92
  1773  000D' 348F               	retlw	143
  1774  000E' 34E6               	retlw	230
  1775  000F' 3441               	retlw	65
  1776  0010'                    __end_of_safety:
  1777                           
  1778                           	psect	nvBANK0
  1779  0000'                    __pnvBANK0:
  1780  0000'                    _TMR1_InterruptHandler:
  1781  0000'                    	ds	2
  1782  0002'                    _timer1ReloadVal:
  1783  0002'                    	ds	2
  1784  001C                     _T2CONbits	set	28
  1785  001C                     _T2CON	set	28
  1786  001A                     _TMR2	set	26
  1787  001B                     _PR2	set	27
  1788  0019                     _T1GCONbits	set	25
  1789  0018                     _T1CONbits	set	24
  1790  0018                     _T1CON	set	24
  1791  0016                     _TMR1L	set	22
  1792  0017                     _TMR1H	set	23
  1793  0019                     _T1GCON	set	25
  1794  0011                     _PIR1bits	set	17
  1795  0012                     _PIR2bits	set	18
  1796  000B                     _INTCONbits	set	11
  1797  009D                     _ADCON0bits	set	157
  1798  009D                     _ADCON0	set	157
  1799  009C                     _ADRESH	set	156
  1800  009B                     _ADRESL	set	155
  1801  009F                     _ADCON2	set	159
  1802  009E                     _ADCON1	set	158
  1803  0091                     _PIE1bits	set	145
  1804  0092                     _PIE2bits	set	146
  1805  0095                     _OPTION_REGbits	set	149
  1806  008E                     _TRISC	set	142
  1807  008D                     _TRISB	set	141
  1808  008C                     _TRISA	set	140
  1809  0097                     _WDTCON	set	151
  1810  0099                     _OSCCON	set	153
  1811  0097                     _WDTCONbits	set	151
  1812  0117                     _FVRCONbits	set	279
  1813  0117                     _FVRCON	set	279
  1814  011D                     _APFCON	set	285
  1815  010D                     _LATB	set	269
  1816  010C                     _LATA	set	268
  1817  0116                     _BORCON	set	278
  1818  010E                     _LATC	set	270
  1819  018C                     _ANSELA	set	396
  1820  018D                     _ANSELB	set	397
  1821  018E                     _ANSELC	set	398
  1822  0211                     _SSP1BUF	set	529
  1823  0213                     _SSP1MSK	set	531
  1824  0212                     _SSP1ADD	set	530
  1825  0215                     _SSP1CON1bits	set	533
  1826  0216                     _SSP1CON2	set	534
  1827  0215                     _SSP1CON1	set	533
  1828  0214                     _SSP1STAT	set	532
  1829  020C                     _WPUA	set	524
  1830  020D                     _WPUB	set	525
  1831  0216                     _SSP1CON2bits	set	534
  1832  0214                     _SSP1STATbits	set	532
  1833                           
  1834                           	psect	cinit
  1835  0000'                    start_initialization:	
  1836                           ; #config settings
  1837                           
  1838  0000'                    __initialization:
  1839                           
  1840                           ; Clear objects allocated to COMMON
  1841  0000' 0180'              	clrf	__pbssCOMMON& (0+127)
  1842  0001' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
  1843  0002' 0180'              	clrf	(__pbssCOMMON+2)& (0+127)
  1844                           
  1845                           ; Clear objects allocated to BANK0
  1846  0003' 3000'              	movlw	low __pbssBANK0
  1847  0004' 0084               	movwf	4
  1848  0005' 3000'              	movlw	high __pbssBANK0
  1849  0006' 0085               	movwf	5
  1850  0007' 301F               	movlw	31
  1851  0008' 3180' 2000' 3180'  	fcall	clear_ram0
  1852  000B'                    end_of_initialization:	
  1853                           ;End of C runtime variable initialization code
  1854                           
  1855  000B'                    __end_of__initialization:
  1856  000B' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1857  000C' 0020               	movlb	0
  1858  000D' 3180' 2800'        	ljmp	_main	;jump to C main() function
  1859                           
  1860                           	psect	bssCOMMON
  1861  0000'                    __pbssCOMMON:
  1862  0000'                    _i2cSlaveState:
  1863  0000'                    	ds	1
  1864  0001'                    _i2cWrData:
  1865  0001'                    	ds	1
  1866  0002'                    _selectedReference:
  1867  0002'                    	ds	1
  1868                           
  1869                           	psect	bssBANK0
  1870  0000'                    __pbssBANK0:
  1871  0000'                    _memory:
  1872  0000'                    	ds	13
  1873  000D'                    _ADC_InterruptHandler:
  1874  000D'                    	ds	2
  1875  000F'                    _I2C_SlaveWrColInterruptHandler:
  1876  000F'                    	ds	2
  1877  0011'                    _I2C_SlaveBusColInterruptHandler:
  1878  0011'                    	ds	2
  1879  0013'                    _I2C_SlaveAddrInterruptHandler:
  1880  0013'                    	ds	2
  1881  0015'                    _I2C_SlaveWrInterruptHandler:
  1882  0015'                    	ds	2
  1883  0017'                    _I2C_SlaveRdInterruptHandler:
  1884  0017'                    	ds	2
  1885  0019'                    _MSSP_InterruptHandler:
  1886  0019'                    	ds	2
  1887  001B'                    _i2cSlaveAddr:
  1888  001B'                    	ds	1
  1889  001C'                    _i2cRdData:
  1890  001C'                    	ds	1
  1891  001D'                    _currentlyBalancing:
  1892  001D'                    	ds	1
  1893  001E'                    _I2C_Command:
  1894  001E'                    	ds	1
  1895                           
  1896                           	psect	clrtext
  1897  0000'                    clear_ram0:	
  1898                           ;	Called with FSR0 containing the base address, and
  1899                           ;	WREG with the size to clear
  1900                           
  1901  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  1902  0001'                    clrloop0:
  1903  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  1904  0002' 3101               	addfsr 0,1
  1905  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1906  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
  1907  0005' 3400               	retlw	0	;all done for this memory range, return
  1908                           
  1909                           	psect	cstackCOMMON
  1910  0000'                    __pcstackCOMMON:
  1911  0000'                    ?_SYSTEM_Initialize:
  1912  0000'                    ?_I2C_Read:	
  1913                           ; 1 bytes @ 0x0
  1914                           
  1915  0000'                    ?_I2C_Write:	
  1916                           ; 1 bytes @ 0x0
  1917                           
  1918  0000'                    ??_sendAllDataToMaster:	
  1919                           ; 1 bytes @ 0x0
  1920                           
  1921  0000'                    ?_I2C_Initialize:	
  1922                           ; 1 bytes @ 0x0
  1923                           
  1924  0000'                    ?_PIN_MANAGER_Initialize:	
  1925                           ; 1 bytes @ 0x0
  1926                           
  1927  0000'                    ?_OSCILLATOR_Initialize:	
  1928                           ; 1 bytes @ 0x0
  1929                           
  1930  0000'                    ?_WDT_Initialize:	
  1931                           ; 1 bytes @ 0x0
  1932                           
  1933  0000'                    ?_FVR_Initialize:	
  1934                           ; 1 bytes @ 0x0
  1935                           
  1936  0000'                    ?_ADC_Initialize:	
  1937                           ; 1 bytes @ 0x0
  1938                           
  1939  0000'                    ?_TMR2_Initialize:	
  1940                           ; 1 bytes @ 0x0
  1941                           
  1942  0000'                    ?_TMR1_Initialize:	
  1943                           ; 1 bytes @ 0x0
  1944                           
  1945  0000'                    ?_TMR1_ISR:	
  1946                           ; 1 bytes @ 0x0
  1947                           
  1948  0000'                    ?_TMR1_DefaultInterruptHandler:	
  1949                           ; 1 bytes @ 0x0
  1950                           
  1951  0000'                    ??_TMR1_DefaultInterruptHandler:	
  1952                           ; 1 bytes @ 0x0
  1953                           
  1954  0000'                    ?_I2C_Isr:	
  1955                           ; 1 bytes @ 0x0
  1956                           
  1957  0000'                    ?_I2C_SlaveDefWrInterruptHandler:	
  1958                           ; 1 bytes @ 0x0
  1959                           
  1960  0000'                    ?_I2C_SlaveDefRdInterruptHandler:	
  1961                           ; 1 bytes @ 0x0
  1962                           
  1963  0000'                    ??_I2C_SlaveDefRdInterruptHandler:	
  1964                           ; 1 bytes @ 0x0
  1965                           
  1966  0000'                    ?_I2C_SlaveDefAddrInterruptHandler:	
  1967                           ; 1 bytes @ 0x0
  1968                           
  1969  0000'                    ??_I2C_SlaveDefAddrInterruptHandler:	
  1970                           ; 1 bytes @ 0x0
  1971                           
  1972  0000'                    ?_I2C_SlaveGetRxData:	
  1973                           ; 1 bytes @ 0x0
  1974                           
  1975  0000'                    ?_I2C_SlaveSendTxData:	
  1976                           ; 1 bytes @ 0x0
  1977                           
  1978  0000'                    ?_I2C_SlaveIsRead:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981  0000'                    ??_I2C_SlaveIsRead:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984  0000'                    ?_I2C_SlaveClearIrq:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987  0000'                    ??_I2C_SlaveClearIrq:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990  0000'                    ?_I2C_SlaveIsAddr:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993  0000'                    ??_I2C_SlaveIsAddr:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996  0000'                    ?_I2C_SlaveAddrCallBack:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999  0000'                    ??_I2C_SlaveAddrCallBack:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002  0000'                    ?_I2C_SlaveIsTxBufEmpty:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005  0000'                    ??_I2C_SlaveIsTxBufEmpty:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008  0000'                    ?_I2C_SlaveWrCallBack:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011  0000'                    ?_I2C_SlaveIsRxBufFull:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014  0000'                    ??_I2C_SlaveIsRxBufFull:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017  0000'                    ?_I2C_SlaveRdCallBack:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0000'                    ??_I2C_SlaveRdCallBack:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0000'                    ?_I2C_SlaveReleaseClock:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0000'                    ??_I2C_SlaveReleaseClock:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0000'                    ?_main:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032  0000'                    ?_INTERRUPT_InterruptManager:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035  0000'                    ?_TMR1_WriteTimer:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038  0000'                    ?i1_I2C_SlaveSendTxData:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041  0000'                    ??i1_I2C_SlaveSendTxData:	
  2042                           ; 1 bytes @ 0x0
  2043                           
  2044  0000'                    ?i1_I2C_SlaveGetRxData:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047  0000'                    ??i1_I2C_SlaveGetRxData:	
  2048                           ; 1 bytes @ 0x0
  2049                           
  2050  0000'                    ?_sendAllDataToMaster:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053  0000'                    i1I2C_SlaveSendTxData@data:	
  2054                           ; 2 bytes @ 0x0
  2055                           
  2056  0000'                    TMR1_WriteTimer@timerVal:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059                           
  2060                           ; 2 bytes @ 0x0
  2061  0000'                    	ds	1
  2062  0001'                    ??_I2C_Isr:
  2063  0001'                    ??_I2C_SlaveDefWrInterruptHandler:	
  2064                           ; 1 bytes @ 0x1
  2065                           
  2066  0001'                    ??_I2C_SlaveWrCallBack:	
  2067                           ; 1 bytes @ 0x1
  2068                           
  2069                           
  2070                           ; 1 bytes @ 0x1
  2071  0001'                    	ds	1
  2072  0002'                    ??_TMR1_ISR:
  2073  0002'                    ??_TMR1_WriteTimer:	
  2074                           ; 1 bytes @ 0x2
  2075                           
  2076                           
  2077                           ; 1 bytes @ 0x2
  2078  0002'                    	ds	1
  2079  0003'                    ??_I2C_Read:
  2080  0003'                    ??_I2C_Initialize:	
  2081                           ; 1 bytes @ 0x3
  2082                           
  2083  0003'                    ??_PIN_MANAGER_Initialize:	
  2084                           ; 1 bytes @ 0x3
  2085                           
  2086  0003'                    ??_OSCILLATOR_Initialize:	
  2087                           ; 1 bytes @ 0x3
  2088                           
  2089  0003'                    ??_WDT_Initialize:	
  2090                           ; 1 bytes @ 0x3
  2091                           
  2092  0003'                    ??_FVR_Initialize:	
  2093                           ; 1 bytes @ 0x3
  2094                           
  2095  0003'                    ??_ADC_Initialize:	
  2096                           ; 1 bytes @ 0x3
  2097                           
  2098  0003'                    ??_TMR2_Initialize:	
  2099                           ; 1 bytes @ 0x3
  2100                           
  2101  0003'                    ?_TMR1_SetInterruptHandler:	
  2102                           ; 1 bytes @ 0x3
  2103                           
  2104  0003'                    ??_I2C_SlaveGetRxData:	
  2105                           ; 1 bytes @ 0x3
  2106                           
  2107  0003'                    ??_I2C_SlaveSendTxData:	
  2108                           ; 1 bytes @ 0x3
  2109                           
  2110  0003'                    ??_INTERRUPT_InterruptManager:	
  2111                           ; 1 bytes @ 0x3
  2112                           
  2113  0003'                    ?_ADC_GetConversion:	
  2114                           ; 1 bytes @ 0x3
  2115                           
  2116  0003'                    I2C_SlaveSendTxData@data:	
  2117                           ; 2 bytes @ 0x3
  2118                           
  2119  0003'                    TMR1_SetInterruptHandler@InterruptHandler:	
  2120                           ; 1 bytes @ 0x3
  2121                           
  2122                           
  2123                           ; 2 bytes @ 0x3
  2124  0003'                    	ds	1
  2125  0004'                    ??_I2C_Write:
  2126  0004'                    I2C_Write@data:	
  2127                           ; 1 bytes @ 0x4
  2128                           
  2129                           
  2130                           ; 1 bytes @ 0x4
  2131  0004'                    	ds	1
  2132  0005'                    ??_SYSTEM_Initialize:
  2133  0005'                    ?_sendDataToMaster:	
  2134                           ; 1 bytes @ 0x5
  2135                           
  2136  0005'                    ??_ADC_GetConversion:	
  2137                           ; 1 bytes @ 0x5
  2138                           
  2139  0005'                    ??_TMR1_Initialize:	
  2140                           ; 1 bytes @ 0x5
  2141                           
  2142  0005'                    ??_TMR1_SetInterruptHandler:	
  2143                           ; 1 bytes @ 0x5
  2144                           
  2145  0005'                    sendDataToMaster@toSend:	
  2146                           ; 1 bytes @ 0x5
  2147                           
  2148                           
  2149                           ; 2 bytes @ 0x5
  2150  0005'                    	ds	1
  2151  0006'                    ADC_GetConversion@channel:
  2152                           
  2153                           ; 1 bytes @ 0x6
  2154  0006'                    	ds	1
  2155  0007'                    ??_sendDataToMaster:
  2156                           
  2157                           	psect	cstackBANK0
  2158  0000'                    __pcstackBANK0:	
  2159                           ; 1 bytes @ 0x7
  2160                           
  2161  0000'                    sendDataToMaster@high:
  2162                           
  2163                           ; 1 bytes @ 0x0
  2164  0000'                    	ds	1
  2165  0001'                    sendDataToMaster@low:
  2166                           
  2167                           ; 1 bytes @ 0x1
  2168  0001'                    	ds	1
  2169  0002'                    ??_main:
  2170                           
  2171                           ; 1 bytes @ 0x2
  2172  0002'                    	ds	2
  2173                           
  2174                           	psect	maintext
  2175  0000'                    __pmaintext:	
  2176 ;;
  2177 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2178 ;;
  2179 ;; *************** function _main *****************
  2180 ;; Defined at:
  2181 ;;		line 119 in file "main.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : B1F/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2195 ;;      Params:         0       0       0       0
  2196 ;;      Locals:         0       0       0       0
  2197 ;;      Temps:          0       2       0       0
  2198 ;;      Totals:         0       2       0       0
  2199 ;;Total ram usage:        2 bytes
  2200 ;; Hardware stack levels required when called: 8
  2201 ;; This function calls:
  2202 ;;		_ADC_GetConversion
  2203 ;;		_I2C_Read
  2204 ;;		_I2C_Write
  2205 ;;		_SYSTEM_Initialize
  2206 ;;		_sendAllDataToMaster
  2207 ;;		_sendDataToMaster
  2208 ;; This function is called by:
  2209 ;;		Startup code after reset
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213  0000'                    _main:	
  2214                           ;psect for function _main
  2215                           
  2216  0000'                    l2177:	
  2217                           ;incstack = 0
  2218                           ; Regs used in _main: [allreg]
  2219                           
  2220                           
  2221                           ;main.c: 122:     SYSTEM_Initialize();
  2222  0000' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
  2223  0003'                    l2179:
  2224                           
  2225                           ;main.c: 128:     (INTCONbits.GIE = 1);
  2226  0003' 178B               	bsf	11,7	;volatile
  2227  0004'                    l2181:
  2228                           
  2229                           ;main.c: 131:     (INTCONbits.PEIE = 1);
  2230  0004' 170B               	bsf	11,6	;volatile
  2231  0005'                    l2183:
  2232                           
  2233                           ;main.c: 140:     WDTCONbits.SWDTEN = 0;
  2234  0005' 0021               	movlb	1	; select bank1
  2235  0006' 1017               	bcf	23,0	;volatile
  2236  0007'                    l2185:
  2237                           
  2238                           ;main.c: 142:     {;main.c: 143:         if(WDTCONbits.SWDTEN == 1){
  2239  0007' 0021               	movlb	1	; select bank1
  2240  0008' 1C17               	btfss	23,0	;volatile
  2241  0009' 2800'              	goto	u1011
  2242  000A' 2800'              	goto	u1010
  2243  000B'                    u1011:
  2244  000B' 2800'              	goto	l2189
  2245  000C'                    u1010:
  2246  000C'                    l2187:
  2247  000C' 0063               	sleep	;# 
  2248  000D'                    l2189:
  2249                           
  2250                           ;main.c: 146:         LATC = 0x01;
  2251  000D' 3001               	movlw	1
  2252  000E' 0022               	movlb	2	; select bank2
  2253  000F' 008E               	movwf	14	;volatile
  2254  0010'                    l2191:
  2255                           
  2256                           ;main.c: 147:         I2C_Command = I2C_Read();
  2257  0010' 3180' 2000' 3180'  	fcall	_I2C_Read
  2258  0013' 0020               	movlb	0	; select bank0
  2259  0014' 009E'              	movwf	_I2C_Command
  2260                           
  2261                           ;main.c: 148:         switch(I2C_Command){
  2262  0015' 2800'              	goto	l2213
  2263  0016'                    l2193:
  2264                           
  2265                           ;main.c: 152:                 sendDataToMaster(memory.TSNS1);
  2266  0016' 0804'              	movf	_memory+4,w
  2267  0017' 0086'              	movwf	sendDataToMaster@toSend+1
  2268  0018' 0803'              	movf	_memory+3,w
  2269  0019' 0085'              	movwf	sendDataToMaster@toSend
  2270  001A' 3180' 2000' 3180'  	fcall	_sendDataToMaster
  2271                           
  2272                           ;main.c: 153:                 break;
  2273  001D' 2800'              	goto	l2215
  2274  001E'                    l2195:
  2275                           
  2276                           ;main.c: 155:                 sendDataToMaster(memory.TSNS2);
  2277  001E' 0806'              	movf	_memory+6,w
  2278  001F' 0086'              	movwf	sendDataToMaster@toSend+1
  2279  0020' 0805'              	movf	_memory+5,w
  2280  0021' 0085'              	movwf	sendDataToMaster@toSend
  2281  0022' 3180' 2000' 3180'  	fcall	_sendDataToMaster
  2282                           
  2283                           ;main.c: 156:                 break;
  2284  0025' 2800'              	goto	l2215
  2285  0026'                    l2197:
  2286                           
  2287                           ;main.c: 158:                 sendDataToMaster(memory.TSNS3);
  2288  0026' 0808'              	movf	_memory+8,w
  2289  0027' 0086'              	movwf	sendDataToMaster@toSend+1
  2290  0028' 0807'              	movf	_memory+7,w
  2291  0029' 0085'              	movwf	sendDataToMaster@toSend
  2292  002A' 3180' 2000' 3180'  	fcall	_sendDataToMaster
  2293                           
  2294                           ;main.c: 159:                 break;
  2295  002D' 2800'              	goto	l2215
  2296  002E'                    l2199:
  2297                           
  2298                           ;main.c: 161:                 sendDataToMaster(memory.TSNS4);
  2299  002E' 080A'              	movf	_memory+10,w
  2300  002F' 0086'              	movwf	sendDataToMaster@toSend+1
  2301  0030' 0809'              	movf	_memory+9,w
  2302  0031' 0085'              	movwf	sendDataToMaster@toSend
  2303  0032' 3180' 2000' 3180'  	fcall	_sendDataToMaster
  2304                           
  2305                           ;main.c: 162:                 break;
  2306  0035' 2800'              	goto	l2215
  2307  0036'                    l2201:
  2308                           
  2309                           ;main.c: 164:                 sendDataToMaster(memory.TSNS5);
  2310  0036' 080C'              	movf	_memory+12,w
  2311  0037' 0086'              	movwf	sendDataToMaster@toSend+1
  2312  0038' 080B'              	movf	_memory+11,w
  2313  0039' 0085'              	movwf	sendDataToMaster@toSend
  2314  003A' 3180' 2000' 3180'  	fcall	_sendDataToMaster
  2315                           
  2316                           ;main.c: 165:                 break;
  2317  003D' 2800'              	goto	l2215
  2318  003E'                    l2203:
  2319                           
  2320                           ;main.c: 167:                 sendDataToMaster(memory.VSNS);
  2321  003E' 0802'              	movf	_memory+2,w
  2322  003F' 0086'              	movwf	sendDataToMaster@toSend+1
  2323  0040' 0801'              	movf	_memory+1,w
  2324  0041' 0085'              	movwf	sendDataToMaster@toSend
  2325  0042' 3180' 2000' 3180'  	fcall	_sendDataToMaster
  2326                           
  2327                           ;main.c: 168:                 break;
  2328  0045' 2800'              	goto	l2215
  2329  0046'                    l2205:
  2330                           
  2331                           ;main.c: 170:                 I2C_Write(memory.status);
  2332  0046' 0800'              	movf	_memory,w
  2333  0047' 3180' 2000' 3180'  	fcall	_I2C_Write
  2334                           
  2335                           ;main.c: 171:                 break;
  2336  004A' 2800'              	goto	l2215
  2337  004B'                    l61:	
  2338                           ;main.c: 172:             case Enable_Sleep_WDT:
  2339                           
  2340                           
  2341                           ;main.c: 173:                 WDTCONbits.SWDTEN = 1;
  2342  004B' 0021               	movlb	1	; select bank1
  2343  004C' 1417               	bsf	23,0	;volatile
  2344                           
  2345                           ;main.c: 174:                 break;
  2346  004D' 2800'              	goto	l2215
  2347  004E'                    l62:	
  2348                           ;main.c: 175:             case Disable_Sleep_WDT:
  2349                           
  2350                           
  2351                           ;main.c: 176:                 WDTCONbits.SWDTEN = 0;
  2352  004E' 0021               	movlb	1	; select bank1
  2353  004F' 1017               	bcf	23,0	;volatile
  2354                           
  2355                           ;main.c: 177:                 break;
  2356  0050' 2800'              	goto	l2215
  2357  0051'                    l63:	
  2358                           ;main.c: 178:             case Start_Balancing:
  2359                           
  2360                           
  2361                           ;main.c: 179:                 currentlyBalancing = 1;
  2362  0051' 019D'              	clrf	_currentlyBalancing
  2363  0052' 0A9D'              	incf	_currentlyBalancing,f
  2364                           
  2365                           ;main.c: 180:                 break;
  2366  0053' 2800'              	goto	l2215
  2367  0054'                    l2207:
  2368                           
  2369                           ;main.c: 182:                 currentlyBalancing = 0;
  2370  0054' 019D'              	clrf	_currentlyBalancing
  2371                           
  2372                           ;main.c: 183:                 break;
  2373  0055' 2800'              	goto	l2215
  2374  0056'                    l2209:
  2375                           
  2376                           ;main.c: 185:                 LATC = 0x00;
  2377  0056' 0022               	movlb	2	; select bank2
  2378  0057' 018E               	clrf	14	;volatile
  2379                           
  2380                           ;main.c: 186:                 break;
  2381  0058' 2800'              	goto	l2215
  2382  0059'                    l2211:
  2383                           
  2384                           ;main.c: 188:                 sendAllDataToMaster();
  2385  0059' 3180' 2000' 3180'  	fcall	_sendAllDataToMaster
  2386                           
  2387                           ;main.c: 189:                 break;
  2388  005C' 2800'              	goto	l2215
  2389  005D'                    l67:	
  2390                           ;main.c: 190:             case Controller_Restart:
  2391                           
  2392  005D' 0001               	reset	;# 
  2393                           
  2394                           ;main.c: 192:         }
  2395  005E' 2800'              	goto	l2215
  2396  005F'                    l2213:
  2397  005F' 081E'              	movf	_I2C_Command,w
  2398  0060' 0082'              	movwf	??_main
  2399  0061' 0183'              	clrf	??_main+1
  2400                           
  2401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2402                           ; Switch size 1, requested type "simple"
  2403                           ; Number of cases is 1, Range of values is 0 to 0
  2404                           ; switch strategies available:
  2405                           ; Name         Instructions Cycles
  2406                           ; simple_byte            4     3 (average)
  2407                           ; direct_byte            8     6 (fixed)
  2408                           ; jumptable            260     6 (fixed)
  2409                           ;	Chosen strategy is simple_byte
  2410  0062' 0803'              	movf	??_main+1,w
  2411  0063' 3A00               	xorlw	0	; case 0
  2412  0064' 1903               	skipnz
  2413  0065' 2800'              	goto	l2353
  2414  0066' 2800'              	goto	l2215
  2415  0067'                    l2353:
  2416                           
  2417                           ; Switch size 1, requested type "simple"
  2418                           ; Number of cases is 15, Range of values is 0 to 14
  2419                           ; switch strategies available:
  2420                           ; Name         Instructions Cycles
  2421                           ; direct_byte           36     6 (fixed)
  2422                           ; simple_byte           46    24 (average)
  2423                           ; jumptable            260     6 (fixed)
  2424                           ;	Chosen strategy is simple_byte
  2425  0067' 0802'              	movf	??_main,w
  2426  0068' 3A00               	xorlw	0	; case 0
  2427  0069' 1903               	skipnz
  2428  006A' 2800'              	goto	l2215
  2429  006B' 3A01               	xorlw	1	; case 1
  2430  006C' 1903               	skipnz
  2431  006D' 2800'              	goto	l2193
  2432  006E' 3A03               	xorlw	3	; case 2
  2433  006F' 1903               	skipnz
  2434  0070' 2800'              	goto	l2195
  2435  0071' 3A01               	xorlw	1	; case 3
  2436  0072' 1903               	skipnz
  2437  0073' 2800'              	goto	l2197
  2438  0074' 3A07               	xorlw	7	; case 4
  2439  0075' 1903               	skipnz
  2440  0076' 2800'              	goto	l2199
  2441  0077' 3A01               	xorlw	1	; case 5
  2442  0078' 1903               	skipnz
  2443  0079' 2800'              	goto	l2201
  2444  007A' 3A03               	xorlw	3	; case 6
  2445  007B' 1903               	skipnz
  2446  007C' 2800'              	goto	l2203
  2447  007D' 3A01               	xorlw	1	; case 7
  2448  007E' 1903               	skipnz
  2449  007F' 2800'              	goto	l2205
  2450  0080' 3A0F               	xorlw	15	; case 8
  2451  0081' 1903               	skipnz
  2452  0082' 2800'              	goto	l61
  2453  0083' 3A01               	xorlw	1	; case 9
  2454  0084' 1903               	skipnz
  2455  0085' 2800'              	goto	l62
  2456  0086' 3A03               	xorlw	3	; case 10
  2457  0087' 1903               	skipnz
  2458  0088' 2800'              	goto	l63
  2459  0089' 3A01               	xorlw	1	; case 11
  2460  008A' 1903               	skipnz
  2461  008B' 2800'              	goto	l2207
  2462  008C' 3A07               	xorlw	7	; case 12
  2463  008D' 1903               	skipnz
  2464  008E' 2800'              	goto	l2209
  2465  008F' 3A01               	xorlw	1	; case 13
  2466  0090' 1903               	skipnz
  2467  0091' 2800'              	goto	l2211
  2468  0092' 3A03               	xorlw	3	; case 14
  2469  0093' 1903               	skipnz
  2470  0094' 2800'              	goto	l67
  2471  0095' 2800'              	goto	l2215
  2472  0096'                    l2215:
  2473                           
  2474                           ;main.c: 194:         selectedReference = TSNS1;
  2475  0096' 3002               	movlw	2
  2476  0097' 0082'              	movwf	_selectedReference
  2477  0098'                    l2217:
  2478                           
  2479                           ;main.c: 195:         memory.TSNS1 = ADC_GetConversion(selectedReference);
  2480  0098' 3002               	movlw	2
  2481  0099' 3180' 2000' 3180'  	fcall	_ADC_GetConversion
  2482  009C' 0804'              	movf	?_ADC_GetConversion+1,w
  2483  009D' 0020               	movlb	0	; select bank0
  2484  009E' 0084'              	movwf	_memory+4
  2485  009F' 0803'              	movf	?_ADC_GetConversion,w
  2486  00A0' 0083'              	movwf	_memory+3
  2487  00A1'                    l2219:
  2488                           
  2489                           ;main.c: 196:         selectedReference = TSNS2;
  2490  00A1' 3003               	movlw	3
  2491  00A2' 0082'              	movwf	_selectedReference
  2492                           
  2493                           ;main.c: 197:         memory.TSNS2 = ADC_GetConversion(selectedReference);
  2494  00A3' 3003               	movlw	3
  2495  00A4' 3180' 2000' 3180'  	fcall	_ADC_GetConversion
  2496  00A7' 0804'              	movf	?_ADC_GetConversion+1,w
  2497  00A8' 0020               	movlb	0	; select bank0
  2498  00A9' 0086'              	movwf	_memory+6
  2499  00AA' 0803'              	movf	?_ADC_GetConversion,w
  2500  00AB' 0085'              	movwf	_memory+5
  2501  00AC'                    l2221:
  2502                           
  2503                           ;main.c: 198:         selectedReference = TSNS3;
  2504  00AC' 3007               	movlw	7
  2505  00AD' 0082'              	movwf	_selectedReference
  2506  00AE'                    l2223:
  2507                           
  2508                           ;main.c: 199:         memory.TSNS3 = ADC_GetConversion(selectedReference);
  2509  00AE' 3007               	movlw	7
  2510  00AF' 3180' 2000' 3180'  	fcall	_ADC_GetConversion
  2511  00B2' 0804'              	movf	?_ADC_GetConversion+1,w
  2512  00B3' 0020               	movlb	0	; select bank0
  2513  00B4' 0088'              	movwf	_memory+8
  2514  00B5' 0803'              	movf	?_ADC_GetConversion,w
  2515  00B6' 0087'              	movwf	_memory+7
  2516                           
  2517                           ;main.c: 200:         selectedReference = TSNS4;
  2518  00B7' 3008               	movlw	8
  2519  00B8' 0082'              	movwf	_selectedReference
  2520  00B9'                    l2225:
  2521                           
  2522                           ;main.c: 201:         memory.TSNS4 = ADC_GetConversion(selectedReference);
  2523  00B9' 3008               	movlw	8
  2524  00BA' 3180' 2000' 3180'  	fcall	_ADC_GetConversion
  2525  00BD' 0804'              	movf	?_ADC_GetConversion+1,w
  2526  00BE' 0020               	movlb	0	; select bank0
  2527  00BF' 008A'              	movwf	_memory+10
  2528  00C0' 0803'              	movf	?_ADC_GetConversion,w
  2529  00C1' 0089'              	movwf	_memory+9
  2530  00C2'                    l2227:
  2531                           
  2532                           ;main.c: 202:         selectedReference = TSNS5;
  2533  00C2' 3009               	movlw	9
  2534  00C3' 0082'              	movwf	_selectedReference
  2535                           
  2536                           ;main.c: 203:         memory.TSNS5 = ADC_GetConversion(selectedReference);
  2537  00C4' 3009               	movlw	9
  2538  00C5' 3180' 2000' 3180'  	fcall	_ADC_GetConversion
  2539  00C8' 0804'              	movf	?_ADC_GetConversion+1,w
  2540  00C9' 0020               	movlb	0	; select bank0
  2541  00CA' 008C'              	movwf	_memory+12
  2542  00CB' 0803'              	movf	?_ADC_GetConversion,w
  2543  00CC' 008B'              	movwf	_memory+11
  2544  00CD'                    l2229:
  2545                           
  2546                           ;main.c: 204:         LATC = 0x00;
  2547  00CD' 0022               	movlb	2	; select bank2
  2548  00CE' 018E               	clrf	14	;volatile
  2549  00CF' 2800'              	goto	l2185
  2550  00D0' 3180' 2800'        	ljmp	start
  2551  00D2'                    __end_of_main:
  2552                           
  2553                           	psect	text1
  2554  0000'                    __ptext1:	
  2555 ;; *************** function _sendDataToMaster *****************
  2556 ;; Defined at:
  2557 ;;		line 208 in file "main.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  toSend          2    5[COMMON] unsigned short 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  low             1    1[BANK0 ] unsigned char 
  2562 ;;  high            1    0[BANK0 ] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2572 ;;      Params:         2       0       0       0
  2573 ;;      Locals:         0       2       0       0
  2574 ;;      Temps:          0       0       0       0
  2575 ;;      Totals:         2       2       0       0
  2576 ;;Total ram usage:        4 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 7
  2579 ;; This function calls:
  2580 ;;		_I2C_Write
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586  0000'                    _sendDataToMaster:	
  2587                           ;psect for function _sendDataToMaster
  2588                           
  2589  0000'                    l2163:	
  2590                           ;incstack = 0
  2591                           ; Regs used in _sendDataToMaster: [wreg+status,2+status,0+pclath+cstack]
  2592                           
  2593                           
  2594                           ;main.c: 209:     uint8_t high = (uint8_t) (toSend >> 8) & 0x00FF;
  2595  0000' 0806'              	movf	sendDataToMaster@toSend+1,w
  2596  0001' 0020               	movlb	0	; select bank0
  2597  0002' 0080'              	movwf	sendDataToMaster@high
  2598  0003'                    l2165:
  2599                           
  2600                           ;main.c: 210:     uint8_t low = (uint8_t) (toSend >> 0) & 0x00FF;
  2601  0003' 0805'              	movf	sendDataToMaster@toSend,w
  2602  0004' 0081'              	movwf	sendDataToMaster@low
  2603  0005'                    l2167:
  2604                           
  2605                           ;main.c: 211:     I2C_Write(high);
  2606  0005' 0800'              	movf	sendDataToMaster@high,w
  2607  0006' 3180' 2000' 3180'  	fcall	_I2C_Write
  2608  0009'                    l73:	
  2609                           ;main.c: 212:     while(SSP1STATbits.BF && SSP1CON2bits.ACKSTAT == 1){ }
  2610                           
  2611  0009' 0024               	movlb	4	; select bank4
  2612  000A' 1C14               	btfss	20,0	;volatile
  2613  000B' 2800'              	goto	u991
  2614  000C' 2800'              	goto	u990
  2615  000D'                    u991:
  2616  000D' 2800'              	goto	l2171
  2617  000E'                    u990:
  2618  000E'                    l2169:
  2619  000E' 1B16               	btfsc	22,6	;volatile
  2620  000F' 2800'              	goto	u1001
  2621  0010' 2800'              	goto	u1000
  2622  0011'                    u1001:
  2623  0011' 2800'              	goto	l73
  2624  0012'                    u1000:
  2625  0012'                    l2171:
  2626                           
  2627                           ;main.c: 213:     I2C_Write(low);
  2628  0012' 0020               	movlb	0	; select bank0
  2629  0013' 0801'              	movf	sendDataToMaster@low,w
  2630  0014' 3180' 2000' 3180'  	fcall	_I2C_Write
  2631  0017'                    l2173:
  2632                           
  2633                           ;main.c: 214:     I2C_Command = No_Command;
  2634  0017' 0020               	movlb	0	; select bank0
  2635  0018' 019E'              	clrf	_I2C_Command
  2636  0019'                    l78:
  2637  0019' 0008               	return
  2638  001A'                    __end_of_sendDataToMaster:
  2639                           
  2640                           	psect	text2
  2641  0000'                    __ptext2:	
  2642 ;; *************** function _I2C_Write *****************
  2643 ;; Defined at:
  2644 ;;		line 140 in file "mcc_generated_files/i2c_slave.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  data            1    wreg     unsigned char 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  data            1    4[COMMON] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0, pclath, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2658 ;;      Params:         0       0       0       0
  2659 ;;      Locals:         1       0       0       0
  2660 ;;      Temps:          0       0       0       0
  2661 ;;      Totals:         1       0       0       0
  2662 ;;Total ram usage:        1 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 6
  2665 ;; This function calls:
  2666 ;;		_I2C_SlaveSendTxData
  2667 ;; This function is called by:
  2668 ;;		_main
  2669 ;;		_sendDataToMaster
  2670 ;;		__sendAllDatatoMaster
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674  0000'                    _I2C_Write:	
  2675                           ;psect for function _I2C_Write
  2676                           
  2677                           
  2678                           ;incstack = 0
  2679                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  2680                           ;I2C_Write@data stored from wreg
  2681  0000' 0084'              	movwf	I2C_Write@data
  2682  0001'                    l2161:
  2683                           
  2684                           ;mcc_generated_files/i2c_slave.c: 140: void I2C_Write(uint8_t data);mcc_generated_files/
      +                          i2c_slave.c: 141: {;mcc_generated_files/i2c_slave.c: 142:     I2C_SlaveSendTxData(data);
  2685  0001' 0804'              	movf	I2C_Write@data,w
  2686  0002' 3180' 2000' 3180'  	fcall	_I2C_SlaveSendTxData
  2687  0005'                    l480:
  2688  0005' 0008               	return
  2689  0006'                    __end_of_I2C_Write:
  2690                           
  2691                           	psect	text3
  2692  0000'                    __ptext3:	
  2693 ;; *************** function _I2C_SlaveSendTxData *****************
  2694 ;; Defined at:
  2695 ;;		line 392 in file "mcc_generated_files/i2c_slave.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  data            1    wreg     unsigned char 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  data            1    3[COMMON] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2709 ;;      Params:         0       0       0       0
  2710 ;;      Locals:         1       0       0       0
  2711 ;;      Temps:          0       0       0       0
  2712 ;;      Totals:         1       0       0       0
  2713 ;;Total ram usage:        1 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; Hardware stack levels required when called: 5
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_I2C_Write
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723  0000'                    _I2C_SlaveSendTxData:	
  2724                           ;psect for function _I2C_SlaveSendTxData
  2725                           
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in _I2C_SlaveSendTxData: [wreg]
  2729                           ;I2C_SlaveSendTxData@data stored from wreg
  2730  0000' 0083'              	movwf	I2C_SlaveSendTxData@data
  2731  0001'                    l2159:
  2732                           
  2733                           ;mcc_generated_files/i2c_slave.c: 392: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 393: {;mcc_generated_files/i2c_sla
      +                          ve.c: 394:     SSP1BUF = data;
  2734  0001' 0803'              	movf	I2C_SlaveSendTxData@data,w
  2735  0002' 0024               	movlb	4	; select bank4
  2736  0003' 0091               	movwf	17	;volatile
  2737  0004'                    l610:
  2738  0004' 0008               	return
  2739  0005'                    __end_of_I2C_SlaveSendTxData:
  2740                           
  2741                           	psect	text4
  2742  0000'                    __ptext4:	
  2743 ;; *************** function _SYSTEM_Initialize *****************
  2744 ;; Defined at:
  2745 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0, pclath, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2759 ;;      Params:         0       0       0       0
  2760 ;;      Locals:         0       0       0       0
  2761 ;;      Temps:          0       0       0       0
  2762 ;;      Totals:         0       0       0       0
  2763 ;;Total ram usage:        0 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; Hardware stack levels required when called: 7
  2766 ;; This function calls:
  2767 ;;		_ADC_Initialize
  2768 ;;		_FVR_Initialize
  2769 ;;		_I2C_Initialize
  2770 ;;		_OSCILLATOR_Initialize
  2771 ;;		_PIN_MANAGER_Initialize
  2772 ;;		_TMR1_Initialize
  2773 ;;		_TMR2_Initialize
  2774 ;;		_WDT_Initialize
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780  0000'                    _SYSTEM_Initialize:	
  2781                           ;psect for function _SYSTEM_Initialize
  2782                           
  2783  0000'                    l1853:	
  2784                           ;incstack = 0
  2785                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2786                           
  2787                           
  2788                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2789  0000' 3180' 2000' 3180'  	fcall	_I2C_Initialize
  2790                           
  2791                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2792  0003' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
  2793                           
  2794                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2795  0006' 3180' 2000' 3180'  	fcall	_OSCILLATOR_Initialize
  2796                           
  2797                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2798  0009' 3180' 2000' 3180'  	fcall	_WDT_Initialize
  2799                           
  2800                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  2801  000C' 3180' 2000' 3180'  	fcall	_FVR_Initialize
  2802                           
  2803                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  2804  000F' 3180' 2000' 3180'  	fcall	_ADC_Initialize
  2805                           
  2806                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  2807  0012' 3180' 2000' 3180'  	fcall	_TMR2_Initialize
  2808                           
  2809                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  2810  0015' 3180' 2000' 3180'  	fcall	_TMR1_Initialize
  2811  0018'                    l178:
  2812  0018' 0008               	return
  2813  0019'                    __end_of_SYSTEM_Initialize:
  2814                           
  2815                           	psect	text5
  2816  0000'                    __ptext5:	
  2817 ;; *************** function _WDT_Initialize *****************
  2818 ;; Defined at:
  2819 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2833 ;;      Params:         0       0       0       0
  2834 ;;      Locals:         0       0       0       0
  2835 ;;      Temps:          0       0       0       0
  2836 ;;      Totals:         0       0       0       0
  2837 ;;Total ram usage:        0 bytes
  2838 ;; Hardware stack levels used: 1
  2839 ;; Hardware stack levels required when called: 5
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_SYSTEM_Initialize
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847  0000'                    _WDT_Initialize:	
  2848                           ;psect for function _WDT_Initialize
  2849                           
  2850  0000'                    l1775:	
  2851                           ;incstack = 0
  2852                           ; Regs used in _WDT_Initialize: [wreg]
  2853                           
  2854                           
  2855                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x1A;
  2856  0000' 301A               	movlw	26
  2857  0001' 0021               	movlb	1	; select bank1
  2858  0002' 0097               	movwf	23	;volatile
  2859  0003'                    l184:
  2860  0003' 0008               	return
  2861  0004'                    __end_of_WDT_Initialize:
  2862                           
  2863                           	psect	text6
  2864  0000'                    __ptext6:	
  2865 ;; *************** function _TMR2_Initialize *****************
  2866 ;; Defined at:
  2867 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2881 ;;      Params:         0       0       0       0
  2882 ;;      Locals:         0       0       0       0
  2883 ;;      Temps:          0       0       0       0
  2884 ;;      Totals:         0       0       0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 5
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_SYSTEM_Initialize
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895  0000'                    _TMR2_Initialize:	
  2896                           ;psect for function _TMR2_Initialize
  2897                           
  2898  0000'                    l1785:	
  2899                           ;incstack = 0
  2900                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  2901                           
  2902                           
  2903                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xF9;
  2904  0000' 30F9               	movlw	249
  2905  0001' 0020               	movlb	0	; select bank0
  2906  0002' 009B               	movwf	27	;volatile
  2907  0003'                    l1787:
  2908                           
  2909                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  2910  0003' 019A               	clrf	26	;volatile
  2911  0004'                    l1789:
  2912                           
  2913                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  2914  0004' 1091               	bcf	17,1	;volatile
  2915  0005'                    l1791:
  2916                           
  2917                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x7C;
  2918  0005' 307C               	movlw	124
  2919  0006' 009C               	movwf	28	;volatile
  2920  0007'                    l638:
  2921  0007' 0008               	return
  2922  0008'                    __end_of_TMR2_Initialize:
  2923                           
  2924                           	psect	text7
  2925  0000'                    __ptext7:	
  2926 ;; *************** function _TMR1_Initialize *****************
  2927 ;; Defined at:
  2928 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0, pclath, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2942 ;;      Params:         0       0       0       0
  2943 ;;      Locals:         0       0       0       0
  2944 ;;      Temps:          0       0       0       0
  2945 ;;      Totals:         0       0       0       0
  2946 ;;Total ram usage:        0 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; Hardware stack levels required when called: 6
  2949 ;; This function calls:
  2950 ;;		_TMR1_SetInterruptHandler
  2951 ;; This function is called by:
  2952 ;;		_SYSTEM_Initialize
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956  0000'                    _TMR1_Initialize:	
  2957                           ;psect for function _TMR1_Initialize
  2958                           
  2959  0000'                    l1793:	
  2960                           ;incstack = 0
  2961                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2962                           
  2963                           
  2964                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x01;
  2965  0000' 3001               	movlw	1
  2966  0001' 0020               	movlb	0	; select bank0
  2967  0002' 0099               	movwf	25	;volatile
  2968                           
  2969                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xC3;
  2970  0003' 30C3               	movlw	195
  2971  0004' 0097               	movwf	23	;volatile
  2972                           
  2973                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x74;
  2974  0005' 3074               	movlw	116
  2975  0006' 0096               	movwf	22	;volatile
  2976  0007'                    l1795:
  2977                           
  2978                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  2979  0007' 1011               	bcf	17,0	;volatile
  2980                           
  2981                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2982  0008' 0817               	movf	23,w	;volatile
  2983  0009' 0083'              	movwf	_timer1ReloadVal+1	;volatile
  2984  000A' 0816               	movf	22,w	;volatile
  2985  000B' 0082'              	movwf	_timer1ReloadVal	;volatile
  2986  000C'                    l1797:
  2987                           
  2988                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  2989  000C' 0021               	movlb	1	; select bank1
  2990  000D' 1411               	bsf	17,0	;volatile
  2991  000E'                    l1799:
  2992                           
  2993                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  2994  000E' 3000'              	movlw	low _TMR1_DefaultInterruptHandler
  2995  000F' 0083'              	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2996  0010' 3000'              	movlw	high _TMR1_DefaultInterruptHandler
  2997  0011' 0084'              	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2998  0012' 3180' 2000' 3180'  	fcall	_TMR1_SetInterruptHandler
  2999  0015'                    l1801:
  3000                           
  3001                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0xC4;
  3002  0015' 30C4               	movlw	196
  3003  0016' 0020               	movlb	0	; select bank0
  3004  0017' 0098               	movwf	24	;volatile
  3005  0018'                    l280:
  3006  0018' 0008               	return
  3007  0019'                    __end_of_TMR1_Initialize:
  3008                           
  3009                           	psect	text8
  3010  0000'                    __ptext8:	
  3011 ;; *************** function _TMR1_SetInterruptHandler *****************
  3012 ;; Defined at:
  3013 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  3016 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3028 ;;      Params:         2       0       0       0
  3029 ;;      Locals:         0       0       0       0
  3030 ;;      Temps:          0       0       0       0
  3031 ;;      Totals:         2       0       0       0
  3032 ;;Total ram usage:        2 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 5
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_TMR1_Initialize
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042  0000'                    _TMR1_SetInterruptHandler:	
  3043                           ;psect for function _TMR1_SetInterruptHandler
  3044                           
  3045  0000'                    l1735:	
  3046                           ;incstack = 0
  3047                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3048                           
  3049                           
  3050                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  3051  0000' 0804'              	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  3052  0001' 0020               	movlb	0	; select bank0
  3053  0002' 0081'              	movwf	_TMR1_InterruptHandler+1
  3054  0003' 0803'              	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  3055  0004' 0080'              	movwf	_TMR1_InterruptHandler
  3056  0005'                    l310:
  3057  0005' 0008               	return
  3058  0006'                    __end_of_TMR1_SetInterruptHandler:
  3059                           
  3060                           	psect	text9
  3061  0000'                    __ptext9:	
  3062 ;; *************** function _PIN_MANAGER_Initialize *****************
  3063 ;; Defined at:
  3064 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3078 ;;      Params:         0       0       0       0
  3079 ;;      Locals:         0       0       0       0
  3080 ;;      Temps:          0       0       0       0
  3081 ;;      Totals:         0       0       0       0
  3082 ;;Total ram usage:        0 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; Hardware stack levels required when called: 5
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_SYSTEM_Initialize
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092  0000'                    _PIN_MANAGER_Initialize:	
  3093                           ;psect for function _PIN_MANAGER_Initialize
  3094                           
  3095  0000'                    l1755:	
  3096                           ;incstack = 0
  3097                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3098                           
  3099                           
  3100                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3101  0000' 0022               	movlb	2	; select bank2
  3102  0001' 018C               	clrf	12	;volatile
  3103                           
  3104                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3105  0002' 018D               	clrf	13	;volatile
  3106                           
  3107                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3108  0003' 018E               	clrf	14	;volatile
  3109  0004'                    l1757:
  3110                           
  3111                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  3112  0004' 303F               	movlw	63
  3113  0005' 0021               	movlb	1	; select bank1
  3114  0006' 008C               	movwf	12	;volatile
  3115  0007'                    l1759:
  3116                           
  3117                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  3118  0007' 30F0               	movlw	240
  3119  0008' 008D               	movwf	13	;volatile
  3120  0009'                    l1761:
  3121                           
  3122                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xF8;
  3123  0009' 30F8               	movlw	248
  3124  000A' 008E               	movwf	14	;volatile
  3125  000B'                    l1763:
  3126                           
  3127                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  3128  000B' 30CF               	movlw	207
  3129  000C' 0023               	movlb	3	; select bank3
  3130  000D' 008E               	movwf	14	;volatile
  3131  000E'                    l1765:
  3132                           
  3133                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x20;
  3134  000E' 3020               	movlw	32
  3135  000F' 008D               	movwf	13	;volatile
  3136  0010'                    l1767:
  3137                           
  3138                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  3139  0010' 3017               	movlw	23
  3140  0011' 008C               	movwf	12	;volatile
  3141                           
  3142                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3143  0012' 0024               	movlb	4	; select bank4
  3144  0013' 018D               	clrf	13	;volatile
  3145                           
  3146                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3147  0014' 018C               	clrf	12	;volatile
  3148  0015'                    l1769:
  3149                           
  3150                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  3151  0015' 0021               	movlb	1	; select bank1
  3152  0016' 1795               	bsf	21,7	;volatile
  3153                           
  3154                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  3155  0017' 0022               	movlb	2	; select bank2
  3156  0018' 019D               	clrf	29	;volatile
  3157  0019'                    l213:
  3158  0019' 0008               	return
  3159  001A'                    __end_of_PIN_MANAGER_Initialize:
  3160                           
  3161                           	psect	text10
  3162  0000'                    __ptext10:	
  3163 ;; *************** function _OSCILLATOR_Initialize *****************
  3164 ;; Defined at:
  3165 ;;		line 63 in file "mcc_generated_files/mcc.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3179 ;;      Params:         0       0       0       0
  3180 ;;      Locals:         0       0       0       0
  3181 ;;      Temps:          0       0       0       0
  3182 ;;      Totals:         0       0       0       0
  3183 ;;Total ram usage:        0 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; Hardware stack levels required when called: 5
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_SYSTEM_Initialize
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193  0000'                    _OSCILLATOR_Initialize:	
  3194                           ;psect for function _OSCILLATOR_Initialize
  3195                           
  3196  0000'                    l1771:	
  3197                           ;incstack = 0
  3198                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3199                           
  3200                           
  3201                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x7A;
  3202  0000' 307A               	movlw	122
  3203  0001' 0021               	movlb	1	; select bank1
  3204  0002' 0099               	movwf	25	;volatile
  3205  0003'                    l1773:
  3206                           
  3207                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3208  0003' 0022               	movlb	2	; select bank2
  3209  0004' 0196               	clrf	22	;volatile
  3210  0005'                    l181:
  3211  0005' 0008               	return
  3212  0006'                    __end_of_OSCILLATOR_Initialize:
  3213                           
  3214                           	psect	text11
  3215  0000'                    __ptext11:	
  3216 ;; *************** function _I2C_Initialize *****************
  3217 ;; Defined at:
  3218 ;;		line 108 in file "mcc_generated_files/i2c_slave.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;		None
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3232 ;;      Params:         0       0       0       0
  3233 ;;      Locals:         0       0       0       0
  3234 ;;      Temps:          1       0       0       0
  3235 ;;      Totals:         1       0       0       0
  3236 ;;Total ram usage:        1 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 5
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_SYSTEM_Initialize
  3243 ;;		_I2C_Enable
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247  0000'                    _I2C_Initialize:	
  3248                           ;psect for function _I2C_Initialize
  3249                           
  3250  0000'                    l1747:	
  3251                           ;incstack = 0
  3252                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0]
  3253                           
  3254                           
  3255                           ;mcc_generated_files/i2c_slave.c: 110:     SSP1STAT = 0x00;
  3256  0000' 0024               	movlb	4	; select bank4
  3257  0001' 0194               	clrf	20	;volatile
  3258  0002'                    l1749:
  3259                           
  3260                           ;mcc_generated_files/i2c_slave.c: 111:     SSP1CON1 |= 0x06;
  3261  0002' 3006               	movlw	6
  3262  0003' 0083'              	movwf	??_I2C_Initialize
  3263  0004' 0803'              	movf	??_I2C_Initialize,w
  3264  0005' 0495               	iorwf	21,f	;volatile
  3265  0006'                    l1751:
  3266                           
  3267                           ;mcc_generated_files/i2c_slave.c: 112:     SSP1CON2 = 0x81;
  3268  0006' 3081               	movlw	129
  3269  0007' 0096               	movwf	22	;volatile
  3270  0008'                    l1753:
  3271                           
  3272                           ;mcc_generated_files/i2c_slave.c: 113:     SSP1CON1bits.SSPEN = 0;
  3273  0008' 1295               	bcf	21,5	;volatile
  3274  0009'                    l468:
  3275  0009' 0008               	return
  3276  000A'                    __end_of_I2C_Initialize:
  3277                           
  3278                           	psect	text12
  3279  0000'                    __ptext12:	
  3280 ;; *************** function _FVR_Initialize *****************
  3281 ;; Defined at:
  3282 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;		None
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      void 
  3289 ;; Registers used:
  3290 ;;		wreg
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3296 ;;      Params:         0       0       0       0
  3297 ;;      Locals:         0       0       0       0
  3298 ;;      Temps:          0       0       0       0
  3299 ;;      Totals:         0       0       0       0
  3300 ;;Total ram usage:        0 bytes
  3301 ;; Hardware stack levels used: 1
  3302 ;; Hardware stack levels required when called: 5
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_SYSTEM_Initialize
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310  0000'                    _FVR_Initialize:	
  3311                           ;psect for function _FVR_Initialize
  3312                           
  3313  0000'                    l1777:	
  3314                           ;incstack = 0
  3315                           ; Regs used in _FVR_Initialize: [wreg]
  3316                           
  3317                           
  3318                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  3319  0000' 3082               	movlw	130
  3320  0001' 0022               	movlb	2	; select bank2
  3321  0002' 0097               	movwf	23	;volatile
  3322  0003'                    l360:
  3323  0003' 0008               	return
  3324  0004'                    __end_of_FVR_Initialize:
  3325                           
  3326                           	psect	text13
  3327  0000'                    __ptext13:	
  3328 ;; *************** function _ADC_Initialize *****************
  3329 ;; Defined at:
  3330 ;;		line 67 in file "mcc_generated_files/adc.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3344 ;;      Params:         0       0       0       0
  3345 ;;      Locals:         0       0       0       0
  3346 ;;      Temps:          0       0       0       0
  3347 ;;      Totals:         0       0       0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 5
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_SYSTEM_Initialize
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358  0000'                    _ADC_Initialize:	
  3359                           ;psect for function _ADC_Initialize
  3360                           
  3361  0000'                    l1779:	
  3362                           ;incstack = 0
  3363                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3364                           
  3365                           
  3366                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD0;
  3367  0000' 30D0               	movlw	208
  3368  0001' 0021               	movlb	1	; select bank1
  3369  0002' 009E               	movwf	30	;volatile
  3370                           
  3371                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x30;
  3372  0003' 3030               	movlw	48
  3373  0004' 009F               	movwf	31	;volatile
  3374  0005'                    l1781:
  3375                           
  3376                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  3377  0005' 019B               	clrf	27	;volatile
  3378  0006'                    l1783:
  3379                           
  3380                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  3381  0006' 019C               	clrf	28	;volatile
  3382                           
  3383                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  3384  0007' 3001               	movlw	1
  3385  0008' 009D               	movwf	29	;volatile
  3386  0009'                    l332:
  3387  0009' 0008               	return
  3388  000A'                    __end_of_ADC_Initialize:
  3389                           
  3390                           	psect	text14
  3391  0000'                    __ptext14:	
  3392 ;; *************** function _I2C_Read *****************
  3393 ;; Defined at:
  3394 ;;		line 135 in file "mcc_generated_files/i2c_slave.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      unsigned char 
  3401 ;; Registers used:
  3402 ;;		wreg, pclath, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3408 ;;      Params:         0       0       0       0
  3409 ;;      Locals:         0       0       0       0
  3410 ;;      Temps:          0       0       0       0
  3411 ;;      Totals:         0       0       0       0
  3412 ;;Total ram usage:        0 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 6
  3415 ;; This function calls:
  3416 ;;		_I2C_SlaveGetRxData
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422  0000'                    _I2C_Read:	
  3423                           ;psect for function _I2C_Read
  3424                           
  3425  0000'                    l1855:	
  3426                           ;incstack = 0
  3427                           ; Regs used in _I2C_Read: [wreg+pclath+cstack]
  3428                           
  3429                           
  3430                           ;mcc_generated_files/i2c_slave.c: 137:    return I2C_SlaveGetRxData();
  3431  0000' 3180' 2000' 3180'  	fcall	_I2C_SlaveGetRxData
  3432  0003'                    l477:
  3433  0003' 0008               	return
  3434  0004'                    __end_of_I2C_Read:
  3435                           
  3436                           	psect	text15
  3437  0000'                    __ptext15:	
  3438 ;; *************** function _I2C_SlaveGetRxData *****************
  3439 ;; Defined at:
  3440 ;;		line 397 in file "mcc_generated_files/i2c_slave.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      unsigned char 
  3447 ;; Registers used:
  3448 ;;		wreg
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3454 ;;      Params:         0       0       0       0
  3455 ;;      Locals:         0       0       0       0
  3456 ;;      Temps:          0       0       0       0
  3457 ;;      Totals:         0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 5
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_I2C_Read
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468  0000'                    _I2C_SlaveGetRxData:	
  3469                           ;psect for function _I2C_SlaveGetRxData
  3470                           
  3471  0000'                    l1817:	
  3472                           ;incstack = 0
  3473                           ; Regs used in _I2C_SlaveGetRxData: [wreg]
  3474                           
  3475                           
  3476                           ;mcc_generated_files/i2c_slave.c: 399:     return SSP1BUF;
  3477  0000' 0024               	movlb	4	; select bank4
  3478  0001' 0811               	movf	17,w	;volatile
  3479  0002'                    l613:
  3480  0002' 0008               	return
  3481  0003'                    __end_of_I2C_SlaveGetRxData:
  3482                           
  3483                           	psect	text16
  3484  0000'                    __ptext16:	
  3485 ;; *************** function _ADC_GetConversion *****************
  3486 ;; Defined at:
  3487 ;;		line 115 in file "mcc_generated_files/adc.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  channel         1    wreg     enum E3500
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  channel         1    6[COMMON] enum E3500
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  2    3[COMMON] unsigned short 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3501 ;;      Params:         2       0       0       0
  3502 ;;      Locals:         1       0       0       0
  3503 ;;      Temps:          1       0       0       0
  3504 ;;      Totals:         4       0       0       0
  3505 ;;Total ram usage:        4 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 5
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_main
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515  0000'                    _ADC_GetConversion:	
  3516                           ;psect for function _ADC_GetConversion
  3517                           
  3518                           
  3519                           ;incstack = 0
  3520                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3521                           ;ADC_GetConversion@channel stored from wreg
  3522  0000' 0086'              	movwf	ADC_GetConversion@channel
  3523  0001'                    l1873:
  3524                           
  3525                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  3526  0001' 0806'              	movf	ADC_GetConversion@channel,w
  3527  0002' 0085'              	movwf	??_ADC_GetConversion
  3528  0003' 0D85'              	rlf	??_ADC_GetConversion,f
  3529  0004' 0D85'              	rlf	??_ADC_GetConversion,f
  3530  0005' 0021               	movlb	1	; select bank1
  3531  0006' 081D               	movf	29,w	;volatile
  3532  0007' 0605'              	xorwf	??_ADC_GetConversion,w
  3533  0008' 3983               	andlw	-125
  3534  0009' 0605'              	xorwf	??_ADC_GetConversion,w
  3535  000A' 009D               	movwf	29	;volatile
  3536  000B'                    l1875:
  3537                           
  3538                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  3539  000B' 141D               	bsf	29,0	;volatile
  3540  000C'                    l1877:
  3541                           
  3542                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3543  000C' 3006               	movlw	6
  3544  000D'                    u1267:
  3545  000D' 0B89               	decfsz	9,f
  3546  000E' 2800'              	goto	u1267
  3547  000F' 3200               	nop2
  3548  0010'                    l1879:
  3549                           
  3550                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GO_nDONE = 1;
  3551  0010' 0021               	movlb	1	; select bank1
  3552  0011' 149D               	bsf	29,1	;volatile
  3553  0012'                    l347:	
  3554                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  3555                           
  3556                           
  3557                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GO_nDONE)
  3558  0012' 189D               	btfsc	29,1	;volatile
  3559  0013' 2800'              	goto	u571
  3560  0014' 2800'              	goto	u570
  3561  0015'                    u571:
  3562  0015' 2800'              	goto	l347
  3563  0016'                    u570:
  3564  0016'                    l1881:
  3565                           
  3566                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3567  0016' 081C               	movf	28,w	;volatile
  3568  0017' 0084'              	movwf	?_ADC_GetConversion+1
  3569  0018' 081B               	movf	27,w	;volatile
  3570  0019' 0083'              	movwf	?_ADC_GetConversion
  3571  001A'                    l350:
  3572  001A' 0008               	return
  3573  001B'                    __end_of_ADC_GetConversion:
  3574                           
  3575                           	psect	intentry
  3576  0000'                    __pintentry:	
  3577 ;; *************** function _INTERRUPT_InterruptManager *****************
  3578 ;; Defined at:
  3579 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3593 ;;      Params:         0       0       0       0
  3594 ;;      Locals:         0       0       0       0
  3595 ;;      Temps:          0       0       0       0
  3596 ;;      Totals:         0       0       0       0
  3597 ;;Total ram usage:        0 bytes
  3598 ;; Hardware stack levels used: 1
  3599 ;; Hardware stack levels required when called: 4
  3600 ;; This function calls:
  3601 ;;		Absolute function
  3602 ;;		_I2C_Isr
  3603 ;;		_TMR1_ISR
  3604 ;; This function is called by:
  3605 ;;		Interrupt level 1
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609  0000'                    _INTERRUPT_InterruptManager:
  3610                           
  3611                           ;incstack = 0
  3612  0000' 147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3613                           
  3614                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3615  0001' 3180'              	pagesel	$
  3616  0002'                    i1l2071:
  3617                           
  3618                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3619  0002' 1F0B               	btfss	11,6	;volatile
  3620  0003' 2800'              	goto	u90_21
  3621  0004' 2800'              	goto	u90_20
  3622  0005'                    u90_21:
  3623  0005' 2800'              	goto	i1l253
  3624  0006'                    u90_20:
  3625  0006'                    i1l2073:
  3626                           
  3627                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  3628  0006' 0021               	movlb	1	; select bank1
  3629  0007' 1D92               	btfss	18,3	;volatile
  3630  0008' 2800'              	goto	u91_21
  3631  0009' 2800'              	goto	u91_20
  3632  000A'                    u91_21:
  3633  000A' 2800'              	goto	i1l246
  3634  000B'                    u91_20:
  3635  000B'                    i1l2075:
  3636  000B' 0020               	movlb	0	; select bank0
  3637  000C' 1D92               	btfss	18,3	;volatile
  3638  000D' 2800'              	goto	u92_21
  3639  000E' 2800'              	goto	u92_20
  3640  000F'                    u92_21:
  3641  000F' 2800'              	goto	i1l246
  3642  0010'                    u92_20:
  3643  0010'                    i1l2077:
  3644                           
  3645                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             MSSP_InterruptHandler();
  3646  0010' 081A'              	movf	_MSSP_InterruptHandler+1,w
  3647  0011' 008A               	movwf	10
  3648  0012' 0819'              	movf	_MSSP_InterruptHandler,w
  3649  0013' 000A               	callw
  3650  0014' 3180'              	pagesel	$
  3651                           
  3652                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3653  0015' 2800'              	goto	i1l253
  3654  0016'                    i1l246:	
  3655                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  3656                           
  3657  0016' 0021               	movlb	1	; select bank1
  3658  0017' 1D91               	btfss	17,3	;volatile
  3659  0018' 2800'              	goto	u93_21
  3660  0019' 2800'              	goto	u93_20
  3661  001A'                    u93_21:
  3662  001A' 2800'              	goto	i1l248
  3663  001B'                    u93_20:
  3664  001B'                    i1l2079:
  3665  001B' 0020               	movlb	0	; select bank0
  3666  001C' 1D91               	btfss	17,3	;volatile
  3667  001D' 2800'              	goto	u94_21
  3668  001E' 2800'              	goto	u94_20
  3669  001F'                    u94_21:
  3670  001F' 2800'              	goto	i1l248
  3671  0020'                    u94_20:
  3672  0020' 2800'              	goto	i1l2077
  3673  0021'                    i1l248:	
  3674                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
  3675                           
  3676  0021' 0021               	movlb	1	; select bank1
  3677  0022' 1C11               	btfss	17,0	;volatile
  3678  0023' 2800'              	goto	u95_21
  3679  0024' 2800'              	goto	u95_20
  3680  0025'                    u95_21:
  3681  0025' 2800'              	goto	i1l247
  3682  0026'                    u95_20:
  3683  0026'                    i1l2083:
  3684  0026' 0020               	movlb	0	; select bank0
  3685  0027' 1C11               	btfss	17,0	;volatile
  3686  0028' 2800'              	goto	u96_21
  3687  0029' 2800'              	goto	u96_20
  3688  002A'                    u96_21:
  3689  002A' 2800'              	goto	i1l247
  3690  002B'                    u96_20:
  3691  002B'                    i1l2085:
  3692                           
  3693                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  3694  002B' 3180' 2000' 3180'  	fcall	_TMR1_ISR
  3695                           
  3696                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  3697  002E' 2800'              	goto	i1l253
  3698  002F'                    i1l247:
  3699  002F'                    i1l253:	
  3700                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  3701                           
  3702  002F' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3703  0030' 0009               	retfie
  3704  0031'                    __end_of_INTERRUPT_InterruptManager:
  3705                           
  3706                           	psect	text18
  3707  0000'                    __ptext18:	
  3708 ;; *************** function _TMR1_ISR *****************
  3709 ;; Defined at:
  3710 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0, pclath, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3724 ;;      Params:         0       0       0       0
  3725 ;;      Locals:         0       0       0       0
  3726 ;;      Temps:          0       0       0       0
  3727 ;;      Totals:         0       0       0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 1
  3731 ;; This function calls:
  3732 ;;		Absolute function
  3733 ;;		_TMR1_DefaultInterruptHandler
  3734 ;;		_TMR1_WriteTimer
  3735 ;; This function is called by:
  3736 ;;		_INTERRUPT_InterruptManager
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740  0000'                    _TMR1_ISR:	
  3741                           ;psect for function _TMR1_ISR
  3742                           
  3743  0000'                    i1l1885:	
  3744                           ;incstack = 0
  3745                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  3746                           
  3747                           
  3748                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  3749  0000' 0020               	movlb	0	; select bank0
  3750  0001' 1011               	bcf	17,0	;volatile
  3751  0002'                    i1l1887:
  3752                           
  3753                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  3754  0002' 0803'              	movf	_timer1ReloadVal+1,w	;volatile
  3755  0003' 0081'              	movwf	TMR1_WriteTimer@timerVal+1
  3756  0004' 0802'              	movf	_timer1ReloadVal,w	;volatile
  3757  0005' 0080'              	movwf	TMR1_WriteTimer@timerVal
  3758  0006' 3180' 2000' 3180'  	fcall	_TMR1_WriteTimer
  3759  0009'                    i1l1889:
  3760                           
  3761                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  3762  0009' 0020               	movlb	0	; select bank0
  3763  000A' 0800'              	movf	_TMR1_InterruptHandler,w
  3764  000B' 0401'              	iorwf	_TMR1_InterruptHandler+1,w
  3765  000C' 1903               	btfsc	3,2
  3766  000D' 2800'              	goto	u58_21
  3767  000E' 2800'              	goto	u58_20
  3768  000F'                    u58_21:
  3769  000F' 2800'              	goto	i1l307
  3770  0010'                    u58_20:
  3771  0010'                    i1l1891:
  3772                           
  3773                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  3774  0010' 0801'              	movf	_TMR1_InterruptHandler+1,w
  3775  0011' 008A               	movwf	10
  3776  0012' 0800'              	movf	_TMR1_InterruptHandler,w
  3777  0013' 000A               	callw
  3778  0014' 3180'              	pagesel	$
  3779  0015'                    i1l307:
  3780  0015' 0008               	return
  3781  0016'                    __end_of_TMR1_ISR:
  3782                           
  3783                           	psect	text19
  3784  0000'                    __ptext19:	
  3785 ;; *************** function _TMR1_WriteTimer *****************
  3786 ;; Defined at:
  3787 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  timerVal        2    0[COMMON] unsigned short 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3801 ;;      Params:         2       0       0       0
  3802 ;;      Locals:         0       0       0       0
  3803 ;;      Temps:          0       0       0       0
  3804 ;;      Totals:         2       0       0       0
  3805 ;;Total ram usage:        2 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_TMR1_ISR
  3811 ;;		_TMR1_Reload
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815  0000'                    _TMR1_WriteTimer:	
  3816                           ;psect for function _TMR1_WriteTimer
  3817                           
  3818  0000'                    i1l1803:	
  3819                           ;incstack = 0
  3820                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  3821                           
  3822                           
  3823                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  3824  0000' 0020               	movlb	0	; select bank0
  3825  0001' 1D18               	btfss	24,2	;volatile
  3826  0002' 2800'              	goto	u51_21
  3827  0003' 2800'              	goto	u51_20
  3828  0004'                    u51_21:
  3829  0004' 2800'              	goto	i1l1813
  3830  0005'                    u51_20:
  3831  0005'                    i1l1805:
  3832                           
  3833                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  3834  0005' 1018               	bcf	24,0	;volatile
  3835  0006'                    i1l1807:
  3836                           
  3837                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  3838  0006' 0801'              	movf	TMR1_WriteTimer@timerVal+1,w
  3839  0007' 0097               	movwf	23	;volatile
  3840  0008'                    i1l1809:
  3841                           
  3842                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  3843  0008' 0800'              	movf	TMR1_WriteTimer@timerVal,w
  3844  0009' 0096               	movwf	22	;volatile
  3845  000A'                    i1l1811:
  3846                           
  3847                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  3848  000A' 1418               	bsf	24,0	;volatile
  3849                           
  3850                           ;mcc_generated_files/tmr1.c: 133:     }
  3851  000B' 2800'              	goto	i1l294
  3852  000C'                    i1l1813:
  3853                           
  3854                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  3855  000C' 0801'              	movf	TMR1_WriteTimer@timerVal+1,w
  3856  000D' 0097               	movwf	23	;volatile
  3857  000E'                    i1l1815:
  3858                           
  3859                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  3860  000E' 0800'              	movf	TMR1_WriteTimer@timerVal,w
  3861  000F' 0096               	movwf	22	;volatile
  3862  0010'                    i1l294:
  3863  0010' 0008               	return
  3864  0011'                    __end_of_TMR1_WriteTimer:
  3865                           
  3866                           	psect	text20
  3867  0000'                    __ptext20:	
  3868 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3869 ;; Defined at:
  3870 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		None
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3884 ;;      Params:         0       0       0       0
  3885 ;;      Locals:         0       0       0       0
  3886 ;;      Temps:          0       0       0       0
  3887 ;;      Totals:         0       0       0       0
  3888 ;;Total ram usage:        0 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_TMR1_Initialize
  3894 ;;		_TMR1_ISR
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898  0000'                    _TMR1_DefaultInterruptHandler:	
  3899                           ;psect for function _TMR1_DefaultInterruptHandler
  3900                           
  3901  0000'                    i1l313:	
  3902                           ;incstack = 0
  3903                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  3904                           
  3905  0000' 0008               	return
  3906  0001'                    __end_of_TMR1_DefaultInterruptHandler:
  3907                           
  3908                           	psect	text21
  3909  0000'                    __ptext21:	
  3910 ;; *************** function _I2C_Isr *****************
  3911 ;; Defined at:
  3912 ;;		line 165 in file "mcc_generated_files/i2c_slave.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3926 ;;      Params:         0       0       0       0
  3927 ;;      Locals:         0       0       0       0
  3928 ;;      Temps:          2       0       0       0
  3929 ;;      Totals:         2       0       0       0
  3930 ;;Total ram usage:        2 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; Hardware stack levels required when called: 3
  3933 ;; This function calls:
  3934 ;;		_I2C_SlaveAddrCallBack
  3935 ;;		_I2C_SlaveClearIrq
  3936 ;;		_I2C_SlaveIsAddr
  3937 ;;		_I2C_SlaveIsRead
  3938 ;;		_I2C_SlaveIsRxBufFull
  3939 ;;		_I2C_SlaveIsTxBufEmpty
  3940 ;;		_I2C_SlaveRdCallBack
  3941 ;;		_I2C_SlaveReleaseClock
  3942 ;;		_I2C_SlaveWrCallBack
  3943 ;; This function is called by:
  3944 ;;		_I2C_Open
  3945 ;;		_INTERRUPT_InterruptManager
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949  0000'                    _I2C_Isr:	
  3950                           ;psect for function _I2C_Isr
  3951                           
  3952  0000'                    i1l1893:	
  3953                           ;incstack = 0
  3954                           ; Regs used in _I2C_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3955                           
  3956                           
  3957                           ;mcc_generated_files/i2c_slave.c: 167:     I2C_SlaveClearIrq();
  3958  0000' 3180' 2000' 3180'  	fcall	_I2C_SlaveClearIrq
  3959  0003'                    i1l1895:
  3960                           
  3961                           ;mcc_generated_files/i2c_slave.c: 169:     if(I2C_SlaveIsAddr())
  3962  0003' 3180' 2000' 3180'  	fcall	_I2C_SlaveIsAddr
  3963  0006' 3A00               	xorlw	0
  3964  0007' 1903               	skipnz
  3965  0008' 2800'              	goto	u59_21
  3966  0009' 2800'              	goto	u59_20
  3967  000A'                    u59_21:
  3968  000A' 2800'              	goto	i1l1903
  3969  000B'                    u59_20:
  3970  000B'                    i1l1897:
  3971                           
  3972                           ;mcc_generated_files/i2c_slave.c: 170:     {;mcc_generated_files/i2c_slave.c: 171:      
      +                             if(I2C_SlaveIsRead())
  3973  000B' 3180' 2000' 3180'  	fcall	_I2C_SlaveIsRead
  3974  000E' 3A00               	xorlw	0
  3975  000F' 1903               	skipnz
  3976  0010' 2800'              	goto	u60_21
  3977  0011' 2800'              	goto	u60_20
  3978  0012'                    u60_21:
  3979  0012' 2800'              	goto	i1l1901
  3980  0013'                    u60_20:
  3981  0013'                    i1l1899:
  3982                           
  3983                           ;mcc_generated_files/i2c_slave.c: 172:         {;mcc_generated_files/i2c_slave.c: 173:  
      +                                     i2cSlaveState = I2C_ADDR_TX;
  3984  0013' 3001               	movlw	1
  3985  0014' 0080'              	movwf	_i2cSlaveState	;volatile
  3986                           
  3987                           ;mcc_generated_files/i2c_slave.c: 174:         }
  3988  0015' 2800'              	goto	i1l1927
  3989  0016'                    i1l1901:
  3990                           
  3991                           ;mcc_generated_files/i2c_slave.c: 176:         {;mcc_generated_files/i2c_slave.c: 177:  
      +                                     i2cSlaveState = I2C_ADDR_RX;
  3992  0016' 3002               	movlw	2
  3993  0017' 0080'              	movwf	_i2cSlaveState	;volatile
  3994  0018' 2800'              	goto	i1l1927
  3995  0019'                    i1l1903:
  3996                           
  3997                           ;mcc_generated_files/i2c_slave.c: 181:     {;mcc_generated_files/i2c_slave.c: 182:      
      +                             if(I2C_SlaveIsRead())
  3998  0019' 3180' 2000' 3180'  	fcall	_I2C_SlaveIsRead
  3999  001C' 3A00               	xorlw	0
  4000  001D' 1903               	skipnz
  4001  001E' 2800'              	goto	u61_21
  4002  001F' 2800'              	goto	u61_20
  4003  0020'                    u61_21:
  4004  0020' 2800'              	goto	i1l1907
  4005  0021'                    u61_20:
  4006  0021'                    i1l1905:
  4007                           
  4008                           ;mcc_generated_files/i2c_slave.c: 183:         {;mcc_generated_files/i2c_slave.c: 184:  
      +                                     i2cSlaveState = I2C_DATA_TX;
  4009  0021' 3003               	movlw	3
  4010  0022' 0080'              	movwf	_i2cSlaveState	;volatile
  4011                           
  4012                           ;mcc_generated_files/i2c_slave.c: 185:         }
  4013  0023' 2800'              	goto	i1l1927
  4014  0024'                    i1l1907:
  4015                           
  4016                           ;mcc_generated_files/i2c_slave.c: 187:         {;mcc_generated_files/i2c_slave.c: 188:  
      +                                     i2cSlaveState = I2C_DATA_RX;
  4017  0024' 3004               	movlw	4
  4018  0025' 0080'              	movwf	_i2cSlaveState	;volatile
  4019  0026' 2800'              	goto	i1l1927
  4020  0027'                    i1l1909:
  4021                           
  4022                           ;mcc_generated_files/i2c_slave.c: 195:             I2C_SlaveAddrCallBack();
  4023  0027' 3180' 2000' 3180'  	fcall	_I2C_SlaveAddrCallBack
  4024  002A'                    i1l1911:
  4025                           
  4026                           ;mcc_generated_files/i2c_slave.c: 196:             if(I2C_SlaveIsTxBufEmpty())
  4027  002A' 3180' 2000' 3180'  	fcall	_I2C_SlaveIsTxBufEmpty
  4028  002D' 3A00               	xorlw	0
  4029  002E' 1903               	skipnz
  4030  002F' 2800'              	goto	u62_21
  4031  0030' 2800'              	goto	u62_20
  4032  0031'                    u62_21:
  4033  0031' 2800'              	goto	i1l1929
  4034  0032'                    u62_20:
  4035  0032'                    i1l1913:
  4036                           
  4037                           ;mcc_generated_files/i2c_slave.c: 197:             {;mcc_generated_files/i2c_slave.c: 19
      +                          8:                 I2C_SlaveWrCallBack();
  4038  0032' 3180' 2000' 3180'  	fcall	_I2C_SlaveWrCallBack
  4039  0035' 2800'              	goto	i1l1929
  4040  0036'                    i1l1915:
  4041                           
  4042                           ;mcc_generated_files/i2c_slave.c: 202:             I2C_SlaveAddrCallBack();
  4043  0036' 3180' 2000' 3180'  	fcall	_I2C_SlaveAddrCallBack
  4044                           
  4045                           ;mcc_generated_files/i2c_slave.c: 203:             break;
  4046  0039' 2800'              	goto	i1l1929
  4047  003A'                    i1l1917:
  4048                           
  4049                           ;mcc_generated_files/i2c_slave.c: 205:             if(I2C_SlaveIsTxBufEmpty())
  4050  003A' 3180' 2000' 3180'  	fcall	_I2C_SlaveIsTxBufEmpty
  4051  003D' 3A00               	xorlw	0
  4052  003E' 1903               	skipnz
  4053  003F' 2800'              	goto	u63_21
  4054  0040' 2800'              	goto	u63_20
  4055  0041'                    u63_21:
  4056  0041' 2800'              	goto	i1l1929
  4057  0042'                    u63_20:
  4058  0042' 2800'              	goto	i1l1913
  4059  0043'                    i1l1921:
  4060                           
  4061                           ;mcc_generated_files/i2c_slave.c: 211:             if(I2C_SlaveIsRxBufFull())
  4062  0043' 3180' 2000' 3180'  	fcall	_I2C_SlaveIsRxBufFull
  4063  0046' 3A00               	xorlw	0
  4064  0047' 1903               	skipnz
  4065  0048' 2800'              	goto	u64_21
  4066  0049' 2800'              	goto	u64_20
  4067  004A'                    u64_21:
  4068  004A' 2800'              	goto	i1l1929
  4069  004B'                    u64_20:
  4070  004B'                    i1l1923:
  4071                           
  4072                           ;mcc_generated_files/i2c_slave.c: 212:             {;mcc_generated_files/i2c_slave.c: 21
      +                          3:                 I2C_SlaveRdCallBack();
  4073  004B' 3180' 2000' 3180'  	fcall	_I2C_SlaveRdCallBack
  4074  004E' 2800'              	goto	i1l1929
  4075  004F'                    i1l1927:
  4076  004F' 0800'              	movf	_i2cSlaveState,w	;volatile
  4077  0050' 0081'              	movwf	??_I2C_Isr
  4078  0051' 0182'              	clrf	??_I2C_Isr+1
  4079                           
  4080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4081                           ; Switch size 1, requested type "simple"
  4082                           ; Number of cases is 1, Range of values is 0 to 0
  4083                           ; switch strategies available:
  4084                           ; Name         Instructions Cycles
  4085                           ; simple_byte            4     3 (average)
  4086                           ; direct_byte            8     6 (fixed)
  4087                           ; jumptable            260     6 (fixed)
  4088                           ;	Chosen strategy is simple_byte
  4089  0052' 0802'              	movf	??_I2C_Isr+1,w
  4090  0053' 3A00               	xorlw	0	; case 0
  4091  0054' 1903               	skipnz
  4092  0055' 2800'              	goto	i1l2355
  4093  0056' 2800'              	goto	i1l1929
  4094  0057'                    i1l2355:
  4095                           
  4096                           ; Switch size 1, requested type "simple"
  4097                           ; Number of cases is 4, Range of values is 1 to 4
  4098                           ; switch strategies available:
  4099                           ; Name         Instructions Cycles
  4100                           ; simple_byte           13     7 (average)
  4101                           ; direct_byte           17     9 (fixed)
  4102                           ; jumptable            263     9 (fixed)
  4103                           ;	Chosen strategy is simple_byte
  4104  0057' 0801'              	movf	??_I2C_Isr,w
  4105  0058' 3A01               	xorlw	1	; case 1
  4106  0059' 1903               	skipnz
  4107  005A' 2800'              	goto	i1l1909
  4108  005B' 3A03               	xorlw	3	; case 2
  4109  005C' 1903               	skipnz
  4110  005D' 2800'              	goto	i1l1915
  4111  005E' 3A01               	xorlw	1	; case 3
  4112  005F' 1903               	skipnz
  4113  0060' 2800'              	goto	i1l1917
  4114  0061' 3A07               	xorlw	7	; case 4
  4115  0062' 1903               	skipnz
  4116  0063' 2800'              	goto	i1l1921
  4117  0064' 2800'              	goto	i1l1929
  4118  0065'                    i1l1929:
  4119                           
  4120                           ;mcc_generated_files/i2c_slave.c: 219:     I2C_SlaveReleaseClock();
  4121  0065' 3180' 2000' 3180'  	fcall	_I2C_SlaveReleaseClock
  4122  0068'                    i1l511:
  4123  0068' 0008               	return
  4124  0069'                    __end_of_I2C_Isr:
  4125                           
  4126                           	psect	text22
  4127  0000'                    __ptext22:	
  4128 ;; *************** function _I2C_SlaveWrCallBack *****************
  4129 ;; Defined at:
  4130 ;;		line 250 in file "mcc_generated_files/i2c_slave.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0, pclath, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4144 ;;      Params:         0       0       0       0
  4145 ;;      Locals:         0       0       0       0
  4146 ;;      Temps:          0       0       0       0
  4147 ;;      Totals:         0       0       0       0
  4148 ;;Total ram usage:        0 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; Hardware stack levels required when called: 2
  4151 ;; This function calls:
  4152 ;;		Absolute function
  4153 ;;		_I2C_SlaveDefWrInterruptHandler
  4154 ;; This function is called by:
  4155 ;;		_I2C_Isr
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159  0000'                    _I2C_SlaveWrCallBack:	
  4160                           ;psect for function _I2C_SlaveWrCallBack
  4161                           
  4162  0000'                    i1l1839:	
  4163                           ;incstack = 0
  4164                           ; Regs used in _I2C_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  4165                           
  4166                           
  4167                           ;mcc_generated_files/i2c_slave.c: 252:     if (I2C_SlaveWrInterruptHandler)
  4168  0000' 0020               	movlb	0	; select bank0
  4169  0001' 0815'              	movf	_I2C_SlaveWrInterruptHandler,w
  4170  0002' 0416'              	iorwf	_I2C_SlaveWrInterruptHandler+1,w
  4171  0003' 1903               	btfsc	3,2
  4172  0004' 2800'              	goto	u53_21
  4173  0005' 2800'              	goto	u53_20
  4174  0006'                    u53_21:
  4175  0006' 2800'              	goto	i1l531
  4176  0007'                    u53_20:
  4177  0007'                    i1l1841:
  4178                           
  4179                           ;mcc_generated_files/i2c_slave.c: 253:     {;mcc_generated_files/i2c_slave.c: 254:      
      +                             I2C_SlaveWrInterruptHandler();
  4180  0007' 0816'              	movf	_I2C_SlaveWrInterruptHandler+1,w
  4181  0008' 008A               	movwf	10
  4182  0009' 0815'              	movf	_I2C_SlaveWrInterruptHandler,w
  4183  000A' 000A               	callw
  4184  000B' 3180'              	pagesel	$
  4185  000C'                    i1l531:
  4186  000C' 0008               	return
  4187  000D'                    __end_of_I2C_SlaveWrCallBack:
  4188                           
  4189                           	psect	text23
  4190  0000'                    __ptext23:	
  4191 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  4192 ;; Defined at:
  4193 ;;		line 258 in file "mcc_generated_files/i2c_slave.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0, pclath, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4207 ;;      Params:         0       0       0       0
  4208 ;;      Locals:         0       0       0       0
  4209 ;;      Temps:          0       0       0       0
  4210 ;;      Totals:         0       0       0       0
  4211 ;;Total ram usage:        0 bytes
  4212 ;; Hardware stack levels used: 1
  4213 ;; Hardware stack levels required when called: 1
  4214 ;; This function calls:
  4215 ;;		i1_I2C_SlaveSendTxData
  4216 ;; This function is called by:
  4217 ;;		_I2C_Open
  4218 ;;		_I2C_SlaveWrCallBack
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222  0000'                    _I2C_SlaveDefWrInterruptHandler:	
  4223                           ;psect for function _I2C_SlaveDefWrInterruptHandler
  4224                           
  4225  0000'                    i1l1741:	
  4226                           ;incstack = 0
  4227                           ; Regs used in _I2C_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  4228                           
  4229                           
  4230                           ;mcc_generated_files/i2c_slave.c: 259:     I2C_SlaveSendTxData(i2cWrData);
  4231  0000' 0801'              	movf	_i2cWrData,w	;volatile
  4232  0001' 3180' 2000' 3180'  	fcall	i1_I2C_SlaveSendTxData
  4233  0004'                    i1l534:
  4234  0004' 0008               	return
  4235  0005'                    __end_of_I2C_SlaveDefWrInterruptHandler:
  4236                           
  4237                           	psect	text24
  4238  0000'                    __ptext24:	
  4239 ;; *************** function i1_I2C_SlaveSendTxData *****************
  4240 ;; Defined at:
  4241 ;;		line 392 in file "mcc_generated_files/i2c_slave.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  data            1    wreg     unsigned char 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  data            1    0[COMMON] unsigned char 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4255 ;;      Params:         0       0       0       0
  4256 ;;      Locals:         1       0       0       0
  4257 ;;      Temps:          0       0       0       0
  4258 ;;      Totals:         1       0       0       0
  4259 ;;Total ram usage:        1 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_I2C_SlaveDefWrInterruptHandler
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268  0000'                    i1_I2C_SlaveSendTxData:	
  4269                           ;psect for function i1_I2C_SlaveSendTxData
  4270                           
  4271                           
  4272                           ;incstack = 0
  4273                           ; Regs used in i1_I2C_SlaveSendTxData: [wreg]
  4274                           ;i1I2C_SlaveSendTxData@data stored from wreg
  4275  0000' 0080'              	movwf	i1I2C_SlaveSendTxData@data
  4276  0001'                    i1l1729:
  4277                           
  4278                           ;mcc_generated_files/i2c_slave.c: 392: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 393: {;mcc_generated_files/i2c_sla
      +                          ve.c: 394:     SSP1BUF = data;
  4279  0001' 0800'              	movf	i1I2C_SlaveSendTxData@data,w
  4280  0002' 0024               	movlb	4	; select bank4
  4281  0003' 0091               	movwf	17	;volatile
  4282  0004'                    i1l610:
  4283  0004' 0008               	return
  4284  0005'                    __end_ofi1_I2C_SlaveSendTxData:
  4285                           
  4286                           	psect	text25
  4287  0000'                    __ptext25:	
  4288 ;; *************** function _I2C_SlaveReleaseClock *****************
  4289 ;; Defined at:
  4290 ;;		line 362 in file "mcc_generated_files/i2c_slave.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;		None
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;		None
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		None
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4304 ;;      Params:         0       0       0       0
  4305 ;;      Locals:         0       0       0       0
  4306 ;;      Temps:          0       0       0       0
  4307 ;;      Totals:         0       0       0       0
  4308 ;;Total ram usage:        0 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_I2C_Isr
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317  0000'                    _I2C_SlaveReleaseClock:	
  4318                           ;psect for function _I2C_SlaveReleaseClock
  4319                           
  4320  0000'                    i1l1851:	
  4321                           ;incstack = 0
  4322                           ; Regs used in _I2C_SlaveReleaseClock: []
  4323                           
  4324                           
  4325                           ;mcc_generated_files/i2c_slave.c: 364:     SSP1CON1bits.CKP = 1;
  4326  0000' 0024               	movlb	4	; select bank4
  4327  0001' 1615               	bsf	21,4	;volatile
  4328  0002'                    i1l592:
  4329  0002' 0008               	return
  4330  0003'                    __end_of_I2C_SlaveReleaseClock:
  4331                           
  4332                           	psect	text26
  4333  0000'                    __ptext26:	
  4334 ;; *************** function _I2C_SlaveRdCallBack *****************
  4335 ;; Defined at:
  4336 ;;		line 233 in file "mcc_generated_files/i2c_slave.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0, pclath, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4350 ;;      Params:         0       0       0       0
  4351 ;;      Locals:         0       0       0       0
  4352 ;;      Temps:          0       0       0       0
  4353 ;;      Totals:         0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; Hardware stack levels required when called: 2
  4357 ;; This function calls:
  4358 ;;		Absolute function
  4359 ;;		_I2C_SlaveDefRdInterruptHandler
  4360 ;; This function is called by:
  4361 ;;		_I2C_Isr
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365  0000'                    _I2C_SlaveRdCallBack:	
  4366                           ;psect for function _I2C_SlaveRdCallBack
  4367                           
  4368  0000'                    i1l1847:	
  4369                           ;incstack = 0
  4370                           ; Regs used in _I2C_SlaveRdCallBack: [wreg+status,2+status,0+pclath+cstack]
  4371                           
  4372                           
  4373                           ;mcc_generated_files/i2c_slave.c: 235:     if (I2C_SlaveRdInterruptHandler)
  4374  0000' 0020               	movlb	0	; select bank0
  4375  0001' 0817'              	movf	_I2C_SlaveRdInterruptHandler,w
  4376  0002' 0418'              	iorwf	_I2C_SlaveRdInterruptHandler+1,w
  4377  0003' 1903               	btfsc	3,2
  4378  0004' 2800'              	goto	u54_21
  4379  0005' 2800'              	goto	u54_20
  4380  0006'                    u54_21:
  4381  0006' 2800'              	goto	i1l521
  4382  0007'                    u54_20:
  4383  0007'                    i1l1849:
  4384                           
  4385                           ;mcc_generated_files/i2c_slave.c: 236:     {;mcc_generated_files/i2c_slave.c: 237:      
      +                             I2C_SlaveRdInterruptHandler();
  4386  0007' 0818'              	movf	_I2C_SlaveRdInterruptHandler+1,w
  4387  0008' 008A               	movwf	10
  4388  0009' 0817'              	movf	_I2C_SlaveRdInterruptHandler,w
  4389  000A' 000A               	callw
  4390  000B' 3180'              	pagesel	$
  4391  000C'                    i1l521:
  4392  000C' 0008               	return
  4393  000D'                    __end_of_I2C_SlaveRdCallBack:
  4394                           
  4395                           	psect	text27
  4396  0000'                    __ptext27:	
  4397 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
  4398 ;; Defined at:
  4399 ;;		line 241 in file "mcc_generated_files/i2c_slave.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, pclath, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4413 ;;      Params:         0       0       0       0
  4414 ;;      Locals:         0       0       0       0
  4415 ;;      Temps:          0       0       0       0
  4416 ;;      Totals:         0       0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 1
  4420 ;; This function calls:
  4421 ;;		i1_I2C_SlaveGetRxData
  4422 ;; This function is called by:
  4423 ;;		_I2C_Open
  4424 ;;		_I2C_SlaveRdCallBack
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428  0000'                    _I2C_SlaveDefRdInterruptHandler:	
  4429                           ;psect for function _I2C_SlaveDefRdInterruptHandler
  4430                           
  4431  0000'                    i1l1739:	
  4432                           ;incstack = 0
  4433                           ; Regs used in _I2C_SlaveDefRdInterruptHandler: [wreg+pclath+cstack]
  4434                           
  4435                           
  4436                           ;mcc_generated_files/i2c_slave.c: 242:     i2cRdData = I2C_SlaveGetRxData();
  4437  0000' 3180' 2000' 3180'  	fcall	i1_I2C_SlaveGetRxData
  4438  0003' 0020               	movlb	0	; select bank0
  4439  0004' 009C'              	movwf	_i2cRdData	;volatile
  4440  0005'                    i1l524:
  4441  0005' 0008               	return
  4442  0006'                    __end_of_I2C_SlaveDefRdInterruptHandler:
  4443                           
  4444                           	psect	text28
  4445  0000'                    __ptext28:	
  4446 ;; *************** function _I2C_SlaveIsTxBufEmpty *****************
  4447 ;; Defined at:
  4448 ;;		line 382 in file "mcc_generated_files/i2c_slave.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      _Bool 
  4455 ;; Registers used:
  4456 ;;		wreg, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4462 ;;      Params:         0       0       0       0
  4463 ;;      Locals:         0       0       0       0
  4464 ;;      Temps:          0       0       0       0
  4465 ;;      Totals:         0       0       0       0
  4466 ;;Total ram usage:        0 bytes
  4467 ;; Hardware stack levels used: 1
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_I2C_Isr
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475  0000'                    _I2C_SlaveIsTxBufEmpty:	
  4476                           ;psect for function _I2C_SlaveIsTxBufEmpty
  4477                           
  4478  0000'                    i1l1835:	
  4479                           ;incstack = 0
  4480                           ; Regs used in _I2C_SlaveIsTxBufEmpty: [wreg+status,0]
  4481                           
  4482                           
  4483                           ;mcc_generated_files/i2c_slave.c: 384:     return !SSP1STATbits.BF;
  4484  0000' 1003               	clrc
  4485  0001' 0024               	movlb	4	; select bank4
  4486  0002' 1C14               	btfss	20,0	;volatile
  4487  0003' 1403               	setc
  4488  0004' 3000               	movlw	0
  4489  0005' 3D09               	addwfc	9,w
  4490  0006'                    i1l604:
  4491  0006' 0008               	return
  4492  0007'                    __end_of_I2C_SlaveIsTxBufEmpty:
  4493                           
  4494                           	psect	text29
  4495  0000'                    __ptext29:	
  4496 ;; *************** function _I2C_SlaveIsRxBufFull *****************
  4497 ;; Defined at:
  4498 ;;		line 387 in file "mcc_generated_files/i2c_slave.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;		None
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;		None
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  1    wreg      _Bool 
  4505 ;; Registers used:
  4506 ;;		wreg, status,2, status,0
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4512 ;;      Params:         0       0       0       0
  4513 ;;      Locals:         0       0       0       0
  4514 ;;      Temps:          0       0       0       0
  4515 ;;      Totals:         0       0       0       0
  4516 ;;Total ram usage:        0 bytes
  4517 ;; Hardware stack levels used: 1
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_I2C_Isr
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525  0000'                    _I2C_SlaveIsRxBufFull:	
  4526                           ;psect for function _I2C_SlaveIsRxBufFull
  4527                           
  4528  0000'                    i1l1843:	
  4529                           ;incstack = 0
  4530                           ; Regs used in _I2C_SlaveIsRxBufFull: [wreg+status,2+status,0]
  4531                           
  4532                           
  4533                           ;mcc_generated_files/i2c_slave.c: 389:     return SSP1STATbits.BF;
  4534  0000' 0024               	movlb	4	; select bank4
  4535  0001' 0814               	movf	20,w	;volatile
  4536  0002' 3901               	andlw	1
  4537  0003'                    i1l607:
  4538  0003' 0008               	return
  4539  0004'                    __end_of_I2C_SlaveIsRxBufFull:
  4540                           
  4541                           	psect	text30
  4542  0000'                    __ptext30:	
  4543 ;; *************** function _I2C_SlaveIsRead *****************
  4544 ;; Defined at:
  4545 ;;		line 352 in file "mcc_generated_files/i2c_slave.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;		None
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      _Bool 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4559 ;;      Params:         0       0       0       0
  4560 ;;      Locals:         0       0       0       0
  4561 ;;      Temps:          0       0       0       0
  4562 ;;      Totals:         0       0       0       0
  4563 ;;Total ram usage:        0 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_I2C_Isr
  4569 ;;		_I2C_IsRead
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573  0000'                    _I2C_SlaveIsRead:	
  4574                           ;psect for function _I2C_SlaveIsRead
  4575                           
  4576  0000'                    i1l1821:	
  4577                           ;incstack = 0
  4578                           ; Regs used in _I2C_SlaveIsRead: [wreg+status,2+status,0]
  4579                           
  4580                           
  4581                           ;mcc_generated_files/i2c_slave.c: 354:     return (SSP1STATbits.R_nW);
  4582  0000' 0024               	movlb	4	; select bank4
  4583  0001' 0C14               	rrf	20,w	;volatile
  4584  0002' 0C89               	rrf	9,f
  4585  0003' 3901               	andlw	1
  4586  0004'                    i1l586:
  4587  0004' 0008               	return
  4588  0005'                    __end_of_I2C_SlaveIsRead:
  4589                           
  4590                           	psect	text31
  4591  0000'                    __ptext31:	
  4592 ;; *************** function _I2C_SlaveIsAddr *****************
  4593 ;; Defined at:
  4594 ;;		line 347 in file "mcc_generated_files/i2c_slave.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      _Bool 
  4601 ;; Registers used:
  4602 ;;		wreg, status,0
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4608 ;;      Params:         0       0       0       0
  4609 ;;      Locals:         0       0       0       0
  4610 ;;      Temps:          0       0       0       0
  4611 ;;      Totals:         0       0       0       0
  4612 ;;Total ram usage:        0 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_I2C_Isr
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621  0000'                    _I2C_SlaveIsAddr:	
  4622                           ;psect for function _I2C_SlaveIsAddr
  4623                           
  4624  0000'                    i1l1827:	
  4625                           ;incstack = 0
  4626                           ; Regs used in _I2C_SlaveIsAddr: [wreg+status,0]
  4627                           
  4628                           
  4629                           ;mcc_generated_files/i2c_slave.c: 349:     return !(SSP1STATbits.D_nA);
  4630  0000' 1003               	clrc
  4631  0001' 0024               	movlb	4	; select bank4
  4632  0002' 1E94               	btfss	20,5	;volatile
  4633  0003' 1403               	setc
  4634  0004' 3000               	movlw	0
  4635  0005' 3D09               	addwfc	9,w
  4636  0006'                    i1l583:
  4637  0006' 0008               	return
  4638  0007'                    __end_of_I2C_SlaveIsAddr:
  4639                           
  4640                           	psect	text32
  4641  0000'                    __ptext32:	
  4642 ;; *************** function _I2C_SlaveClearIrq *****************
  4643 ;; Defined at:
  4644 ;;		line 357 in file "mcc_generated_files/i2c_slave.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		None
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4658 ;;      Params:         0       0       0       0
  4659 ;;      Locals:         0       0       0       0
  4660 ;;      Temps:          0       0       0       0
  4661 ;;      Totals:         0       0       0       0
  4662 ;;Total ram usage:        0 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_I2C_Isr
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671  0000'                    _I2C_SlaveClearIrq:	
  4672                           ;psect for function _I2C_SlaveClearIrq
  4673                           
  4674  0000'                    i1l1825:	
  4675                           ;incstack = 0
  4676                           ; Regs used in _I2C_SlaveClearIrq: []
  4677                           
  4678                           
  4679                           ;mcc_generated_files/i2c_slave.c: 359:     PIR1bits.SSP1IF = 0;
  4680  0000' 0020               	movlb	0	; select bank0
  4681  0001' 1191               	bcf	17,3	;volatile
  4682  0002'                    i1l589:
  4683  0002' 0008               	return
  4684  0003'                    __end_of_I2C_SlaveClearIrq:
  4685                           
  4686                           	psect	text33
  4687  0000'                    __ptext33:	
  4688 ;; *************** function _I2C_SlaveAddrCallBack *****************
  4689 ;; Defined at:
  4690 ;;		line 267 in file "mcc_generated_files/i2c_slave.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;		None
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0, pclath, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4704 ;;      Params:         0       0       0       0
  4705 ;;      Locals:         0       0       0       0
  4706 ;;      Temps:          0       0       0       0
  4707 ;;      Totals:         0       0       0       0
  4708 ;;Total ram usage:        0 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; Hardware stack levels required when called: 2
  4711 ;; This function calls:
  4712 ;;		Absolute function
  4713 ;;		_I2C_SlaveDefAddrInterruptHandler
  4714 ;; This function is called by:
  4715 ;;		_I2C_Isr
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719  0000'                    _I2C_SlaveAddrCallBack:	
  4720                           ;psect for function _I2C_SlaveAddrCallBack
  4721                           
  4722  0000'                    i1l1831:	
  4723                           ;incstack = 0
  4724                           ; Regs used in _I2C_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  4725                           
  4726                           
  4727                           ;mcc_generated_files/i2c_slave.c: 269:     if (I2C_SlaveAddrInterruptHandler) {
  4728  0000' 0020               	movlb	0	; select bank0
  4729  0001' 0813'              	movf	_I2C_SlaveAddrInterruptHandler,w
  4730  0002' 0414'              	iorwf	_I2C_SlaveAddrInterruptHandler+1,w
  4731  0003' 1903               	btfsc	3,2
  4732  0004' 2800'              	goto	u52_21
  4733  0005' 2800'              	goto	u52_20
  4734  0006'                    u52_21:
  4735  0006' 2800'              	goto	i1l541
  4736  0007'                    u52_20:
  4737  0007'                    i1l1833:
  4738                           
  4739                           ;mcc_generated_files/i2c_slave.c: 270:         I2C_SlaveAddrInterruptHandler();
  4740  0007' 0814'              	movf	_I2C_SlaveAddrInterruptHandler+1,w
  4741  0008' 008A               	movwf	10
  4742  0009' 0813'              	movf	_I2C_SlaveAddrInterruptHandler,w
  4743  000A' 000A               	callw
  4744  000B' 3180'              	pagesel	$
  4745  000C'                    i1l541:
  4746  000C' 0008               	return
  4747  000D'                    __end_of_I2C_SlaveAddrCallBack:
  4748                           
  4749                           	psect	text34
  4750  0000'                    __ptext34:	
  4751 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
  4752 ;; Defined at:
  4753 ;;		line 274 in file "mcc_generated_files/i2c_slave.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;		None
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;		None
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, pclath, cstack
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4767 ;;      Params:         0       0       0       0
  4768 ;;      Locals:         0       0       0       0
  4769 ;;      Temps:          0       0       0       0
  4770 ;;      Totals:         0       0       0       0
  4771 ;;Total ram usage:        0 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 1
  4774 ;; This function calls:
  4775 ;;		i1_I2C_SlaveGetRxData
  4776 ;; This function is called by:
  4777 ;;		_I2C_Open
  4778 ;;		_I2C_SlaveAddrCallBack
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782  0000'                    _I2C_SlaveDefAddrInterruptHandler:	
  4783                           ;psect for function _I2C_SlaveDefAddrInterruptHandler
  4784                           
  4785  0000'                    i1l1743:	
  4786                           ;incstack = 0
  4787                           ; Regs used in _I2C_SlaveDefAddrInterruptHandler: [wreg+pclath+cstack]
  4788                           
  4789                           
  4790                           ;mcc_generated_files/i2c_slave.c: 275:     i2cSlaveAddr = I2C_SlaveGetRxData();
  4791  0000' 3180' 2000' 3180'  	fcall	i1_I2C_SlaveGetRxData
  4792  0003' 0020               	movlb	0	; select bank0
  4793  0004' 009B'              	movwf	_i2cSlaveAddr	;volatile
  4794  0005'                    i1l544:
  4795  0005' 0008               	return
  4796  0006'                    __end_of_I2C_SlaveDefAddrInterruptHandler:
  4797                           
  4798                           	psect	text35
  4799  0000'                    __ptext35:	
  4800 ;; *************** function i1_I2C_SlaveGetRxData *****************
  4801 ;; Defined at:
  4802 ;;		line 397 in file "mcc_generated_files/i2c_slave.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;		None
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;		None
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      unsigned char 
  4809 ;; Registers used:
  4810 ;;		wreg
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4816 ;;      Params:         0       0       0       0
  4817 ;;      Locals:         0       0       0       0
  4818 ;;      Temps:          0       0       0       0
  4819 ;;      Totals:         0       0       0       0
  4820 ;;Total ram usage:        0 bytes
  4821 ;; Hardware stack levels used: 1
  4822 ;; This function calls:
  4823 ;;		Nothing
  4824 ;; This function is called by:
  4825 ;;		_I2C_SlaveDefRdInterruptHandler
  4826 ;;		_I2C_SlaveDefAddrInterruptHandler
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830  0000'                    i1_I2C_SlaveGetRxData:	
  4831                           ;psect for function i1_I2C_SlaveGetRxData
  4832                           
  4833  0000'                    i1l1731:	
  4834                           ;incstack = 0
  4835                           ; Regs used in i1_I2C_SlaveGetRxData: [wreg]
  4836                           
  4837                           
  4838                           ;mcc_generated_files/i2c_slave.c: 399:     return SSP1BUF;
  4839  0000' 0024               	movlb	4	; select bank4
  4840  0001' 0811               	movf	17,w	;volatile
  4841  0002'                    i1l613:
  4842  0002' 0008               	return
  4843  0003'                    __end_ofi1_I2C_SlaveGetRxData:
  4844  007E                     btemp	set	126	;btemp
  4845  007E                     int$flags	set	126
  4846  007E                     wtemp0	set	126
  4847                           
  4848                           	psect	idloc
  4849                           
  4850                           ;Config register IDLOC0 @ 0x8000
  4851                           ;	unspecified, using default values
  4852  8000                     	org	32768
  4853  8000  3FFF               	dw	16383
  4854                           
  4855                           ;Config register IDLOC1 @ 0x8001
  4856                           ;	unspecified, using default values
  4857  8001                     	org	32769
  4858  8001  3FFF               	dw	16383
  4859                           
  4860                           ;Config register IDLOC2 @ 0x8002
  4861                           ;	unspecified, using default values
  4862  8002                     	org	32770
  4863  8002  3FFF               	dw	16383
  4864                           
  4865                           ;Config register IDLOC3 @ 0x8003
  4866                           ;	unspecified, using default values
  4867  8003                     	org	32771
  4868  8003  3FFF               	dw	16383
  4869                           
  4870                           	psect	config
  4871                           
  4872                           ;Config register CONFIG1 @ 0x8007
  4873                           ;	Oscillator Selection Bits
  4874                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4875                           ;	Watchdog Timer Enable
  4876                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  4877                           ;	Power-up Timer Enable
  4878                           ;	PWRTE = OFF, PWRT disabled
  4879                           ;	MCLR Pin Function Select
  4880                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4881                           ;	Flash Program Memory Code Protection
  4882                           ;	CP = OFF, Program memory code protection is disabled
  4883                           ;	Brown-out Reset Enable
  4884                           ;	BOREN = ON, Brown-out Reset enabled
  4885                           ;	Clock Out Enable
  4886                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4887                           ;	Internal/External Switchover Mode
  4888                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  4889                           ;	Fail-Safe Clock Monitor Enable
  4890                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4891  8007                     	org	32775
  4892  8007  3FAC               	dw	16300
  4893                           
  4894                           ;Config register CONFIG2 @ 0x8008
  4895                           ;	Flash Memory Self-Write Protection
  4896                           ;	WRT = OFF, Write protection off
  4897                           ;	Stack Overflow/Underflow Reset Enable
  4898                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4899                           ;	Brown-out Reset Voltage Selection
  4900                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4901                           ;	Low-Power Brown Out Reset
  4902                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4903                           ;	Low-Voltage Programming Enable
  4904                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4905  8008                     	org	32776
  4906  8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         34
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      4      39
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), Absolute function(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), Absolute function(), 

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), Absolute function(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), Absolute function(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefRdInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), Absolute function(), 


Critical Paths under _main in COMMON

    _main->_ADC_GetConversion
    _main->_sendDataToMaster
    _sendDataToMaster->_I2C_Write
    _I2C_Write->_I2C_SlaveSendTxData
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_Isr
    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_SlaveDefWrInterruptHandler->i1_I2C_SlaveSendTxData

Critical Paths under _main in BANK0

    _main->_sendDataToMaster

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     914
                                              2 BANK0      2     2      0
                  _ADC_GetConversion
                           _I2C_Read
                          _I2C_Write
                  _SYSTEM_Initialize
                _sendAllDataToMaster
                   _sendDataToMaster
 ---------------------------------------------------------------------------------
 (1) _sendDataToMaster                                     4     2      2     732
                                              5 COMMON     2     0      2
                                              0 BANK0      2     2      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      62
                                              4 COMMON     1     1      0
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (3) _I2C_SlaveSendTxData                                  1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendAllDataToMaster                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
                     _FVR_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveGetRxData                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     262
                   Absolute function *
                            _I2C_Isr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Isr                                              2     2      0      22
                                              1 COMMON     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                    _I2C_SlaveIsAddr
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
              _I2C_SlaveIsTxBufEmpty
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                _I2C_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveWrCallBack                                  0     0      0      22
                   Absolute function *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefWrInterruptHandler                       0     0      0      22
              i1_I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (8) i1_I2C_SlaveSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveReleaseClock                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveRdCallBack                                  0     0      0       0
                   Absolute function *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefRdInterruptHandler                       0     0      0       0
               i1_I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsTxBufEmpty                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsRxBufFull                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveIsAddr                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveClearIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveAddrCallBack                                0     0      0       0
                   Absolute function *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveDefAddrInterruptHandler                     0     0      0       0
               i1_I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (8) i1_I2C_SlaveGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _I2C_Read
     _I2C_SlaveGetRxData
   _I2C_Write
     _I2C_SlaveSendTxData
   _SYSTEM_Initialize
     _ADC_Initialize
     _FVR_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _sendAllDataToMaster
   _sendDataToMaster
     _I2C_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         i1_I2C_SlaveGetRxData
     _I2C_SlaveClearIrq
     _I2C_SlaveIsAddr
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsTxBufEmpty
     _I2C_SlaveRdCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefRdInterruptHandler *
         i1_I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveWrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefWrInterruptHandler *
         i1_I2C_SlaveSendTxData
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      31       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4      27       6       48.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      31      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 23:14:34 2023

                                      l61 004B                                        l62 004E  
                                      l63 0051                                        l73 0009  
                                      l67 005D                                        l78 0019  
                  __end_of_FVR_Initialize 0004                                       l213 0019  
                                     l310 0005                                       l332 0009  
                                     l181 0005                                       l350 001A  
                                     l360 0003                                       l280 0018  
                                     l184 0003                                       l178 0018  
                                     l610 0004                                       l347 0012  
                                     l613 0002                                       l480 0005  
                                     l468 0009                                       l477 0003  
                                     l638 0007                                       _PR2 001B  
                                     u570 0016                                       u571 0015  
                                     u990 000E                                       u991 000D  
                   ??_I2C_SlaveRdCallBack 0000              __end_ofi1_I2C_SlaveGetRxData 0003  
                         _timer1ReloadVal 0002                       _I2C_SlaveSendTxData 0000  
                         __end_of_I2C_Isr 0069                           _TMR2_Initialize 0000  
                                     wreg 0009                       _I2C_SlaveWrCallBack 0000  
                       _selectedReference 0002                                      l2201 0036  
                                    l2211 0059                                      l2203 003E  
                                    l2221 00AC                                      l2205 0046  
                                    l2213 005F                                      l2223 00AE  
                                    l2207 0054                                      l2215 0096  
                                    l2161 0001                                      l2225 00B9  
                                    l2217 0098                                      l2209 0056  
                                    l2171 0012                                      l2163 0000  
                                    l2227 00C2                                      l2219 00A1  
                                    l2173 0017                                      l2165 0003  
                                    l2229 00CD                                      l2181 0004  
                                    l2159 0001                                      l2167 0005  
                                    l2191 0010                                      l2183 0005  
                                    l1801 0015                                      l2169 000E  
                                    l2353 0067                                      l2193 0016  
                                    l2185 0007                                      l2177 0000  
                                    l2195 001E                                      l2187 000C  
                                    l2179 0003                                      l2197 0026  
                                    l2189 000D                                      l1751 0006  
                                    l1735 0000                                      l2199 002E  
                                    l1817 0000                                      l1753 0008  
                                    l1761 0009                                      l1747 0000  
                                    l1771 0000                                      l1763 000B  
                                    l1755 0000                                      l1781 0005  
                                    l1749 0002                                      l1773 0003  
                                    l1765 000E                                      l1757 0004  
                                    l1853 0000                                      l1855 0000  
                                    l1783 0006                                      l1767 0010  
                                    l1759 0007                                      l1791 0005  
                                    l1775 0000                                      l1881 0016  
                                    l1873 0001                                      l1777 0000  
                                    l1769 0015                                      l1793 0000  
                                    l1785 0000                                      l1875 000B  
                                    l1779 0000                                      l1795 0007  
                                    l1787 0003                                      l1877 000C  
                                    l1797 000C                                      l1789 0004  
                                    l1879 0010                                      l1799 000E  
                                    u1000 0012                                      u1001 0011  
                                    u1010 000C                                      u1011 000B  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      u1267 000D  
                                    _TMR2 001A                                      _WPUA 020C  
                                    _WPUB 020D                   __end_of_I2C_SlaveIsAddr 0007  
                 __end_of_I2C_SlaveIsRead 0005                                      _main 0000  
                        __end_of_I2C_Read 0004                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                                    btemp 007E                      ?_I2C_SlaveSendTxData 0000  
                                    start 0000*                     ?_I2C_SlaveWrCallBack 0000  
              ??_TMR1_SetInterruptHandler 0005             __end_of_I2C_SlaveAddrCallBack 000D  
                         ?_FVR_Initialize 0000             __end_of_OSCILLATOR_Initialize 0006  
__end_of_I2C_SlaveDefAddrInterruptHandler 0006        ??_I2C_SlaveDefAddrInterruptHandler 0000  
       ?_I2C_SlaveDefAddrInterruptHandler 0000          _I2C_SlaveDefAddrInterruptHandler 0000  
                                   ?_main 0000                                     _T1CON 0018  
                                   _T2CON 001C                                     i1l313 0000  
                                   i1l307 0015                                     i1l253 002F  
                                   i1l246 0016                                     i1l511 0068  
                                   i1l247 002F                                     i1l248 0021  
                                   i1l521 000C                                     i1l610 0004  
                                   i1l531 000C                                     i1l604 0006  
                                   i1l524 0005                                     i1l613 0002  
                                   i1l541 000C                                     i1l534 0004  
                                   i1l294 0010                                     i1l607 0003  
                                   i1l544 0005                                     i1l583 0006  
                                   i1l592 0002                                     i1l586 0004  
                                   i1l589 0002                     _I2C_SlaveReleaseClock 0000  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   u51_20 0005                                     u51_21 0004  
                                   u52_20 0007                                     u60_20 0013  
                                   u52_21 0006                                     u60_21 0012  
                                   u53_20 0007                                     u61_20 0021  
                                   u53_21 0006                                     u61_21 0020  
                                   u54_20 0007                                     u62_20 0032  
                                   u54_21 0006                                     u62_21 0031  
                                   u63_20 0042                                     u63_21 0041  
                                   u64_20 004B                                     u64_21 004A  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                                     u58_20 0010  
                                   u90_20 0006                                     u58_21 000F  
                                   u90_21 0005                                     u59_20 000B  
                                   u91_20 000B                                     u59_21 000A  
                                   u91_21 000A                                     u92_20 0010  
                                   u92_21 000F                                     u93_20 001B  
                                   u93_21 001A                                     u94_20 0020  
                                   u94_21 001F                                     u95_20 0026  
                                   u95_21 0025                                     u96_20 002B  
                                   u96_21 002A                          __end_of_TMR1_ISR 0016  
                  ??_I2C_SlaveIsRxBufFull 0000                            _WDT_Initialize 0000  
                 __end_of_TMR1_Initialize 0019                         __end_of_I2C_Write 0006  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                     ??_I2C_SlaveSendTxData 0003  
                         _TMR1_WriteTimer 0000                     ??_I2C_SlaveWrCallBack 0001  
                         __initialization 0000                              __end_of_main 00D2  
                 __end_of_TMR2_Initialize 0008               ?_INTERRUPT_InterruptManager 0000  
                               ??_I2C_Isr 0001             __end_ofi1_I2C_SlaveSendTxData 0005  
                                  ??_main 0002                       _sendAllDataToMaster 0000* 
                  __end_of_WDT_Initialize 0004               _I2C_SlaveRdInterruptHandler 0017  
             _I2C_SlaveWrInterruptHandler 0015                __end_of_I2C_SlaveGetRxData 0003  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  _T1GCON 0019                        _currentlyBalancing 001D  
                 TMR1_WriteTimer@timerVal 0000                                    i1l2071 0002  
                                  i1l2073 0006                                    i1l2083 0026  
                                  i1l2075 000B                                    i1l2085 002B  
                                  i1l2077 0010                                    i1l2079 001B  
                                  i1l1731 0000                                    i1l2355 0057  
                                  i1l1811 000A                                    i1l1803 0000  
                                  i1l1821 0000                                    i1l1741 0000  
                                  i1l1901 0016                                    i1l1805 0005  
                                  i1l1813 000C                                    i1l1743 0000  
                                  i1l1831 0000                                    i1l1911 002A  
                                  i1l1903 0019                                    i1l1815 000E  
                                  i1l1807 0006                                    i1l1833 0007  
                                  i1l1825 0000                                    i1l1729 0001  
                                  i1l1841 0007                                    i1l1921 0043  
                                  i1l1913 0032                                    i1l1905 0021  
                                  i1l1809 0008                                    i1l1827 0000  
                                  i1l1843 0000                                    i1l1835 0000  
                                  i1l1739 0000                                    i1l1851 0000  
                                  i1l1923 004B                                    i1l1915 0036  
                                  i1l1907 0024                                    i1l1917 003A  
                                  i1l1909 0027                                    i1l1847 0000  
                                  i1l1839 0000                                    i1l1927 004F  
                                  i1l1849 0007                                    i1l1929 0065  
                                  i1l1891 0010                                    i1l1893 0000  
                                  i1l1885 0000                                    i1l1895 0003  
                                  i1l1887 0002                                    i1l1897 000B  
                                  i1l1889 0009                                    i1l1899 0013  
                                  _FVRCON 0117                                    _OSCCON 0099  
                        ?_I2C_SlaveIsAddr 0000                                    _WDTCON 0097  
                    ?_sendAllDataToMaster 0000                          ?_I2C_SlaveIsRead 0000  
                    i1_I2C_SlaveGetRxData 0000                  __end_of_sendDataToMaster 001A  
    __end_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0000  
                                  _memory 0000                                    _safety 0000  
                  ?_I2C_SlaveReleaseClock 0000                   ??_I2C_SlaveIsTxBufEmpty 0000  
                               ?_I2C_Read 0000                           ?_WDT_Initialize 0000  
                ADC_GetConversion@channel 0006  TMR1_SetInterruptHandler@InterruptHandler 0003  
                 __end_of_TMR1_WriteTimer 0011                          ?_TMR1_Initialize 0000  
                       _SYSTEM_Initialize 0000                     ??_sendAllDataToMaster 0000  
                 __end_of__initialization 000B                        ?_SYSTEM_Initialize 0000  
                   ?i1_I2C_SlaveGetRxData 0000                            __pcstackCOMMON 0000  
                     ??_SYSTEM_Initialize 0005                                 ?_TMR1_ISR 0000  
           ?_TMR1_DefaultInterruptHandler 0000                          ?_TMR2_Initialize 0000  
                          _OPTION_REGbits 0095                                ??_I2C_Read 0003  
               __end_of_SYSTEM_Initialize 0019                                __pbssBANK0 0000  
                        ??_FVR_Initialize 0003                                __pmaintext 0000  
                              ??_TMR1_ISR 0002                                __pintentry 0000  
             __end_of_I2C_SlaveRdCallBack 000D                                   _I2C_Isr 0000  
                                 _SSP1ADD 0212                                   _SSP1BUF 0211  
                                 _SSP1MSK 0213                          ?_TMR1_WriteTimer 0000  
                    sendDataToMaster@high 0000                    ??i1_I2C_SlaveGetRxData 0000  
                               _I2C_Write 0000                      _ADC_InterruptHandler 000D  
                 I2C_SlaveSendTxData@data 0003                     _I2C_SlaveAddrCallBack 0000  
                          _I2C_Initialize 0000                                   __ptext1 0000  
                                 __ptext2 0000                                   __ptext3 0000  
                                 __ptext4 0000                                   __ptext5 0000  
                                 __ptext6 0000                                   __ptext7 0000  
                                 __ptext8 0000                                   __ptext9 0000  
          ??_TMR1_DefaultInterruptHandler 0000                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 0000                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0003                 ?_TMR1_SetInterruptHandler 0003  
               i1I2C_SlaveSendTxData@data 0000                                   clrloop0 0001  
             __end_of_I2C_SlaveSendTxData 0005                      end_of_initialization 000B  
             __end_of_I2C_SlaveWrCallBack 000D                                ?_I2C_Write 0000  
                      _I2C_SlaveGetRxData 0000                              _i2cSlaveAddr 001B  
                       ?_sendDataToMaster 0005                    __end_of_I2C_Initialize 000A  
                 ??_I2C_SlaveReleaseClock 0000                        ??_sendDataToMaster 0007  
                     ?_I2C_SlaveGetRxData 0000                          ??_WDT_Initialize 0003  
                   i1_I2C_SlaveSendTxData 0000             __end_of_I2C_SlaveIsTxBufEmpty 0007  
                    ??_I2C_SlaveGetRxData 0003                    sendDataToMaster@toSend 0005  
                  ?_I2C_SlaveAddrCallBack 0000                           ?_I2C_Initialize 0000  
                             _I2C_Command 001E                            _ADC_Initialize 0000  
                               _i2cRdData 001C                    ?_OSCILLATOR_Initialize 0000  
                          __end_of_safety 0010                                 _i2cWrData 0001  
                     start_initialization 0000                               ??_I2C_Write 0004  
                  __end_of_ADC_Initialize 000A                                  ?_I2C_Isr 0000  
                  ?i1_I2C_SlaveSendTxData 0000                               __pbssCOMMON 0000  
                               ___latbits 0001                             __pcstackBANK0 0000  
                               __pnvBANK0 0000                    _PIN_MANAGER_Initialize 0000  
        __end_of_TMR1_SetInterruptHandler 0006                           ?_ADC_Initialize 0000  
            ??_INTERRUPT_InterruptManager 0003                         ??_I2C_SlaveIsAddr 0000  
                       ??_I2C_SlaveIsRead 0000          ??_I2C_SlaveDefRdInterruptHandler 0000  
         ?_I2C_SlaveDefRdInterruptHandler 0000          ??_I2C_SlaveDefWrInterruptHandler 0001  
         ?_I2C_SlaveDefWrInterruptHandler 0000                       sendDataToMaster@low 0001  
                                _I2C_Read 0000                                 clear_ram0 0000  
                                _PIE1bits 0091                                  _PIE2bits 0092  
                       _I2C_SlaveClearIrq 0000                                  _PIR1bits 0011  
                                _PIR2bits 0012                        ?_I2C_SlaveClearIrq 0000  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
            __end_of_I2C_SlaveIsRxBufFull 0004                                  _TMR1_ISR 0000  
                                _SSP1STAT 0214             __end_of_I2C_SlaveReleaseClock 0003  
                     ??_I2C_SlaveClearIrq 0000                         ??_TMR1_Initialize 0005  
                              _ADCON0bits 009D         _I2C_SlaveDefWrColInterruptHandler 0000  
                       ??_TMR2_Initialize 0003                 __end_of_I2C_SlaveClearIrq 0003  
                        ??_I2C_Initialize 0003                   ??_I2C_SlaveAddrCallBack 0000  
                       _ADC_GetConversion 0000                             I2C_Write@data 0004  
                 ??_OSCILLATOR_Initialize 0003                        ?_ADC_GetConversion 0003  
           _I2C_SlaveAddrInterruptHandler 0013                  _TMR1_SetInterruptHandler 0000  
      _I2C_SlaveDefBusColInterruptHandler 0000                     _TMR1_InterruptHandler 0000  
                     ??_ADC_GetConversion 0005            _I2C_SlaveWrColInterruptHandler 000F  
                                __ptext10 0000                                  __ptext11 0000  
                                __ptext20 0000                                  __ptext12 0000  
                                __ptext21 0000                                  __ptext13 0000  
                              _T1GCONbits 0019                                  __ptext30 0000  
                                __ptext22 0000                                  __ptext14 0000  
                                __ptext31 0000                                  __ptext23 0000  
                                __ptext15 0000                                  __ptext32 0000  
                                __ptext24 0000                                  __ptext16 0000  
                                __ptext33 0000                                  __ptext25 0000  
                                __ptext34 0000                                  __ptext26 0000  
                                __ptext18 0000                                  __ptext35 0000  
                                __ptext27 0000                                  __ptext19 0000  
                                __ptext28 0000                                  __ptext29 0000  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
                   _I2C_SlaveIsTxBufEmpty 0000                 __end_of_ADC_GetConversion 001B  
                                int$flags 007E                   ??i1_I2C_SlaveSendTxData 0000  
      __end_of_INTERRUPT_InterruptManager 0031                _INTERRUPT_InterruptManager 0000  
                            _SSP1STATbits 0214                         ??_TMR1_WriteTimer 0002  
                              _INTCONbits 000B                                _FVRCONbits 0117  
                    _I2C_SlaveIsRxBufFull 0000                                  intlevel1 0000* 
         _I2C_SlaveBusColInterruptHandler 0011                   ?_PIN_MANAGER_Initialize 0000  
                     _I2C_SlaveRdCallBack 0000                          ??_ADC_Initialize 0003  
                         _I2C_SlaveIsAddr 0000                           _I2C_SlaveIsRead 0000  
                           _i2cSlaveState 0000                             __pstringtext1 0000  
                          _FVR_Initialize 0000                      ?_I2C_SlaveRdCallBack 0000  
                        _sendDataToMaster 0000                    ?_I2C_SlaveIsTxBufEmpty 0000  
                              _WDTCONbits 0097                     ?_I2C_SlaveIsRxBufFull 0000  
          __end_of_PIN_MANAGER_Initialize 001A    __end_of_I2C_SlaveDefRdInterruptHandler 0006  
          _I2C_SlaveDefRdInterruptHandler 0000    __end_of_I2C_SlaveDefWrInterruptHandler 0005  
          _I2C_SlaveDefWrInterruptHandler 0000                     _MSSP_InterruptHandler 0019  
                         _TMR1_Initialize 0000  
