

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Apr 01 18:09:13 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1508
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51     0000                     
    52                           ; Version 2.40
    53                           ; Generated 17/11/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1508 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87     0000                     	;# 
    88     0001                     	;# 
    89     0002                     	;# 
    90     0003                     	;# 
    91     0004                     	;# 
    92     0005                     	;# 
    93     0006                     	;# 
    94     0007                     	;# 
    95     0008                     	;# 
    96     0009                     	;# 
    97     000A                     	;# 
    98     000B                     	;# 
    99     000C                     	;# 
   100     000D                     	;# 
   101     000E                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0015                     	;# 
   106     0016                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001C                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     009F                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011D                     	;# 
   144     018C                     	;# 
   145     018D                     	;# 
   146     018E                     	;# 
   147     0191                     	;# 
   148     0191                     	;# 
   149     0192                     	;# 
   150     0193                     	;# 
   151     0193                     	;# 
   152     0194                     	;# 
   153     0195                     	;# 
   154     0196                     	;# 
   155     0197                     	;# 
   156     0199                     	;# 
   157     019A                     	;# 
   158     019B                     	;# 
   159     019B                     	;# 
   160     019C                     	;# 
   161     019D                     	;# 
   162     019E                     	;# 
   163     019F                     	;# 
   164     020C                     	;# 
   165     020D                     	;# 
   166     0211                     	;# 
   167     0211                     	;# 
   168     0212                     	;# 
   169     0212                     	;# 
   170     0213                     	;# 
   171     0213                     	;# 
   172     0214                     	;# 
   173     0214                     	;# 
   174     0215                     	;# 
   175     0215                     	;# 
   176     0215                     	;# 
   177     0216                     	;# 
   178     0216                     	;# 
   179     0217                     	;# 
   180     0217                     	;# 
   181     0391                     	;# 
   182     0392                     	;# 
   183     0393                     	;# 
   184     0394                     	;# 
   185     0395                     	;# 
   186     0396                     	;# 
   187     0498                     	;# 
   188     0498                     	;# 
   189     0499                     	;# 
   190     049A                     	;# 
   191     049B                     	;# 
   192     049B                     	;# 
   193     049C                     	;# 
   194     049D                     	;# 
   195     049E                     	;# 
   196     049F                     	;# 
   197     0611                     	;# 
   198     0612                     	;# 
   199     0613                     	;# 
   200     0613                     	;# 
   201     0614                     	;# 
   202     0615                     	;# 
   203     0616                     	;# 
   204     0616                     	;# 
   205     0617                     	;# 
   206     0618                     	;# 
   207     0619                     	;# 
   208     0619                     	;# 
   209     061A                     	;# 
   210     061B                     	;# 
   211     061C                     	;# 
   212     061C                     	;# 
   213     0691                     	;# 
   214     0692                     	;# 
   215     0693                     	;# 
   216     0694                     	;# 
   217     0695                     	;# 
   218     0F0F                     	;# 
   219     0F10                     	;# 
   220     0F11                     	;# 
   221     0F12                     	;# 
   222     0F13                     	;# 
   223     0F14                     	;# 
   224     0F15                     	;# 
   225     0F16                     	;# 
   226     0F17                     	;# 
   227     0F18                     	;# 
   228     0F19                     	;# 
   229     0F1A                     	;# 
   230     0F1B                     	;# 
   231     0F1C                     	;# 
   232     0F1D                     	;# 
   233     0F1E                     	;# 
   234     0F1F                     	;# 
   235     0F20                     	;# 
   236     0F21                     	;# 
   237     0F22                     	;# 
   238     0F23                     	;# 
   239     0F24                     	;# 
   240     0F25                     	;# 
   241     0F26                     	;# 
   242     0F27                     	;# 
   243     0F28                     	;# 
   244     0F29                     	;# 
   245     0F2A                     	;# 
   246     0F2B                     	;# 
   247     0F2C                     	;# 
   248     0F2D                     	;# 
   249     0F2E                     	;# 
   250     0F2F                     	;# 
   251     0F8C                     	;# 
   252     0F8D                     	;# 
   253     0F91                     	;# 
   254     0F95                     	;# 
   255     0F96                     	;# 
   256     0F97                     	;# 
   257     0F9C                     	;# 
   258     0F9D                     	;# 
   259     0F9E                     	;# 
   260     0FE3                     	;# 
   261     0FE4                     	;# 
   262     0FE5                     	;# 
   263     0FE6                     	;# 
   264     0FE7                     	;# 
   265     0FE8                     	;# 
   266     0FE9                     	;# 
   267     0FEA                     	;# 
   268     0FEB                     	;# 
   269     0FED                     	;# 
   270     0FEE                     	;# 
   271     0FEF                     	;# 
   272     0000                     	;# 
   273     0001                     	;# 
   274     0002                     	;# 
   275     0003                     	;# 
   276     0004                     	;# 
   277     0005                     	;# 
   278     0006                     	;# 
   279     0007                     	;# 
   280     0008                     	;# 
   281     0009                     	;# 
   282     000A                     	;# 
   283     000B                     	;# 
   284     000C                     	;# 
   285     000D                     	;# 
   286     000E                     	;# 
   287     0011                     	;# 
   288     0012                     	;# 
   289     0013                     	;# 
   290     0015                     	;# 
   291     0016                     	;# 
   292     0016                     	;# 
   293     0017                     	;# 
   294     0018                     	;# 
   295     0019                     	;# 
   296     001A                     	;# 
   297     001B                     	;# 
   298     001C                     	;# 
   299     008C                     	;# 
   300     008D                     	;# 
   301     008E                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0095                     	;# 
   306     0096                     	;# 
   307     0097                     	;# 
   308     0099                     	;# 
   309     009A                     	;# 
   310     009B                     	;# 
   311     009B                     	;# 
   312     009C                     	;# 
   313     009D                     	;# 
   314     009E                     	;# 
   315     009F                     	;# 
   316     010C                     	;# 
   317     010D                     	;# 
   318     010E                     	;# 
   319     0111                     	;# 
   320     0112                     	;# 
   321     0113                     	;# 
   322     0114                     	;# 
   323     0115                     	;# 
   324     0116                     	;# 
   325     0117                     	;# 
   326     0118                     	;# 
   327     0119                     	;# 
   328     011D                     	;# 
   329     018C                     	;# 
   330     018D                     	;# 
   331     018E                     	;# 
   332     0191                     	;# 
   333     0191                     	;# 
   334     0192                     	;# 
   335     0193                     	;# 
   336     0193                     	;# 
   337     0194                     	;# 
   338     0195                     	;# 
   339     0196                     	;# 
   340     0197                     	;# 
   341     0199                     	;# 
   342     019A                     	;# 
   343     019B                     	;# 
   344     019B                     	;# 
   345     019C                     	;# 
   346     019D                     	;# 
   347     019E                     	;# 
   348     019F                     	;# 
   349     020C                     	;# 
   350     020D                     	;# 
   351     0211                     	;# 
   352     0211                     	;# 
   353     0212                     	;# 
   354     0212                     	;# 
   355     0213                     	;# 
   356     0213                     	;# 
   357     0214                     	;# 
   358     0214                     	;# 
   359     0215                     	;# 
   360     0215                     	;# 
   361     0215                     	;# 
   362     0216                     	;# 
   363     0216                     	;# 
   364     0217                     	;# 
   365     0217                     	;# 
   366     0391                     	;# 
   367     0392                     	;# 
   368     0393                     	;# 
   369     0394                     	;# 
   370     0395                     	;# 
   371     0396                     	;# 
   372     0498                     	;# 
   373     0498                     	;# 
   374     0499                     	;# 
   375     049A                     	;# 
   376     049B                     	;# 
   377     049B                     	;# 
   378     049C                     	;# 
   379     049D                     	;# 
   380     049E                     	;# 
   381     049F                     	;# 
   382     0611                     	;# 
   383     0612                     	;# 
   384     0613                     	;# 
   385     0613                     	;# 
   386     0614                     	;# 
   387     0615                     	;# 
   388     0616                     	;# 
   389     0616                     	;# 
   390     0617                     	;# 
   391     0618                     	;# 
   392     0619                     	;# 
   393     0619                     	;# 
   394     061A                     	;# 
   395     061B                     	;# 
   396     061C                     	;# 
   397     061C                     	;# 
   398     0691                     	;# 
   399     0692                     	;# 
   400     0693                     	;# 
   401     0694                     	;# 
   402     0695                     	;# 
   403     0F0F                     	;# 
   404     0F10                     	;# 
   405     0F11                     	;# 
   406     0F12                     	;# 
   407     0F13                     	;# 
   408     0F14                     	;# 
   409     0F15                     	;# 
   410     0F16                     	;# 
   411     0F17                     	;# 
   412     0F18                     	;# 
   413     0F19                     	;# 
   414     0F1A                     	;# 
   415     0F1B                     	;# 
   416     0F1C                     	;# 
   417     0F1D                     	;# 
   418     0F1E                     	;# 
   419     0F1F                     	;# 
   420     0F20                     	;# 
   421     0F21                     	;# 
   422     0F22                     	;# 
   423     0F23                     	;# 
   424     0F24                     	;# 
   425     0F25                     	;# 
   426     0F26                     	;# 
   427     0F27                     	;# 
   428     0F28                     	;# 
   429     0F29                     	;# 
   430     0F2A                     	;# 
   431     0F2B                     	;# 
   432     0F2C                     	;# 
   433     0F2D                     	;# 
   434     0F2E                     	;# 
   435     0F2F                     	;# 
   436     0F8C                     	;# 
   437     0F8D                     	;# 
   438     0F91                     	;# 
   439     0F95                     	;# 
   440     0F96                     	;# 
   441     0F97                     	;# 
   442     0F9C                     	;# 
   443     0F9D                     	;# 
   444     0F9E                     	;# 
   445     0FE3                     	;# 
   446     0FE4                     	;# 
   447     0FE5                     	;# 
   448     0FE6                     	;# 
   449     0FE7                     	;# 
   450     0FE8                     	;# 
   451     0FE9                     	;# 
   452     0FEA                     	;# 
   453     0FEB                     	;# 
   454     0FED                     	;# 
   455     0FEE                     	;# 
   456     0FEF                     	;# 
   457     0000                     	;# 
   458     0001                     	;# 
   459     0002                     	;# 
   460     0003                     	;# 
   461     0004                     	;# 
   462     0005                     	;# 
   463     0006                     	;# 
   464     0007                     	;# 
   465     0008                     	;# 
   466     0009                     	;# 
   467     000A                     	;# 
   468     000B                     	;# 
   469     000C                     	;# 
   470     000D                     	;# 
   471     000E                     	;# 
   472     0011                     	;# 
   473     0012                     	;# 
   474     0013                     	;# 
   475     0015                     	;# 
   476     0016                     	;# 
   477     0016                     	;# 
   478     0017                     	;# 
   479     0018                     	;# 
   480     0019                     	;# 
   481     001A                     	;# 
   482     001B                     	;# 
   483     001C                     	;# 
   484     008C                     	;# 
   485     008D                     	;# 
   486     008E                     	;# 
   487     0091                     	;# 
   488     0092                     	;# 
   489     0093                     	;# 
   490     0095                     	;# 
   491     0096                     	;# 
   492     0097                     	;# 
   493     0099                     	;# 
   494     009A                     	;# 
   495     009B                     	;# 
   496     009B                     	;# 
   497     009C                     	;# 
   498     009D                     	;# 
   499     009E                     	;# 
   500     009F                     	;# 
   501     010C                     	;# 
   502     010D                     	;# 
   503     010E                     	;# 
   504     0111                     	;# 
   505     0112                     	;# 
   506     0113                     	;# 
   507     0114                     	;# 
   508     0115                     	;# 
   509     0116                     	;# 
   510     0117                     	;# 
   511     0118                     	;# 
   512     0119                     	;# 
   513     011D                     	;# 
   514     018C                     	;# 
   515     018D                     	;# 
   516     018E                     	;# 
   517     0191                     	;# 
   518     0191                     	;# 
   519     0192                     	;# 
   520     0193                     	;# 
   521     0193                     	;# 
   522     0194                     	;# 
   523     0195                     	;# 
   524     0196                     	;# 
   525     0197                     	;# 
   526     0199                     	;# 
   527     019A                     	;# 
   528     019B                     	;# 
   529     019B                     	;# 
   530     019C                     	;# 
   531     019D                     	;# 
   532     019E                     	;# 
   533     019F                     	;# 
   534     020C                     	;# 
   535     020D                     	;# 
   536     0211                     	;# 
   537     0211                     	;# 
   538     0212                     	;# 
   539     0212                     	;# 
   540     0213                     	;# 
   541     0213                     	;# 
   542     0214                     	;# 
   543     0214                     	;# 
   544     0215                     	;# 
   545     0215                     	;# 
   546     0215                     	;# 
   547     0216                     	;# 
   548     0216                     	;# 
   549     0217                     	;# 
   550     0217                     	;# 
   551     0391                     	;# 
   552     0392                     	;# 
   553     0393                     	;# 
   554     0394                     	;# 
   555     0395                     	;# 
   556     0396                     	;# 
   557     0498                     	;# 
   558     0498                     	;# 
   559     0499                     	;# 
   560     049A                     	;# 
   561     049B                     	;# 
   562     049B                     	;# 
   563     049C                     	;# 
   564     049D                     	;# 
   565     049E                     	;# 
   566     049F                     	;# 
   567     0611                     	;# 
   568     0612                     	;# 
   569     0613                     	;# 
   570     0613                     	;# 
   571     0614                     	;# 
   572     0615                     	;# 
   573     0616                     	;# 
   574     0616                     	;# 
   575     0617                     	;# 
   576     0618                     	;# 
   577     0619                     	;# 
   578     0619                     	;# 
   579     061A                     	;# 
   580     061B                     	;# 
   581     061C                     	;# 
   582     061C                     	;# 
   583     0691                     	;# 
   584     0692                     	;# 
   585     0693                     	;# 
   586     0694                     	;# 
   587     0695                     	;# 
   588     0F0F                     	;# 
   589     0F10                     	;# 
   590     0F11                     	;# 
   591     0F12                     	;# 
   592     0F13                     	;# 
   593     0F14                     	;# 
   594     0F15                     	;# 
   595     0F16                     	;# 
   596     0F17                     	;# 
   597     0F18                     	;# 
   598     0F19                     	;# 
   599     0F1A                     	;# 
   600     0F1B                     	;# 
   601     0F1C                     	;# 
   602     0F1D                     	;# 
   603     0F1E                     	;# 
   604     0F1F                     	;# 
   605     0F20                     	;# 
   606     0F21                     	;# 
   607     0F22                     	;# 
   608     0F23                     	;# 
   609     0F24                     	;# 
   610     0F25                     	;# 
   611     0F26                     	;# 
   612     0F27                     	;# 
   613     0F28                     	;# 
   614     0F29                     	;# 
   615     0F2A                     	;# 
   616     0F2B                     	;# 
   617     0F2C                     	;# 
   618     0F2D                     	;# 
   619     0F2E                     	;# 
   620     0F2F                     	;# 
   621     0F8C                     	;# 
   622     0F8D                     	;# 
   623     0F91                     	;# 
   624     0F95                     	;# 
   625     0F96                     	;# 
   626     0F97                     	;# 
   627     0F9C                     	;# 
   628     0F9D                     	;# 
   629     0F9E                     	;# 
   630     0FE3                     	;# 
   631     0FE4                     	;# 
   632     0FE5                     	;# 
   633     0FE6                     	;# 
   634     0FE7                     	;# 
   635     0FE8                     	;# 
   636     0FE9                     	;# 
   637     0FEA                     	;# 
   638     0FEB                     	;# 
   639     0FED                     	;# 
   640     0FEE                     	;# 
   641     0FEF                     	;# 
   642     0000                     	;# 
   643     0001                     	;# 
   644     0002                     	;# 
   645     0003                     	;# 
   646     0004                     	;# 
   647     0005                     	;# 
   648     0006                     	;# 
   649     0007                     	;# 
   650     0008                     	;# 
   651     0009                     	;# 
   652     000A                     	;# 
   653     000B                     	;# 
   654     000C                     	;# 
   655     000D                     	;# 
   656     000E                     	;# 
   657     0011                     	;# 
   658     0012                     	;# 
   659     0013                     	;# 
   660     0015                     	;# 
   661     0016                     	;# 
   662     0016                     	;# 
   663     0017                     	;# 
   664     0018                     	;# 
   665     0019                     	;# 
   666     001A                     	;# 
   667     001B                     	;# 
   668     001C                     	;# 
   669     008C                     	;# 
   670     008D                     	;# 
   671     008E                     	;# 
   672     0091                     	;# 
   673     0092                     	;# 
   674     0093                     	;# 
   675     0095                     	;# 
   676     0096                     	;# 
   677     0097                     	;# 
   678     0099                     	;# 
   679     009A                     	;# 
   680     009B                     	;# 
   681     009B                     	;# 
   682     009C                     	;# 
   683     009D                     	;# 
   684     009E                     	;# 
   685     009F                     	;# 
   686     010C                     	;# 
   687     010D                     	;# 
   688     010E                     	;# 
   689     0111                     	;# 
   690     0112                     	;# 
   691     0113                     	;# 
   692     0114                     	;# 
   693     0115                     	;# 
   694     0116                     	;# 
   695     0117                     	;# 
   696     0118                     	;# 
   697     0119                     	;# 
   698     011D                     	;# 
   699     018C                     	;# 
   700     018D                     	;# 
   701     018E                     	;# 
   702     0191                     	;# 
   703     0191                     	;# 
   704     0192                     	;# 
   705     0193                     	;# 
   706     0193                     	;# 
   707     0194                     	;# 
   708     0195                     	;# 
   709     0196                     	;# 
   710     0197                     	;# 
   711     0199                     	;# 
   712     019A                     	;# 
   713     019B                     	;# 
   714     019B                     	;# 
   715     019C                     	;# 
   716     019D                     	;# 
   717     019E                     	;# 
   718     019F                     	;# 
   719     020C                     	;# 
   720     020D                     	;# 
   721     0211                     	;# 
   722     0211                     	;# 
   723     0212                     	;# 
   724     0212                     	;# 
   725     0213                     	;# 
   726     0213                     	;# 
   727     0214                     	;# 
   728     0214                     	;# 
   729     0215                     	;# 
   730     0215                     	;# 
   731     0215                     	;# 
   732     0216                     	;# 
   733     0216                     	;# 
   734     0217                     	;# 
   735     0217                     	;# 
   736     0391                     	;# 
   737     0392                     	;# 
   738     0393                     	;# 
   739     0394                     	;# 
   740     0395                     	;# 
   741     0396                     	;# 
   742     0498                     	;# 
   743     0498                     	;# 
   744     0499                     	;# 
   745     049A                     	;# 
   746     049B                     	;# 
   747     049B                     	;# 
   748     049C                     	;# 
   749     049D                     	;# 
   750     049E                     	;# 
   751     049F                     	;# 
   752     0611                     	;# 
   753     0612                     	;# 
   754     0613                     	;# 
   755     0613                     	;# 
   756     0614                     	;# 
   757     0615                     	;# 
   758     0616                     	;# 
   759     0616                     	;# 
   760     0617                     	;# 
   761     0618                     	;# 
   762     0619                     	;# 
   763     0619                     	;# 
   764     061A                     	;# 
   765     061B                     	;# 
   766     061C                     	;# 
   767     061C                     	;# 
   768     0691                     	;# 
   769     0692                     	;# 
   770     0693                     	;# 
   771     0694                     	;# 
   772     0695                     	;# 
   773     0F0F                     	;# 
   774     0F10                     	;# 
   775     0F11                     	;# 
   776     0F12                     	;# 
   777     0F13                     	;# 
   778     0F14                     	;# 
   779     0F15                     	;# 
   780     0F16                     	;# 
   781     0F17                     	;# 
   782     0F18                     	;# 
   783     0F19                     	;# 
   784     0F1A                     	;# 
   785     0F1B                     	;# 
   786     0F1C                     	;# 
   787     0F1D                     	;# 
   788     0F1E                     	;# 
   789     0F1F                     	;# 
   790     0F20                     	;# 
   791     0F21                     	;# 
   792     0F22                     	;# 
   793     0F23                     	;# 
   794     0F24                     	;# 
   795     0F25                     	;# 
   796     0F26                     	;# 
   797     0F27                     	;# 
   798     0F28                     	;# 
   799     0F29                     	;# 
   800     0F2A                     	;# 
   801     0F2B                     	;# 
   802     0F2C                     	;# 
   803     0F2D                     	;# 
   804     0F2E                     	;# 
   805     0F2F                     	;# 
   806     0F8C                     	;# 
   807     0F8D                     	;# 
   808     0F91                     	;# 
   809     0F95                     	;# 
   810     0F96                     	;# 
   811     0F97                     	;# 
   812     0F9C                     	;# 
   813     0F9D                     	;# 
   814     0F9E                     	;# 
   815     0FE3                     	;# 
   816     0FE4                     	;# 
   817     0FE5                     	;# 
   818     0FE6                     	;# 
   819     0FE7                     	;# 
   820     0FE8                     	;# 
   821     0FE9                     	;# 
   822     0FEA                     	;# 
   823     0FEB                     	;# 
   824     0FED                     	;# 
   825     0FEE                     	;# 
   826     0FEF                     	;# 
   827     0000                     	;# 
   828     0001                     	;# 
   829     0002                     	;# 
   830     0003                     	;# 
   831     0004                     	;# 
   832     0005                     	;# 
   833     0006                     	;# 
   834     0007                     	;# 
   835     0008                     	;# 
   836     0009                     	;# 
   837     000A                     	;# 
   838     000B                     	;# 
   839     000C                     	;# 
   840     000D                     	;# 
   841     000E                     	;# 
   842     0011                     	;# 
   843     0012                     	;# 
   844     0013                     	;# 
   845     0015                     	;# 
   846     0016                     	;# 
   847     0016                     	;# 
   848     0017                     	;# 
   849     0018                     	;# 
   850     0019                     	;# 
   851     001A                     	;# 
   852     001B                     	;# 
   853     001C                     	;# 
   854     008C                     	;# 
   855     008D                     	;# 
   856     008E                     	;# 
   857     0091                     	;# 
   858     0092                     	;# 
   859     0093                     	;# 
   860     0095                     	;# 
   861     0096                     	;# 
   862     0097                     	;# 
   863     0099                     	;# 
   864     009A                     	;# 
   865     009B                     	;# 
   866     009B                     	;# 
   867     009C                     	;# 
   868     009D                     	;# 
   869     009E                     	;# 
   870     009F                     	;# 
   871     010C                     	;# 
   872     010D                     	;# 
   873     010E                     	;# 
   874     0111                     	;# 
   875     0112                     	;# 
   876     0113                     	;# 
   877     0114                     	;# 
   878     0115                     	;# 
   879     0116                     	;# 
   880     0117                     	;# 
   881     0118                     	;# 
   882     0119                     	;# 
   883     011D                     	;# 
   884     018C                     	;# 
   885     018D                     	;# 
   886     018E                     	;# 
   887     0191                     	;# 
   888     0191                     	;# 
   889     0192                     	;# 
   890     0193                     	;# 
   891     0193                     	;# 
   892     0194                     	;# 
   893     0195                     	;# 
   894     0196                     	;# 
   895     0197                     	;# 
   896     0199                     	;# 
   897     019A                     	;# 
   898     019B                     	;# 
   899     019B                     	;# 
   900     019C                     	;# 
   901     019D                     	;# 
   902     019E                     	;# 
   903     019F                     	;# 
   904     020C                     	;# 
   905     020D                     	;# 
   906     0211                     	;# 
   907     0211                     	;# 
   908     0212                     	;# 
   909     0212                     	;# 
   910     0213                     	;# 
   911     0213                     	;# 
   912     0214                     	;# 
   913     0214                     	;# 
   914     0215                     	;# 
   915     0215                     	;# 
   916     0215                     	;# 
   917     0216                     	;# 
   918     0216                     	;# 
   919     0217                     	;# 
   920     0217                     	;# 
   921     0391                     	;# 
   922     0392                     	;# 
   923     0393                     	;# 
   924     0394                     	;# 
   925     0395                     	;# 
   926     0396                     	;# 
   927     0498                     	;# 
   928     0498                     	;# 
   929     0499                     	;# 
   930     049A                     	;# 
   931     049B                     	;# 
   932     049B                     	;# 
   933     049C                     	;# 
   934     049D                     	;# 
   935     049E                     	;# 
   936     049F                     	;# 
   937     0611                     	;# 
   938     0612                     	;# 
   939     0613                     	;# 
   940     0613                     	;# 
   941     0614                     	;# 
   942     0615                     	;# 
   943     0616                     	;# 
   944     0616                     	;# 
   945     0617                     	;# 
   946     0618                     	;# 
   947     0619                     	;# 
   948     0619                     	;# 
   949     061A                     	;# 
   950     061B                     	;# 
   951     061C                     	;# 
   952     061C                     	;# 
   953     0691                     	;# 
   954     0692                     	;# 
   955     0693                     	;# 
   956     0694                     	;# 
   957     0695                     	;# 
   958     0F0F                     	;# 
   959     0F10                     	;# 
   960     0F11                     	;# 
   961     0F12                     	;# 
   962     0F13                     	;# 
   963     0F14                     	;# 
   964     0F15                     	;# 
   965     0F16                     	;# 
   966     0F17                     	;# 
   967     0F18                     	;# 
   968     0F19                     	;# 
   969     0F1A                     	;# 
   970     0F1B                     	;# 
   971     0F1C                     	;# 
   972     0F1D                     	;# 
   973     0F1E                     	;# 
   974     0F1F                     	;# 
   975     0F20                     	;# 
   976     0F21                     	;# 
   977     0F22                     	;# 
   978     0F23                     	;# 
   979     0F24                     	;# 
   980     0F25                     	;# 
   981     0F26                     	;# 
   982     0F27                     	;# 
   983     0F28                     	;# 
   984     0F29                     	;# 
   985     0F2A                     	;# 
   986     0F2B                     	;# 
   987     0F2C                     	;# 
   988     0F2D                     	;# 
   989     0F2E                     	;# 
   990     0F2F                     	;# 
   991     0F8C                     	;# 
   992     0F8D                     	;# 
   993     0F91                     	;# 
   994     0F95                     	;# 
   995     0F96                     	;# 
   996     0F97                     	;# 
   997     0F9C                     	;# 
   998     0F9D                     	;# 
   999     0F9E                     	;# 
  1000     0FE3                     	;# 
  1001     0FE4                     	;# 
  1002     0FE5                     	;# 
  1003     0FE6                     	;# 
  1004     0FE7                     	;# 
  1005     0FE8                     	;# 
  1006     0FE9                     	;# 
  1007     0FEA                     	;# 
  1008     0FEB                     	;# 
  1009     0FED                     	;# 
  1010     0FEE                     	;# 
  1011     0FEF                     	;# 
  1012     0000                     	;# 
  1013     0001                     	;# 
  1014     0002                     	;# 
  1015     0003                     	;# 
  1016     0004                     	;# 
  1017     0005                     	;# 
  1018     0006                     	;# 
  1019     0007                     	;# 
  1020     0008                     	;# 
  1021     0009                     	;# 
  1022     000A                     	;# 
  1023     000B                     	;# 
  1024     000C                     	;# 
  1025     000D                     	;# 
  1026     000E                     	;# 
  1027     0011                     	;# 
  1028     0012                     	;# 
  1029     0013                     	;# 
  1030     0015                     	;# 
  1031     0016                     	;# 
  1032     0016                     	;# 
  1033     0017                     	;# 
  1034     0018                     	;# 
  1035     0019                     	;# 
  1036     001A                     	;# 
  1037     001B                     	;# 
  1038     001C                     	;# 
  1039     008C                     	;# 
  1040     008D                     	;# 
  1041     008E                     	;# 
  1042     0091                     	;# 
  1043     0092                     	;# 
  1044     0093                     	;# 
  1045     0095                     	;# 
  1046     0096                     	;# 
  1047     0097                     	;# 
  1048     0099                     	;# 
  1049     009A                     	;# 
  1050     009B                     	;# 
  1051     009B                     	;# 
  1052     009C                     	;# 
  1053     009D                     	;# 
  1054     009E                     	;# 
  1055     009F                     	;# 
  1056     010C                     	;# 
  1057     010D                     	;# 
  1058     010E                     	;# 
  1059     0111                     	;# 
  1060     0112                     	;# 
  1061     0113                     	;# 
  1062     0114                     	;# 
  1063     0115                     	;# 
  1064     0116                     	;# 
  1065     0117                     	;# 
  1066     0118                     	;# 
  1067     0119                     	;# 
  1068     011D                     	;# 
  1069     018C                     	;# 
  1070     018D                     	;# 
  1071     018E                     	;# 
  1072     0191                     	;# 
  1073     0191                     	;# 
  1074     0192                     	;# 
  1075     0193                     	;# 
  1076     0193                     	;# 
  1077     0194                     	;# 
  1078     0195                     	;# 
  1079     0196                     	;# 
  1080     0197                     	;# 
  1081     0199                     	;# 
  1082     019A                     	;# 
  1083     019B                     	;# 
  1084     019B                     	;# 
  1085     019C                     	;# 
  1086     019D                     	;# 
  1087     019E                     	;# 
  1088     019F                     	;# 
  1089     020C                     	;# 
  1090     020D                     	;# 
  1091     0211                     	;# 
  1092     0211                     	;# 
  1093     0212                     	;# 
  1094     0212                     	;# 
  1095     0213                     	;# 
  1096     0213                     	;# 
  1097     0214                     	;# 
  1098     0214                     	;# 
  1099     0215                     	;# 
  1100     0215                     	;# 
  1101     0215                     	;# 
  1102     0216                     	;# 
  1103     0216                     	;# 
  1104     0217                     	;# 
  1105     0217                     	;# 
  1106     0391                     	;# 
  1107     0392                     	;# 
  1108     0393                     	;# 
  1109     0394                     	;# 
  1110     0395                     	;# 
  1111     0396                     	;# 
  1112     0498                     	;# 
  1113     0498                     	;# 
  1114     0499                     	;# 
  1115     049A                     	;# 
  1116     049B                     	;# 
  1117     049B                     	;# 
  1118     049C                     	;# 
  1119     049D                     	;# 
  1120     049E                     	;# 
  1121     049F                     	;# 
  1122     0611                     	;# 
  1123     0612                     	;# 
  1124     0613                     	;# 
  1125     0613                     	;# 
  1126     0614                     	;# 
  1127     0615                     	;# 
  1128     0616                     	;# 
  1129     0616                     	;# 
  1130     0617                     	;# 
  1131     0618                     	;# 
  1132     0619                     	;# 
  1133     0619                     	;# 
  1134     061A                     	;# 
  1135     061B                     	;# 
  1136     061C                     	;# 
  1137     061C                     	;# 
  1138     0691                     	;# 
  1139     0692                     	;# 
  1140     0693                     	;# 
  1141     0694                     	;# 
  1142     0695                     	;# 
  1143     0F0F                     	;# 
  1144     0F10                     	;# 
  1145     0F11                     	;# 
  1146     0F12                     	;# 
  1147     0F13                     	;# 
  1148     0F14                     	;# 
  1149     0F15                     	;# 
  1150     0F16                     	;# 
  1151     0F17                     	;# 
  1152     0F18                     	;# 
  1153     0F19                     	;# 
  1154     0F1A                     	;# 
  1155     0F1B                     	;# 
  1156     0F1C                     	;# 
  1157     0F1D                     	;# 
  1158     0F1E                     	;# 
  1159     0F1F                     	;# 
  1160     0F20                     	;# 
  1161     0F21                     	;# 
  1162     0F22                     	;# 
  1163     0F23                     	;# 
  1164     0F24                     	;# 
  1165     0F25                     	;# 
  1166     0F26                     	;# 
  1167     0F27                     	;# 
  1168     0F28                     	;# 
  1169     0F29                     	;# 
  1170     0F2A                     	;# 
  1171     0F2B                     	;# 
  1172     0F2C                     	;# 
  1173     0F2D                     	;# 
  1174     0F2E                     	;# 
  1175     0F2F                     	;# 
  1176     0F8C                     	;# 
  1177     0F8D                     	;# 
  1178     0F91                     	;# 
  1179     0F95                     	;# 
  1180     0F96                     	;# 
  1181     0F97                     	;# 
  1182     0F9C                     	;# 
  1183     0F9D                     	;# 
  1184     0F9E                     	;# 
  1185     0FE3                     	;# 
  1186     0FE4                     	;# 
  1187     0FE5                     	;# 
  1188     0FE6                     	;# 
  1189     0FE7                     	;# 
  1190     0FE8                     	;# 
  1191     0FE9                     	;# 
  1192     0FEA                     	;# 
  1193     0FEB                     	;# 
  1194     0FED                     	;# 
  1195     0FEE                     	;# 
  1196     0FEF                     	;# 
  1197     0000                     	;# 
  1198     0001                     	;# 
  1199     0002                     	;# 
  1200     0003                     	;# 
  1201     0004                     	;# 
  1202     0005                     	;# 
  1203     0006                     	;# 
  1204     0007                     	;# 
  1205     0008                     	;# 
  1206     0009                     	;# 
  1207     000A                     	;# 
  1208     000B                     	;# 
  1209     000C                     	;# 
  1210     000D                     	;# 
  1211     000E                     	;# 
  1212     0011                     	;# 
  1213     0012                     	;# 
  1214     0013                     	;# 
  1215     0015                     	;# 
  1216     0016                     	;# 
  1217     0016                     	;# 
  1218     0017                     	;# 
  1219     0018                     	;# 
  1220     0019                     	;# 
  1221     001A                     	;# 
  1222     001B                     	;# 
  1223     001C                     	;# 
  1224     008C                     	;# 
  1225     008D                     	;# 
  1226     008E                     	;# 
  1227     0091                     	;# 
  1228     0092                     	;# 
  1229     0093                     	;# 
  1230     0095                     	;# 
  1231     0096                     	;# 
  1232     0097                     	;# 
  1233     0099                     	;# 
  1234     009A                     	;# 
  1235     009B                     	;# 
  1236     009B                     	;# 
  1237     009C                     	;# 
  1238     009D                     	;# 
  1239     009E                     	;# 
  1240     009F                     	;# 
  1241     010C                     	;# 
  1242     010D                     	;# 
  1243     010E                     	;# 
  1244     0111                     	;# 
  1245     0112                     	;# 
  1246     0113                     	;# 
  1247     0114                     	;# 
  1248     0115                     	;# 
  1249     0116                     	;# 
  1250     0117                     	;# 
  1251     0118                     	;# 
  1252     0119                     	;# 
  1253     011D                     	;# 
  1254     018C                     	;# 
  1255     018D                     	;# 
  1256     018E                     	;# 
  1257     0191                     	;# 
  1258     0191                     	;# 
  1259     0192                     	;# 
  1260     0193                     	;# 
  1261     0193                     	;# 
  1262     0194                     	;# 
  1263     0195                     	;# 
  1264     0196                     	;# 
  1265     0197                     	;# 
  1266     0199                     	;# 
  1267     019A                     	;# 
  1268     019B                     	;# 
  1269     019B                     	;# 
  1270     019C                     	;# 
  1271     019D                     	;# 
  1272     019E                     	;# 
  1273     019F                     	;# 
  1274     020C                     	;# 
  1275     020D                     	;# 
  1276     0211                     	;# 
  1277     0211                     	;# 
  1278     0212                     	;# 
  1279     0212                     	;# 
  1280     0213                     	;# 
  1281     0213                     	;# 
  1282     0214                     	;# 
  1283     0214                     	;# 
  1284     0215                     	;# 
  1285     0215                     	;# 
  1286     0215                     	;# 
  1287     0216                     	;# 
  1288     0216                     	;# 
  1289     0217                     	;# 
  1290     0217                     	;# 
  1291     0391                     	;# 
  1292     0392                     	;# 
  1293     0393                     	;# 
  1294     0394                     	;# 
  1295     0395                     	;# 
  1296     0396                     	;# 
  1297     0498                     	;# 
  1298     0498                     	;# 
  1299     0499                     	;# 
  1300     049A                     	;# 
  1301     049B                     	;# 
  1302     049B                     	;# 
  1303     049C                     	;# 
  1304     049D                     	;# 
  1305     049E                     	;# 
  1306     049F                     	;# 
  1307     0611                     	;# 
  1308     0612                     	;# 
  1309     0613                     	;# 
  1310     0613                     	;# 
  1311     0614                     	;# 
  1312     0615                     	;# 
  1313     0616                     	;# 
  1314     0616                     	;# 
  1315     0617                     	;# 
  1316     0618                     	;# 
  1317     0619                     	;# 
  1318     0619                     	;# 
  1319     061A                     	;# 
  1320     061B                     	;# 
  1321     061C                     	;# 
  1322     061C                     	;# 
  1323     0691                     	;# 
  1324     0692                     	;# 
  1325     0693                     	;# 
  1326     0694                     	;# 
  1327     0695                     	;# 
  1328     0F0F                     	;# 
  1329     0F10                     	;# 
  1330     0F11                     	;# 
  1331     0F12                     	;# 
  1332     0F13                     	;# 
  1333     0F14                     	;# 
  1334     0F15                     	;# 
  1335     0F16                     	;# 
  1336     0F17                     	;# 
  1337     0F18                     	;# 
  1338     0F19                     	;# 
  1339     0F1A                     	;# 
  1340     0F1B                     	;# 
  1341     0F1C                     	;# 
  1342     0F1D                     	;# 
  1343     0F1E                     	;# 
  1344     0F1F                     	;# 
  1345     0F20                     	;# 
  1346     0F21                     	;# 
  1347     0F22                     	;# 
  1348     0F23                     	;# 
  1349     0F24                     	;# 
  1350     0F25                     	;# 
  1351     0F26                     	;# 
  1352     0F27                     	;# 
  1353     0F28                     	;# 
  1354     0F29                     	;# 
  1355     0F2A                     	;# 
  1356     0F2B                     	;# 
  1357     0F2C                     	;# 
  1358     0F2D                     	;# 
  1359     0F2E                     	;# 
  1360     0F2F                     	;# 
  1361     0F8C                     	;# 
  1362     0F8D                     	;# 
  1363     0F91                     	;# 
  1364     0F95                     	;# 
  1365     0F96                     	;# 
  1366     0F97                     	;# 
  1367     0F9C                     	;# 
  1368     0F9D                     	;# 
  1369     0F9E                     	;# 
  1370     0FE3                     	;# 
  1371     0FE4                     	;# 
  1372     0FE5                     	;# 
  1373     0FE6                     	;# 
  1374     0FE7                     	;# 
  1375     0FE8                     	;# 
  1376     0FE9                     	;# 
  1377     0FEA                     	;# 
  1378     0FEB                     	;# 
  1379     0FED                     	;# 
  1380     0FEE                     	;# 
  1381     0FEF                     	;# 
  1382                           
  1383 ;; Function _I2C_SlaveDefWrColInterruptHandler is unused but had its address taken
  1384     0000                     
  1385 ;; Function _I2C_SlaveDefBusColInterruptHandler is unused but had its address taken
  1386     0000                     
  1387                           	psect	idataBANK0
  1388     02BC                     __pidataBANK0:
  1389                           
  1390                           ;initializer for _Volt1ptr
  1391     02BC  3478               	retlw	low (_Volt1| 0)
  1392                           
  1393                           ;initializer for _Temp5ptr
  1394     02BD  3436               	retlw	low (_Temp5| 0)
  1395                           
  1396                           ;initializer for _Temp4ptr
  1397     02BE  3438               	retlw	low (_Temp4| 0)
  1398                           
  1399                           ;initializer for _Temp3ptr
  1400     02BF  343A               	retlw	low (_Temp3| 0)
  1401                           
  1402                           ;initializer for _Temp2ptr
  1403     02C0  343C               	retlw	low (_Temp2| 0)
  1404                           
  1405                           ;initializer for _Temp1ptr
  1406     02C1  343E               	retlw	low (_Temp1| 0)
  1407     0011                     _PIR1bits	set	17
  1408     0012                     _PIR2bits	set	18
  1409     000B                     _INTCONbits	set	11
  1410     009D                     _ADCON0bits	set	157
  1411     009D                     _ADCON0	set	157
  1412     009C                     _ADRESH	set	156
  1413     009B                     _ADRESL	set	155
  1414     009F                     _ADCON2	set	159
  1415     009E                     _ADCON1	set	158
  1416     0095                     _OPTION_REGbits	set	149
  1417     008E                     _TRISC	set	142
  1418     008D                     _TRISB	set	141
  1419     008C                     _TRISA	set	140
  1420     0097                     _WDTCON	set	151
  1421     0099                     _OSCCON	set	153
  1422     0091                     _PIE1bits	set	145
  1423     0092                     _PIE2bits	set	146
  1424     010E                     _LATCbits	set	270
  1425     010D                     _LATBbits	set	269
  1426     0117                     _FVRCONbits	set	279
  1427     0117                     _FVRCON	set	279
  1428     011D                     _APFCON	set	285
  1429     010E                     _LATC	set	270
  1430     010D                     _LATB	set	269
  1431     010C                     _LATA	set	268
  1432     0116                     _BORCON	set	278
  1433     018C                     _ANSELA	set	396
  1434     018D                     _ANSELB	set	397
  1435     018E                     _ANSELC	set	398
  1436     020C                     _WPUA	set	524
  1437     020D                     _WPUB	set	525
  1438     0211                     _SSP1BUF	set	529
  1439     0216                     _SSP1CON2bits	set	534
  1440     0214                     _SSP1STATbits	set	532
  1441     0213                     _SSP1MSK	set	531
  1442     0212                     _SSP1ADD	set	530
  1443     0215                     _SSP1CON1bits	set	533
  1444     0216                     _SSP1CON2	set	534
  1445     0215                     _SSP1CON1	set	533
  1446     0214                     _SSP1STAT	set	532
  1447                           
  1448                           	psect	cinit
  1449     0029                     start_initialization:	
  1450                           ; #config settings
  1451                           
  1452     0029                     __initialization:
  1453                           
  1454                           ; Initialize objects allocated to BANK0
  1455     0029  30BC               	movlw	low __pidataBANK0
  1456     002A  0084               	movwf	4
  1457     002B  3082               	movlw	(high __pidataBANK0)| (0+128)
  1458     002C  0085               	movwf	5
  1459     002D  0012               	moviw fsr0++
  1460     002E  00C0               	movwf	__pdataBANK0& (0+127)
  1461     002F  0012               	moviw fsr0++
  1462     0030  00C1               	movwf	(__pdataBANK0+1)& (0+127)
  1463     0031  0012               	moviw fsr0++
  1464     0032  00C2               	movwf	(__pdataBANK0+2)& (0+127)
  1465     0033  0012               	moviw fsr0++
  1466     0034  00C3               	movwf	(__pdataBANK0+3)& (0+127)
  1467     0035  0012               	moviw fsr0++
  1468     0036  00C4               	movwf	(__pdataBANK0+4)& (0+127)
  1469     0037  0012               	moviw fsr0++
  1470     0038  00C5               	movwf	(__pdataBANK0+5)& (0+127)
  1471                           
  1472                           ; Clear objects allocated to COMMON
  1473     0039  01F6               	clrf	__pbssCOMMON& (0+127)
  1474     003A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1475     003B  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1476     003C  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1477                           
  1478                           ; Clear objects allocated to BANK0
  1479     003D  3020               	movlw	low __pbssBANK0
  1480     003E  0084               	movwf	4
  1481     003F  3000               	movlw	high __pbssBANK0
  1482     0040  0085               	movwf	5
  1483     0041  3020               	movlw	32
  1484     0042  3182  22C2  3180   	fcall	clear_ram0
  1485     0045                     end_of_initialization:	
  1486                           ;End of C runtime variable initialization code
  1487                           
  1488     0045                     __end_of__initialization:
  1489     0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1490     0046  0020               	movlb	0
  1491     0047  3180  2849         	ljmp	_main	;jump to C main() function
  1492                           
  1493                           	psect	bssCOMMON
  1494     0076                     __pbssCOMMON:
  1495     0076                     _i2cRdData:
  1496     0076                     	ds	1
  1497     0077                     _balanceFlag:
  1498     0077                     	ds	1
  1499     0078                     _Volt1:
  1500     0078                     	ds	2
  1501                           
  1502                           	psect	bssBANK0
  1503     0020                     __pbssBANK0:
  1504     0020                     _ADC_InterruptHandler:
  1505     0020                     	ds	2
  1506     0022                     _index:
  1507     0022                     	ds	2
  1508     0024                     _current_Data:
  1509     0024                     	ds	2
  1510     0026                     _I2C_SlaveWrColInterruptHandler:
  1511     0026                     	ds	2
  1512     0028                     _I2C_SlaveBusColInterruptHandler:
  1513     0028                     	ds	2
  1514     002A                     _I2C_SlaveAddrInterruptHandler:
  1515     002A                     	ds	2
  1516     002C                     _I2C_SlaveWrInterruptHandler:
  1517     002C                     	ds	2
  1518     002E                     _I2C_SlaveRdInterruptHandler:
  1519     002E                     	ds	2
  1520     0030                     _MSSP_InterruptHandler:
  1521     0030                     	ds	2
  1522     0032                     _danger_flag:
  1523     0032                     	ds	1
  1524     0033                     _i2cSlaveState:
  1525     0033                     	ds	1
  1526     0034                     _i2cSlaveAddr:
  1527     0034                     	ds	1
  1528     0035                     _i2cWrData:
  1529     0035                     	ds	1
  1530     0036                     _Temp5:
  1531     0036                     	ds	2
  1532     0038                     _Temp4:
  1533     0038                     	ds	2
  1534     003A                     _Temp3:
  1535     003A                     	ds	2
  1536     003C                     _Temp2:
  1537     003C                     	ds	2
  1538     003E                     _Temp1:
  1539     003E                     	ds	2
  1540                           
  1541                           	psect	dataBANK0
  1542     0040                     __pdataBANK0:
  1543     0040                     _Volt1ptr:
  1544     0040                     	ds	1
  1545     0041                     _Temp5ptr:
  1546     0041                     	ds	1
  1547     0042                     _Temp4ptr:
  1548     0042                     	ds	1
  1549     0043                     _Temp3ptr:
  1550     0043                     	ds	1
  1551     0044                     _Temp2ptr:
  1552     0044                     	ds	1
  1553     0045                     _Temp1ptr:
  1554     0045                     	ds	1
  1555                           
  1556                           	psect	clrtext
  1557     02C2                     clear_ram0:	
  1558                           ;	Called with FSR0 containing the base address, and
  1559                           ;	WREG with the size to clear
  1560                           
  1561     02C2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1562     02C3                     clrloop0:
  1563     02C3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1564     02C4  3101               	addfsr 0,1
  1565     02C5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1566     02C6  2AC3               	goto	clrloop0	;have we reached the end yet?
  1567     02C7  3400               	retlw	0	;all done for this memory range, return
  1568                           
  1569                           	psect	cstackCOMMON
  1570     0070                     __pcstackCOMMON:
  1571     0070                     ?_I2C_Initialize:
  1572     0070                     ?_PIN_MANAGER_Initialize:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575     0070                     ?_OSCILLATOR_Initialize:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578     0070                     ?_WDT_Initialize:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581     0070                     ?_FVR_Initialize:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584     0070                     ?_ADC_Initialize:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587     0070                     ?_I2C_SlaveOpen:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590     0070                     ?_I2C_SlaveSetSlaveAddr:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593     0070                     ?_I2C_SlaveSetSlaveMask:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596     0070                     ?_I2C_Isr:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599     0070                     ?_I2C_SlaveDefWrInterruptHandler:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602     0070                     ?_I2C_SlaveDefRdInterruptHandler:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605     0070                     ??_I2C_SlaveDefRdInterruptHandler:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608     0070                     ?_I2C_SlaveDefAddrInterruptHandler:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611     0070                     ??_I2C_SlaveDefAddrInterruptHandler:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614     0070                     ?_I2C_SlaveEnableIrq:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617     0070                     ?_I2C_SlaveGetRxData:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620     0070                     ??_I2C_SlaveGetRxData:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623     0070                     ?_I2C_SlaveSendTxData:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626     0070                     ??_I2C_SlaveSendTxData:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629     0070                     ?_I2C_SlaveIsRead:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632     0070                     ??_I2C_SlaveIsRead:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635     0070                     ?_I2C_SlaveClearIrq:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638     0070                     ??_I2C_SlaveClearIrq:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641     0070                     ?_I2C_SlaveIsAddr:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644     0070                     ??_I2C_SlaveIsAddr:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647     0070                     ?_I2C_SlaveAddrCallBack:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650     0070                     ??_I2C_SlaveAddrCallBack:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653     0070                     ?_I2C_SlaveIsTxBufEmpty:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656     0070                     ??_I2C_SlaveIsTxBufEmpty:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659     0070                     ?_I2C_SlaveWrCallBack:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662     0070                     ?_I2C_SlaveIsRxBufFull:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665     0070                     ??_I2C_SlaveIsRxBufFull:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668     0070                     ?_I2C_SlaveRdCallBack:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671     0070                     ??_I2C_SlaveRdCallBack:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674     0070                     ?_I2C_SlaveReleaseClock:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677     0070                     ??_I2C_SlaveReleaseClock:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680     0070                     ?_INTERRUPT_InterruptManager:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683     0070                     ?_SYSTEM_Initialize:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686     0070                     ?_I2C_Open:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689     0070                     ?_main:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692     0070                     I2C_SlaveSendTxData@data:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695                           
  1696                           ; 1 bytes @ 0x0
  1697     0070                     	ds	1
  1698     0071                     ??_I2C_SlaveDefWrInterruptHandler:
  1699     0071                     ??_I2C_SlaveWrCallBack:	
  1700                           ; 1 bytes @ 0x1
  1701                           
  1702                           
  1703                           ; 1 bytes @ 0x1
  1704     0071                     	ds	1
  1705     0072                     ??_I2C_Isr:
  1706                           
  1707                           ; 1 bytes @ 0x2
  1708     0072                     	ds	2
  1709     0074                     ??_I2C_Initialize:
  1710     0074                     ??_PIN_MANAGER_Initialize:	
  1711                           ; 1 bytes @ 0x4
  1712                           
  1713     0074                     ??_OSCILLATOR_Initialize:	
  1714                           ; 1 bytes @ 0x4
  1715                           
  1716     0074                     ??_WDT_Initialize:	
  1717                           ; 1 bytes @ 0x4
  1718                           
  1719     0074                     ??_FVR_Initialize:	
  1720                           ; 1 bytes @ 0x4
  1721                           
  1722     0074                     ??_ADC_Initialize:	
  1723                           ; 1 bytes @ 0x4
  1724                           
  1725     0074                     ??_I2C_SlaveOpen:	
  1726                           ; 1 bytes @ 0x4
  1727                           
  1728     0074                     ??_I2C_SlaveSetSlaveAddr:	
  1729                           ; 1 bytes @ 0x4
  1730                           
  1731     0074                     ??_I2C_SlaveSetSlaveMask:	
  1732                           ; 1 bytes @ 0x4
  1733                           
  1734     0074                     ?_I2C_SlaveSetIsrHandler:	
  1735                           ; 1 bytes @ 0x4
  1736                           
  1737     0074                     ?_I2C_SlaveSetBusColIntHandler:	
  1738                           ; 1 bytes @ 0x4
  1739                           
  1740     0074                     ?_I2C_SlaveSetWriteIntHandler:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743     0074                     ?_I2C_SlaveSetReadIntHandler:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746     0074                     ?_I2C_SlaveSetAddrIntHandler:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749     0074                     ?_I2C_SlaveSetWrColIntHandler:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752     0074                     ??_I2C_SlaveEnableIrq:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755     0074                     ??_INTERRUPT_InterruptManager:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758     0074                     ?_ADC_GetConversion:	
  1759                           ; 1 bytes @ 0x4
  1760                           
  1761     0074                     I2C_SlaveSetSlaveAddr@slaveAddr:	
  1762                           ; 2 bytes @ 0x4
  1763                           
  1764     0074                     I2C_SlaveSetSlaveMask@maskAddr:	
  1765                           ; 1 bytes @ 0x4
  1766                           
  1767     0074                     I2C_SlaveSetIsrHandler@handler:	
  1768                           ; 1 bytes @ 0x4
  1769                           
  1770     0074                     I2C_SlaveSetReadIntHandler@handler:	
  1771                           ; 2 bytes @ 0x4
  1772                           
  1773     0074                     I2C_SlaveSetWriteIntHandler@handler:	
  1774                           ; 2 bytes @ 0x4
  1775                           
  1776     0074                     I2C_SlaveSetAddrIntHandler@handler:	
  1777                           ; 2 bytes @ 0x4
  1778                           
  1779     0074                     I2C_SlaveSetWrColIntHandler@handler:	
  1780                           ; 2 bytes @ 0x4
  1781                           
  1782     0074                     I2C_SlaveSetBusColIntHandler@handler:	
  1783                           ; 2 bytes @ 0x4
  1784                           
  1785                           
  1786                           ; 2 bytes @ 0x4
  1787     0074                     	ds	1
  1788     0075                     ??_SYSTEM_Initialize:
  1789                           
  1790                           ; 1 bytes @ 0x5
  1791     0075                     	ds	1
  1792     0076                     ??_I2C_SlaveSetIsrHandler:
  1793     0076                     ??_I2C_SlaveSetBusColIntHandler:	
  1794                           ; 1 bytes @ 0x6
  1795                           
  1796     0076                     ??_I2C_SlaveSetWriteIntHandler:	
  1797                           ; 1 bytes @ 0x6
  1798                           
  1799     0076                     ??_I2C_SlaveSetReadIntHandler:	
  1800                           ; 1 bytes @ 0x6
  1801                           
  1802     0076                     ??_I2C_SlaveSetAddrIntHandler:	
  1803                           ; 1 bytes @ 0x6
  1804                           
  1805     0076                     ??_I2C_SlaveSetWrColIntHandler:	
  1806                           ; 1 bytes @ 0x6
  1807                           
  1808     0076                     ??_I2C_Open:	
  1809                           ; 1 bytes @ 0x6
  1810                           
  1811                           
  1812                           	psect	cstackBANK0
  1813     0046                     __pcstackBANK0:	
  1814                           ; 1 bytes @ 0x6
  1815                           
  1816     0046                     ??_ADC_GetConversion:
  1817                           
  1818                           ; 1 bytes @ 0x0
  1819     0046                     	ds	1
  1820     0047                     ADC_GetConversion@channel:
  1821                           
  1822                           ; 1 bytes @ 0x1
  1823     0047                     	ds	1
  1824     0048                     ??_main:
  1825                           
  1826                           ; 1 bytes @ 0x2
  1827     0048                     	ds	2
  1828                           
  1829                           	psect	maintext
  1830     0049                     __pmaintext:	
  1831 ;;
  1832 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1833 ;;
  1834 ;; *************** function _main *****************
  1835 ;; Defined at:
  1836 ;;		line 16 in file "main.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0, pclath, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : B1F/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1850 ;;      Params:         0       0       0       0
  1851 ;;      Locals:         0       0       0       0
  1852 ;;      Temps:          0       2       0       0
  1853 ;;      Totals:         0       2       0       0
  1854 ;;Total ram usage:        2 bytes
  1855 ;; Hardware stack levels required when called: 7
  1856 ;; This function calls:
  1857 ;;		_ADC_GetConversion
  1858 ;;		_ADC_Initialize
  1859 ;;		_FVR_Initialize
  1860 ;;		_I2C_Open
  1861 ;;		_SYSTEM_Initialize
  1862 ;; This function is called by:
  1863 ;;		Startup code after reset
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867     0049                     _main:	
  1868                           ;psect for function _main
  1869                           
  1870     0049                     l1852:	
  1871                           ;incstack = 0
  1872                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1873                           
  1874                           
  1875                           ;main.c: 19:     SYSTEM_Initialize();
  1876     0049  3182  226D  3180   	fcall	_SYSTEM_Initialize
  1877     004C                     l1854:
  1878                           
  1879                           ;main.c: 22:     (INTCONbits.GIE = 1);
  1880     004C  178B               	bsf	11,7	;volatile
  1881     004D                     l1856:
  1882                           
  1883                           ;main.c: 23:     (INTCONbits.PEIE = 1);
  1884     004D  170B               	bsf	11,6	;volatile
  1885                           
  1886                           ;main.c: 25:     I2C_Open();
  1887     004E  3181  21DF  3180   	fcall	_I2C_Open
  1888                           
  1889                           ;main.c: 26:     ADC_Initialize();
  1890     0051  3182  22A5  3180   	fcall	_ADC_Initialize
  1891                           
  1892                           ;main.c: 27:     FVR_Initialize();
  1893     0054  3183  231B  3180   	fcall	_FVR_Initialize
  1894     0057                     l1858:
  1895                           
  1896                           ;main.c: 30:     {;main.c: 32:         if (balanceFlag){
  1897     0057  0877               	movf	_balanceFlag,w	;volatile
  1898     0058  1903               	btfsc	3,2
  1899     0059  285B               	goto	u581
  1900     005A  285C               	goto	u580
  1901     005B                     u581:
  1902     005B  287B               	goto	l1870
  1903     005C                     u580:
  1904     005C                     l1860:
  1905                           
  1906                           ;main.c: 33:             balanceFlag = 0;
  1907     005C  01F7               	clrf	_balanceFlag	;volatile
  1908     005D                     l1862:
  1909     005D  0022               	movlb	2	; select bank2
  1910     005E  178D               	bsf	13,7	;volatile
  1911     005F                     l1864:
  1912                           
  1913                           ;main.c: 35:             _delay((unsigned long)((900)*(16000000/4000.0)));
  1914     005F  3013               	movlw	19
  1915     0060  0020               	movlb	0	; select bank0
  1916     0061  00C9               	movwf	??_main+1
  1917     0062  3044               	movlw	68
  1918     0063  00C8               	movwf	??_main
  1919     0064  3044               	movlw	68
  1920     0065                     u677:
  1921     0065  0B89               	decfsz	9,f
  1922     0066  2865               	goto	u677
  1923     0067  0BC8               	decfsz	??_main,f
  1924     0068  2865               	goto	u677
  1925     0069  0BC9               	decfsz	??_main+1,f
  1926     006A  2865               	goto	u677
  1927     006B  0000               	nop
  1928     006C                     l1866:
  1929     006C  0022               	movlb	2	; select bank2
  1930     006D  138D               	bcf	13,7	;volatile
  1931     006E                     l1868:
  1932                           
  1933                           ;main.c: 37:             _delay((unsigned long)((80)*(16000000/4000.0)));
  1934     006E  3002               	movlw	2
  1935     006F  0020               	movlb	0	; select bank0
  1936     0070  00C9               	movwf	??_main+1
  1937     0071  30A0               	movlw	160
  1938     0072  00C8               	movwf	??_main
  1939     0073  3092               	movlw	146
  1940     0074                     u687:
  1941     0074  0B89               	decfsz	9,f
  1942     0075  2874               	goto	u687
  1943     0076  0BC8               	decfsz	??_main,f
  1944     0077  2874               	goto	u687
  1945     0078  0BC9               	decfsz	??_main+1,f
  1946     0079  2874               	goto	u687
  1947     007A  0000               	nop
  1948     007B                     l1870:
  1949                           
  1950                           ;main.c: 41:         Temp1ptr->value = (uint16_t) ADC_GetConversion(TSNS1);
  1951     007B  3002               	movlw	2
  1952     007C  3182  2218  3180   	fcall	_ADC_GetConversion
  1953     007F  0875               	movf	?_ADC_GetConversion+1,w
  1954     0080  0020               	movlb	0	; select bank0
  1955     0081  00BF               	movwf	_Temp1+1	;volatile
  1956     0082  0874               	movf	?_ADC_GetConversion,w
  1957     0083  00BE               	movwf	_Temp1	;volatile
  1958     0084                     l1872:
  1959                           
  1960                           ;main.c: 42:         Temp2ptr->value = (uint16_t) ADC_GetConversion(TSNS2);
  1961     0084  3003               	movlw	3
  1962     0085  3182  2218  3180   	fcall	_ADC_GetConversion
  1963     0088  0875               	movf	?_ADC_GetConversion+1,w
  1964     0089  0020               	movlb	0	; select bank0
  1965     008A  00BD               	movwf	_Temp2+1	;volatile
  1966     008B  0874               	movf	?_ADC_GetConversion,w
  1967     008C  00BC               	movwf	_Temp2	;volatile
  1968     008D                     l1874:
  1969                           
  1970                           ;main.c: 43:         Temp3ptr->value = (uint16_t) ADC_GetConversion(TSNS3);
  1971     008D  3007               	movlw	7
  1972     008E  3182  2218  3180   	fcall	_ADC_GetConversion
  1973     0091  0875               	movf	?_ADC_GetConversion+1,w
  1974     0092  0020               	movlb	0	; select bank0
  1975     0093  00BB               	movwf	_Temp3+1	;volatile
  1976     0094  0874               	movf	?_ADC_GetConversion,w
  1977     0095  00BA               	movwf	_Temp3	;volatile
  1978     0096                     l1876:
  1979                           
  1980                           ;main.c: 44:         Temp4ptr->value = (uint16_t) ADC_GetConversion(TSNS4);
  1981     0096  3008               	movlw	8
  1982     0097  3182  2218  3180   	fcall	_ADC_GetConversion
  1983     009A  0875               	movf	?_ADC_GetConversion+1,w
  1984     009B  0020               	movlb	0	; select bank0
  1985     009C  00B9               	movwf	_Temp4+1	;volatile
  1986     009D  0874               	movf	?_ADC_GetConversion,w
  1987     009E  00B8               	movwf	_Temp4	;volatile
  1988     009F                     l1878:
  1989                           
  1990                           ;main.c: 45:         Temp5ptr->value = (uint16_t) ADC_GetConversion(TSNS5);
  1991     009F  3009               	movlw	9
  1992     00A0  3182  2218  3180   	fcall	_ADC_GetConversion
  1993     00A3  0875               	movf	?_ADC_GetConversion+1,w
  1994     00A4  0020               	movlb	0	; select bank0
  1995     00A5  00B7               	movwf	_Temp5+1	;volatile
  1996     00A6  0874               	movf	?_ADC_GetConversion,w
  1997     00A7  00B6               	movwf	_Temp5	;volatile
  1998     00A8                     l1880:
  1999                           
  2000                           ;main.c: 46:         Volt1ptr->value = (uint16_t) ADC_GetConversion(channel_FVR);
  2001     00A8  301F               	movlw	31
  2002     00A9  3182  2218  3180   	fcall	_ADC_GetConversion
  2003     00AC  0875               	movf	?_ADC_GetConversion+1,w
  2004     00AD  00F9               	movwf	_Volt1+1	;volatile
  2005     00AE  0874               	movf	?_ADC_GetConversion,w
  2006     00AF  00F8               	movwf	_Volt1	;volatile
  2007                           
  2008                           ;main.c: 49:         danger_flag = 0;
  2009     00B0  0020               	movlb	0	; select bank0
  2010     00B1  01B2               	clrf	_danger_flag
  2011     00B2                     l1882:
  2012                           
  2013                           ;main.c: 50:         if (Temp1ptr->value < 198){danger_flag = 1;}
  2014     00B2  3000               	movlw	0
  2015     00B3  023F               	subwf	_Temp1+1,w	;volatile
  2016     00B4  30C6               	movlw	198
  2017     00B5  1903               	skipnz
  2018     00B6  023E               	subwf	_Temp1,w	;volatile
  2019     00B7  1803               	skipnc
  2020     00B8  28BA               	goto	u591
  2021     00B9  28BB               	goto	u590
  2022     00BA                     u591:
  2023     00BA  28BD               	goto	l1886
  2024     00BB                     u590:
  2025     00BB                     l1884:
  2026     00BB  01B2               	clrf	_danger_flag
  2027     00BC  0AB2               	incf	_danger_flag,f
  2028     00BD                     l1886:
  2029                           
  2030                           ;main.c: 51:         if (Temp2ptr->value < 198){danger_flag = 1;}
  2031     00BD  3000               	movlw	0
  2032     00BE  023D               	subwf	_Temp2+1,w	;volatile
  2033     00BF  30C6               	movlw	198
  2034     00C0  1903               	skipnz
  2035     00C1  023C               	subwf	_Temp2,w	;volatile
  2036     00C2  1803               	skipnc
  2037     00C3  28C5               	goto	u601
  2038     00C4  28C6               	goto	u600
  2039     00C5                     u601:
  2040     00C5  28C8               	goto	l1890
  2041     00C6                     u600:
  2042     00C6                     l1888:
  2043     00C6  01B2               	clrf	_danger_flag
  2044     00C7  0AB2               	incf	_danger_flag,f
  2045     00C8                     l1890:
  2046                           
  2047                           ;main.c: 52:         if (Temp3ptr->value < 198){danger_flag = 1;}
  2048     00C8  3000               	movlw	0
  2049     00C9  023B               	subwf	_Temp3+1,w	;volatile
  2050     00CA  30C6               	movlw	198
  2051     00CB  1903               	skipnz
  2052     00CC  023A               	subwf	_Temp3,w	;volatile
  2053     00CD  1803               	skipnc
  2054     00CE  28D0               	goto	u611
  2055     00CF  28D1               	goto	u610
  2056     00D0                     u611:
  2057     00D0  28D3               	goto	l1894
  2058     00D1                     u610:
  2059     00D1                     l1892:
  2060     00D1  01B2               	clrf	_danger_flag
  2061     00D2  0AB2               	incf	_danger_flag,f
  2062     00D3                     l1894:
  2063                           
  2064                           ;main.c: 53:         if (Temp4ptr->value < 198){danger_flag = 1;}
  2065     00D3  3000               	movlw	0
  2066     00D4  0239               	subwf	_Temp4+1,w	;volatile
  2067     00D5  30C6               	movlw	198
  2068     00D6  1903               	skipnz
  2069     00D7  0238               	subwf	_Temp4,w	;volatile
  2070     00D8  1803               	skipnc
  2071     00D9  28DB               	goto	u621
  2072     00DA  28DC               	goto	u620
  2073     00DB                     u621:
  2074     00DB  28DE               	goto	l1898
  2075     00DC                     u620:
  2076     00DC                     l1896:
  2077     00DC  01B2               	clrf	_danger_flag
  2078     00DD  0AB2               	incf	_danger_flag,f
  2079     00DE                     l1898:
  2080                           
  2081                           ;main.c: 54:         if (Temp5ptr->value < 198){danger_flag = 1;}
  2082     00DE  3000               	movlw	0
  2083     00DF  0237               	subwf	_Temp5+1,w	;volatile
  2084     00E0  30C6               	movlw	198
  2085     00E1  1903               	skipnz
  2086     00E2  0236               	subwf	_Temp5,w	;volatile
  2087     00E3  1803               	skipnc
  2088     00E4  28E6               	goto	u631
  2089     00E5  28E7               	goto	u630
  2090     00E6                     u631:
  2091     00E6  28E9               	goto	l1902
  2092     00E7                     u630:
  2093     00E7                     l1900:
  2094     00E7  01B2               	clrf	_danger_flag
  2095     00E8  0AB2               	incf	_danger_flag,f
  2096     00E9                     l1902:
  2097                           
  2098                           ;main.c: 55:         if (Volt1ptr->value > 655){danger_flag = 1;}
  2099     00E9  3002               	movlw	2
  2100     00EA  0279               	subwf	_Volt1+1,w	;volatile
  2101     00EB  3090               	movlw	144
  2102     00EC  1903               	skipnz
  2103     00ED  0278               	subwf	_Volt1,w	;volatile
  2104     00EE  1C03               	skipc
  2105     00EF  28F1               	goto	u641
  2106     00F0  28F2               	goto	u640
  2107     00F1                     u641:
  2108     00F1  28F4               	goto	l1906
  2109     00F2                     u640:
  2110     00F2                     l1904:
  2111     00F2  01B2               	clrf	_danger_flag
  2112     00F3  0AB2               	incf	_danger_flag,f
  2113     00F4                     l1906:
  2114                           
  2115                           ;main.c: 56:         if (Volt1ptr->value < 494){danger_flag = 1;}
  2116     00F4  3001               	movlw	1
  2117     00F5  0279               	subwf	_Volt1+1,w	;volatile
  2118     00F6  30EE               	movlw	238
  2119     00F7  1903               	skipnz
  2120     00F8  0278               	subwf	_Volt1,w	;volatile
  2121     00F9  1803               	skipnc
  2122     00FA  28FC               	goto	u651
  2123     00FB  28FD               	goto	u650
  2124     00FC                     u651:
  2125     00FC  28FF               	goto	l1910
  2126     00FD                     u650:
  2127     00FD                     l1908:
  2128     00FD  01B2               	clrf	_danger_flag
  2129     00FE  0AB2               	incf	_danger_flag,f
  2130     00FF                     l1910:
  2131                           
  2132                           ;main.c: 58:         if (danger_flag){
  2133     00FF  0832               	movf	_danger_flag,w
  2134     0100  1903               	btfsc	3,2
  2135     0101  2903               	goto	u661
  2136     0102  2904               	goto	u660
  2137     0103                     u661:
  2138     0103  291B               	goto	l570
  2139     0104                     u660:
  2140     0104                     l563:	
  2141                           ;main.c: 59:             do { LATCbits.LATC0 = 1; } while(0);
  2142                           
  2143     0104  0022               	movlb	2	; select bank2
  2144     0105  140E               	bsf	14,0	;volatile
  2145     0106                     l565:	
  2146                           ;main.c: 60:             do { LATCbits.LATC1 = 1; } while(0);
  2147                           
  2148     0106  148E               	bsf	14,1	;volatile
  2149     0107                     l1912:
  2150                           
  2151                           ;main.c: 61:             _delay((unsigned long)((20)*(16000000/4000.0)));
  2152     0107  3068               	movlw	104
  2153     0108  0020               	movlb	0	; select bank0
  2154     0109  00C8               	movwf	??_main
  2155     010A  30E4               	movlw	228
  2156     010B                     u697:
  2157     010B  0B89               	decfsz	9,f
  2158     010C  290B               	goto	u697
  2159     010D  0BC8               	decfsz	??_main,f
  2160     010E  290B               	goto	u697
  2161     010F  0000               	nop
  2162     0110                     l1914:
  2163     0110  0022               	movlb	2	; select bank2
  2164     0111  108E               	bcf	14,1	;volatile
  2165     0112                     l568:
  2166                           
  2167                           ;main.c: 63:             _delay((unsigned long)((30)*(16000000/4000.0)));
  2168     0112  309C               	movlw	156
  2169     0113  0020               	movlb	0	; select bank0
  2170     0114  00C8               	movwf	??_main
  2171     0115  30D7               	movlw	215
  2172     0116                     u707:
  2173     0116  0B89               	decfsz	9,f
  2174     0117  2916               	goto	u707
  2175     0118  0BC8               	decfsz	??_main,f
  2176     0119  2916               	goto	u707
  2177                           
  2178                           ;main.c: 64:         }else{
  2179     011A  2857               	goto	l1858
  2180     011B                     l570:	
  2181                           ;main.c: 65:             do { LATCbits.LATC0 = 0; } while(0);
  2182                           
  2183     011B  0022               	movlb	2	; select bank2
  2184     011C  100E               	bcf	14,0	;volatile
  2185     011D  2857               	goto	l1858
  2186     011E  3180  2827         	ljmp	start
  2187     0120                     __end_of_main:
  2188                           
  2189                           	psect	text1
  2190     026D                     __ptext1:	
  2191 ;; *************** function _SYSTEM_Initialize *****************
  2192 ;; Defined at:
  2193 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2207 ;;      Params:         0       0       0       0
  2208 ;;      Locals:         0       0       0       0
  2209 ;;      Temps:          0       0       0       0
  2210 ;;      Totals:         0       0       0       0
  2211 ;;Total ram usage:        0 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 6
  2214 ;; This function calls:
  2215 ;;		_ADC_Initialize
  2216 ;;		_FVR_Initialize
  2217 ;;		_I2C_Initialize
  2218 ;;		_OSCILLATOR_Initialize
  2219 ;;		_PIN_MANAGER_Initialize
  2220 ;;		_WDT_Initialize
  2221 ;; This function is called by:
  2222 ;;		_main
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226     026D                     _SYSTEM_Initialize:	
  2227                           ;psect for function _SYSTEM_Initialize
  2228                           
  2229     026D                     l1644:	
  2230                           ;incstack = 0
  2231                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2232                           
  2233                           
  2234                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2235     026D  3182  229B  3182   	fcall	_I2C_Initialize
  2236                           
  2237                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2238     0270  3182  2253  3182   	fcall	_PIN_MANAGER_Initialize
  2239                           
  2240                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2241     0273  3182  22C8  3182   	fcall	_OSCILLATOR_Initialize
  2242                           
  2243                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2244     0276  3183  2317  3182   	fcall	_WDT_Initialize
  2245                           
  2246                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  2247     0279  3183  231B  3182   	fcall	_FVR_Initialize
  2248                           
  2249                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  2250     027C  3182  22A5  3182   	fcall	_ADC_Initialize
  2251     027F                     l94:
  2252     027F  0008               	return
  2253     0280                     __end_of_SYSTEM_Initialize:
  2254                           
  2255                           	psect	text2
  2256     0317                     __ptext2:	
  2257 ;; *************** function _WDT_Initialize *****************
  2258 ;; Defined at:
  2259 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2273 ;;      Params:         0       0       0       0
  2274 ;;      Locals:         0       0       0       0
  2275 ;;      Temps:          0       0       0       0
  2276 ;;      Totals:         0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 5
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_SYSTEM_Initialize
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287     0317                     _WDT_Initialize:	
  2288                           ;psect for function _WDT_Initialize
  2289                           
  2290     0317                     l1538:	
  2291                           ;incstack = 0
  2292                           ; Regs used in _WDT_Initialize: [wreg]
  2293                           
  2294                           
  2295                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  2296     0317  3016               	movlw	22
  2297     0318  0021               	movlb	1	; select bank1
  2298     0319  0097               	movwf	23	;volatile
  2299     031A                     l100:
  2300     031A  0008               	return
  2301     031B                     __end_of_WDT_Initialize:
  2302                           
  2303                           	psect	text3
  2304     0253                     __ptext3:	
  2305 ;; *************** function _PIN_MANAGER_Initialize *****************
  2306 ;; Defined at:
  2307 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2321 ;;      Params:         0       0       0       0
  2322 ;;      Locals:         0       0       0       0
  2323 ;;      Temps:          0       0       0       0
  2324 ;;      Totals:         0       0       0       0
  2325 ;;Total ram usage:        0 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 5
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_SYSTEM_Initialize
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335     0253                     _PIN_MANAGER_Initialize:	
  2336                           ;psect for function _PIN_MANAGER_Initialize
  2337                           
  2338     0253                     l1518:	
  2339                           ;incstack = 0
  2340                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2341                           
  2342                           
  2343                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2344     0253  0022               	movlb	2	; select bank2
  2345     0254  018C               	clrf	12	;volatile
  2346                           
  2347                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2348     0255  018D               	clrf	13	;volatile
  2349                           
  2350                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2351     0256  018E               	clrf	14	;volatile
  2352     0257                     l1520:
  2353                           
  2354                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  2355     0257  303F               	movlw	63
  2356     0258  0021               	movlb	1	; select bank1
  2357     0259  008C               	movwf	12	;volatile
  2358     025A                     l1522:
  2359                           
  2360                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  2361     025A  3070               	movlw	112
  2362     025B  008D               	movwf	13	;volatile
  2363     025C                     l1524:
  2364                           
  2365                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xF8;
  2366     025C  30F8               	movlw	248
  2367     025D  008E               	movwf	14	;volatile
  2368     025E                     l1526:
  2369                           
  2370                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  2371     025E  30CF               	movlw	207
  2372     025F  0023               	movlb	3	; select bank3
  2373     0260  008E               	movwf	14	;volatile
  2374     0261                     l1528:
  2375                           
  2376                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x20;
  2377     0261  3020               	movlw	32
  2378     0262  008D               	movwf	13	;volatile
  2379     0263                     l1530:
  2380                           
  2381                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  2382     0263  3017               	movlw	23
  2383     0264  008C               	movwf	12	;volatile
  2384                           
  2385                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  2386     0265  0024               	movlb	4	; select bank4
  2387     0266  018D               	clrf	13	;volatile
  2388                           
  2389                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  2390     0267  018C               	clrf	12	;volatile
  2391     0268                     l1532:
  2392                           
  2393                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  2394     0268  0021               	movlb	1	; select bank1
  2395     0269  1795               	bsf	21,7	;volatile
  2396                           
  2397                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  2398     026A  0022               	movlb	2	; select bank2
  2399     026B  019D               	clrf	29	;volatile
  2400     026C                     l445:
  2401     026C  0008               	return
  2402     026D                     __end_of_PIN_MANAGER_Initialize:
  2403                           
  2404                           	psect	text4
  2405     02C8                     __ptext4:	
  2406 ;; *************** function _OSCILLATOR_Initialize *****************
  2407 ;; Defined at:
  2408 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2422 ;;      Params:         0       0       0       0
  2423 ;;      Locals:         0       0       0       0
  2424 ;;      Temps:          0       0       0       0
  2425 ;;      Totals:         0       0       0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; Hardware stack levels required when called: 5
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_SYSTEM_Initialize
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436     02C8                     _OSCILLATOR_Initialize:	
  2437                           ;psect for function _OSCILLATOR_Initialize
  2438                           
  2439     02C8                     l1534:	
  2440                           ;incstack = 0
  2441                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2442                           
  2443                           
  2444                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  2445     02C8  3078               	movlw	120
  2446     02C9  0021               	movlb	1	; select bank1
  2447     02CA  0099               	movwf	25	;volatile
  2448     02CB                     l1536:
  2449                           
  2450                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  2451     02CB  0022               	movlb	2	; select bank2
  2452     02CC  0196               	clrf	22	;volatile
  2453     02CD                     l97:
  2454     02CD  0008               	return
  2455     02CE                     __end_of_OSCILLATOR_Initialize:
  2456                           
  2457                           	psect	text5
  2458     029B                     __ptext5:	
  2459 ;; *************** function _I2C_Initialize *****************
  2460 ;; Defined at:
  2461 ;;		line 77 in file "mcc_generated_files/i2c_slave.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2475 ;;      Params:         0       0       0       0
  2476 ;;      Locals:         0       0       0       0
  2477 ;;      Temps:          1       0       0       0
  2478 ;;      Totals:         1       0       0       0
  2479 ;;Total ram usage:        1 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 5
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_SYSTEM_Initialize
  2486 ;;		_I2C_Enable
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490     029B                     _I2C_Initialize:	
  2491                           ;psect for function _I2C_Initialize
  2492                           
  2493     029B                     l1510:	
  2494                           ;incstack = 0
  2495                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0]
  2496                           
  2497                           
  2498                           ;mcc_generated_files/i2c_slave.c: 79:     SSP1STAT = 0x00;
  2499     029B  0024               	movlb	4	; select bank4
  2500     029C  0194               	clrf	20	;volatile
  2501     029D                     l1512:
  2502                           
  2503                           ;mcc_generated_files/i2c_slave.c: 80:     SSP1CON1 |= 0x06;
  2504     029D  3006               	movlw	6
  2505     029E  00F4               	movwf	??_I2C_Initialize
  2506     029F  0874               	movf	??_I2C_Initialize,w
  2507     02A0  0495               	iorwf	21,f	;volatile
  2508     02A1                     l1514:
  2509                           
  2510                           ;mcc_generated_files/i2c_slave.c: 81:     SSP1CON2 = 0x01;
  2511     02A1  3001               	movlw	1
  2512     02A2  0096               	movwf	22	;volatile
  2513     02A3                     l1516:
  2514                           
  2515                           ;mcc_generated_files/i2c_slave.c: 82:     SSP1CON1bits.SSPEN = 0;
  2516     02A3  1295               	bcf	21,5	;volatile
  2517     02A4                     l249:
  2518     02A4  0008               	return
  2519     02A5                     __end_of_I2C_Initialize:
  2520                           
  2521                           	psect	text6
  2522     031B                     __ptext6:	
  2523 ;; *************** function _FVR_Initialize *****************
  2524 ;; Defined at:
  2525 ;;		line 58 in file "mcc_generated_files/fvr.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2539 ;;      Params:         0       0       0       0
  2540 ;;      Locals:         0       0       0       0
  2541 ;;      Temps:          0       0       0       0
  2542 ;;      Totals:         0       0       0       0
  2543 ;;Total ram usage:        0 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 5
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_SYSTEM_Initialize
  2550 ;;		_main
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554     031B                     _FVR_Initialize:	
  2555                           ;psect for function _FVR_Initialize
  2556                           
  2557     031B                     l1540:	
  2558                           ;incstack = 0
  2559                           ; Regs used in _FVR_Initialize: [wreg]
  2560                           
  2561                           
  2562                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  2563     031B  3082               	movlw	130
  2564     031C  0022               	movlb	2	; select bank2
  2565     031D  0097               	movwf	23	;volatile
  2566     031E                     l495:
  2567     031E  0008               	return
  2568     031F                     __end_of_FVR_Initialize:
  2569                           
  2570                           	psect	text7
  2571     02A5                     __ptext7:	
  2572 ;; *************** function _ADC_Initialize *****************
  2573 ;; Defined at:
  2574 ;;		line 67 in file "mcc_generated_files/adc.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2588 ;;      Params:         0       0       0       0
  2589 ;;      Locals:         0       0       0       0
  2590 ;;      Temps:          0       0       0       0
  2591 ;;      Totals:         0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 5
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_SYSTEM_Initialize
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603     02A5                     _ADC_Initialize:	
  2604                           ;psect for function _ADC_Initialize
  2605                           
  2606     02A5                     l1542:	
  2607                           ;incstack = 0
  2608                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2609                           
  2610                           
  2611                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD0;
  2612     02A5  30D0               	movlw	208
  2613     02A6  0021               	movlb	1	; select bank1
  2614     02A7  009E               	movwf	30	;volatile
  2615     02A8                     l1544:
  2616                           
  2617                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
  2618     02A8  019F               	clrf	31	;volatile
  2619     02A9                     l1546:
  2620                           
  2621                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  2622     02A9  019B               	clrf	27	;volatile
  2623     02AA                     l1548:
  2624                           
  2625                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  2626     02AA  019C               	clrf	28	;volatile
  2627     02AB                     l1550:
  2628                           
  2629                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  2630     02AB  3001               	movlw	1
  2631     02AC  009D               	movwf	29	;volatile
  2632     02AD                     l467:
  2633     02AD  0008               	return
  2634     02AE                     __end_of_ADC_Initialize:
  2635                           
  2636                           	psect	text8
  2637     01DF                     __ptext8:	
  2638 ;; *************** function _I2C_Open *****************
  2639 ;; Defined at:
  2640 ;;		line 85 in file "mcc_generated_files/i2c_slave.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2654 ;;      Params:         0       0       0       0
  2655 ;;      Locals:         0       0       0       0
  2656 ;;      Temps:          0       0       0       0
  2657 ;;      Totals:         0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 6
  2661 ;; This function calls:
  2662 ;;		_I2C_SlaveEnableIrq
  2663 ;;		_I2C_SlaveOpen
  2664 ;;		_I2C_SlaveSetAddrIntHandler
  2665 ;;		_I2C_SlaveSetBusColIntHandler
  2666 ;;		_I2C_SlaveSetIsrHandler
  2667 ;;		_I2C_SlaveSetReadIntHandler
  2668 ;;		_I2C_SlaveSetSlaveAddr
  2669 ;;		_I2C_SlaveSetSlaveMask
  2670 ;;		_I2C_SlaveSetWrColIntHandler
  2671 ;;		_I2C_SlaveSetWriteIntHandler
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677     01DF                     _I2C_Open:	
  2678                           ;psect for function _I2C_Open
  2679                           
  2680     01DF                     l1646:	
  2681                           ;incstack = 0
  2682                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  2683                           
  2684                           
  2685                           ;mcc_generated_files/i2c_slave.c: 87:     I2C_SlaveOpen();
  2686     01DF  3182  2280  3181   	fcall	_I2C_SlaveOpen
  2687                           
  2688                           ;mcc_generated_files/i2c_slave.c: 88:     I2C_SlaveSetSlaveAddr(21);
  2689     01E2  3015               	movlw	21
  2690     01E3  3183  2303  3181   	fcall	_I2C_SlaveSetSlaveAddr
  2691                           
  2692                           ;mcc_generated_files/i2c_slave.c: 89:     I2C_SlaveSetSlaveMask(127);
  2693     01E6  307F               	movlw	127
  2694     01E7  3182  22FE  3181   	fcall	_I2C_SlaveSetSlaveMask
  2695                           
  2696                           ;mcc_generated_files/i2c_slave.c: 90:     I2C_SlaveSetIsrHandler(I2C_Isr);
  2697     01EA  3020               	movlw	low _I2C_Isr
  2698     01EB  00F4               	movwf	I2C_SlaveSetIsrHandler@handler
  2699     01EC  3001               	movlw	high _I2C_Isr
  2700     01ED  00F5               	movwf	I2C_SlaveSetIsrHandler@handler+1
  2701     01EE  3182  22E0  3181   	fcall	_I2C_SlaveSetIsrHandler
  2702                           
  2703                           ;mcc_generated_files/i2c_slave.c: 91:     I2C_SlaveSetBusColIntHandler(I2C_SlaveDefBusCo
      +                          lInterruptHandler);
  2704     01F1  3000               	movlw	0
  2705     01F2  00F4               	movwf	I2C_SlaveSetBusColIntHandler@handler
  2706     01F3  3000               	movlw	0
  2707     01F4  00F5               	movwf	I2C_SlaveSetBusColIntHandler@handler+1
  2708     01F5  3182  22E6  3181   	fcall	_I2C_SlaveSetBusColIntHandler
  2709                           
  2710                           ;mcc_generated_files/i2c_slave.c: 92:     I2C_SlaveSetWriteIntHandler(I2C_SlaveDefWrInte
      +                          rruptHandler);
  2711     01F8  30F2               	movlw	low _I2C_SlaveDefWrInterruptHandler
  2712     01F9  00F4               	movwf	I2C_SlaveSetWriteIntHandler@handler
  2713     01FA  3002               	movlw	high _I2C_SlaveDefWrInterruptHandler
  2714     01FB  00F5               	movwf	I2C_SlaveSetWriteIntHandler@handler+1
  2715     01FC  3182  22CE  3181   	fcall	_I2C_SlaveSetWriteIntHandler
  2716                           
  2717                           ;mcc_generated_files/i2c_slave.c: 93:     I2C_SlaveSetReadIntHandler(I2C_SlaveDefRdInter
      +                          ruptHandler);
  2718     01FF  300D               	movlw	low _I2C_SlaveDefRdInterruptHandler
  2719     0200  00F4               	movwf	I2C_SlaveSetReadIntHandler@handler
  2720     0201  3003               	movlw	high _I2C_SlaveDefRdInterruptHandler
  2721     0202  00F5               	movwf	I2C_SlaveSetReadIntHandler@handler+1
  2722     0203  3182  22DA  3181   	fcall	_I2C_SlaveSetReadIntHandler
  2723                           
  2724                           ;mcc_generated_files/i2c_slave.c: 94:     I2C_SlaveSetAddrIntHandler(I2C_SlaveDefAddrInt
      +                          erruptHandler);
  2725     0206  30F8               	movlw	low _I2C_SlaveDefAddrInterruptHandler
  2726     0207  00F4               	movwf	I2C_SlaveSetAddrIntHandler@handler
  2727     0208  3002               	movlw	high _I2C_SlaveDefAddrInterruptHandler
  2728     0209  00F5               	movwf	I2C_SlaveSetAddrIntHandler@handler+1
  2729     020A  3182  22EC  3181   	fcall	_I2C_SlaveSetAddrIntHandler
  2730                           
  2731                           ;mcc_generated_files/i2c_slave.c: 95:     I2C_SlaveSetWrColIntHandler(I2C_SlaveDefWrColI
      +                          nterruptHandler);
  2732     020D  3000               	movlw	0
  2733     020E  00F4               	movwf	I2C_SlaveSetWrColIntHandler@handler
  2734     020F  3000               	movlw	0
  2735     0210  00F5               	movwf	I2C_SlaveSetWrColIntHandler@handler+1
  2736     0211  3182  22D4  3181   	fcall	_I2C_SlaveSetWrColIntHandler
  2737     0214                     l1648:
  2738                           
  2739                           ;mcc_generated_files/i2c_slave.c: 96:     I2C_SlaveEnableIrq();
  2740     0214  3183  2323  3181   	fcall	_I2C_SlaveEnableIrq
  2741     0217                     l252:
  2742     0217  0008               	return
  2743     0218                     __end_of_I2C_Open:
  2744                           
  2745                           	psect	text9
  2746     02CE                     __ptext9:	
  2747 ;; *************** function _I2C_SlaveSetWriteIntHandler *****************
  2748 ;; Defined at:
  2749 ;;		line 243 in file "mcc_generated_files/i2c_slave.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  handler         2    4[COMMON] PTR FTN()void 
  2752 ;;		 -> I2C_SlaveDefWrInterruptHandler(1), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2764 ;;      Params:         2       0       0       0
  2765 ;;      Locals:         0       0       0       0
  2766 ;;      Temps:          0       0       0       0
  2767 ;;      Totals:         2       0       0       0
  2768 ;;Total ram usage:        2 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 5
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_I2C_Open
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778     02CE                     _I2C_SlaveSetWriteIntHandler:	
  2779                           ;psect for function _I2C_SlaveSetWriteIntHandler
  2780                           
  2781     02CE                     l1572:	
  2782                           ;incstack = 0
  2783                           ; Regs used in _I2C_SlaveSetWriteIntHandler: [wreg]
  2784                           
  2785                           
  2786                           ;mcc_generated_files/i2c_slave.c: 244:     I2C_SlaveWrInterruptHandler = handler;
  2787     02CE  0875               	movf	I2C_SlaveSetWriteIntHandler@handler+1,w
  2788     02CF  0020               	movlb	0	; select bank0
  2789     02D0  00AD               	movwf	_I2C_SlaveWrInterruptHandler+1
  2790     02D1  0874               	movf	I2C_SlaveSetWriteIntHandler@handler,w
  2791     02D2  00AC               	movwf	_I2C_SlaveWrInterruptHandler
  2792     02D3                     l318:
  2793     02D3  0008               	return
  2794     02D4                     __end_of_I2C_SlaveSetWriteIntHandler:
  2795                           
  2796                           	psect	text10
  2797     02D4                     __ptext10:	
  2798 ;; *************** function _I2C_SlaveSetWrColIntHandler *****************
  2799 ;; Defined at:
  2800 ;;		line 278 in file "mcc_generated_files/i2c_slave.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  handler         2    4[COMMON] PTR FTN()void 
  2803 ;;		 -> I2C_SlaveDefWrColInterruptHandler(1), 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2815 ;;      Params:         2       0       0       0
  2816 ;;      Locals:         0       0       0       0
  2817 ;;      Temps:          0       0       0       0
  2818 ;;      Totals:         2       0       0       0
  2819 ;;Total ram usage:        2 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 5
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_I2C_Open
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829     02D4                     _I2C_SlaveSetWrColIntHandler:	
  2830                           ;psect for function _I2C_SlaveSetWrColIntHandler
  2831                           
  2832     02D4                     l1578:	
  2833                           ;incstack = 0
  2834                           ; Regs used in _I2C_SlaveSetWrColIntHandler: [wreg]
  2835                           
  2836                           
  2837                           ;mcc_generated_files/i2c_slave.c: 279:     I2C_SlaveWrColInterruptHandler = handler;
  2838     02D4  0875               	movf	I2C_SlaveSetWrColIntHandler@handler+1,w
  2839     02D5  0020               	movlb	0	; select bank0
  2840     02D6  00A7               	movwf	_I2C_SlaveWrColInterruptHandler+1
  2841     02D7  0874               	movf	I2C_SlaveSetWrColIntHandler@handler,w
  2842     02D8  00A6               	movwf	_I2C_SlaveWrColInterruptHandler
  2843     02D9                     l338:
  2844     02D9  0008               	return
  2845     02DA                     __end_of_I2C_SlaveSetWrColIntHandler:
  2846                           
  2847                           	psect	text11
  2848     02FE                     __ptext11:	
  2849 ;; *************** function _I2C_SlaveSetSlaveMask *****************
  2850 ;; Defined at:
  2851 ;;		line 335 in file "mcc_generated_files/i2c_slave.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  maskAddr        1    wreg     unsigned char 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  maskAddr        1    4[COMMON] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2865 ;;      Params:         0       0       0       0
  2866 ;;      Locals:         1       0       0       0
  2867 ;;      Temps:          0       0       0       0
  2868 ;;      Totals:         1       0       0       0
  2869 ;;Total ram usage:        1 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 5
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_I2C_Open
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879     02FE                     _I2C_SlaveSetSlaveMask:	
  2880                           ;psect for function _I2C_SlaveSetSlaveMask
  2881                           
  2882                           
  2883                           ;incstack = 0
  2884                           ; Regs used in _I2C_SlaveSetSlaveMask: [wreg+status,2+status,0]
  2885                           ;I2C_SlaveSetSlaveMask@maskAddr stored from wreg
  2886     02FE  00F4               	movwf	I2C_SlaveSetSlaveMask@maskAddr
  2887     02FF                     l1566:
  2888                           
  2889                           ;mcc_generated_files/i2c_slave.c: 335: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveMask(uint8_t maskAddr);mcc_generated_files/i2c_slave.c: 336: {;mcc_generated_files/i
      +                          2c_slave.c: 337:     SSP1MSK = (uint8_t) (maskAddr << 1);
  2890     02FF  3574               	lslf	I2C_SlaveSetSlaveMask@maskAddr,w
  2891     0300  0024               	movlb	4	; select bank4
  2892     0301  0093               	movwf	19	;volatile
  2893     0302                     l368:
  2894     0302  0008               	return
  2895     0303                     __end_of_I2C_SlaveSetSlaveMask:
  2896                           
  2897                           	psect	text12
  2898     0303                     __ptext12:	
  2899 ;; *************** function _I2C_SlaveSetSlaveAddr *****************
  2900 ;; Defined at:
  2901 ;;		line 330 in file "mcc_generated_files/i2c_slave.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  slaveAddr       1    wreg     unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  slaveAddr       1    4[COMMON] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2915 ;;      Params:         0       0       0       0
  2916 ;;      Locals:         1       0       0       0
  2917 ;;      Temps:          0       0       0       0
  2918 ;;      Totals:         1       0       0       0
  2919 ;;Total ram usage:        1 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 5
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_I2C_Open
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929     0303                     _I2C_SlaveSetSlaveAddr:	
  2930                           ;psect for function _I2C_SlaveSetSlaveAddr
  2931                           
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in _I2C_SlaveSetSlaveAddr: [wreg+status,2+status,0]
  2935                           ;I2C_SlaveSetSlaveAddr@slaveAddr stored from wreg
  2936     0303  00F4               	movwf	I2C_SlaveSetSlaveAddr@slaveAddr
  2937     0304                     l1564:
  2938                           
  2939                           ;mcc_generated_files/i2c_slave.c: 330: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveAddr(uint8_t slaveAddr);mcc_generated_files/i2c_slave.c: 331: {;mcc_generated_files/
      +                          i2c_slave.c: 332:     SSP1ADD = (uint8_t) (slaveAddr << 1);
  2940     0304  3574               	lslf	I2C_SlaveSetSlaveAddr@slaveAddr,w
  2941     0305  0024               	movlb	4	; select bank4
  2942     0306  0092               	movwf	18	;volatile
  2943     0307                     l365:
  2944     0307  0008               	return
  2945     0308                     __end_of_I2C_SlaveSetSlaveAddr:
  2946                           
  2947                           	psect	text13
  2948     02DA                     __ptext13:	
  2949 ;; *************** function _I2C_SlaveSetReadIntHandler *****************
  2950 ;; Defined at:
  2951 ;;		line 198 in file "mcc_generated_files/i2c_slave.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  handler         2    4[COMMON] PTR FTN()void 
  2954 ;;		 -> I2C_SlaveDefRdInterruptHandler(1), 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2966 ;;      Params:         2       0       0       0
  2967 ;;      Locals:         0       0       0       0
  2968 ;;      Temps:          0       0       0       0
  2969 ;;      Totals:         2       0       0       0
  2970 ;;Total ram usage:        2 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 5
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_I2C_Open
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980     02DA                     _I2C_SlaveSetReadIntHandler:	
  2981                           ;psect for function _I2C_SlaveSetReadIntHandler
  2982                           
  2983     02DA                     l1574:	
  2984                           ;incstack = 0
  2985                           ; Regs used in _I2C_SlaveSetReadIntHandler: [wreg]
  2986                           
  2987                           
  2988                           ;mcc_generated_files/i2c_slave.c: 199:     I2C_SlaveRdInterruptHandler = handler;
  2989     02DA  0875               	movf	I2C_SlaveSetReadIntHandler@handler+1,w
  2990     02DB  0020               	movlb	0	; select bank0
  2991     02DC  00AF               	movwf	_I2C_SlaveRdInterruptHandler+1
  2992     02DD  0874               	movf	I2C_SlaveSetReadIntHandler@handler,w
  2993     02DE  00AE               	movwf	_I2C_SlaveRdInterruptHandler
  2994     02DF                     l298:
  2995     02DF  0008               	return
  2996     02E0                     __end_of_I2C_SlaveSetReadIntHandler:
  2997                           
  2998                           	psect	text14
  2999     02E0                     __ptext14:	
  3000 ;; *************** function _I2C_SlaveSetIsrHandler *****************
  3001 ;; Defined at:
  3002 ;;		line 192 in file "mcc_generated_files/i2c_slave.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  handler         2    4[COMMON] PTR FTN()void 
  3005 ;;		 -> I2C_Isr(1), 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3017 ;;      Params:         2       0       0       0
  3018 ;;      Locals:         0       0       0       0
  3019 ;;      Temps:          0       0       0       0
  3020 ;;      Totals:         2       0       0       0
  3021 ;;Total ram usage:        2 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 5
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_I2C_Open
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031     02E0                     _I2C_SlaveSetIsrHandler:	
  3032                           ;psect for function _I2C_SlaveSetIsrHandler
  3033                           
  3034     02E0                     l1568:	
  3035                           ;incstack = 0
  3036                           ; Regs used in _I2C_SlaveSetIsrHandler: [wreg]
  3037                           
  3038                           
  3039                           ;mcc_generated_files/i2c_slave.c: 192: void I2C_SlaveSetIsrHandler(i2cInterruptHandler h
      +                          andler);mcc_generated_files/i2c_slave.c: 193: {;mcc_generated_files/i2c_slave.c: 194:   
      +                            MSSP_InterruptHandler = handler;
  3040     02E0  0875               	movf	I2C_SlaveSetIsrHandler@handler+1,w
  3041     02E1  0020               	movlb	0	; select bank0
  3042     02E2  00B1               	movwf	_MSSP_InterruptHandler+1
  3043     02E3  0874               	movf	I2C_SlaveSetIsrHandler@handler,w
  3044     02E4  00B0               	movwf	_MSSP_InterruptHandler
  3045     02E5                     l295:
  3046     02E5  0008               	return
  3047     02E6                     __end_of_I2C_SlaveSetIsrHandler:
  3048                           
  3049                           	psect	text15
  3050     02E6                     __ptext15:	
  3051 ;; *************** function _I2C_SlaveSetBusColIntHandler *****************
  3052 ;; Defined at:
  3053 ;;		line 294 in file "mcc_generated_files/i2c_slave.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  handler         2    4[COMMON] PTR FTN()void 
  3056 ;;		 -> I2C_SlaveDefBusColInterruptHandler(1), 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3068 ;;      Params:         2       0       0       0
  3069 ;;      Locals:         0       0       0       0
  3070 ;;      Temps:          0       0       0       0
  3071 ;;      Totals:         2       0       0       0
  3072 ;;Total ram usage:        2 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 5
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_I2C_Open
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082     02E6                     _I2C_SlaveSetBusColIntHandler:	
  3083                           ;psect for function _I2C_SlaveSetBusColIntHandler
  3084                           
  3085     02E6                     l1570:	
  3086                           ;incstack = 0
  3087                           ; Regs used in _I2C_SlaveSetBusColIntHandler: [wreg]
  3088                           
  3089                           
  3090                           ;mcc_generated_files/i2c_slave.c: 295:     I2C_SlaveBusColInterruptHandler = handler;
  3091     02E6  0875               	movf	I2C_SlaveSetBusColIntHandler@handler+1,w
  3092     02E7  0020               	movlb	0	; select bank0
  3093     02E8  00A9               	movwf	_I2C_SlaveBusColInterruptHandler+1
  3094     02E9  0874               	movf	I2C_SlaveSetBusColIntHandler@handler,w
  3095     02EA  00A8               	movwf	_I2C_SlaveBusColInterruptHandler
  3096     02EB                     l348:
  3097     02EB  0008               	return
  3098     02EC                     __end_of_I2C_SlaveSetBusColIntHandler:
  3099                           
  3100                           	psect	text16
  3101     02EC                     __ptext16:	
  3102 ;; *************** function _I2C_SlaveSetAddrIntHandler *****************
  3103 ;; Defined at:
  3104 ;;		line 262 in file "mcc_generated_files/i2c_slave.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  handler         2    4[COMMON] PTR FTN()void 
  3107 ;;		 -> I2C_SlaveDefAddrInterruptHandler(1), 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3119 ;;      Params:         2       0       0       0
  3120 ;;      Locals:         0       0       0       0
  3121 ;;      Temps:          0       0       0       0
  3122 ;;      Totals:         2       0       0       0
  3123 ;;Total ram usage:        2 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 5
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_I2C_Open
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133     02EC                     _I2C_SlaveSetAddrIntHandler:	
  3134                           ;psect for function _I2C_SlaveSetAddrIntHandler
  3135                           
  3136     02EC                     l1576:	
  3137                           ;incstack = 0
  3138                           ; Regs used in _I2C_SlaveSetAddrIntHandler: [wreg]
  3139                           
  3140                           
  3141                           ;mcc_generated_files/i2c_slave.c: 263:     I2C_SlaveAddrInterruptHandler = handler;
  3142     02EC  0875               	movf	I2C_SlaveSetAddrIntHandler@handler+1,w
  3143     02ED  0020               	movlb	0	; select bank0
  3144     02EE  00AB               	movwf	_I2C_SlaveAddrInterruptHandler+1
  3145     02EF  0874               	movf	I2C_SlaveSetAddrIntHandler@handler,w
  3146     02F0  00AA               	movwf	_I2C_SlaveAddrInterruptHandler
  3147     02F1                     l328:
  3148     02F1  0008               	return
  3149     02F2                     __end_of_I2C_SlaveSetAddrIntHandler:
  3150                           
  3151                           	psect	text17
  3152     0280                     __ptext17:	
  3153 ;; *************** function _I2C_SlaveOpen *****************
  3154 ;; Defined at:
  3155 ;;		line 309 in file "mcc_generated_files/i2c_slave.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      _Bool 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3169 ;;      Params:         0       0       0       0
  3170 ;;      Locals:         0       0       0       0
  3171 ;;      Temps:          1       0       0       0
  3172 ;;      Totals:         1       0       0       0
  3173 ;;Total ram usage:        1 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 5
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_I2C_Open
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183     0280                     _I2C_SlaveOpen:	
  3184                           ;psect for function _I2C_SlaveOpen
  3185                           
  3186     0280                     l1552:	
  3187                           ;incstack = 0
  3188                           ; Regs used in _I2C_SlaveOpen: [wreg+status,2+status,0]
  3189                           
  3190                           
  3191                           ;mcc_generated_files/i2c_slave.c: 311:     if(!SSP1CON1bits.SSPEN)
  3192     0280  0024               	movlb	4	; select bank4
  3193     0281  1A95               	btfsc	21,5	;volatile
  3194     0282  2A84               	goto	u291
  3195     0283  2A85               	goto	u290
  3196     0284                     u291:
  3197     0284  2A8D               	goto	l359
  3198     0285                     u290:
  3199     0285                     l1554:
  3200                           
  3201                           ;mcc_generated_files/i2c_slave.c: 312:     {;mcc_generated_files/i2c_slave.c: 313:      
      +                             SSP1STAT = 0x00;
  3202     0285  0194               	clrf	20	;volatile
  3203     0286                     l1556:
  3204                           
  3205                           ;mcc_generated_files/i2c_slave.c: 314:         SSP1CON1 |= 0x06;
  3206     0286  3006               	movlw	6
  3207     0287  00F4               	movwf	??_I2C_SlaveOpen
  3208     0288  0874               	movf	??_I2C_SlaveOpen,w
  3209     0289  0495               	iorwf	21,f	;volatile
  3210     028A                     l1558:
  3211                           
  3212                           ;mcc_generated_files/i2c_slave.c: 315:         SSP1CON2 = 0x01;
  3213     028A  3001               	movlw	1
  3214     028B  0096               	movwf	22	;volatile
  3215     028C                     l1560:
  3216                           
  3217                           ;mcc_generated_files/i2c_slave.c: 316:         SSP1CON1bits.SSPEN = 1;
  3218     028C  1695               	bsf	21,5	;volatile
  3219     028D                     l359:
  3220     028D  0008               	return
  3221     028E                     __end_of_I2C_SlaveOpen:
  3222                           
  3223                           	psect	text18
  3224     0323                     __ptext18:	
  3225 ;; *************** function _I2C_SlaveEnableIrq *****************
  3226 ;; Defined at:
  3227 ;;		line 340 in file "mcc_generated_files/i2c_slave.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;		None
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      void 
  3234 ;; Registers used:
  3235 ;;		None
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3241 ;;      Params:         0       0       0       0
  3242 ;;      Locals:         0       0       0       0
  3243 ;;      Temps:          0       0       0       0
  3244 ;;      Totals:         0       0       0       0
  3245 ;;Total ram usage:        0 bytes
  3246 ;; Hardware stack levels used: 1
  3247 ;; Hardware stack levels required when called: 5
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_I2C_Open
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255     0323                     _I2C_SlaveEnableIrq:	
  3256                           ;psect for function _I2C_SlaveEnableIrq
  3257                           
  3258     0323                     l1580:	
  3259                           ;incstack = 0
  3260                           ; Regs used in _I2C_SlaveEnableIrq: []
  3261                           
  3262                           
  3263                           ;mcc_generated_files/i2c_slave.c: 342:     PIE1bits.SSP1IE = 1;
  3264     0323  0021               	movlb	1	; select bank1
  3265     0324  1591               	bsf	17,3	;volatile
  3266     0325                     l371:
  3267     0325  0008               	return
  3268     0326                     __end_of_I2C_SlaveEnableIrq:
  3269                           
  3270                           	psect	text19
  3271     0218                     __ptext19:	
  3272 ;; *************** function _ADC_GetConversion *****************
  3273 ;; Defined at:
  3274 ;;		line 115 in file "mcc_generated_files/adc.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  channel         1    wreg     enum E3500
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  channel         1    1[BANK0 ] enum E3500
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  2    4[COMMON] unsigned short 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3288 ;;      Params:         2       0       0       0
  3289 ;;      Locals:         0       1       0       0
  3290 ;;      Temps:          0       1       0       0
  3291 ;;      Totals:         2       2       0       0
  3292 ;;Total ram usage:        4 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 5
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302     0218                     _ADC_GetConversion:	
  3303                           ;psect for function _ADC_GetConversion
  3304                           
  3305                           
  3306                           ;incstack = 0
  3307                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3308                           ;ADC_GetConversion@channel stored from wreg
  3309     0218  0020               	movlb	0	; select bank0
  3310     0219  00C7               	movwf	ADC_GetConversion@channel
  3311     021A                     l1840:
  3312                           
  3313                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  3314     021A  0847               	movf	ADC_GetConversion@channel,w
  3315     021B  00C6               	movwf	??_ADC_GetConversion
  3316     021C  0DC6               	rlf	??_ADC_GetConversion,f
  3317     021D  0DC6               	rlf	??_ADC_GetConversion,f
  3318     021E  0021               	movlb	1	; select bank1
  3319     021F  081D               	movf	29,w	;volatile
  3320     0220  0020               	movlb	0	; select bank0
  3321     0221  0646               	xorwf	??_ADC_GetConversion,w
  3322     0222  3983               	andlw	-125
  3323     0223  0646               	xorwf	??_ADC_GetConversion,w
  3324     0224  0021               	movlb	1	; select bank1
  3325     0225  009D               	movwf	29	;volatile
  3326     0226                     l1842:
  3327                           
  3328                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  3329     0226  141D               	bsf	29,0	;volatile
  3330     0227                     l1844:
  3331                           
  3332                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3333     0227  3006               	movlw	6
  3334     0228                     u717:
  3335     0228  0B89               	decfsz	9,f
  3336     0229  2A28               	goto	u717
  3337     022A  3200               	nop2
  3338     022B                     l1846:
  3339                           
  3340                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GO_nDONE = 1;
  3341     022B  0021               	movlb	1	; select bank1
  3342     022C  149D               	bsf	29,1	;volatile
  3343     022D                     l482:	
  3344                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  3345                           
  3346                           
  3347                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GO_nDONE)
  3348     022D  189D               	btfsc	29,1	;volatile
  3349     022E  2A30               	goto	u571
  3350     022F  2A31               	goto	u570
  3351     0230                     u571:
  3352     0230  2A2D               	goto	l482
  3353     0231                     u570:
  3354     0231                     l1848:
  3355                           
  3356                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3357     0231  081C               	movf	28,w	;volatile
  3358     0232  00F5               	movwf	?_ADC_GetConversion+1
  3359     0233  081B               	movf	27,w	;volatile
  3360     0234  00F4               	movwf	?_ADC_GetConversion
  3361     0235                     l485:
  3362     0235  0008               	return
  3363     0236                     __end_of_ADC_GetConversion:
  3364                           
  3365                           	psect	intentry
  3366     0004                     __pintentry:	
  3367 ;; *************** function _INTERRUPT_InterruptManager *****************
  3368 ;; Defined at:
  3369 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3383 ;;      Params:         0       0       0       0
  3384 ;;      Locals:         0       0       0       0
  3385 ;;      Temps:          0       0       0       0
  3386 ;;      Totals:         0       0       0       0
  3387 ;;Total ram usage:        0 bytes
  3388 ;; Hardware stack levels used: 1
  3389 ;; Hardware stack levels required when called: 4
  3390 ;; This function calls:
  3391 ;;		NULL
  3392 ;;		_I2C_Isr
  3393 ;; This function is called by:
  3394 ;;		Interrupt level 1
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398     0004                     _INTERRUPT_InterruptManager:
  3399                           
  3400                           ;incstack = 0
  3401     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3402                           
  3403                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3404     0005  3180               	pagesel	$
  3405     0006                     i1l1704:
  3406                           
  3407                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3408     0006  1F0B               	btfss	11,6	;volatile
  3409     0007  2809               	goto	u41_21
  3410     0008  280A               	goto	u41_20
  3411     0009                     u41_21:
  3412     0009  2825               	goto	i1l47
  3413     000A                     u41_20:
  3414     000A                     i1l1706:
  3415                           
  3416                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  3417     000A  0021               	movlb	1	; select bank1
  3418     000B  1D92               	btfss	18,3	;volatile
  3419     000C  280E               	goto	u42_21
  3420     000D  280F               	goto	u42_20
  3421     000E                     u42_21:
  3422     000E  281A               	goto	i1l42
  3423     000F                     u42_20:
  3424     000F                     i1l1708:
  3425     000F  0020               	movlb	0	; select bank0
  3426     0010  1D92               	btfss	18,3	;volatile
  3427     0011  2813               	goto	u43_21
  3428     0012  2814               	goto	u43_20
  3429     0013                     u43_21:
  3430     0013  281A               	goto	i1l42
  3431     0014                     u43_20:
  3432     0014                     i1l1710:
  3433                           
  3434                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             MSSP_InterruptHandler();
  3435     0014  0831               	movf	_MSSP_InterruptHandler+1,w
  3436     0015  008A               	movwf	10
  3437     0016  0830               	movf	_MSSP_InterruptHandler,w
  3438     0017  000A               	callw
  3439     0018  3180               	pagesel	$
  3440                           
  3441                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3442     0019  2825               	goto	i1l47
  3443     001A                     i1l42:	
  3444                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  3445                           
  3446     001A  0021               	movlb	1	; select bank1
  3447     001B  1D91               	btfss	17,3	;volatile
  3448     001C  281E               	goto	u44_21
  3449     001D  281F               	goto	u44_20
  3450     001E                     u44_21:
  3451     001E  2825               	goto	i1l43
  3452     001F                     u44_20:
  3453     001F                     i1l1712:
  3454     001F  0020               	movlb	0	; select bank0
  3455     0020  1D91               	btfss	17,3	;volatile
  3456     0021  2823               	goto	u45_21
  3457     0022  2824               	goto	u45_20
  3458     0023                     u45_21:
  3459     0023  2825               	goto	i1l43
  3460     0024                     u45_20:
  3461     0024  2814               	goto	i1l1710
  3462     0025                     i1l43:
  3463     0025                     i1l47:	
  3464                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  3465                           
  3466     0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3467     0026  0009               	retfie
  3468     0027                     __end_of_INTERRUPT_InterruptManager:
  3469                           
  3470                           	psect	text21
  3471     0120                     __ptext21:	
  3472 ;; *************** function _I2C_Isr *****************
  3473 ;; Defined at:
  3474 ;;		line 134 in file "mcc_generated_files/i2c_slave.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3488 ;;      Params:         0       0       0       0
  3489 ;;      Locals:         0       0       0       0
  3490 ;;      Temps:          2       0       0       0
  3491 ;;      Totals:         2       0       0       0
  3492 ;;Total ram usage:        2 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; Hardware stack levels required when called: 3
  3495 ;; This function calls:
  3496 ;;		_I2C_SlaveAddrCallBack
  3497 ;;		_I2C_SlaveClearIrq
  3498 ;;		_I2C_SlaveIsAddr
  3499 ;;		_I2C_SlaveIsRead
  3500 ;;		_I2C_SlaveIsRxBufFull
  3501 ;;		_I2C_SlaveIsTxBufEmpty
  3502 ;;		_I2C_SlaveRdCallBack
  3503 ;;		_I2C_SlaveReleaseClock
  3504 ;;		_I2C_SlaveWrCallBack
  3505 ;; This function is called by:
  3506 ;;		_I2C_Open
  3507 ;;		_INTERRUPT_InterruptManager
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511     0120                     _I2C_Isr:	
  3512                           ;psect for function _I2C_Isr
  3513                           
  3514     0120                     i1l1650:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _I2C_Isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3517                           
  3518                           
  3519                           ;mcc_generated_files/i2c_slave.c: 136:     I2C_SlaveClearIrq();
  3520     0120  3183  2329  3181   	fcall	_I2C_SlaveClearIrq
  3521     0123                     i1l1652:
  3522                           
  3523                           ;mcc_generated_files/i2c_slave.c: 138:     if(I2C_SlaveIsAddr())
  3524     0123  3182  22B5  3181   	fcall	_I2C_SlaveIsAddr
  3525     0126  3A00               	xorlw	0
  3526     0127  1903               	skipnz
  3527     0128  292A               	goto	u34_21
  3528     0129  292B               	goto	u34_20
  3529     012A                     u34_21:
  3530     012A  293B               	goto	i1l1660
  3531     012B                     u34_20:
  3532     012B                     i1l1654:
  3533                           
  3534                           ;mcc_generated_files/i2c_slave.c: 139:     {;mcc_generated_files/i2c_slave.c: 140:      
      +                             if(I2C_SlaveIsRead())
  3535     012B  3183  2312  3181   	fcall	_I2C_SlaveIsRead
  3536     012E  3A00               	xorlw	0
  3537     012F  1903               	skipnz
  3538     0130  2932               	goto	u35_21
  3539     0131  2933               	goto	u35_20
  3540     0132                     u35_21:
  3541     0132  2937               	goto	i1l1658
  3542     0133                     u35_20:
  3543     0133                     i1l1656:
  3544                           
  3545                           ;mcc_generated_files/i2c_slave.c: 141:         {;mcc_generated_files/i2c_slave.c: 142:  
      +                                     i2cSlaveState = I2C_ADDR_TX;
  3546     0133  3001               	movlw	1
  3547     0134  0020               	movlb	0	; select bank0
  3548     0135  00B3               	movwf	_i2cSlaveState	;volatile
  3549                           
  3550                           ;mcc_generated_files/i2c_slave.c: 143:         }
  3551     0136  2973               	goto	i1l1684
  3552     0137                     i1l1658:
  3553                           
  3554                           ;mcc_generated_files/i2c_slave.c: 145:         {;mcc_generated_files/i2c_slave.c: 146:  
      +                                     i2cSlaveState = I2C_ADDR_RX;
  3555     0137  3002               	movlw	2
  3556     0138  0020               	movlb	0	; select bank0
  3557     0139  00B3               	movwf	_i2cSlaveState	;volatile
  3558     013A  2973               	goto	i1l1684
  3559     013B                     i1l1660:
  3560                           
  3561                           ;mcc_generated_files/i2c_slave.c: 150:     {;mcc_generated_files/i2c_slave.c: 151:      
      +                             if(I2C_SlaveIsRead())
  3562     013B  3183  2312  3181   	fcall	_I2C_SlaveIsRead
  3563     013E  3A00               	xorlw	0
  3564     013F  1903               	skipnz
  3565     0140  2942               	goto	u36_21
  3566     0141  2943               	goto	u36_20
  3567     0142                     u36_21:
  3568     0142  2947               	goto	i1l1664
  3569     0143                     u36_20:
  3570     0143                     i1l1662:
  3571                           
  3572                           ;mcc_generated_files/i2c_slave.c: 152:         {;mcc_generated_files/i2c_slave.c: 153:  
      +                                     i2cSlaveState = I2C_DATA_TX;
  3573     0143  3003               	movlw	3
  3574     0144  0020               	movlb	0	; select bank0
  3575     0145  00B3               	movwf	_i2cSlaveState	;volatile
  3576                           
  3577                           ;mcc_generated_files/i2c_slave.c: 154:         }
  3578     0146  2973               	goto	i1l1684
  3579     0147                     i1l1664:
  3580                           
  3581                           ;mcc_generated_files/i2c_slave.c: 156:         {;mcc_generated_files/i2c_slave.c: 157:  
      +                                     i2cSlaveState = I2C_DATA_RX;
  3582     0147  3004               	movlw	4
  3583     0148  0020               	movlb	0	; select bank0
  3584     0149  00B3               	movwf	_i2cSlaveState	;volatile
  3585     014A  2973               	goto	i1l1684
  3586     014B                     i1l1666:
  3587                           
  3588                           ;mcc_generated_files/i2c_slave.c: 164:             I2C_SlaveAddrCallBack();
  3589     014B  3182  228E  3181   	fcall	_I2C_SlaveAddrCallBack
  3590     014E                     i1l1668:
  3591                           
  3592                           ;mcc_generated_files/i2c_slave.c: 165:             if(I2C_SlaveIsTxBufEmpty())
  3593     014E  3182  22AE  3181   	fcall	_I2C_SlaveIsTxBufEmpty
  3594     0151  3A00               	xorlw	0
  3595     0152  1903               	skipnz
  3596     0153  2955               	goto	u37_21
  3597     0154  2956               	goto	u37_20
  3598     0155                     u37_21:
  3599     0155  2989               	goto	i1l1686
  3600     0156                     u37_20:
  3601     0156                     i1l1670:
  3602                           
  3603                           ;mcc_generated_files/i2c_slave.c: 166:             {;mcc_generated_files/i2c_slave.c: 16
      +                          7:                 I2C_SlaveWrCallBack();
  3604     0156  3182  2236  3181   	fcall	_I2C_SlaveWrCallBack
  3605     0159  2989               	goto	i1l1686
  3606     015A                     i1l1672:
  3607                           
  3608                           ;mcc_generated_files/i2c_slave.c: 171:             I2C_SlaveAddrCallBack();
  3609     015A  3182  228E  3181   	fcall	_I2C_SlaveAddrCallBack
  3610                           
  3611                           ;mcc_generated_files/i2c_slave.c: 172:             break;
  3612     015D  2989               	goto	i1l1686
  3613     015E                     i1l1674:
  3614                           
  3615                           ;mcc_generated_files/i2c_slave.c: 174:             if(I2C_SlaveIsTxBufEmpty())
  3616     015E  3182  22AE  3181   	fcall	_I2C_SlaveIsTxBufEmpty
  3617     0161  3A00               	xorlw	0
  3618     0162  1903               	skipnz
  3619     0163  2965               	goto	u38_21
  3620     0164  2966               	goto	u38_20
  3621     0165                     u38_21:
  3622     0165  2989               	goto	i1l1686
  3623     0166                     u38_20:
  3624     0166  2956               	goto	i1l1670
  3625     0167                     i1l1678:
  3626                           
  3627                           ;mcc_generated_files/i2c_slave.c: 180:             if(I2C_SlaveIsRxBufFull())
  3628     0167  3183  231F  3181   	fcall	_I2C_SlaveIsRxBufFull
  3629     016A  3A00               	xorlw	0
  3630     016B  1903               	skipnz
  3631     016C  296E               	goto	u39_21
  3632     016D  296F               	goto	u39_20
  3633     016E                     u39_21:
  3634     016E  2989               	goto	i1l1686
  3635     016F                     u39_20:
  3636     016F                     i1l1680:
  3637                           
  3638                           ;mcc_generated_files/i2c_slave.c: 181:             {;mcc_generated_files/i2c_slave.c: 18
      +                          2:                 I2C_SlaveRdCallBack();
  3639     016F  3181  218D  3181   	fcall	_I2C_SlaveRdCallBack
  3640     0172  2989               	goto	i1l1686
  3641     0173                     i1l1684:
  3642     0173  0833               	movf	_i2cSlaveState,w	;volatile
  3643     0174  00F2               	movwf	??_I2C_Isr
  3644     0175  01F3               	clrf	??_I2C_Isr+1
  3645                           
  3646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3647                           ; Switch size 1, requested type "simple"
  3648                           ; Number of cases is 1, Range of values is 0 to 0
  3649                           ; switch strategies available:
  3650                           ; Name         Instructions Cycles
  3651                           ; simple_byte            4     3 (average)
  3652                           ; direct_byte            8     6 (fixed)
  3653                           ; jumptable            260     6 (fixed)
  3654                           ;	Chosen strategy is simple_byte
  3655     0176  0873               	movf	??_I2C_Isr+1,w
  3656     0177  3A00               	xorlw	0	; case 0
  3657     0178  1903               	skipnz
  3658     0179  297B               	goto	i1l1956
  3659     017A  2989               	goto	i1l1686
  3660     017B                     i1l1956:
  3661                           
  3662                           ; Switch size 1, requested type "simple"
  3663                           ; Number of cases is 4, Range of values is 1 to 4
  3664                           ; switch strategies available:
  3665                           ; Name         Instructions Cycles
  3666                           ; simple_byte           13     7 (average)
  3667                           ; direct_byte           17     9 (fixed)
  3668                           ; jumptable            263     9 (fixed)
  3669                           ;	Chosen strategy is simple_byte
  3670     017B  0872               	movf	??_I2C_Isr,w
  3671     017C  3A01               	xorlw	1	; case 1
  3672     017D  1903               	skipnz
  3673     017E  294B               	goto	i1l1666
  3674     017F  3A03               	xorlw	3	; case 2
  3675     0180  1903               	skipnz
  3676     0181  295A               	goto	i1l1672
  3677     0182  3A01               	xorlw	1	; case 3
  3678     0183  1903               	skipnz
  3679     0184  295E               	goto	i1l1674
  3680     0185  3A07               	xorlw	7	; case 4
  3681     0186  1903               	skipnz
  3682     0187  2967               	goto	i1l1678
  3683     0188  2989               	goto	i1l1686
  3684     0189                     i1l1686:
  3685                           
  3686                           ;mcc_generated_files/i2c_slave.c: 188:     I2C_SlaveReleaseClock();
  3687     0189  3183  2326  3181   	fcall	_I2C_SlaveReleaseClock
  3688     018C                     i1l292:
  3689     018C  0008               	return
  3690     018D                     __end_of_I2C_Isr:
  3691                           
  3692                           	psect	text22
  3693     0236                     __ptext22:	
  3694 ;; *************** function _I2C_SlaveWrCallBack *****************
  3695 ;; Defined at:
  3696 ;;		line 247 in file "mcc_generated_files/i2c_slave.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3710 ;;      Params:         0       0       0       0
  3711 ;;      Locals:         0       0       0       0
  3712 ;;      Temps:          0       0       0       0
  3713 ;;      Totals:         0       0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; Hardware stack levels required when called: 2
  3717 ;; This function calls:
  3718 ;;		NULL
  3719 ;;		_I2C_SlaveDefWrInterruptHandler
  3720 ;; This function is called by:
  3721 ;;		_I2C_Isr
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725     0236                     _I2C_SlaveWrCallBack:	
  3726                           ;psect for function _I2C_SlaveWrCallBack
  3727                           
  3728     0236                     i1l1600:	
  3729                           ;incstack = 0
  3730                           ; Regs used in _I2C_SlaveWrCallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3731                           
  3732                           
  3733                           ;mcc_generated_files/i2c_slave.c: 249:     i2cWrData = current_Data.raw[index++];
  3734     0236  0020               	movlb	0	; select bank0
  3735     0237  0822               	movf	_index,w	;volatile
  3736     0238  3E24               	addlw	(low (_current_Data| 0))& (0+255)
  3737     0239  0086               	movwf	6
  3738     023A  0187               	clrf	7
  3739     023B  0801               	movf	1,w
  3740     023C  00B5               	movwf	_i2cWrData	;volatile
  3741     023D                     i1l1602:
  3742     023D  3001               	movlw	1
  3743     023E  07A2               	addwf	_index,f	;volatile
  3744     023F  3000               	movlw	0
  3745     0240  3DA3               	addwfc	_index+1,f	;volatile
  3746     0241                     i1l1604:
  3747                           
  3748                           ;mcc_generated_files/i2c_slave.c: 250:     index = index%2;;
  3749     0241  3001               	movlw	1
  3750     0242  0522               	andwf	_index,w	;volatile
  3751     0243  00A2               	movwf	_index	;volatile
  3752     0244  3000               	movlw	0
  3753     0245  0523               	andwf	_index+1,w	;volatile
  3754     0246  00A3               	movwf	_index+1	;volatile
  3755     0247                     i1l1606:
  3756                           
  3757                           ;mcc_generated_files/i2c_slave.c: 251:     if (I2C_SlaveWrInterruptHandler)
  3758     0247  082C               	movf	_I2C_SlaveWrInterruptHandler,w
  3759     0248  042D               	iorwf	_I2C_SlaveWrInterruptHandler+1,w
  3760     0249  1903               	btfsc	3,2
  3761     024A  2A4C               	goto	u31_21
  3762     024B  2A4D               	goto	u31_20
  3763     024C                     u31_21:
  3764     024C  2A52               	goto	i1l322
  3765     024D                     u31_20:
  3766     024D                     i1l1608:
  3767                           
  3768                           ;mcc_generated_files/i2c_slave.c: 252:     {;mcc_generated_files/i2c_slave.c: 253:      
      +                             I2C_SlaveWrInterruptHandler();
  3769     024D  082D               	movf	_I2C_SlaveWrInterruptHandler+1,w
  3770     024E  008A               	movwf	10
  3771     024F  082C               	movf	_I2C_SlaveWrInterruptHandler,w
  3772     0250  000A               	callw
  3773     0251  3182               	pagesel	$
  3774     0252                     i1l322:
  3775     0252  0008               	return
  3776     0253                     __end_of_I2C_SlaveWrCallBack:
  3777                           
  3778                           	psect	text23
  3779     02F2                     __ptext23:	
  3780 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  3781 ;; Defined at:
  3782 ;;		line 257 in file "mcc_generated_files/i2c_slave.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0, pclath, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3796 ;;      Params:         0       0       0       0
  3797 ;;      Locals:         0       0       0       0
  3798 ;;      Temps:          0       0       0       0
  3799 ;;      Totals:         0       0       0       0
  3800 ;;Total ram usage:        0 bytes
  3801 ;; Hardware stack levels used: 1
  3802 ;; Hardware stack levels required when called: 1
  3803 ;; This function calls:
  3804 ;;		_I2C_SlaveSendTxData
  3805 ;; This function is called by:
  3806 ;;		_I2C_Open
  3807 ;;		_I2C_SlaveWrCallBack
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811     02F2                     _I2C_SlaveDefWrInterruptHandler:	
  3812                           ;psect for function _I2C_SlaveDefWrInterruptHandler
  3813                           
  3814     02F2                     i1l1506:	
  3815                           ;incstack = 0
  3816                           ; Regs used in _I2C_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  3817                           
  3818                           
  3819                           ;mcc_generated_files/i2c_slave.c: 258:     I2C_SlaveSendTxData(i2cWrData);
  3820     02F2  0020               	movlb	0	; select bank0
  3821     02F3  0835               	movf	_i2cWrData,w	;volatile
  3822     02F4  3183  2308  3182   	fcall	_I2C_SlaveSendTxData
  3823     02F7                     i1l325:
  3824     02F7  0008               	return
  3825     02F8                     __end_of_I2C_SlaveDefWrInterruptHandler:
  3826                           
  3827                           	psect	text24
  3828     0308                     __ptext24:	
  3829 ;; *************** function _I2C_SlaveSendTxData *****************
  3830 ;; Defined at:
  3831 ;;		line 390 in file "mcc_generated_files/i2c_slave.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  data            1    wreg     unsigned char 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  data            1    0[COMMON] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3845 ;;      Params:         0       0       0       0
  3846 ;;      Locals:         1       0       0       0
  3847 ;;      Temps:          0       0       0       0
  3848 ;;      Totals:         1       0       0       0
  3849 ;;Total ram usage:        1 bytes
  3850 ;; Hardware stack levels used: 1
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_I2C_SlaveDefWrInterruptHandler
  3855 ;;		_I2C_Write
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859     0308                     _I2C_SlaveSendTxData:	
  3860                           ;psect for function _I2C_SlaveSendTxData
  3861                           
  3862                           
  3863                           ;incstack = 0
  3864                           ; Regs used in _I2C_SlaveSendTxData: [wreg]
  3865                           ;I2C_SlaveSendTxData@data stored from wreg
  3866     0308  00F0               	movwf	I2C_SlaveSendTxData@data
  3867     0309                     i1l1502:
  3868                           
  3869                           ;mcc_generated_files/i2c_slave.c: 390: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 391: {;mcc_generated_files/i2c_sla
      +                          ve.c: 392:     SSP1BUF = data;
  3870     0309  0870               	movf	I2C_SlaveSendTxData@data,w
  3871     030A  0024               	movlb	4	; select bank4
  3872     030B  0091               	movwf	17	;volatile
  3873     030C                     i1l401:
  3874     030C  0008               	return
  3875     030D                     __end_of_I2C_SlaveSendTxData:
  3876                           
  3877                           	psect	text25
  3878     0326                     __ptext25:	
  3879 ;; *************** function _I2C_SlaveReleaseClock *****************
  3880 ;; Defined at:
  3881 ;;		line 360 in file "mcc_generated_files/i2c_slave.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;		None
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      void 
  3888 ;; Registers used:
  3889 ;;		None
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3895 ;;      Params:         0       0       0       0
  3896 ;;      Locals:         0       0       0       0
  3897 ;;      Temps:          0       0       0       0
  3898 ;;      Totals:         0       0       0       0
  3899 ;;Total ram usage:        0 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_I2C_Isr
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908     0326                     _I2C_SlaveReleaseClock:	
  3909                           ;psect for function _I2C_SlaveReleaseClock
  3910                           
  3911     0326                     i1l1642:	
  3912                           ;incstack = 0
  3913                           ; Regs used in _I2C_SlaveReleaseClock: []
  3914                           
  3915                           
  3916                           ;mcc_generated_files/i2c_slave.c: 362:     SSP1CON1bits.CKP = 1;
  3917     0326  0024               	movlb	4	; select bank4
  3918     0327  1615               	bsf	21,4	;volatile
  3919     0328                     i1l383:
  3920     0328  0008               	return
  3921     0329                     __end_of_I2C_SlaveReleaseClock:
  3922                           
  3923                           	psect	text26
  3924     018D                     __ptext26:	
  3925 ;; *************** function _I2C_SlaveRdCallBack *****************
  3926 ;; Defined at:
  3927 ;;		line 202 in file "mcc_generated_files/i2c_slave.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3941 ;;      Params:         0       0       0       0
  3942 ;;      Locals:         0       0       0       0
  3943 ;;      Temps:          2       0       0       0
  3944 ;;      Totals:         2       0       0       0
  3945 ;;Total ram usage:        2 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; Hardware stack levels required when called: 2
  3948 ;; This function calls:
  3949 ;;		NULL
  3950 ;;		_I2C_SlaveDefRdInterruptHandler
  3951 ;; This function is called by:
  3952 ;;		_I2C_Isr
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956     018D                     _I2C_SlaveRdCallBack:	
  3957                           ;psect for function _I2C_SlaveRdCallBack
  3958                           
  3959     018D                     i1l1614:	
  3960                           ;incstack = 0
  3961                           ; Regs used in _I2C_SlaveRdCallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3962                           
  3963                           
  3964                           ;mcc_generated_files/i2c_slave.c: 204:     if (I2C_SlaveRdInterruptHandler)
  3965     018D  0020               	movlb	0	; select bank0
  3966     018E  082E               	movf	_I2C_SlaveRdInterruptHandler,w
  3967     018F  042F               	iorwf	_I2C_SlaveRdInterruptHandler+1,w
  3968     0190  1903               	btfsc	3,2
  3969     0191  2993               	goto	u32_21
  3970     0192  2994               	goto	u32_20
  3971     0193                     u32_21:
  3972     0193  2999               	goto	i1l1618
  3973     0194                     u32_20:
  3974     0194                     i1l1616:
  3975                           
  3976                           ;mcc_generated_files/i2c_slave.c: 205:     {;mcc_generated_files/i2c_slave.c: 206:      
      +                             I2C_SlaveRdInterruptHandler();
  3977     0194  082F               	movf	_I2C_SlaveRdInterruptHandler+1,w
  3978     0195  008A               	movwf	10
  3979     0196  082E               	movf	_I2C_SlaveRdInterruptHandler,w
  3980     0197  000A               	callw
  3981     0198  3181               	pagesel	$
  3982     0199                     i1l1618:
  3983                           
  3984                           ;mcc_generated_files/i2c_slave.c: 208:     index = 0;
  3985     0199  0020               	movlb	0	; select bank0
  3986     019A  01A2               	clrf	_index	;volatile
  3987     019B  01A3               	clrf	_index+1	;volatile
  3988                           
  3989                           ;mcc_generated_files/i2c_slave.c: 210:     switch (i2cRdData & 0x1F){
  3990     019C  29BB               	goto	i1l1634
  3991     019D                     i1l1620:
  3992                           
  3993                           ;mcc_generated_files/i2c_slave.c: 212:             current_Data.value = Temp1.value;
  3994     019D  083F               	movf	_Temp1+1,w	;volatile
  3995     019E  00A5               	movwf	_current_Data+1	;volatile
  3996     019F  083E               	movf	_Temp1,w	;volatile
  3997     01A0  00A4               	movwf	_current_Data	;volatile
  3998                           
  3999                           ;mcc_generated_files/i2c_slave.c: 213:             break;
  4000     01A1  29D8               	goto	i1l304
  4001     01A2                     i1l1622:
  4002                           
  4003                           ;mcc_generated_files/i2c_slave.c: 215:             current_Data.value = Temp2.value;
  4004     01A2  083D               	movf	_Temp2+1,w	;volatile
  4005     01A3  00A5               	movwf	_current_Data+1	;volatile
  4006     01A4  083C               	movf	_Temp2,w	;volatile
  4007     01A5  00A4               	movwf	_current_Data	;volatile
  4008                           
  4009                           ;mcc_generated_files/i2c_slave.c: 216:             break;
  4010     01A6  29D8               	goto	i1l304
  4011     01A7                     i1l1624:
  4012                           
  4013                           ;mcc_generated_files/i2c_slave.c: 218:             current_Data.value = Temp3.value;
  4014     01A7  083B               	movf	_Temp3+1,w	;volatile
  4015     01A8  00A5               	movwf	_current_Data+1	;volatile
  4016     01A9  083A               	movf	_Temp3,w	;volatile
  4017     01AA  00A4               	movwf	_current_Data	;volatile
  4018                           
  4019                           ;mcc_generated_files/i2c_slave.c: 219:             break;
  4020     01AB  29D8               	goto	i1l304
  4021     01AC                     i1l1626:
  4022                           
  4023                           ;mcc_generated_files/i2c_slave.c: 221:             current_Data.value = Temp4.value;
  4024     01AC  0839               	movf	_Temp4+1,w	;volatile
  4025     01AD  00A5               	movwf	_current_Data+1	;volatile
  4026     01AE  0838               	movf	_Temp4,w	;volatile
  4027     01AF  00A4               	movwf	_current_Data	;volatile
  4028                           
  4029                           ;mcc_generated_files/i2c_slave.c: 222:             break;
  4030     01B0  29D8               	goto	i1l304
  4031     01B1                     i1l1628:
  4032                           
  4033                           ;mcc_generated_files/i2c_slave.c: 224:             current_Data.value = Temp5.value;
  4034     01B1  0837               	movf	_Temp5+1,w	;volatile
  4035     01B2  00A5               	movwf	_current_Data+1	;volatile
  4036     01B3  0836               	movf	_Temp5,w	;volatile
  4037     01B4  00A4               	movwf	_current_Data	;volatile
  4038                           
  4039                           ;mcc_generated_files/i2c_slave.c: 225:             break;
  4040     01B5  29D8               	goto	i1l304
  4041     01B6                     i1l1630:
  4042                           
  4043                           ;mcc_generated_files/i2c_slave.c: 227:             current_Data.value = Volt1.value;
  4044     01B6  0879               	movf	_Volt1+1,w	;volatile
  4045     01B7  00A5               	movwf	_current_Data+1	;volatile
  4046     01B8  0878               	movf	_Volt1,w	;volatile
  4047     01B9  00A4               	movwf	_current_Data	;volatile
  4048                           
  4049                           ;mcc_generated_files/i2c_slave.c: 228:             break;
  4050     01BA  29D8               	goto	i1l304
  4051     01BB                     i1l1634:
  4052     01BB  0876               	movf	_i2cRdData,w	;volatile
  4053     01BC  391F               	andlw	31
  4054     01BD  00F0               	movwf	??_I2C_SlaveRdCallBack
  4055     01BE  01F1               	clrf	??_I2C_SlaveRdCallBack+1
  4056                           
  4057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4058                           ; Switch size 1, requested type "simple"
  4059                           ; Number of cases is 1, Range of values is 0 to 0
  4060                           ; switch strategies available:
  4061                           ; Name         Instructions Cycles
  4062                           ; simple_byte            4     3 (average)
  4063                           ; direct_byte            8     6 (fixed)
  4064                           ; jumptable            260     6 (fixed)
  4065                           ;	Chosen strategy is simple_byte
  4066     01BF  0871               	movf	??_I2C_SlaveRdCallBack+1,w
  4067     01C0  3A00               	xorlw	0	; case 0
  4068     01C1  1903               	skipnz
  4069     01C2  29C4               	goto	i1l1958
  4070     01C3  29D8               	goto	i1l304
  4071     01C4                     i1l1958:
  4072                           
  4073                           ; Switch size 1, requested type "simple"
  4074                           ; Number of cases is 6, Range of values is 1 to 17
  4075                           ; switch strategies available:
  4076                           ; Name         Instructions Cycles
  4077                           ; simple_byte           19    10 (average)
  4078                           ; direct_byte           43     9 (fixed)
  4079                           ; jumptable            263     9 (fixed)
  4080                           ;	Chosen strategy is simple_byte
  4081     01C4  0870               	movf	??_I2C_SlaveRdCallBack,w
  4082     01C5  3A01               	xorlw	1	; case 1
  4083     01C6  1903               	skipnz
  4084     01C7  299D               	goto	i1l1620
  4085     01C8  3A03               	xorlw	3	; case 2
  4086     01C9  1903               	skipnz
  4087     01CA  29A2               	goto	i1l1622
  4088     01CB  3A01               	xorlw	1	; case 3
  4089     01CC  1903               	skipnz
  4090     01CD  29A7               	goto	i1l1624
  4091     01CE  3A07               	xorlw	7	; case 4
  4092     01CF  1903               	skipnz
  4093     01D0  29AC               	goto	i1l1626
  4094     01D1  3A01               	xorlw	1	; case 5
  4095     01D2  1903               	skipnz
  4096     01D3  29B1               	goto	i1l1628
  4097     01D4  3A14               	xorlw	20	; case 17
  4098     01D5  1903               	skipnz
  4099     01D6  29B6               	goto	i1l1630
  4100     01D7  29D8               	goto	i1l304
  4101     01D8                     i1l304:
  4102                           
  4103                           ;mcc_generated_files/i2c_slave.c: 235:     if (i2cRdData & 0x20){balanceFlag = 1;}
  4104     01D8  1EF6               	btfss	_i2cRdData,5	;volatile
  4105     01D9  29DB               	goto	u33_21
  4106     01DA  29DC               	goto	u33_20
  4107     01DB                     u33_21:
  4108     01DB  29DE               	goto	i1l312
  4109     01DC                     u33_20:
  4110     01DC                     i1l1636:
  4111     01DC  3001               	movlw	1
  4112     01DD  00F7               	movwf	_balanceFlag	;volatile
  4113     01DE                     i1l312:
  4114     01DE  0008               	return
  4115     01DF                     __end_of_I2C_SlaveRdCallBack:
  4116                           
  4117                           	psect	text27
  4118     030D                     __ptext27:	
  4119 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
  4120 ;; Defined at:
  4121 ;;		line 238 in file "mcc_generated_files/i2c_slave.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, pclath, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4135 ;;      Params:         0       0       0       0
  4136 ;;      Locals:         0       0       0       0
  4137 ;;      Temps:          0       0       0       0
  4138 ;;      Totals:         0       0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; Hardware stack levels required when called: 1
  4142 ;; This function calls:
  4143 ;;		_I2C_SlaveGetRxData
  4144 ;; This function is called by:
  4145 ;;		_I2C_Open
  4146 ;;		_I2C_SlaveRdCallBack
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150     030D                     _I2C_SlaveDefRdInterruptHandler:	
  4151                           ;psect for function _I2C_SlaveDefRdInterruptHandler
  4152                           
  4153     030D                     i1l1504:	
  4154                           ;incstack = 0
  4155                           ; Regs used in _I2C_SlaveDefRdInterruptHandler: [wreg+pclath+cstack]
  4156                           
  4157                           
  4158                           ;mcc_generated_files/i2c_slave.c: 239:     i2cRdData = I2C_SlaveGetRxData();
  4159     030D  3183  232C  3183   	fcall	_I2C_SlaveGetRxData
  4160     0310  00F6               	movwf	_i2cRdData	;volatile
  4161     0311                     i1l315:
  4162     0311  0008               	return
  4163     0312                     __end_of_I2C_SlaveDefRdInterruptHandler:
  4164                           
  4165                           	psect	text28
  4166     02AE                     __ptext28:	
  4167 ;; *************** function _I2C_SlaveIsTxBufEmpty *****************
  4168 ;; Defined at:
  4169 ;;		line 380 in file "mcc_generated_files/i2c_slave.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      _Bool 
  4176 ;; Registers used:
  4177 ;;		wreg, status,0
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4183 ;;      Params:         0       0       0       0
  4184 ;;      Locals:         0       0       0       0
  4185 ;;      Temps:          0       0       0       0
  4186 ;;      Totals:         0       0       0       0
  4187 ;;Total ram usage:        0 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_I2C_Isr
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196     02AE                     _I2C_SlaveIsTxBufEmpty:	
  4197                           ;psect for function _I2C_SlaveIsTxBufEmpty
  4198                           
  4199     02AE                     i1l1596:	
  4200                           ;incstack = 0
  4201                           ; Regs used in _I2C_SlaveIsTxBufEmpty: [wreg+status,0]
  4202                           
  4203                           
  4204                           ;mcc_generated_files/i2c_slave.c: 382:     return !SSP1STATbits.BF;
  4205     02AE  1003               	clrc
  4206     02AF  0024               	movlb	4	; select bank4
  4207     02B0  1C14               	btfss	20,0	;volatile
  4208     02B1  1403               	setc
  4209     02B2  3000               	movlw	0
  4210     02B3  3D09               	addwfc	9,w
  4211     02B4                     i1l395:
  4212     02B4  0008               	return
  4213     02B5                     __end_of_I2C_SlaveIsTxBufEmpty:
  4214                           
  4215                           	psect	text29
  4216     031F                     __ptext29:	
  4217 ;; *************** function _I2C_SlaveIsRxBufFull *****************
  4218 ;; Defined at:
  4219 ;;		line 385 in file "mcc_generated_files/i2c_slave.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      _Bool 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4233 ;;      Params:         0       0       0       0
  4234 ;;      Locals:         0       0       0       0
  4235 ;;      Temps:          0       0       0       0
  4236 ;;      Totals:         0       0       0       0
  4237 ;;Total ram usage:        0 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_I2C_Isr
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246     031F                     _I2C_SlaveIsRxBufFull:	
  4247                           ;psect for function _I2C_SlaveIsRxBufFull
  4248                           
  4249     031F                     i1l1610:	
  4250                           ;incstack = 0
  4251                           ; Regs used in _I2C_SlaveIsRxBufFull: [wreg+status,2+status,0]
  4252                           
  4253                           
  4254                           ;mcc_generated_files/i2c_slave.c: 387:     return SSP1STATbits.BF;
  4255     031F  0024               	movlb	4	; select bank4
  4256     0320  0814               	movf	20,w	;volatile
  4257     0321  3901               	andlw	1
  4258     0322                     i1l398:
  4259     0322  0008               	return
  4260     0323                     __end_of_I2C_SlaveIsRxBufFull:
  4261                           
  4262                           	psect	text30
  4263     0312                     __ptext30:	
  4264 ;; *************** function _I2C_SlaveIsRead *****************
  4265 ;; Defined at:
  4266 ;;		line 350 in file "mcc_generated_files/i2c_slave.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      _Bool 
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4280 ;;      Params:         0       0       0       0
  4281 ;;      Locals:         0       0       0       0
  4282 ;;      Temps:          0       0       0       0
  4283 ;;      Totals:         0       0       0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_I2C_Isr
  4290 ;;		_I2C_IsRead
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294     0312                     _I2C_SlaveIsRead:	
  4295                           ;psect for function _I2C_SlaveIsRead
  4296                           
  4297     0312                     i1l1582:	
  4298                           ;incstack = 0
  4299                           ; Regs used in _I2C_SlaveIsRead: [wreg+status,2+status,0]
  4300                           
  4301                           
  4302                           ;mcc_generated_files/i2c_slave.c: 352:     return (SSP1STATbits.R_nW);
  4303     0312  0024               	movlb	4	; select bank4
  4304     0313  0C14               	rrf	20,w	;volatile
  4305     0314  0C89               	rrf	9,f
  4306     0315  3901               	andlw	1
  4307     0316                     i1l377:
  4308     0316  0008               	return
  4309     0317                     __end_of_I2C_SlaveIsRead:
  4310                           
  4311                           	psect	text31
  4312     02B5                     __ptext31:	
  4313 ;; *************** function _I2C_SlaveIsAddr *****************
  4314 ;; Defined at:
  4315 ;;		line 345 in file "mcc_generated_files/i2c_slave.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;		None
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      _Bool 
  4322 ;; Registers used:
  4323 ;;		wreg, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4329 ;;      Params:         0       0       0       0
  4330 ;;      Locals:         0       0       0       0
  4331 ;;      Temps:          0       0       0       0
  4332 ;;      Totals:         0       0       0       0
  4333 ;;Total ram usage:        0 bytes
  4334 ;; Hardware stack levels used: 1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_I2C_Isr
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342     02B5                     _I2C_SlaveIsAddr:	
  4343                           ;psect for function _I2C_SlaveIsAddr
  4344                           
  4345     02B5                     i1l1588:	
  4346                           ;incstack = 0
  4347                           ; Regs used in _I2C_SlaveIsAddr: [wreg+status,0]
  4348                           
  4349                           
  4350                           ;mcc_generated_files/i2c_slave.c: 347:     return !(SSP1STATbits.D_nA);
  4351     02B5  1003               	clrc
  4352     02B6  0024               	movlb	4	; select bank4
  4353     02B7  1E94               	btfss	20,5	;volatile
  4354     02B8  1403               	setc
  4355     02B9  3000               	movlw	0
  4356     02BA  3D09               	addwfc	9,w
  4357     02BB                     i1l374:
  4358     02BB  0008               	return
  4359     02BC                     __end_of_I2C_SlaveIsAddr:
  4360                           
  4361                           	psect	text32
  4362     0329                     __ptext32:	
  4363 ;; *************** function _I2C_SlaveClearIrq *****************
  4364 ;; Defined at:
  4365 ;;		line 355 in file "mcc_generated_files/i2c_slave.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		None
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4379 ;;      Params:         0       0       0       0
  4380 ;;      Locals:         0       0       0       0
  4381 ;;      Temps:          0       0       0       0
  4382 ;;      Totals:         0       0       0       0
  4383 ;;Total ram usage:        0 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_I2C_Isr
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392     0329                     _I2C_SlaveClearIrq:	
  4393                           ;psect for function _I2C_SlaveClearIrq
  4394                           
  4395     0329                     i1l1586:	
  4396                           ;incstack = 0
  4397                           ; Regs used in _I2C_SlaveClearIrq: []
  4398                           
  4399                           
  4400                           ;mcc_generated_files/i2c_slave.c: 357:     PIR1bits.SSP1IF = 0;
  4401     0329  0020               	movlb	0	; select bank0
  4402     032A  1191               	bcf	17,3	;volatile
  4403     032B                     i1l380:
  4404     032B  0008               	return
  4405     032C                     __end_of_I2C_SlaveClearIrq:
  4406                           
  4407                           	psect	text33
  4408     028E                     __ptext33:	
  4409 ;; *************** function _I2C_SlaveAddrCallBack *****************
  4410 ;; Defined at:
  4411 ;;		line 266 in file "mcc_generated_files/i2c_slave.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;		None
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0, pclath, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4425 ;;      Params:         0       0       0       0
  4426 ;;      Locals:         0       0       0       0
  4427 ;;      Temps:          0       0       0       0
  4428 ;;      Totals:         0       0       0       0
  4429 ;;Total ram usage:        0 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; Hardware stack levels required when called: 2
  4432 ;; This function calls:
  4433 ;;		NULL
  4434 ;;		_I2C_SlaveDefAddrInterruptHandler
  4435 ;; This function is called by:
  4436 ;;		_I2C_Isr
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440     028E                     _I2C_SlaveAddrCallBack:	
  4441                           ;psect for function _I2C_SlaveAddrCallBack
  4442                           
  4443     028E                     i1l1592:	
  4444                           ;incstack = 0
  4445                           ; Regs used in _I2C_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  4446                           
  4447                           
  4448                           ;mcc_generated_files/i2c_slave.c: 268:     if (I2C_SlaveAddrInterruptHandler) {
  4449     028E  0020               	movlb	0	; select bank0
  4450     028F  082A               	movf	_I2C_SlaveAddrInterruptHandler,w
  4451     0290  042B               	iorwf	_I2C_SlaveAddrInterruptHandler+1,w
  4452     0291  1903               	btfsc	3,2
  4453     0292  2A94               	goto	u30_21
  4454     0293  2A95               	goto	u30_20
  4455     0294                     u30_21:
  4456     0294  2A9A               	goto	i1l332
  4457     0295                     u30_20:
  4458     0295                     i1l1594:
  4459                           
  4460                           ;mcc_generated_files/i2c_slave.c: 269:         I2C_SlaveAddrInterruptHandler();
  4461     0295  082B               	movf	_I2C_SlaveAddrInterruptHandler+1,w
  4462     0296  008A               	movwf	10
  4463     0297  082A               	movf	_I2C_SlaveAddrInterruptHandler,w
  4464     0298  000A               	callw
  4465     0299  3182               	pagesel	$
  4466     029A                     i1l332:
  4467     029A  0008               	return
  4468     029B                     __end_of_I2C_SlaveAddrCallBack:
  4469                           
  4470                           	psect	text34
  4471     02F8                     __ptext34:	
  4472 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
  4473 ;; Defined at:
  4474 ;;		line 273 in file "mcc_generated_files/i2c_slave.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		wreg, pclath, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4488 ;;      Params:         0       0       0       0
  4489 ;;      Locals:         0       0       0       0
  4490 ;;      Temps:          0       0       0       0
  4491 ;;      Totals:         0       0       0       0
  4492 ;;Total ram usage:        0 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 1
  4495 ;; This function calls:
  4496 ;;		_I2C_SlaveGetRxData
  4497 ;; This function is called by:
  4498 ;;		_I2C_Open
  4499 ;;		_I2C_SlaveAddrCallBack
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503     02F8                     _I2C_SlaveDefAddrInterruptHandler:	
  4504                           ;psect for function _I2C_SlaveDefAddrInterruptHandler
  4505                           
  4506     02F8                     i1l1508:	
  4507                           ;incstack = 0
  4508                           ; Regs used in _I2C_SlaveDefAddrInterruptHandler: [wreg+pclath+cstack]
  4509                           
  4510                           
  4511                           ;mcc_generated_files/i2c_slave.c: 274:     i2cSlaveAddr = I2C_SlaveGetRxData();
  4512     02F8  3183  232C  3182   	fcall	_I2C_SlaveGetRxData
  4513     02FB  0020               	movlb	0	; select bank0
  4514     02FC  00B4               	movwf	_i2cSlaveAddr	;volatile
  4515     02FD                     i1l335:
  4516     02FD  0008               	return
  4517     02FE                     __end_of_I2C_SlaveDefAddrInterruptHandler:
  4518                           
  4519                           	psect	text35
  4520     032C                     __ptext35:	
  4521 ;; *************** function _I2C_SlaveGetRxData *****************
  4522 ;; Defined at:
  4523 ;;		line 395 in file "mcc_generated_files/i2c_slave.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;		None
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;		None
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      unsigned char 
  4530 ;; Registers used:
  4531 ;;		wreg
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4537 ;;      Params:         0       0       0       0
  4538 ;;      Locals:         0       0       0       0
  4539 ;;      Temps:          0       0       0       0
  4540 ;;      Totals:         0       0       0       0
  4541 ;;Total ram usage:        0 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; This function calls:
  4544 ;;		Nothing
  4545 ;; This function is called by:
  4546 ;;		_I2C_SlaveDefRdInterruptHandler
  4547 ;;		_I2C_SlaveDefAddrInterruptHandler
  4548 ;;		_I2C_Read
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552     032C                     _I2C_SlaveGetRxData:	
  4553                           ;psect for function _I2C_SlaveGetRxData
  4554                           
  4555     032C                     i1l1498:	
  4556                           ;incstack = 0
  4557                           ; Regs used in _I2C_SlaveGetRxData: [wreg]
  4558                           
  4559                           
  4560                           ;mcc_generated_files/i2c_slave.c: 397:     return SSP1BUF;
  4561     032C  0024               	movlb	4	; select bank4
  4562     032D  0811               	movf	17,w	;volatile
  4563     032E                     i1l404:
  4564     032E  0008               	return
  4565     032F                     __end_of_I2C_SlaveGetRxData:
  4566     007E                     btemp	set	126	;btemp
  4567     007E                     int$flags	set	126
  4568     007E                     wtemp0	set	126
  4569                           
  4570                           	psect	idloc
  4571                           
  4572                           ;Config register IDLOC0 @ 0x8000
  4573                           ;	unspecified, using default values
  4574     8000                     	org	32768
  4575     8000  3FFF               	dw	16383
  4576                           
  4577                           ;Config register IDLOC1 @ 0x8001
  4578                           ;	unspecified, using default values
  4579     8001                     	org	32769
  4580     8001  3FFF               	dw	16383
  4581                           
  4582                           ;Config register IDLOC2 @ 0x8002
  4583                           ;	unspecified, using default values
  4584     8002                     	org	32770
  4585     8002  3FFF               	dw	16383
  4586                           
  4587                           ;Config register IDLOC3 @ 0x8003
  4588                           ;	unspecified, using default values
  4589     8003                     	org	32771
  4590     8003  3FFF               	dw	16383
  4591                           
  4592                           	psect	config
  4593                           
  4594                           ;Config register CONFIG1 @ 0x8007
  4595                           ;	Oscillator Selection Bits
  4596                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4597                           ;	Watchdog Timer Enable
  4598                           ;	WDTE = OFF, WDT disabled
  4599                           ;	Power-up Timer Enable
  4600                           ;	PWRTE = OFF, PWRT disabled
  4601                           ;	MCLR Pin Function Select
  4602                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4603                           ;	Flash Program Memory Code Protection
  4604                           ;	CP = OFF, Program memory code protection is disabled
  4605                           ;	Brown-out Reset Enable
  4606                           ;	BOREN = ON, Brown-out Reset enabled
  4607                           ;	Clock Out Enable
  4608                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4609                           ;	Internal/External Switchover Mode
  4610                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  4611                           ;	Fail-Safe Clock Monitor Enable
  4612                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4613     8007                     	org	32775
  4614     8007  3FE4               	dw	16356
  4615                           
  4616                           ;Config register CONFIG2 @ 0x8008
  4617                           ;	Flash Memory Self-Write Protection
  4618                           ;	WRT = OFF, Write protection off
  4619                           ;	Stack Overflow/Underflow Reset Enable
  4620                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4621                           ;	Brown-out Reset Voltage Selection
  4622                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4623                           ;	Low-Power Brown Out Reset
  4624                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4625                           ;	Low-Voltage Programming Enable
  4626                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4627     8008                     	org	32776
  4628     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         36
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      4      42
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), 

    Volt1ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Volt1(COMMON[2]), 

    Temp5ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Temp5(BANK0[2]), 

    Temp4ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Temp4(BANK0[2]), 

    Temp3ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Temp3(BANK0[2]), 

    Temp2ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Temp2(BANK0[2]), 

    Temp1ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Temp1(BANK0[2]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_Isr(), 


Critical Paths under _main in COMMON

    _main->_ADC_GetConversion
    _SYSTEM_Initialize->_I2C_Initialize
    _I2C_Open->_I2C_SlaveSetAddrIntHandler
    _I2C_Open->_I2C_SlaveSetBusColIntHandler
    _I2C_Open->_I2C_SlaveSetIsrHandler
    _I2C_Open->_I2C_SlaveSetReadIntHandler
    _I2C_Open->_I2C_SlaveSetWrColIntHandler
    _I2C_Open->_I2C_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_Isr
    _I2C_Isr->_I2C_SlaveRdCallBack
    _I2C_SlaveDefWrInterruptHandler->_I2C_SlaveSendTxData

Critical Paths under _main in BANK0

    _main->_ADC_GetConversion

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     663
                                              2 BANK0      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                     _FVR_Initialize
                           _I2C_Open
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                     _FVR_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Open                                             0     0      0     632
                 _I2C_SlaveEnableIrq
                      _I2C_SlaveOpen
         _I2C_SlaveSetAddrIntHandler
       _I2C_SlaveSetBusColIntHandler
             _I2C_SlaveSetIsrHandler
         _I2C_SlaveSetReadIntHandler
              _I2C_SlaveSetSlaveAddr
              _I2C_SlaveSetSlaveMask
        _I2C_SlaveSetWrColIntHandler
        _I2C_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWriteIntHandler                          2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWrColIntHandler                          2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveMask                                1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveAddr                                1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetReadIntHandler                           2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetIsrHandler                               2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetBusColIntHandler                         2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetAddrIntHandler                           2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveOpen                                        1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveEnableIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           0     0      0      22
                                NULL *
                            _I2C_Isr *
 ---------------------------------------------------------------------------------
 (4) _I2C_Isr                                              2     2      0      22
                                              2 COMMON     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                    _I2C_SlaveIsAddr
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
              _I2C_SlaveIsTxBufEmpty
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                _I2C_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveWrCallBack                                  0     0      0      22
                                NULL *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefWrInterruptHandler                       0     0      0      22
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveSendTxData                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveReleaseClock                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveRdCallBack                                  2     2      0       0
                                              0 COMMON     2     2      0
                                NULL *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefRdInterruptHandler                       0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsTxBufEmpty                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsRxBufFull                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsAddr                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveClearIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveAddrCallBack                                0     0      0       0
                                NULL *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefAddrInterruptHandler                     0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveGetRxData                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _FVR_Initialize
   _I2C_Open
     _I2C_SlaveEnableIrq
     _I2C_SlaveOpen
     _I2C_SlaveSetAddrIntHandler
     _I2C_SlaveSetBusColIntHandler
     _I2C_SlaveSetIsrHandler
     _I2C_SlaveSetReadIntHandler
     _I2C_SlaveSetSlaveAddr
     _I2C_SlaveSetSlaveMask
     _I2C_SlaveSetWrColIntHandler
     _I2C_SlaveSetWriteIntHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _FVR_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       NULL(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveClearIrq
     _I2C_SlaveIsAddr
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsTxBufEmpty
     _I2C_SlaveRdCallBack
       NULL(Fake) *
       _I2C_SlaveDefRdInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveWrCallBack
       NULL(Fake) *
       _I2C_SlaveDefWrInterruptHandler *
         _I2C_SlaveSendTxData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      34       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4      2A       6       52.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      34      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Apr 01 18:09:13 2023

                                      l94 027F                                        l97 02CD  
                  __end_of_FVR_Initialize 031F                                       l100 031A  
                                     l252 0217                                       l318 02D3  
                                     l328 02F1                                       l249 02A4  
                                     l338 02D9                                       l371 0325  
                                     l348 02EB                                       l365 0307  
                                     l445 026C                                       l359 028D  
                                     l295 02E5                                       l368 0302  
                                     l482 022D                                       l298 02DF  
                                     l570 011B                                       l467 02AD  
                                     l563 0104                                       l485 0235  
                                     l565 0106                                       l495 031E  
                                     l568 0112      __end_of_I2C_SlaveSetBusColIntHandler 02EC  
            _I2C_SlaveSetBusColIntHandler 02E6                                       u600 00C6  
                                     u601 00C5                                       u290 0285  
                                     u610 00D1                                       u291 0284  
                                     u611 00D0                                       u620 00DC  
                                     u621 00DB                                       u630 00E7  
                                     u631 00E6                                       u640 00F2  
                                     u641 00F1                                       u570 0231  
                                     u650 00FD                                       u571 0230  
                                     u707 0116                                       u651 00FC  
                                     u660 0104                                       u580 005C  
                                     u717 0228                                       u661 0103  
                                     u581 005B                                       u590 00BB  
                                     u591 00BA                                       u677 0065  
                                     u687 0074                                       u697 010B  
                   ??_I2C_SlaveRdCallBack 0070                       _I2C_SlaveSendTxData 0308  
           I2C_SlaveSetSlaveMask@maskAddr 0074                           __end_of_I2C_Isr 018D  
                                     wreg 0009                       _I2C_SlaveWrCallBack 0236  
                                    l1510 029B                                      l1512 029D  
                                    l1520 0257                                      l1514 02A1  
                                    l1530 0263                                      l1522 025A  
                                    l1540 031B                                      l1516 02A3  
                                    l1532 0268                                      l1524 025C  
                                    l1550 02AB                                      l1542 02A5  
                                    l1534 02C8                                      l1526 025E  
                                    l1518 0253                                      l1560 028C  
                                    l1552 0280                                      l1544 02A8  
                                    l1536 02CB                                      l1528 0261  
                                    l1554 0285                                      l1570 02E6  
                                    l1546 02A9                                      l1538 0317  
                                    l1580 0323                                      l1556 0286  
                                    l1564 0304                                      l1572 02CE  
                                    l1548 02AA                                      l1644 026D  
                                    l1900 00E7                                      l1558 028A  
                                    l1574 02DA                                      l1566 02FF  
                                    l1646 01DF                                      l1910 00FF  
                                    l1902 00E9                                      l1840 021A  
                                    l1576 02EC                                      l1568 02E0  
                                    l1648 0214                                      l1912 0107  
                                    l1904 00F2                                      l1842 0226  
                                    l1578 02D4                                      l1914 0110  
                                    l1906 00F4                                      l1844 0227  
                                    l1908 00FD                                      l1860 005C  
                                    l1852 0049                                      l1846 022B  
                                    l1862 005D                                      l1870 007B  
                                    l1854 004C                                      l1848 0231  
                                    l1880 00A8                                      l1872 0084  
                                    l1864 005F                                      l1856 004D  
                                    l1890 00C8                                      l1882 00B2  
                                    l1874 008D                                      l1866 006C  
                                    l1858 0057                                      l1892 00D1  
                                    l1884 00BB                                      l1876 0096  
                                    l1868 006E                                      l1894 00D3  
                                    l1886 00BD                                      l1878 009F  
                                    l1896 00DC                                      l1888 00C6  
                                    l1898 00DE                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    i1l42 001A                                      i1l43 0025  
                                    i1l47 0025                                      _WPUA 020C  
                                    _WPUB 020D                   __end_of_I2C_SlaveIsAddr 02BC  
                 __end_of_I2C_SlaveIsRead 0317                                      _main 0049  
       I2C_SlaveSetAddrIntHandler@handler 0074                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                          __end_of_I2C_Open 0218  
                                    btemp 007E                      ?_I2C_SlaveSendTxData 0070  
                                    start 0027                      ?_I2C_SlaveWrCallBack 0070  
       I2C_SlaveSetReadIntHandler@handler 0074             __end_of_I2C_SlaveAddrCallBack 029B  
                         ?_FVR_Initialize 0070             __end_of_OSCILLATOR_Initialize 02CE  
__end_of_I2C_SlaveDefAddrInterruptHandler 02FE        ??_I2C_SlaveDefAddrInterruptHandler 0070  
       ?_I2C_SlaveDefAddrInterruptHandler 0070          _I2C_SlaveDefAddrInterruptHandler 02F8  
                                   ?_main 0070                                     i1l312 01DE  
                                   i1l304 01D8                                     i1l401 030C  
                                   i1l322 0252                                     i1l315 0311  
                                   i1l404 032E                                     i1l332 029A  
                                   i1l325 02F7                                     i1l335 02FD  
                                   i1l380 032B                                     i1l292 018C  
                                   i1l374 02BB                                     i1l383 0328  
                                   i1l377 0316                                     i1l395 02B4  
                                   i1l398 0322                     _I2C_SlaveReleaseClock 0326  
                                   u30_20 0295                                     u30_21 0294  
                                   u31_20 024D                                     u31_21 024C  
                                   u32_20 0194                                     u32_21 0193  
                                   u33_20 01DC                                     u41_20 000A  
                                   u33_21 01DB                                     u41_21 0009  
                                   u34_20 012B                                     u42_20 000F  
                                   u34_21 012A                                     u42_21 000E  
                                   u35_20 0133                                     u43_20 0014  
                                   u35_21 0132                                     u43_21 0013  
                                   u36_20 0143                                     u44_20 001F  
                                   u36_21 0142                                     u44_21 001E  
                                   u37_20 0156                                     u45_20 0024  
                                   u37_21 0155                                     u45_21 0023  
                                   u38_20 0166                                     u38_21 0165  
                                   u39_20 016F                                     u39_21 016E  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E             ?_I2C_SlaveSetBusColIntHandler 0074  
                                   _Temp1 003E                                     _Temp2 003C  
                                   _Temp3 003A                                     _Temp4 0038  
                                   _Temp5 0036                                     _Volt1 0078  
                  ??_I2C_SlaveIsRxBufFull 0070                            _WDT_Initialize 0317  
                                   _index 0022                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                   ??_I2C_SlaveSendTxData 0070                     ??_I2C_SlaveWrCallBack 0071  
                   _I2C_SlaveSetSlaveAddr 0303                           __initialization 0029  
                   _I2C_SlaveSetSlaveMask 02FE                              __end_of_main 0120  
             ?_INTERRUPT_InterruptManager 0070                                 ??_I2C_Isr 0072  
                                  ??_main 0048                    __end_of_WDT_Initialize 031B  
             _I2C_SlaveRdInterruptHandler 002E               _I2C_SlaveWrInterruptHandler 002C  
              __end_of_I2C_SlaveEnableIrq 0326                __end_of_I2C_SlaveGetRxData 032F  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  i1l1502 0309                                    i1l1504 030D  
                                  i1l1600 0236                                    i1l1610 031F  
                                  i1l1506 02F2                                    i1l1602 023D  
                                  i1l1508 02F8                                    i1l1620 019D  
                                  i1l1604 0241                                    i1l1630 01B6  
                                  i1l1622 01A2                                    i1l1614 018D  
                                  i1l1606 0247                                    i1l1710 0014  
                                  i1l1624 01A7                                    i1l1616 0194  
                                  i1l1608 024D                                    i1l1712 001F  
                                  i1l1704 0006                                    i1l1626 01AC  
                                  i1l1634 01BB                                    i1l1618 0199  
                                  i1l1642 0326                                    i1l1650 0120  
                                  i1l1706 000A                                    i1l1636 01DC  
                                  i1l1628 01B1                                    i1l1660 013B  
                                  i1l1652 0123                                    i1l1708 000F  
                                  i1l1582 0312                                    i1l1670 0156  
                                  i1l1662 0143                                    i1l1654 012B  
                                  i1l1592 028E                                    i1l1680 016F  
                                  i1l1672 015A                                    i1l1664 0147  
                                  i1l1656 0133                                    i1l1498 032C  
                                  i1l1594 0295                                    i1l1586 0329  
                                  i1l1674 015E                                    i1l1666 014B  
                                  i1l1658 0137                                    i1l1588 02B5  
                                  i1l1596 02AE                                    i1l1668 014E  
                                  i1l1684 0173                                    i1l1678 0167  
                                  i1l1686 0189                                    i1l1956 017B  
                                  i1l1958 01C4                                    _FVRCON 0117  
                                  _OSCCON 0099                          ?_I2C_SlaveIsAddr 0070  
                                  _WDTCON 0097                          ?_I2C_SlaveIsRead 0070  
                  _I2C_SlaveSetIsrHandler 02E0                    ?_I2C_SlaveReleaseClock 0070  
                 ??_I2C_SlaveIsTxBufEmpty 0070                                 ?_I2C_Open 0070  
     I2C_SlaveSetBusColIntHandler@handler 0074                           ?_WDT_Initialize 0070  
                           _I2C_SlaveOpen 0280                  ADC_GetConversion@channel 0047  
                       _SYSTEM_Initialize 026D                   __end_of__initialization 0045  
      I2C_SlaveSetWrColIntHandler@handler 0074              ??_I2C_SlaveSetAddrIntHandler 0076  
                      ?_SYSTEM_Initialize 0070                    ?_I2C_SlaveSetSlaveAddr 0070  
                  ?_I2C_SlaveSetSlaveMask 0070                            __pcstackCOMMON 0070  
                            __pidataBANK0 02BC                       ??_SYSTEM_Initialize 0075  
          I2C_SlaveSetSlaveAddr@slaveAddr 0074              ??_I2C_SlaveSetReadIntHandler 0076  
                          _OPTION_REGbits 0095                                ??_I2C_Open 0076  
                          ?_I2C_SlaveOpen 0070                 __end_of_SYSTEM_Initialize 0280  
                              __pbssBANK0 0020       __end_of_I2C_SlaveSetWrColIntHandler 02DA  
             _I2C_SlaveSetWrColIntHandler 02D4                          ??_FVR_Initialize 0074  
                              __pmaintext 0049                                __pintentry 0004  
             __end_of_I2C_SlaveRdCallBack 01DF             ??_I2C_SlaveSetWrColIntHandler 0076  
                                 _I2C_Isr 0120                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                                   _SSP1MSK 0213  
                    _ADC_InterruptHandler 0020                   I2C_SlaveSendTxData@data 0070  
                   _I2C_SlaveAddrCallBack 028E                            _I2C_Initialize 029B  
                                 __ptext1 026D                                   __ptext2 0317  
                                 __ptext3 0253                                   __ptext4 02C8  
                                 __ptext5 029B                                   __ptext6 031B  
                                 __ptext7 02A5                                   __ptext8 01DF  
                                 __ptext9 02CE                           ??_I2C_SlaveOpen 0074  
                   _OSCILLATOR_Initialize 02C8                  ??_PIN_MANAGER_Initialize 0074  
           I2C_SlaveSetIsrHandler@handler 0074                                   clrloop0 02C3  
             __end_of_I2C_SlaveSendTxData 030D                      end_of_initialization 0045  
             __end_of_I2C_SlaveWrCallBack 0253        __end_of_I2C_SlaveSetAddrIntHandler 02F2  
              _I2C_SlaveSetAddrIntHandler 02EC                        _I2C_SlaveEnableIrq 0323  
                      _I2C_SlaveGetRxData 032C                   ?_I2C_SlaveSetIsrHandler 0074  
                            _i2cSlaveAddr 0034                    __end_of_I2C_Initialize 02A5  
                 ??_I2C_SlaveReleaseClock 0070                       ?_I2C_SlaveEnableIrq 0070  
                     ?_I2C_SlaveGetRxData 0070        __end_of_I2C_SlaveSetReadIntHandler 02E0  
              _I2C_SlaveSetReadIntHandler 02DA                          ??_WDT_Initialize 0074  
            ?_I2C_SlaveSetWriteIntHandler 0074             __end_of_I2C_SlaveIsTxBufEmpty 02B5  
                    ??_I2C_SlaveEnableIrq 0074                      ??_I2C_SlaveGetRxData 0070  
                 ??_I2C_SlaveSetSlaveAddr 0074                   ??_I2C_SlaveSetSlaveMask 0074  
          __end_of_I2C_SlaveSetIsrHandler 02E6                    ?_I2C_SlaveAddrCallBack 0070  
                         ?_I2C_Initialize 0070                            _ADC_Initialize 02A5  
                               _i2cRdData 0076                    ?_OSCILLATOR_Initialize 0070  
                               _i2cWrData 0035                       start_initialization 0029  
                             _balanceFlag 0077                    __end_of_ADC_Initialize 02AE  
                             __pdataBANK0 0040                                  ?_I2C_Isr 0070  
                             __pbssCOMMON 0076                                 ___latbits 0001  
                           __pcstackBANK0 0046                               _danger_flag 0032  
                            _current_Data 0024            ??_I2C_SlaveSetBusColIntHandler 0076  
                  _PIN_MANAGER_Initialize 0253                           ?_ADC_Initialize 0070  
            ??_INTERRUPT_InterruptManager 0074                         ??_I2C_SlaveIsAddr 0070  
                       ??_I2C_SlaveIsRead 0070          ??_I2C_SlaveDefRdInterruptHandler 0070  
         ?_I2C_SlaveDefRdInterruptHandler 0070          ??_I2C_SlaveDefWrInterruptHandler 0071  
         ?_I2C_SlaveDefWrInterruptHandler 0070                                  _I2C_Open 01DF  
             ?_I2C_SlaveSetAddrIntHandler 0074                                  _LATBbits 010D  
                                _LATCbits 010E                                 clear_ram0 02C2  
                                _PIE1bits 0091                                  _PIE2bits 0092  
                       _I2C_SlaveClearIrq 0329                                  _PIR1bits 0011  
                                _PIR2bits 0012                        ?_I2C_SlaveClearIrq 0070  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
            __end_of_I2C_SlaveIsRxBufFull 0323                                  _SSP1STAT 0214  
             ?_I2C_SlaveSetReadIntHandler 0074             __end_of_I2C_SlaveReleaseClock 0329  
                     ??_I2C_SlaveClearIrq 0070                                _ADCON0bits 009D  
                   __end_of_I2C_SlaveOpen 028E         _I2C_SlaveDefWrColInterruptHandler 0000  
               __end_of_I2C_SlaveClearIrq 032C             __end_of_I2C_SlaveSetSlaveAddr 0308  
           __end_of_I2C_SlaveSetSlaveMask 0303                          ??_I2C_Initialize 0074  
                                _Temp1ptr 0045                                  _Temp2ptr 0044  
                                _Temp3ptr 0043                   ??_I2C_SlaveAddrCallBack 0070  
                                _Temp4ptr 0042                                  _Temp5ptr 0041  
                       _ADC_GetConversion 0218                   ??_OSCILLATOR_Initialize 0074  
                      ?_ADC_GetConversion 0074                                  _Volt1ptr 0040  
           _I2C_SlaveAddrInterruptHandler 002A        _I2C_SlaveDefBusColInterruptHandler 0000  
                     ??_ADC_GetConversion 0046            _I2C_SlaveWrColInterruptHandler 0026  
                                __ptext10 02D4                                  __ptext11 02FE  
                                __ptext12 0303                                  __ptext21 0120  
                                __ptext13 02DA                                  __ptext30 0312  
                                __ptext22 0236                                  __ptext14 02E0  
                                __ptext31 02B5                                  __ptext23 02F2  
                                __ptext15 02E6                                  __ptext32 0329  
                                __ptext24 0308                                  __ptext16 02EC  
                                __ptext33 028E                                  __ptext25 0326  
                                __ptext17 0280                                  __ptext34 02F8  
                                __ptext26 018D                                  __ptext18 0323  
                                __ptext35 032C                                  __ptext27 030D  
                                __ptext19 0218                                  __ptext28 02AE  
                                __ptext29 031F                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                     _I2C_SlaveIsTxBufEmpty 02AE  
               __end_of_ADC_GetConversion 0236              ?_I2C_SlaveSetWrColIntHandler 0074  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0027  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 0214  
                              _INTCONbits 000B                                _FVRCONbits 0117  
                    _I2C_SlaveIsRxBufFull 031F                                  intlevel1 0000  
         _I2C_SlaveBusColInterruptHandler 0028                   ?_PIN_MANAGER_Initialize 0070  
                     _I2C_SlaveRdCallBack 018D                          ??_ADC_Initialize 0074  
                         _I2C_SlaveIsAddr 02B5                           _I2C_SlaveIsRead 0312  
                           _i2cSlaveState 0033        I2C_SlaveSetWriteIntHandler@handler 0074  
     __end_of_I2C_SlaveSetWriteIntHandler 02D4               _I2C_SlaveSetWriteIntHandler 02CE  
                          _FVR_Initialize 031B                      ?_I2C_SlaveRdCallBack 0070  
                  ?_I2C_SlaveIsTxBufEmpty 0070             ??_I2C_SlaveSetWriteIntHandler 0076  
                ??_I2C_SlaveSetIsrHandler 0076                     ?_I2C_SlaveIsRxBufFull 0070  
          __end_of_PIN_MANAGER_Initialize 026D    __end_of_I2C_SlaveDefRdInterruptHandler 0312  
          _I2C_SlaveDefRdInterruptHandler 030D    __end_of_I2C_SlaveDefWrInterruptHandler 02F8  
          _I2C_SlaveDefWrInterruptHandler 02F2                     _MSSP_InterruptHandler 0030  
