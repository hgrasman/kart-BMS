

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Apr 05 01:10:37 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1508
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51     0000                     
    52                           ; Version 2.40
    53                           ; Generated 17/11/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1508 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87     0000                     	;# 
    88     0001                     	;# 
    89     0002                     	;# 
    90     0003                     	;# 
    91     0004                     	;# 
    92     0005                     	;# 
    93     0006                     	;# 
    94     0007                     	;# 
    95     0008                     	;# 
    96     0009                     	;# 
    97     000A                     	;# 
    98     000B                     	;# 
    99     000C                     	;# 
   100     000D                     	;# 
   101     000E                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0015                     	;# 
   106     0016                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001C                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     009F                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011D                     	;# 
   144     018C                     	;# 
   145     018D                     	;# 
   146     018E                     	;# 
   147     0191                     	;# 
   148     0191                     	;# 
   149     0192                     	;# 
   150     0193                     	;# 
   151     0193                     	;# 
   152     0194                     	;# 
   153     0195                     	;# 
   154     0196                     	;# 
   155     0197                     	;# 
   156     0199                     	;# 
   157     019A                     	;# 
   158     019B                     	;# 
   159     019B                     	;# 
   160     019C                     	;# 
   161     019D                     	;# 
   162     019E                     	;# 
   163     019F                     	;# 
   164     020C                     	;# 
   165     020D                     	;# 
   166     0211                     	;# 
   167     0211                     	;# 
   168     0212                     	;# 
   169     0212                     	;# 
   170     0213                     	;# 
   171     0213                     	;# 
   172     0214                     	;# 
   173     0214                     	;# 
   174     0215                     	;# 
   175     0215                     	;# 
   176     0215                     	;# 
   177     0216                     	;# 
   178     0216                     	;# 
   179     0217                     	;# 
   180     0217                     	;# 
   181     0391                     	;# 
   182     0392                     	;# 
   183     0393                     	;# 
   184     0394                     	;# 
   185     0395                     	;# 
   186     0396                     	;# 
   187     0498                     	;# 
   188     0498                     	;# 
   189     0499                     	;# 
   190     049A                     	;# 
   191     049B                     	;# 
   192     049B                     	;# 
   193     049C                     	;# 
   194     049D                     	;# 
   195     049E                     	;# 
   196     049F                     	;# 
   197     0611                     	;# 
   198     0612                     	;# 
   199     0613                     	;# 
   200     0613                     	;# 
   201     0614                     	;# 
   202     0615                     	;# 
   203     0616                     	;# 
   204     0616                     	;# 
   205     0617                     	;# 
   206     0618                     	;# 
   207     0619                     	;# 
   208     0619                     	;# 
   209     061A                     	;# 
   210     061B                     	;# 
   211     061C                     	;# 
   212     061C                     	;# 
   213     0691                     	;# 
   214     0692                     	;# 
   215     0693                     	;# 
   216     0694                     	;# 
   217     0695                     	;# 
   218     0F0F                     	;# 
   219     0F10                     	;# 
   220     0F11                     	;# 
   221     0F12                     	;# 
   222     0F13                     	;# 
   223     0F14                     	;# 
   224     0F15                     	;# 
   225     0F16                     	;# 
   226     0F17                     	;# 
   227     0F18                     	;# 
   228     0F19                     	;# 
   229     0F1A                     	;# 
   230     0F1B                     	;# 
   231     0F1C                     	;# 
   232     0F1D                     	;# 
   233     0F1E                     	;# 
   234     0F1F                     	;# 
   235     0F20                     	;# 
   236     0F21                     	;# 
   237     0F22                     	;# 
   238     0F23                     	;# 
   239     0F24                     	;# 
   240     0F25                     	;# 
   241     0F26                     	;# 
   242     0F27                     	;# 
   243     0F28                     	;# 
   244     0F29                     	;# 
   245     0F2A                     	;# 
   246     0F2B                     	;# 
   247     0F2C                     	;# 
   248     0F2D                     	;# 
   249     0F2E                     	;# 
   250     0F2F                     	;# 
   251     0F8C                     	;# 
   252     0F8D                     	;# 
   253     0F91                     	;# 
   254     0F95                     	;# 
   255     0F96                     	;# 
   256     0F97                     	;# 
   257     0F9C                     	;# 
   258     0F9D                     	;# 
   259     0F9E                     	;# 
   260     0FE3                     	;# 
   261     0FE4                     	;# 
   262     0FE5                     	;# 
   263     0FE6                     	;# 
   264     0FE7                     	;# 
   265     0FE8                     	;# 
   266     0FE9                     	;# 
   267     0FEA                     	;# 
   268     0FEB                     	;# 
   269     0FED                     	;# 
   270     0FEE                     	;# 
   271     0FEF                     	;# 
   272     0000                     	;# 
   273     0001                     	;# 
   274     0002                     	;# 
   275     0003                     	;# 
   276     0004                     	;# 
   277     0005                     	;# 
   278     0006                     	;# 
   279     0007                     	;# 
   280     0008                     	;# 
   281     0009                     	;# 
   282     000A                     	;# 
   283     000B                     	;# 
   284     000C                     	;# 
   285     000D                     	;# 
   286     000E                     	;# 
   287     0011                     	;# 
   288     0012                     	;# 
   289     0013                     	;# 
   290     0015                     	;# 
   291     0016                     	;# 
   292     0016                     	;# 
   293     0017                     	;# 
   294     0018                     	;# 
   295     0019                     	;# 
   296     001A                     	;# 
   297     001B                     	;# 
   298     001C                     	;# 
   299     008C                     	;# 
   300     008D                     	;# 
   301     008E                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0095                     	;# 
   306     0096                     	;# 
   307     0097                     	;# 
   308     0099                     	;# 
   309     009A                     	;# 
   310     009B                     	;# 
   311     009B                     	;# 
   312     009C                     	;# 
   313     009D                     	;# 
   314     009E                     	;# 
   315     009F                     	;# 
   316     010C                     	;# 
   317     010D                     	;# 
   318     010E                     	;# 
   319     0111                     	;# 
   320     0112                     	;# 
   321     0113                     	;# 
   322     0114                     	;# 
   323     0115                     	;# 
   324     0116                     	;# 
   325     0117                     	;# 
   326     0118                     	;# 
   327     0119                     	;# 
   328     011D                     	;# 
   329     018C                     	;# 
   330     018D                     	;# 
   331     018E                     	;# 
   332     0191                     	;# 
   333     0191                     	;# 
   334     0192                     	;# 
   335     0193                     	;# 
   336     0193                     	;# 
   337     0194                     	;# 
   338     0195                     	;# 
   339     0196                     	;# 
   340     0197                     	;# 
   341     0199                     	;# 
   342     019A                     	;# 
   343     019B                     	;# 
   344     019B                     	;# 
   345     019C                     	;# 
   346     019D                     	;# 
   347     019E                     	;# 
   348     019F                     	;# 
   349     020C                     	;# 
   350     020D                     	;# 
   351     0211                     	;# 
   352     0211                     	;# 
   353     0212                     	;# 
   354     0212                     	;# 
   355     0213                     	;# 
   356     0213                     	;# 
   357     0214                     	;# 
   358     0214                     	;# 
   359     0215                     	;# 
   360     0215                     	;# 
   361     0215                     	;# 
   362     0216                     	;# 
   363     0216                     	;# 
   364     0217                     	;# 
   365     0217                     	;# 
   366     0391                     	;# 
   367     0392                     	;# 
   368     0393                     	;# 
   369     0394                     	;# 
   370     0395                     	;# 
   371     0396                     	;# 
   372     0498                     	;# 
   373     0498                     	;# 
   374     0499                     	;# 
   375     049A                     	;# 
   376     049B                     	;# 
   377     049B                     	;# 
   378     049C                     	;# 
   379     049D                     	;# 
   380     049E                     	;# 
   381     049F                     	;# 
   382     0611                     	;# 
   383     0612                     	;# 
   384     0613                     	;# 
   385     0613                     	;# 
   386     0614                     	;# 
   387     0615                     	;# 
   388     0616                     	;# 
   389     0616                     	;# 
   390     0617                     	;# 
   391     0618                     	;# 
   392     0619                     	;# 
   393     0619                     	;# 
   394     061A                     	;# 
   395     061B                     	;# 
   396     061C                     	;# 
   397     061C                     	;# 
   398     0691                     	;# 
   399     0692                     	;# 
   400     0693                     	;# 
   401     0694                     	;# 
   402     0695                     	;# 
   403     0F0F                     	;# 
   404     0F10                     	;# 
   405     0F11                     	;# 
   406     0F12                     	;# 
   407     0F13                     	;# 
   408     0F14                     	;# 
   409     0F15                     	;# 
   410     0F16                     	;# 
   411     0F17                     	;# 
   412     0F18                     	;# 
   413     0F19                     	;# 
   414     0F1A                     	;# 
   415     0F1B                     	;# 
   416     0F1C                     	;# 
   417     0F1D                     	;# 
   418     0F1E                     	;# 
   419     0F1F                     	;# 
   420     0F20                     	;# 
   421     0F21                     	;# 
   422     0F22                     	;# 
   423     0F23                     	;# 
   424     0F24                     	;# 
   425     0F25                     	;# 
   426     0F26                     	;# 
   427     0F27                     	;# 
   428     0F28                     	;# 
   429     0F29                     	;# 
   430     0F2A                     	;# 
   431     0F2B                     	;# 
   432     0F2C                     	;# 
   433     0F2D                     	;# 
   434     0F2E                     	;# 
   435     0F2F                     	;# 
   436     0F8C                     	;# 
   437     0F8D                     	;# 
   438     0F91                     	;# 
   439     0F95                     	;# 
   440     0F96                     	;# 
   441     0F97                     	;# 
   442     0F9C                     	;# 
   443     0F9D                     	;# 
   444     0F9E                     	;# 
   445     0FE3                     	;# 
   446     0FE4                     	;# 
   447     0FE5                     	;# 
   448     0FE6                     	;# 
   449     0FE7                     	;# 
   450     0FE8                     	;# 
   451     0FE9                     	;# 
   452     0FEA                     	;# 
   453     0FEB                     	;# 
   454     0FED                     	;# 
   455     0FEE                     	;# 
   456     0FEF                     	;# 
   457     0000                     	;# 
   458     0001                     	;# 
   459     0002                     	;# 
   460     0003                     	;# 
   461     0004                     	;# 
   462     0005                     	;# 
   463     0006                     	;# 
   464     0007                     	;# 
   465     0008                     	;# 
   466     0009                     	;# 
   467     000A                     	;# 
   468     000B                     	;# 
   469     000C                     	;# 
   470     000D                     	;# 
   471     000E                     	;# 
   472     0011                     	;# 
   473     0012                     	;# 
   474     0013                     	;# 
   475     0015                     	;# 
   476     0016                     	;# 
   477     0016                     	;# 
   478     0017                     	;# 
   479     0018                     	;# 
   480     0019                     	;# 
   481     001A                     	;# 
   482     001B                     	;# 
   483     001C                     	;# 
   484     008C                     	;# 
   485     008D                     	;# 
   486     008E                     	;# 
   487     0091                     	;# 
   488     0092                     	;# 
   489     0093                     	;# 
   490     0095                     	;# 
   491     0096                     	;# 
   492     0097                     	;# 
   493     0099                     	;# 
   494     009A                     	;# 
   495     009B                     	;# 
   496     009B                     	;# 
   497     009C                     	;# 
   498     009D                     	;# 
   499     009E                     	;# 
   500     009F                     	;# 
   501     010C                     	;# 
   502     010D                     	;# 
   503     010E                     	;# 
   504     0111                     	;# 
   505     0112                     	;# 
   506     0113                     	;# 
   507     0114                     	;# 
   508     0115                     	;# 
   509     0116                     	;# 
   510     0117                     	;# 
   511     0118                     	;# 
   512     0119                     	;# 
   513     011D                     	;# 
   514     018C                     	;# 
   515     018D                     	;# 
   516     018E                     	;# 
   517     0191                     	;# 
   518     0191                     	;# 
   519     0192                     	;# 
   520     0193                     	;# 
   521     0193                     	;# 
   522     0194                     	;# 
   523     0195                     	;# 
   524     0196                     	;# 
   525     0197                     	;# 
   526     0199                     	;# 
   527     019A                     	;# 
   528     019B                     	;# 
   529     019B                     	;# 
   530     019C                     	;# 
   531     019D                     	;# 
   532     019E                     	;# 
   533     019F                     	;# 
   534     020C                     	;# 
   535     020D                     	;# 
   536     0211                     	;# 
   537     0211                     	;# 
   538     0212                     	;# 
   539     0212                     	;# 
   540     0213                     	;# 
   541     0213                     	;# 
   542     0214                     	;# 
   543     0214                     	;# 
   544     0215                     	;# 
   545     0215                     	;# 
   546     0215                     	;# 
   547     0216                     	;# 
   548     0216                     	;# 
   549     0217                     	;# 
   550     0217                     	;# 
   551     0391                     	;# 
   552     0392                     	;# 
   553     0393                     	;# 
   554     0394                     	;# 
   555     0395                     	;# 
   556     0396                     	;# 
   557     0498                     	;# 
   558     0498                     	;# 
   559     0499                     	;# 
   560     049A                     	;# 
   561     049B                     	;# 
   562     049B                     	;# 
   563     049C                     	;# 
   564     049D                     	;# 
   565     049E                     	;# 
   566     049F                     	;# 
   567     0611                     	;# 
   568     0612                     	;# 
   569     0613                     	;# 
   570     0613                     	;# 
   571     0614                     	;# 
   572     0615                     	;# 
   573     0616                     	;# 
   574     0616                     	;# 
   575     0617                     	;# 
   576     0618                     	;# 
   577     0619                     	;# 
   578     0619                     	;# 
   579     061A                     	;# 
   580     061B                     	;# 
   581     061C                     	;# 
   582     061C                     	;# 
   583     0691                     	;# 
   584     0692                     	;# 
   585     0693                     	;# 
   586     0694                     	;# 
   587     0695                     	;# 
   588     0F0F                     	;# 
   589     0F10                     	;# 
   590     0F11                     	;# 
   591     0F12                     	;# 
   592     0F13                     	;# 
   593     0F14                     	;# 
   594     0F15                     	;# 
   595     0F16                     	;# 
   596     0F17                     	;# 
   597     0F18                     	;# 
   598     0F19                     	;# 
   599     0F1A                     	;# 
   600     0F1B                     	;# 
   601     0F1C                     	;# 
   602     0F1D                     	;# 
   603     0F1E                     	;# 
   604     0F1F                     	;# 
   605     0F20                     	;# 
   606     0F21                     	;# 
   607     0F22                     	;# 
   608     0F23                     	;# 
   609     0F24                     	;# 
   610     0F25                     	;# 
   611     0F26                     	;# 
   612     0F27                     	;# 
   613     0F28                     	;# 
   614     0F29                     	;# 
   615     0F2A                     	;# 
   616     0F2B                     	;# 
   617     0F2C                     	;# 
   618     0F2D                     	;# 
   619     0F2E                     	;# 
   620     0F2F                     	;# 
   621     0F8C                     	;# 
   622     0F8D                     	;# 
   623     0F91                     	;# 
   624     0F95                     	;# 
   625     0F96                     	;# 
   626     0F97                     	;# 
   627     0F9C                     	;# 
   628     0F9D                     	;# 
   629     0F9E                     	;# 
   630     0FE3                     	;# 
   631     0FE4                     	;# 
   632     0FE5                     	;# 
   633     0FE6                     	;# 
   634     0FE7                     	;# 
   635     0FE8                     	;# 
   636     0FE9                     	;# 
   637     0FEA                     	;# 
   638     0FEB                     	;# 
   639     0FED                     	;# 
   640     0FEE                     	;# 
   641     0FEF                     	;# 
   642     0000                     	;# 
   643     0001                     	;# 
   644     0002                     	;# 
   645     0003                     	;# 
   646     0004                     	;# 
   647     0005                     	;# 
   648     0006                     	;# 
   649     0007                     	;# 
   650     0008                     	;# 
   651     0009                     	;# 
   652     000A                     	;# 
   653     000B                     	;# 
   654     000C                     	;# 
   655     000D                     	;# 
   656     000E                     	;# 
   657     0011                     	;# 
   658     0012                     	;# 
   659     0013                     	;# 
   660     0015                     	;# 
   661     0016                     	;# 
   662     0016                     	;# 
   663     0017                     	;# 
   664     0018                     	;# 
   665     0019                     	;# 
   666     001A                     	;# 
   667     001B                     	;# 
   668     001C                     	;# 
   669     008C                     	;# 
   670     008D                     	;# 
   671     008E                     	;# 
   672     0091                     	;# 
   673     0092                     	;# 
   674     0093                     	;# 
   675     0095                     	;# 
   676     0096                     	;# 
   677     0097                     	;# 
   678     0099                     	;# 
   679     009A                     	;# 
   680     009B                     	;# 
   681     009B                     	;# 
   682     009C                     	;# 
   683     009D                     	;# 
   684     009E                     	;# 
   685     009F                     	;# 
   686     010C                     	;# 
   687     010D                     	;# 
   688     010E                     	;# 
   689     0111                     	;# 
   690     0112                     	;# 
   691     0113                     	;# 
   692     0114                     	;# 
   693     0115                     	;# 
   694     0116                     	;# 
   695     0117                     	;# 
   696     0118                     	;# 
   697     0119                     	;# 
   698     011D                     	;# 
   699     018C                     	;# 
   700     018D                     	;# 
   701     018E                     	;# 
   702     0191                     	;# 
   703     0191                     	;# 
   704     0192                     	;# 
   705     0193                     	;# 
   706     0193                     	;# 
   707     0194                     	;# 
   708     0195                     	;# 
   709     0196                     	;# 
   710     0197                     	;# 
   711     0199                     	;# 
   712     019A                     	;# 
   713     019B                     	;# 
   714     019B                     	;# 
   715     019C                     	;# 
   716     019D                     	;# 
   717     019E                     	;# 
   718     019F                     	;# 
   719     020C                     	;# 
   720     020D                     	;# 
   721     0211                     	;# 
   722     0211                     	;# 
   723     0212                     	;# 
   724     0212                     	;# 
   725     0213                     	;# 
   726     0213                     	;# 
   727     0214                     	;# 
   728     0214                     	;# 
   729     0215                     	;# 
   730     0215                     	;# 
   731     0215                     	;# 
   732     0216                     	;# 
   733     0216                     	;# 
   734     0217                     	;# 
   735     0217                     	;# 
   736     0391                     	;# 
   737     0392                     	;# 
   738     0393                     	;# 
   739     0394                     	;# 
   740     0395                     	;# 
   741     0396                     	;# 
   742     0498                     	;# 
   743     0498                     	;# 
   744     0499                     	;# 
   745     049A                     	;# 
   746     049B                     	;# 
   747     049B                     	;# 
   748     049C                     	;# 
   749     049D                     	;# 
   750     049E                     	;# 
   751     049F                     	;# 
   752     0611                     	;# 
   753     0612                     	;# 
   754     0613                     	;# 
   755     0613                     	;# 
   756     0614                     	;# 
   757     0615                     	;# 
   758     0616                     	;# 
   759     0616                     	;# 
   760     0617                     	;# 
   761     0618                     	;# 
   762     0619                     	;# 
   763     0619                     	;# 
   764     061A                     	;# 
   765     061B                     	;# 
   766     061C                     	;# 
   767     061C                     	;# 
   768     0691                     	;# 
   769     0692                     	;# 
   770     0693                     	;# 
   771     0694                     	;# 
   772     0695                     	;# 
   773     0F0F                     	;# 
   774     0F10                     	;# 
   775     0F11                     	;# 
   776     0F12                     	;# 
   777     0F13                     	;# 
   778     0F14                     	;# 
   779     0F15                     	;# 
   780     0F16                     	;# 
   781     0F17                     	;# 
   782     0F18                     	;# 
   783     0F19                     	;# 
   784     0F1A                     	;# 
   785     0F1B                     	;# 
   786     0F1C                     	;# 
   787     0F1D                     	;# 
   788     0F1E                     	;# 
   789     0F1F                     	;# 
   790     0F20                     	;# 
   791     0F21                     	;# 
   792     0F22                     	;# 
   793     0F23                     	;# 
   794     0F24                     	;# 
   795     0F25                     	;# 
   796     0F26                     	;# 
   797     0F27                     	;# 
   798     0F28                     	;# 
   799     0F29                     	;# 
   800     0F2A                     	;# 
   801     0F2B                     	;# 
   802     0F2C                     	;# 
   803     0F2D                     	;# 
   804     0F2E                     	;# 
   805     0F2F                     	;# 
   806     0F8C                     	;# 
   807     0F8D                     	;# 
   808     0F91                     	;# 
   809     0F95                     	;# 
   810     0F96                     	;# 
   811     0F97                     	;# 
   812     0F9C                     	;# 
   813     0F9D                     	;# 
   814     0F9E                     	;# 
   815     0FE3                     	;# 
   816     0FE4                     	;# 
   817     0FE5                     	;# 
   818     0FE6                     	;# 
   819     0FE7                     	;# 
   820     0FE8                     	;# 
   821     0FE9                     	;# 
   822     0FEA                     	;# 
   823     0FEB                     	;# 
   824     0FED                     	;# 
   825     0FEE                     	;# 
   826     0FEF                     	;# 
   827     0000                     	;# 
   828     0001                     	;# 
   829     0002                     	;# 
   830     0003                     	;# 
   831     0004                     	;# 
   832     0005                     	;# 
   833     0006                     	;# 
   834     0007                     	;# 
   835     0008                     	;# 
   836     0009                     	;# 
   837     000A                     	;# 
   838     000B                     	;# 
   839     000C                     	;# 
   840     000D                     	;# 
   841     000E                     	;# 
   842     0011                     	;# 
   843     0012                     	;# 
   844     0013                     	;# 
   845     0015                     	;# 
   846     0016                     	;# 
   847     0016                     	;# 
   848     0017                     	;# 
   849     0018                     	;# 
   850     0019                     	;# 
   851     001A                     	;# 
   852     001B                     	;# 
   853     001C                     	;# 
   854     008C                     	;# 
   855     008D                     	;# 
   856     008E                     	;# 
   857     0091                     	;# 
   858     0092                     	;# 
   859     0093                     	;# 
   860     0095                     	;# 
   861     0096                     	;# 
   862     0097                     	;# 
   863     0099                     	;# 
   864     009A                     	;# 
   865     009B                     	;# 
   866     009B                     	;# 
   867     009C                     	;# 
   868     009D                     	;# 
   869     009E                     	;# 
   870     009F                     	;# 
   871     010C                     	;# 
   872     010D                     	;# 
   873     010E                     	;# 
   874     0111                     	;# 
   875     0112                     	;# 
   876     0113                     	;# 
   877     0114                     	;# 
   878     0115                     	;# 
   879     0116                     	;# 
   880     0117                     	;# 
   881     0118                     	;# 
   882     0119                     	;# 
   883     011D                     	;# 
   884     018C                     	;# 
   885     018D                     	;# 
   886     018E                     	;# 
   887     0191                     	;# 
   888     0191                     	;# 
   889     0192                     	;# 
   890     0193                     	;# 
   891     0193                     	;# 
   892     0194                     	;# 
   893     0195                     	;# 
   894     0196                     	;# 
   895     0197                     	;# 
   896     0199                     	;# 
   897     019A                     	;# 
   898     019B                     	;# 
   899     019B                     	;# 
   900     019C                     	;# 
   901     019D                     	;# 
   902     019E                     	;# 
   903     019F                     	;# 
   904     020C                     	;# 
   905     020D                     	;# 
   906     0211                     	;# 
   907     0211                     	;# 
   908     0212                     	;# 
   909     0212                     	;# 
   910     0213                     	;# 
   911     0213                     	;# 
   912     0214                     	;# 
   913     0214                     	;# 
   914     0215                     	;# 
   915     0215                     	;# 
   916     0215                     	;# 
   917     0216                     	;# 
   918     0216                     	;# 
   919     0217                     	;# 
   920     0217                     	;# 
   921     0391                     	;# 
   922     0392                     	;# 
   923     0393                     	;# 
   924     0394                     	;# 
   925     0395                     	;# 
   926     0396                     	;# 
   927     0498                     	;# 
   928     0498                     	;# 
   929     0499                     	;# 
   930     049A                     	;# 
   931     049B                     	;# 
   932     049B                     	;# 
   933     049C                     	;# 
   934     049D                     	;# 
   935     049E                     	;# 
   936     049F                     	;# 
   937     0611                     	;# 
   938     0612                     	;# 
   939     0613                     	;# 
   940     0613                     	;# 
   941     0614                     	;# 
   942     0615                     	;# 
   943     0616                     	;# 
   944     0616                     	;# 
   945     0617                     	;# 
   946     0618                     	;# 
   947     0619                     	;# 
   948     0619                     	;# 
   949     061A                     	;# 
   950     061B                     	;# 
   951     061C                     	;# 
   952     061C                     	;# 
   953     0691                     	;# 
   954     0692                     	;# 
   955     0693                     	;# 
   956     0694                     	;# 
   957     0695                     	;# 
   958     0F0F                     	;# 
   959     0F10                     	;# 
   960     0F11                     	;# 
   961     0F12                     	;# 
   962     0F13                     	;# 
   963     0F14                     	;# 
   964     0F15                     	;# 
   965     0F16                     	;# 
   966     0F17                     	;# 
   967     0F18                     	;# 
   968     0F19                     	;# 
   969     0F1A                     	;# 
   970     0F1B                     	;# 
   971     0F1C                     	;# 
   972     0F1D                     	;# 
   973     0F1E                     	;# 
   974     0F1F                     	;# 
   975     0F20                     	;# 
   976     0F21                     	;# 
   977     0F22                     	;# 
   978     0F23                     	;# 
   979     0F24                     	;# 
   980     0F25                     	;# 
   981     0F26                     	;# 
   982     0F27                     	;# 
   983     0F28                     	;# 
   984     0F29                     	;# 
   985     0F2A                     	;# 
   986     0F2B                     	;# 
   987     0F2C                     	;# 
   988     0F2D                     	;# 
   989     0F2E                     	;# 
   990     0F2F                     	;# 
   991     0F8C                     	;# 
   992     0F8D                     	;# 
   993     0F91                     	;# 
   994     0F95                     	;# 
   995     0F96                     	;# 
   996     0F97                     	;# 
   997     0F9C                     	;# 
   998     0F9D                     	;# 
   999     0F9E                     	;# 
  1000     0FE3                     	;# 
  1001     0FE4                     	;# 
  1002     0FE5                     	;# 
  1003     0FE6                     	;# 
  1004     0FE7                     	;# 
  1005     0FE8                     	;# 
  1006     0FE9                     	;# 
  1007     0FEA                     	;# 
  1008     0FEB                     	;# 
  1009     0FED                     	;# 
  1010     0FEE                     	;# 
  1011     0FEF                     	;# 
  1012     0000                     	;# 
  1013     0001                     	;# 
  1014     0002                     	;# 
  1015     0003                     	;# 
  1016     0004                     	;# 
  1017     0005                     	;# 
  1018     0006                     	;# 
  1019     0007                     	;# 
  1020     0008                     	;# 
  1021     0009                     	;# 
  1022     000A                     	;# 
  1023     000B                     	;# 
  1024     000C                     	;# 
  1025     000D                     	;# 
  1026     000E                     	;# 
  1027     0011                     	;# 
  1028     0012                     	;# 
  1029     0013                     	;# 
  1030     0015                     	;# 
  1031     0016                     	;# 
  1032     0016                     	;# 
  1033     0017                     	;# 
  1034     0018                     	;# 
  1035     0019                     	;# 
  1036     001A                     	;# 
  1037     001B                     	;# 
  1038     001C                     	;# 
  1039     008C                     	;# 
  1040     008D                     	;# 
  1041     008E                     	;# 
  1042     0091                     	;# 
  1043     0092                     	;# 
  1044     0093                     	;# 
  1045     0095                     	;# 
  1046     0096                     	;# 
  1047     0097                     	;# 
  1048     0099                     	;# 
  1049     009A                     	;# 
  1050     009B                     	;# 
  1051     009B                     	;# 
  1052     009C                     	;# 
  1053     009D                     	;# 
  1054     009E                     	;# 
  1055     009F                     	;# 
  1056     010C                     	;# 
  1057     010D                     	;# 
  1058     010E                     	;# 
  1059     0111                     	;# 
  1060     0112                     	;# 
  1061     0113                     	;# 
  1062     0114                     	;# 
  1063     0115                     	;# 
  1064     0116                     	;# 
  1065     0117                     	;# 
  1066     0118                     	;# 
  1067     0119                     	;# 
  1068     011D                     	;# 
  1069     018C                     	;# 
  1070     018D                     	;# 
  1071     018E                     	;# 
  1072     0191                     	;# 
  1073     0191                     	;# 
  1074     0192                     	;# 
  1075     0193                     	;# 
  1076     0193                     	;# 
  1077     0194                     	;# 
  1078     0195                     	;# 
  1079     0196                     	;# 
  1080     0197                     	;# 
  1081     0199                     	;# 
  1082     019A                     	;# 
  1083     019B                     	;# 
  1084     019B                     	;# 
  1085     019C                     	;# 
  1086     019D                     	;# 
  1087     019E                     	;# 
  1088     019F                     	;# 
  1089     020C                     	;# 
  1090     020D                     	;# 
  1091     0211                     	;# 
  1092     0211                     	;# 
  1093     0212                     	;# 
  1094     0212                     	;# 
  1095     0213                     	;# 
  1096     0213                     	;# 
  1097     0214                     	;# 
  1098     0214                     	;# 
  1099     0215                     	;# 
  1100     0215                     	;# 
  1101     0215                     	;# 
  1102     0216                     	;# 
  1103     0216                     	;# 
  1104     0217                     	;# 
  1105     0217                     	;# 
  1106     0391                     	;# 
  1107     0392                     	;# 
  1108     0393                     	;# 
  1109     0394                     	;# 
  1110     0395                     	;# 
  1111     0396                     	;# 
  1112     0498                     	;# 
  1113     0498                     	;# 
  1114     0499                     	;# 
  1115     049A                     	;# 
  1116     049B                     	;# 
  1117     049B                     	;# 
  1118     049C                     	;# 
  1119     049D                     	;# 
  1120     049E                     	;# 
  1121     049F                     	;# 
  1122     0611                     	;# 
  1123     0612                     	;# 
  1124     0613                     	;# 
  1125     0613                     	;# 
  1126     0614                     	;# 
  1127     0615                     	;# 
  1128     0616                     	;# 
  1129     0616                     	;# 
  1130     0617                     	;# 
  1131     0618                     	;# 
  1132     0619                     	;# 
  1133     0619                     	;# 
  1134     061A                     	;# 
  1135     061B                     	;# 
  1136     061C                     	;# 
  1137     061C                     	;# 
  1138     0691                     	;# 
  1139     0692                     	;# 
  1140     0693                     	;# 
  1141     0694                     	;# 
  1142     0695                     	;# 
  1143     0F0F                     	;# 
  1144     0F10                     	;# 
  1145     0F11                     	;# 
  1146     0F12                     	;# 
  1147     0F13                     	;# 
  1148     0F14                     	;# 
  1149     0F15                     	;# 
  1150     0F16                     	;# 
  1151     0F17                     	;# 
  1152     0F18                     	;# 
  1153     0F19                     	;# 
  1154     0F1A                     	;# 
  1155     0F1B                     	;# 
  1156     0F1C                     	;# 
  1157     0F1D                     	;# 
  1158     0F1E                     	;# 
  1159     0F1F                     	;# 
  1160     0F20                     	;# 
  1161     0F21                     	;# 
  1162     0F22                     	;# 
  1163     0F23                     	;# 
  1164     0F24                     	;# 
  1165     0F25                     	;# 
  1166     0F26                     	;# 
  1167     0F27                     	;# 
  1168     0F28                     	;# 
  1169     0F29                     	;# 
  1170     0F2A                     	;# 
  1171     0F2B                     	;# 
  1172     0F2C                     	;# 
  1173     0F2D                     	;# 
  1174     0F2E                     	;# 
  1175     0F2F                     	;# 
  1176     0F8C                     	;# 
  1177     0F8D                     	;# 
  1178     0F91                     	;# 
  1179     0F95                     	;# 
  1180     0F96                     	;# 
  1181     0F97                     	;# 
  1182     0F9C                     	;# 
  1183     0F9D                     	;# 
  1184     0F9E                     	;# 
  1185     0FE3                     	;# 
  1186     0FE4                     	;# 
  1187     0FE5                     	;# 
  1188     0FE6                     	;# 
  1189     0FE7                     	;# 
  1190     0FE8                     	;# 
  1191     0FE9                     	;# 
  1192     0FEA                     	;# 
  1193     0FEB                     	;# 
  1194     0FED                     	;# 
  1195     0FEE                     	;# 
  1196     0FEF                     	;# 
  1197     0000                     	;# 
  1198     0001                     	;# 
  1199     0002                     	;# 
  1200     0003                     	;# 
  1201     0004                     	;# 
  1202     0005                     	;# 
  1203     0006                     	;# 
  1204     0007                     	;# 
  1205     0008                     	;# 
  1206     0009                     	;# 
  1207     000A                     	;# 
  1208     000B                     	;# 
  1209     000C                     	;# 
  1210     000D                     	;# 
  1211     000E                     	;# 
  1212     0011                     	;# 
  1213     0012                     	;# 
  1214     0013                     	;# 
  1215     0015                     	;# 
  1216     0016                     	;# 
  1217     0016                     	;# 
  1218     0017                     	;# 
  1219     0018                     	;# 
  1220     0019                     	;# 
  1221     001A                     	;# 
  1222     001B                     	;# 
  1223     001C                     	;# 
  1224     008C                     	;# 
  1225     008D                     	;# 
  1226     008E                     	;# 
  1227     0091                     	;# 
  1228     0092                     	;# 
  1229     0093                     	;# 
  1230     0095                     	;# 
  1231     0096                     	;# 
  1232     0097                     	;# 
  1233     0099                     	;# 
  1234     009A                     	;# 
  1235     009B                     	;# 
  1236     009B                     	;# 
  1237     009C                     	;# 
  1238     009D                     	;# 
  1239     009E                     	;# 
  1240     009F                     	;# 
  1241     010C                     	;# 
  1242     010D                     	;# 
  1243     010E                     	;# 
  1244     0111                     	;# 
  1245     0112                     	;# 
  1246     0113                     	;# 
  1247     0114                     	;# 
  1248     0115                     	;# 
  1249     0116                     	;# 
  1250     0117                     	;# 
  1251     0118                     	;# 
  1252     0119                     	;# 
  1253     011D                     	;# 
  1254     018C                     	;# 
  1255     018D                     	;# 
  1256     018E                     	;# 
  1257     0191                     	;# 
  1258     0191                     	;# 
  1259     0192                     	;# 
  1260     0193                     	;# 
  1261     0193                     	;# 
  1262     0194                     	;# 
  1263     0195                     	;# 
  1264     0196                     	;# 
  1265     0197                     	;# 
  1266     0199                     	;# 
  1267     019A                     	;# 
  1268     019B                     	;# 
  1269     019B                     	;# 
  1270     019C                     	;# 
  1271     019D                     	;# 
  1272     019E                     	;# 
  1273     019F                     	;# 
  1274     020C                     	;# 
  1275     020D                     	;# 
  1276     0211                     	;# 
  1277     0211                     	;# 
  1278     0212                     	;# 
  1279     0212                     	;# 
  1280     0213                     	;# 
  1281     0213                     	;# 
  1282     0214                     	;# 
  1283     0214                     	;# 
  1284     0215                     	;# 
  1285     0215                     	;# 
  1286     0215                     	;# 
  1287     0216                     	;# 
  1288     0216                     	;# 
  1289     0217                     	;# 
  1290     0217                     	;# 
  1291     0391                     	;# 
  1292     0392                     	;# 
  1293     0393                     	;# 
  1294     0394                     	;# 
  1295     0395                     	;# 
  1296     0396                     	;# 
  1297     0498                     	;# 
  1298     0498                     	;# 
  1299     0499                     	;# 
  1300     049A                     	;# 
  1301     049B                     	;# 
  1302     049B                     	;# 
  1303     049C                     	;# 
  1304     049D                     	;# 
  1305     049E                     	;# 
  1306     049F                     	;# 
  1307     0611                     	;# 
  1308     0612                     	;# 
  1309     0613                     	;# 
  1310     0613                     	;# 
  1311     0614                     	;# 
  1312     0615                     	;# 
  1313     0616                     	;# 
  1314     0616                     	;# 
  1315     0617                     	;# 
  1316     0618                     	;# 
  1317     0619                     	;# 
  1318     0619                     	;# 
  1319     061A                     	;# 
  1320     061B                     	;# 
  1321     061C                     	;# 
  1322     061C                     	;# 
  1323     0691                     	;# 
  1324     0692                     	;# 
  1325     0693                     	;# 
  1326     0694                     	;# 
  1327     0695                     	;# 
  1328     0F0F                     	;# 
  1329     0F10                     	;# 
  1330     0F11                     	;# 
  1331     0F12                     	;# 
  1332     0F13                     	;# 
  1333     0F14                     	;# 
  1334     0F15                     	;# 
  1335     0F16                     	;# 
  1336     0F17                     	;# 
  1337     0F18                     	;# 
  1338     0F19                     	;# 
  1339     0F1A                     	;# 
  1340     0F1B                     	;# 
  1341     0F1C                     	;# 
  1342     0F1D                     	;# 
  1343     0F1E                     	;# 
  1344     0F1F                     	;# 
  1345     0F20                     	;# 
  1346     0F21                     	;# 
  1347     0F22                     	;# 
  1348     0F23                     	;# 
  1349     0F24                     	;# 
  1350     0F25                     	;# 
  1351     0F26                     	;# 
  1352     0F27                     	;# 
  1353     0F28                     	;# 
  1354     0F29                     	;# 
  1355     0F2A                     	;# 
  1356     0F2B                     	;# 
  1357     0F2C                     	;# 
  1358     0F2D                     	;# 
  1359     0F2E                     	;# 
  1360     0F2F                     	;# 
  1361     0F8C                     	;# 
  1362     0F8D                     	;# 
  1363     0F91                     	;# 
  1364     0F95                     	;# 
  1365     0F96                     	;# 
  1366     0F97                     	;# 
  1367     0F9C                     	;# 
  1368     0F9D                     	;# 
  1369     0F9E                     	;# 
  1370     0FE3                     	;# 
  1371     0FE4                     	;# 
  1372     0FE5                     	;# 
  1373     0FE6                     	;# 
  1374     0FE7                     	;# 
  1375     0FE8                     	;# 
  1376     0FE9                     	;# 
  1377     0FEA                     	;# 
  1378     0FEB                     	;# 
  1379     0FED                     	;# 
  1380     0FEE                     	;# 
  1381     0FEF                     	;# 
  1382                           
  1383 ;; Function _I2C_SlaveDefWrColInterruptHandler is unused but had its address taken
  1384     0000                     
  1385 ;; Function _I2C_SlaveDefBusColInterruptHandler is unused but had its address taken
  1386     0000                     
  1387                           	psect	idataBANK0
  1388     0251                     __pidataBANK0:
  1389                           
  1390                           ;initializer for _Volt1ptr
  1391     0251  3433               	retlw	low (_Volt1| 0)
  1392                           
  1393                           ;initializer for _Temp5ptr
  1394     0252  3435               	retlw	low (_Temp5| 0)
  1395                           
  1396                           ;initializer for _Temp4ptr
  1397     0253  3437               	retlw	low (_Temp4| 0)
  1398                           
  1399                           ;initializer for _Temp3ptr
  1400     0254  3439               	retlw	low (_Temp3| 0)
  1401                           
  1402                           ;initializer for _Temp2ptr
  1403     0255  343B               	retlw	low (_Temp2| 0)
  1404                           
  1405                           ;initializer for _Temp1ptr
  1406     0256  343D               	retlw	low (_Temp1| 0)
  1407     0011                     _PIR1bits	set	17
  1408     0012                     _PIR2bits	set	18
  1409     000B                     _INTCONbits	set	11
  1410     009D                     _ADCON0bits	set	157
  1411     009D                     _ADCON0	set	157
  1412     009C                     _ADRESH	set	156
  1413     009B                     _ADRESL	set	155
  1414     009F                     _ADCON2	set	159
  1415     009E                     _ADCON1	set	158
  1416     0095                     _OPTION_REGbits	set	149
  1417     008E                     _TRISC	set	142
  1418     008D                     _TRISB	set	141
  1419     008C                     _TRISA	set	140
  1420     0097                     _WDTCON	set	151
  1421     0099                     _OSCCON	set	153
  1422     0091                     _PIE1bits	set	145
  1423     0092                     _PIE2bits	set	146
  1424     010D                     _LATBbits	set	269
  1425     0117                     _FVRCONbits	set	279
  1426     0117                     _FVRCON	set	279
  1427     011D                     _APFCON	set	285
  1428     010E                     _LATC	set	270
  1429     010D                     _LATB	set	269
  1430     010C                     _LATA	set	268
  1431     0116                     _BORCON	set	278
  1432     018C                     _ANSELA	set	396
  1433     018D                     _ANSELB	set	397
  1434     018E                     _ANSELC	set	398
  1435     020C                     _WPUA	set	524
  1436     020D                     _WPUB	set	525
  1437     0211                     _SSP1BUF	set	529
  1438     0216                     _SSP1CON2bits	set	534
  1439     0214                     _SSP1STATbits	set	532
  1440     0213                     _SSP1MSK	set	531
  1441     0212                     _SSP1ADD	set	530
  1442     0215                     _SSP1CON1bits	set	533
  1443     0216                     _SSP1CON2	set	534
  1444     0215                     _SSP1CON1	set	533
  1445     0214                     _SSP1STAT	set	532
  1446                           
  1447                           	psect	cinit
  1448     0029                     start_initialization:	
  1449                           ; #config settings
  1450                           
  1451     0029                     __initialization:
  1452                           
  1453                           ; Initialize objects allocated to BANK0
  1454     0029  3051               	movlw	low __pidataBANK0
  1455     002A  0084               	movwf	4
  1456     002B  3082               	movlw	(high __pidataBANK0)| (0+128)
  1457     002C  0085               	movwf	5
  1458     002D  0012               	moviw fsr0++
  1459     002E  00BF               	movwf	__pdataBANK0& (0+127)
  1460     002F  0012               	moviw fsr0++
  1461     0030  00C0               	movwf	(__pdataBANK0+1)& (0+127)
  1462     0031  0012               	moviw fsr0++
  1463     0032  00C1               	movwf	(__pdataBANK0+2)& (0+127)
  1464     0033  0012               	moviw fsr0++
  1465     0034  00C2               	movwf	(__pdataBANK0+3)& (0+127)
  1466     0035  0012               	moviw fsr0++
  1467     0036  00C3               	movwf	(__pdataBANK0+4)& (0+127)
  1468     0037  0012               	moviw fsr0++
  1469     0038  00C4               	movwf	(__pdataBANK0+5)& (0+127)
  1470                           
  1471                           ; Clear objects allocated to COMMON
  1472     0039  01F6               	clrf	__pbssCOMMON& (0+127)
  1473     003A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1474     003B  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1475     003C  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1476                           
  1477                           ; Clear objects allocated to BANK0
  1478     003D  3020               	movlw	low __pbssBANK0
  1479     003E  0084               	movwf	4
  1480     003F  3000               	movlw	high __pbssBANK0
  1481     0040  0085               	movwf	5
  1482     0041  301F               	movlw	31
  1483     0042  3182  2257  3180   	fcall	clear_ram0
  1484     0045                     end_of_initialization:	
  1485                           ;End of C runtime variable initialization code
  1486                           
  1487     0045                     __end_of__initialization:
  1488     0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1489     0046  0020               	movlb	0
  1490     0047  3180  2849         	ljmp	_main	;jump to C main() function
  1491                           
  1492                           	psect	bssCOMMON
  1493     0076                     __pbssCOMMON:
  1494     0076                     _i2cSlaveState:
  1495     0076                     	ds	1
  1496     0077                     _i2cRdData:
  1497     0077                     	ds	1
  1498     0078                     _i2cWrData:
  1499     0078                     	ds	1
  1500     0079                     _balanceFlag:
  1501     0079                     	ds	1
  1502                           
  1503                           	psect	bssBANK0
  1504     0020                     __pbssBANK0:
  1505     0020                     _ADC_InterruptHandler:
  1506     0020                     	ds	2
  1507     0022                     _index:
  1508     0022                     	ds	2
  1509     0024                     _current_Data:
  1510     0024                     	ds	2
  1511     0026                     _I2C_SlaveWrColInterruptHandler:
  1512     0026                     	ds	2
  1513     0028                     _I2C_SlaveBusColInterruptHandler:
  1514     0028                     	ds	2
  1515     002A                     _I2C_SlaveAddrInterruptHandler:
  1516     002A                     	ds	2
  1517     002C                     _I2C_SlaveWrInterruptHandler:
  1518     002C                     	ds	2
  1519     002E                     _I2C_SlaveRdInterruptHandler:
  1520     002E                     	ds	2
  1521     0030                     _MSSP_InterruptHandler:
  1522     0030                     	ds	2
  1523     0032                     _i2cSlaveAddr:
  1524     0032                     	ds	1
  1525     0033                     _Volt1:
  1526     0033                     	ds	2
  1527     0035                     _Temp5:
  1528     0035                     	ds	2
  1529     0037                     _Temp4:
  1530     0037                     	ds	2
  1531     0039                     _Temp3:
  1532     0039                     	ds	2
  1533     003B                     _Temp2:
  1534     003B                     	ds	2
  1535     003D                     _Temp1:
  1536     003D                     	ds	2
  1537                           
  1538                           	psect	dataBANK0
  1539     003F                     __pdataBANK0:
  1540     003F                     _Volt1ptr:
  1541     003F                     	ds	1
  1542     0040                     _Temp5ptr:
  1543     0040                     	ds	1
  1544     0041                     _Temp4ptr:
  1545     0041                     	ds	1
  1546     0042                     _Temp3ptr:
  1547     0042                     	ds	1
  1548     0043                     _Temp2ptr:
  1549     0043                     	ds	1
  1550     0044                     _Temp1ptr:
  1551     0044                     	ds	1
  1552                           
  1553                           	psect	clrtext
  1554     0257                     clear_ram0:	
  1555                           ;	Called with FSR0 containing the base address, and
  1556                           ;	WREG with the size to clear
  1557                           
  1558     0257  0064               	clrwdt	;clear the watchdog before getting into this loop
  1559     0258                     clrloop0:
  1560     0258  0180               	clrf	0	;clear RAM location pointed to by FSR
  1561     0259  3101               	addfsr 0,1
  1562     025A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1563     025B  2A58               	goto	clrloop0	;have we reached the end yet?
  1564     025C  3400               	retlw	0	;all done for this memory range, return
  1565                           
  1566                           	psect	cstackCOMMON
  1567     0070                     __pcstackCOMMON:
  1568     0070                     ?_I2C_Initialize:
  1569     0070                     ?_PIN_MANAGER_Initialize:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572     0070                     ?_OSCILLATOR_Initialize:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575     0070                     ?_WDT_Initialize:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578     0070                     ?_FVR_Initialize:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581     0070                     ?_ADC_Initialize:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584     0070                     ?_I2C_SlaveOpen:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587     0070                     ?_I2C_SlaveSetSlaveAddr:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590     0070                     ?_I2C_SlaveSetSlaveMask:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593     0070                     ?_I2C_Isr:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596     0070                     ?_I2C_SlaveDefWrInterruptHandler:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599     0070                     ?_I2C_SlaveDefRdInterruptHandler:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602     0070                     ??_I2C_SlaveDefRdInterruptHandler:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605     0070                     ?_I2C_SlaveDefAddrInterruptHandler:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608     0070                     ??_I2C_SlaveDefAddrInterruptHandler:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611     0070                     ?_I2C_SlaveEnableIrq:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614     0070                     ?_I2C_SlaveGetRxData:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617     0070                     ??_I2C_SlaveGetRxData:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620     0070                     ?_I2C_SlaveSendTxData:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623     0070                     ??_I2C_SlaveSendTxData:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626     0070                     ?_I2C_SlaveIsRead:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629     0070                     ??_I2C_SlaveIsRead:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632     0070                     ?_I2C_SlaveClearIrq:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635     0070                     ??_I2C_SlaveClearIrq:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638     0070                     ?_I2C_SlaveIsAddr:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641     0070                     ??_I2C_SlaveIsAddr:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644     0070                     ?_I2C_SlaveAddrCallBack:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647     0070                     ??_I2C_SlaveAddrCallBack:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650     0070                     ?_I2C_SlaveIsTxBufEmpty:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653     0070                     ??_I2C_SlaveIsTxBufEmpty:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656     0070                     ?_I2C_SlaveWrCallBack:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659     0070                     ?_I2C_SlaveIsRxBufFull:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662     0070                     ??_I2C_SlaveIsRxBufFull:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665     0070                     ?_I2C_SlaveRdCallBack:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668     0070                     ??_I2C_SlaveRdCallBack:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671     0070                     ?_I2C_SlaveReleaseClock:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674     0070                     ??_I2C_SlaveReleaseClock:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677     0070                     ?_INTERRUPT_InterruptManager:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680     0070                     ?_SYSTEM_Initialize:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683     0070                     ?_I2C_Open:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686     0070                     ?_main:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689     0070                     I2C_SlaveSendTxData@data:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692                           
  1693                           ; 1 bytes @ 0x0
  1694     0070                     	ds	1
  1695     0071                     ??_I2C_SlaveDefWrInterruptHandler:
  1696     0071                     ??_I2C_SlaveWrCallBack:	
  1697                           ; 1 bytes @ 0x1
  1698                           
  1699                           
  1700                           ; 1 bytes @ 0x1
  1701     0071                     	ds	1
  1702     0072                     ??_I2C_Isr:
  1703                           
  1704                           ; 1 bytes @ 0x2
  1705     0072                     	ds	2
  1706     0074                     ??_I2C_Initialize:
  1707     0074                     ??_PIN_MANAGER_Initialize:	
  1708                           ; 1 bytes @ 0x4
  1709                           
  1710     0074                     ??_OSCILLATOR_Initialize:	
  1711                           ; 1 bytes @ 0x4
  1712                           
  1713     0074                     ??_WDT_Initialize:	
  1714                           ; 1 bytes @ 0x4
  1715                           
  1716     0074                     ??_FVR_Initialize:	
  1717                           ; 1 bytes @ 0x4
  1718                           
  1719     0074                     ??_ADC_Initialize:	
  1720                           ; 1 bytes @ 0x4
  1721                           
  1722     0074                     ??_I2C_SlaveOpen:	
  1723                           ; 1 bytes @ 0x4
  1724                           
  1725     0074                     ??_I2C_SlaveSetSlaveAddr:	
  1726                           ; 1 bytes @ 0x4
  1727                           
  1728     0074                     ??_I2C_SlaveSetSlaveMask:	
  1729                           ; 1 bytes @ 0x4
  1730                           
  1731     0074                     ?_I2C_SlaveSetIsrHandler:	
  1732                           ; 1 bytes @ 0x4
  1733                           
  1734     0074                     ?_I2C_SlaveSetBusColIntHandler:	
  1735                           ; 1 bytes @ 0x4
  1736                           
  1737     0074                     ?_I2C_SlaveSetWriteIntHandler:	
  1738                           ; 1 bytes @ 0x4
  1739                           
  1740     0074                     ?_I2C_SlaveSetReadIntHandler:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743     0074                     ?_I2C_SlaveSetAddrIntHandler:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746     0074                     ?_I2C_SlaveSetWrColIntHandler:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749     0074                     ??_I2C_SlaveEnableIrq:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752     0074                     ??_INTERRUPT_InterruptManager:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755     0074                     ?_ADC_GetConversion:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758     0074                     I2C_SlaveSetSlaveAddr@slaveAddr:	
  1759                           ; 2 bytes @ 0x4
  1760                           
  1761     0074                     I2C_SlaveSetSlaveMask@maskAddr:	
  1762                           ; 1 bytes @ 0x4
  1763                           
  1764     0074                     I2C_SlaveSetIsrHandler@handler:	
  1765                           ; 1 bytes @ 0x4
  1766                           
  1767     0074                     I2C_SlaveSetReadIntHandler@handler:	
  1768                           ; 2 bytes @ 0x4
  1769                           
  1770     0074                     I2C_SlaveSetWriteIntHandler@handler:	
  1771                           ; 2 bytes @ 0x4
  1772                           
  1773     0074                     I2C_SlaveSetAddrIntHandler@handler:	
  1774                           ; 2 bytes @ 0x4
  1775                           
  1776     0074                     I2C_SlaveSetWrColIntHandler@handler:	
  1777                           ; 2 bytes @ 0x4
  1778                           
  1779     0074                     I2C_SlaveSetBusColIntHandler@handler:	
  1780                           ; 2 bytes @ 0x4
  1781                           
  1782                           
  1783                           ; 2 bytes @ 0x4
  1784     0074                     	ds	1
  1785     0075                     ??_SYSTEM_Initialize:
  1786                           
  1787                           ; 1 bytes @ 0x5
  1788     0075                     	ds	1
  1789     0076                     ??_I2C_SlaveSetIsrHandler:
  1790     0076                     ??_I2C_SlaveSetBusColIntHandler:	
  1791                           ; 1 bytes @ 0x6
  1792                           
  1793     0076                     ??_I2C_SlaveSetWriteIntHandler:	
  1794                           ; 1 bytes @ 0x6
  1795                           
  1796     0076                     ??_I2C_SlaveSetReadIntHandler:	
  1797                           ; 1 bytes @ 0x6
  1798                           
  1799     0076                     ??_I2C_SlaveSetAddrIntHandler:	
  1800                           ; 1 bytes @ 0x6
  1801                           
  1802     0076                     ??_I2C_SlaveSetWrColIntHandler:	
  1803                           ; 1 bytes @ 0x6
  1804                           
  1805     0076                     ??_I2C_Open:	
  1806                           ; 1 bytes @ 0x6
  1807                           
  1808                           
  1809                           	psect	cstackBANK0
  1810     0045                     __pcstackBANK0:	
  1811                           ; 1 bytes @ 0x6
  1812                           
  1813     0045                     ??_ADC_GetConversion:
  1814                           
  1815                           ; 1 bytes @ 0x0
  1816     0045                     	ds	1
  1817     0046                     ADC_GetConversion@channel:
  1818                           
  1819                           ; 1 bytes @ 0x1
  1820     0046                     	ds	1
  1821     0047                     ??_main:
  1822                           
  1823                           ; 1 bytes @ 0x2
  1824     0047                     	ds	2
  1825                           
  1826                           	psect	maintext
  1827     0049                     __pmaintext:	
  1828 ;;
  1829 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1830 ;;
  1831 ;; *************** function _main *****************
  1832 ;; Defined at:
  1833 ;;		line 10 in file "main.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : B1F/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1847 ;;      Params:         0       0       0       0
  1848 ;;      Locals:         0       0       0       0
  1849 ;;      Temps:          0       2       0       0
  1850 ;;      Totals:         0       2       0       0
  1851 ;;Total ram usage:        2 bytes
  1852 ;; Hardware stack levels required when called: 7
  1853 ;; This function calls:
  1854 ;;		_ADC_GetConversion
  1855 ;;		_ADC_Initialize
  1856 ;;		_FVR_Initialize
  1857 ;;		_I2C_Open
  1858 ;;		_SYSTEM_Initialize
  1859 ;; This function is called by:
  1860 ;;		Startup code after reset
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864     0049                     _main:	
  1865                           ;psect for function _main
  1866                           
  1867     0049                     l1767:	
  1868                           ;incstack = 0
  1869                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1870                           
  1871                           
  1872                           ;main.c: 13:     SYSTEM_Initialize();
  1873     0049  3182  2202  3180   	fcall	_SYSTEM_Initialize
  1874     004C                     l1769:
  1875                           
  1876                           ;main.c: 16:     (INTCONbits.GIE = 1);
  1877     004C  178B               	bsf	11,7	;volatile
  1878     004D                     l1771:
  1879                           
  1880                           ;main.c: 17:     (INTCONbits.PEIE = 1);
  1881     004D  170B               	bsf	11,6	;volatile
  1882                           
  1883                           ;main.c: 19:     I2C_Open();
  1884     004E  3181  2174  3180   	fcall	_I2C_Open
  1885                           
  1886                           ;main.c: 20:     ADC_Initialize();
  1887     0051  3182  223A  3180   	fcall	_ADC_Initialize
  1888                           
  1889                           ;main.c: 21:     FVR_Initialize();
  1890     0054  3182  22AF  3180   	fcall	_FVR_Initialize
  1891     0057                     l1773:
  1892                           
  1893                           ;main.c: 24:     {;main.c: 26:         if (balanceFlag){
  1894     0057  0879               	movf	_balanceFlag,w	;volatile
  1895     0058  1903               	btfsc	3,2
  1896     0059  285B               	goto	u421
  1897     005A  285C               	goto	u420
  1898     005B                     u421:
  1899     005B  287B               	goto	l1785
  1900     005C                     u420:
  1901     005C                     l1775:
  1902                           
  1903                           ;main.c: 27:             balanceFlag = 0;
  1904     005C  01F9               	clrf	_balanceFlag	;volatile
  1905     005D                     l1777:
  1906     005D  0022               	movlb	2	; select bank2
  1907     005E  178D               	bsf	13,7	;volatile
  1908     005F                     l1779:
  1909                           
  1910                           ;main.c: 29:             _delay((unsigned long)((900)*(16000000/4000.0)));
  1911     005F  3013               	movlw	19
  1912     0060  0020               	movlb	0	; select bank0
  1913     0061  00C8               	movwf	??_main+1
  1914     0062  3044               	movlw	68
  1915     0063  00C7               	movwf	??_main
  1916     0064  3044               	movlw	68
  1917     0065                     u437:
  1918     0065  0B89               	decfsz	9,f
  1919     0066  2865               	goto	u437
  1920     0067  0BC7               	decfsz	??_main,f
  1921     0068  2865               	goto	u437
  1922     0069  0BC8               	decfsz	??_main+1,f
  1923     006A  2865               	goto	u437
  1924     006B  0000               	nop
  1925     006C                     l1781:
  1926     006C  0022               	movlb	2	; select bank2
  1927     006D  138D               	bcf	13,7	;volatile
  1928     006E                     l1783:
  1929                           
  1930                           ;main.c: 31:             _delay((unsigned long)((80)*(16000000/4000.0)));
  1931     006E  3002               	movlw	2
  1932     006F  0020               	movlb	0	; select bank0
  1933     0070  00C8               	movwf	??_main+1
  1934     0071  30A0               	movlw	160
  1935     0072  00C7               	movwf	??_main
  1936     0073  3092               	movlw	146
  1937     0074                     u447:
  1938     0074  0B89               	decfsz	9,f
  1939     0075  2874               	goto	u447
  1940     0076  0BC7               	decfsz	??_main,f
  1941     0077  2874               	goto	u447
  1942     0078  0BC8               	decfsz	??_main+1,f
  1943     0079  2874               	goto	u447
  1944     007A  0000               	nop
  1945     007B                     l1785:
  1946                           
  1947                           ;main.c: 36:         Temp1ptr->value = (uint16_t) ADC_GetConversion(TSNS1);
  1948     007B  3002               	movlw	2
  1949     007C  3181  21AD  3180   	fcall	_ADC_GetConversion
  1950     007F  0875               	movf	?_ADC_GetConversion+1,w
  1951     0080  0020               	movlb	0	; select bank0
  1952     0081  00BE               	movwf	_Temp1+1	;volatile
  1953     0082  0874               	movf	?_ADC_GetConversion,w
  1954     0083  00BD               	movwf	_Temp1	;volatile
  1955     0084                     l1787:
  1956                           
  1957                           ;main.c: 37:         Temp2ptr->value = (uint16_t) ADC_GetConversion(TSNS2);
  1958     0084  3003               	movlw	3
  1959     0085  3181  21AD  3180   	fcall	_ADC_GetConversion
  1960     0088  0875               	movf	?_ADC_GetConversion+1,w
  1961     0089  0020               	movlb	0	; select bank0
  1962     008A  00BC               	movwf	_Temp2+1	;volatile
  1963     008B  0874               	movf	?_ADC_GetConversion,w
  1964     008C  00BB               	movwf	_Temp2	;volatile
  1965     008D                     l1789:
  1966                           
  1967                           ;main.c: 38:         Temp3ptr->value = (uint16_t) ADC_GetConversion(TSNS3);
  1968     008D  3007               	movlw	7
  1969     008E  3181  21AD  3180   	fcall	_ADC_GetConversion
  1970     0091  0875               	movf	?_ADC_GetConversion+1,w
  1971     0092  0020               	movlb	0	; select bank0
  1972     0093  00BA               	movwf	_Temp3+1	;volatile
  1973     0094  0874               	movf	?_ADC_GetConversion,w
  1974     0095  00B9               	movwf	_Temp3	;volatile
  1975     0096                     l1791:
  1976                           
  1977                           ;main.c: 39:         Temp4ptr->value = (uint16_t) ADC_GetConversion(TSNS4);
  1978     0096  3008               	movlw	8
  1979     0097  3181  21AD  3180   	fcall	_ADC_GetConversion
  1980     009A  0875               	movf	?_ADC_GetConversion+1,w
  1981     009B  0020               	movlb	0	; select bank0
  1982     009C  00B8               	movwf	_Temp4+1	;volatile
  1983     009D  0874               	movf	?_ADC_GetConversion,w
  1984     009E  00B7               	movwf	_Temp4	;volatile
  1985     009F                     l1793:
  1986                           
  1987                           ;main.c: 40:         Temp5ptr->value = (uint16_t) ADC_GetConversion(TSNS5);
  1988     009F  3009               	movlw	9
  1989     00A0  3181  21AD  3180   	fcall	_ADC_GetConversion
  1990     00A3  0875               	movf	?_ADC_GetConversion+1,w
  1991     00A4  0020               	movlb	0	; select bank0
  1992     00A5  00B6               	movwf	_Temp5+1	;volatile
  1993     00A6  0874               	movf	?_ADC_GetConversion,w
  1994     00A7  00B5               	movwf	_Temp5	;volatile
  1995     00A8                     l1795:
  1996                           
  1997                           ;main.c: 41:         Volt1ptr->value = (uint16_t) ADC_GetConversion(channel_FVR);
  1998     00A8  301F               	movlw	31
  1999     00A9  3181  21AD  3180   	fcall	_ADC_GetConversion
  2000     00AC  0875               	movf	?_ADC_GetConversion+1,w
  2001     00AD  0020               	movlb	0	; select bank0
  2002     00AE  00B4               	movwf	_Volt1+1	;volatile
  2003     00AF  0874               	movf	?_ADC_GetConversion,w
  2004     00B0  00B3               	movwf	_Volt1	;volatile
  2005     00B1  2857               	goto	l1773
  2006     00B2  3180  2827         	ljmp	start
  2007     00B4                     __end_of_main:
  2008                           
  2009                           	psect	text1
  2010     0202                     __ptext1:	
  2011 ;; *************** function _SYSTEM_Initialize *****************
  2012 ;; Defined at:
  2013 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0, pclath, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2027 ;;      Params:         0       0       0       0
  2028 ;;      Locals:         0       0       0       0
  2029 ;;      Temps:          0       0       0       0
  2030 ;;      Totals:         0       0       0       0
  2031 ;;Total ram usage:        0 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; Hardware stack levels required when called: 6
  2034 ;; This function calls:
  2035 ;;		_ADC_Initialize
  2036 ;;		_FVR_Initialize
  2037 ;;		_I2C_Initialize
  2038 ;;		_OSCILLATOR_Initialize
  2039 ;;		_PIN_MANAGER_Initialize
  2040 ;;		_WDT_Initialize
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046     0202                     _SYSTEM_Initialize:	
  2047                           ;psect for function _SYSTEM_Initialize
  2048                           
  2049     0202                     l1593:	
  2050                           ;incstack = 0
  2051                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2052                           
  2053                           
  2054                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2055     0202  3182  2230  3182   	fcall	_I2C_Initialize
  2056                           
  2057                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2058     0205  3181  21E8  3182   	fcall	_PIN_MANAGER_Initialize
  2059                           
  2060                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2061     0208  3182  225D  3182   	fcall	_OSCILLATOR_Initialize
  2062                           
  2063                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2064     020B  3182  22AB  3182   	fcall	_WDT_Initialize
  2065                           
  2066                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  2067     020E  3182  22AF  3182   	fcall	_FVR_Initialize
  2068                           
  2069                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  2070     0211  3182  223A  3182   	fcall	_ADC_Initialize
  2071     0214                     l94:
  2072     0214  0008               	return
  2073     0215                     __end_of_SYSTEM_Initialize:
  2074                           
  2075                           	psect	text2
  2076     02AB                     __ptext2:	
  2077 ;; *************** function _WDT_Initialize *****************
  2078 ;; Defined at:
  2079 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2093 ;;      Params:         0       0       0       0
  2094 ;;      Locals:         0       0       0       0
  2095 ;;      Temps:          0       0       0       0
  2096 ;;      Totals:         0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; Hardware stack levels required when called: 5
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_SYSTEM_Initialize
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107     02AB                     _WDT_Initialize:	
  2108                           ;psect for function _WDT_Initialize
  2109                           
  2110     02AB                     l1485:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _WDT_Initialize: [wreg]
  2113                           
  2114                           
  2115                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  2116     02AB  3016               	movlw	22
  2117     02AC  0021               	movlb	1	; select bank1
  2118     02AD  0097               	movwf	23	;volatile
  2119     02AE                     l100:
  2120     02AE  0008               	return
  2121     02AF                     __end_of_WDT_Initialize:
  2122                           
  2123                           	psect	text3
  2124     01E8                     __ptext3:	
  2125 ;; *************** function _PIN_MANAGER_Initialize *****************
  2126 ;; Defined at:
  2127 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2141 ;;      Params:         0       0       0       0
  2142 ;;      Locals:         0       0       0       0
  2143 ;;      Temps:          0       0       0       0
  2144 ;;      Totals:         0       0       0       0
  2145 ;;Total ram usage:        0 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; Hardware stack levels required when called: 5
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_SYSTEM_Initialize
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155     01E8                     _PIN_MANAGER_Initialize:	
  2156                           ;psect for function _PIN_MANAGER_Initialize
  2157                           
  2158     01E8                     l1465:	
  2159                           ;incstack = 0
  2160                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2161                           
  2162                           
  2163                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2164     01E8  0022               	movlb	2	; select bank2
  2165     01E9  018C               	clrf	12	;volatile
  2166                           
  2167                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2168     01EA  018D               	clrf	13	;volatile
  2169                           
  2170                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2171     01EB  018E               	clrf	14	;volatile
  2172     01EC                     l1467:
  2173                           
  2174                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  2175     01EC  303F               	movlw	63
  2176     01ED  0021               	movlb	1	; select bank1
  2177     01EE  008C               	movwf	12	;volatile
  2178     01EF                     l1469:
  2179                           
  2180                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  2181     01EF  3070               	movlw	112
  2182     01F0  008D               	movwf	13	;volatile
  2183     01F1                     l1471:
  2184                           
  2185                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xF8;
  2186     01F1  30F8               	movlw	248
  2187     01F2  008E               	movwf	14	;volatile
  2188     01F3                     l1473:
  2189                           
  2190                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  2191     01F3  30CF               	movlw	207
  2192     01F4  0023               	movlb	3	; select bank3
  2193     01F5  008E               	movwf	14	;volatile
  2194     01F6                     l1475:
  2195                           
  2196                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x20;
  2197     01F6  3020               	movlw	32
  2198     01F7  008D               	movwf	13	;volatile
  2199     01F8                     l1477:
  2200                           
  2201                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  2202     01F8  3017               	movlw	23
  2203     01F9  008C               	movwf	12	;volatile
  2204                           
  2205                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  2206     01FA  0024               	movlb	4	; select bank4
  2207     01FB  018D               	clrf	13	;volatile
  2208                           
  2209                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  2210     01FC  018C               	clrf	12	;volatile
  2211     01FD                     l1479:
  2212                           
  2213                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  2214     01FD  0021               	movlb	1	; select bank1
  2215     01FE  1795               	bsf	21,7	;volatile
  2216                           
  2217                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  2218     01FF  0022               	movlb	2	; select bank2
  2219     0200  019D               	clrf	29	;volatile
  2220     0201                     l445:
  2221     0201  0008               	return
  2222     0202                     __end_of_PIN_MANAGER_Initialize:
  2223                           
  2224                           	psect	text4
  2225     025D                     __ptext4:	
  2226 ;; *************** function _OSCILLATOR_Initialize *****************
  2227 ;; Defined at:
  2228 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2242 ;;      Params:         0       0       0       0
  2243 ;;      Locals:         0       0       0       0
  2244 ;;      Temps:          0       0       0       0
  2245 ;;      Totals:         0       0       0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 5
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_SYSTEM_Initialize
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256     025D                     _OSCILLATOR_Initialize:	
  2257                           ;psect for function _OSCILLATOR_Initialize
  2258                           
  2259     025D                     l1481:	
  2260                           ;incstack = 0
  2261                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2262                           
  2263                           
  2264                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  2265     025D  3078               	movlw	120
  2266     025E  0021               	movlb	1	; select bank1
  2267     025F  0099               	movwf	25	;volatile
  2268     0260                     l1483:
  2269                           
  2270                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  2271     0260  0022               	movlb	2	; select bank2
  2272     0261  0196               	clrf	22	;volatile
  2273     0262                     l97:
  2274     0262  0008               	return
  2275     0263                     __end_of_OSCILLATOR_Initialize:
  2276                           
  2277                           	psect	text5
  2278     0230                     __ptext5:	
  2279 ;; *************** function _I2C_Initialize *****************
  2280 ;; Defined at:
  2281 ;;		line 78 in file "mcc_generated_files/i2c_slave.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2295 ;;      Params:         0       0       0       0
  2296 ;;      Locals:         0       0       0       0
  2297 ;;      Temps:          1       0       0       0
  2298 ;;      Totals:         1       0       0       0
  2299 ;;Total ram usage:        1 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 5
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_SYSTEM_Initialize
  2306 ;;		_I2C_Enable
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310     0230                     _I2C_Initialize:	
  2311                           ;psect for function _I2C_Initialize
  2312                           
  2313     0230                     l1457:	
  2314                           ;incstack = 0
  2315                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0]
  2316                           
  2317                           
  2318                           ;mcc_generated_files/i2c_slave.c: 80:     SSP1STAT = 0x00;
  2319     0230  0024               	movlb	4	; select bank4
  2320     0231  0194               	clrf	20	;volatile
  2321     0232                     l1459:
  2322                           
  2323                           ;mcc_generated_files/i2c_slave.c: 81:     SSP1CON1 |= 0x06;
  2324     0232  3006               	movlw	6
  2325     0233  00F4               	movwf	??_I2C_Initialize
  2326     0234  0874               	movf	??_I2C_Initialize,w
  2327     0235  0495               	iorwf	21,f	;volatile
  2328     0236                     l1461:
  2329                           
  2330                           ;mcc_generated_files/i2c_slave.c: 82:     SSP1CON2 = 0x01;
  2331     0236  3001               	movlw	1
  2332     0237  0096               	movwf	22	;volatile
  2333     0238                     l1463:
  2334                           
  2335                           ;mcc_generated_files/i2c_slave.c: 83:     SSP1CON1bits.SSPEN = 0;
  2336     0238  1295               	bcf	21,5	;volatile
  2337     0239                     l249:
  2338     0239  0008               	return
  2339     023A                     __end_of_I2C_Initialize:
  2340                           
  2341                           	psect	text6
  2342     02AF                     __ptext6:	
  2343 ;; *************** function _FVR_Initialize *****************
  2344 ;; Defined at:
  2345 ;;		line 58 in file "mcc_generated_files/fvr.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2359 ;;      Params:         0       0       0       0
  2360 ;;      Locals:         0       0       0       0
  2361 ;;      Temps:          0       0       0       0
  2362 ;;      Totals:         0       0       0       0
  2363 ;;Total ram usage:        0 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; Hardware stack levels required when called: 5
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_SYSTEM_Initialize
  2370 ;;		_main
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374     02AF                     _FVR_Initialize:	
  2375                           ;psect for function _FVR_Initialize
  2376                           
  2377     02AF                     l1487:	
  2378                           ;incstack = 0
  2379                           ; Regs used in _FVR_Initialize: [wreg]
  2380                           
  2381                           
  2382                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  2383     02AF  3082               	movlw	130
  2384     02B0  0022               	movlb	2	; select bank2
  2385     02B1  0097               	movwf	23	;volatile
  2386     02B2                     l495:
  2387     02B2  0008               	return
  2388     02B3                     __end_of_FVR_Initialize:
  2389                           
  2390                           	psect	text7
  2391     023A                     __ptext7:	
  2392 ;; *************** function _ADC_Initialize *****************
  2393 ;; Defined at:
  2394 ;;		line 67 in file "mcc_generated_files/adc.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2408 ;;      Params:         0       0       0       0
  2409 ;;      Locals:         0       0       0       0
  2410 ;;      Temps:          0       0       0       0
  2411 ;;      Totals:         0       0       0       0
  2412 ;;Total ram usage:        0 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 5
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_SYSTEM_Initialize
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423     023A                     _ADC_Initialize:	
  2424                           ;psect for function _ADC_Initialize
  2425                           
  2426     023A                     l1489:	
  2427                           ;incstack = 0
  2428                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2429                           
  2430                           
  2431                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD0;
  2432     023A  30D0               	movlw	208
  2433     023B  0021               	movlb	1	; select bank1
  2434     023C  009E               	movwf	30	;volatile
  2435     023D                     l1491:
  2436                           
  2437                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
  2438     023D  019F               	clrf	31	;volatile
  2439     023E                     l1493:
  2440                           
  2441                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  2442     023E  019B               	clrf	27	;volatile
  2443     023F                     l1495:
  2444                           
  2445                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  2446     023F  019C               	clrf	28	;volatile
  2447     0240                     l1497:
  2448                           
  2449                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  2450     0240  3001               	movlw	1
  2451     0241  009D               	movwf	29	;volatile
  2452     0242                     l467:
  2453     0242  0008               	return
  2454     0243                     __end_of_ADC_Initialize:
  2455                           
  2456                           	psect	text8
  2457     0174                     __ptext8:	
  2458 ;; *************** function _I2C_Open *****************
  2459 ;; Defined at:
  2460 ;;		line 86 in file "mcc_generated_files/i2c_slave.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0, pclath, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2474 ;;      Params:         0       0       0       0
  2475 ;;      Locals:         0       0       0       0
  2476 ;;      Temps:          0       0       0       0
  2477 ;;      Totals:         0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 6
  2481 ;; This function calls:
  2482 ;;		_I2C_SlaveEnableIrq
  2483 ;;		_I2C_SlaveOpen
  2484 ;;		_I2C_SlaveSetAddrIntHandler
  2485 ;;		_I2C_SlaveSetBusColIntHandler
  2486 ;;		_I2C_SlaveSetIsrHandler
  2487 ;;		_I2C_SlaveSetReadIntHandler
  2488 ;;		_I2C_SlaveSetSlaveAddr
  2489 ;;		_I2C_SlaveSetSlaveMask
  2490 ;;		_I2C_SlaveSetWrColIntHandler
  2491 ;;		_I2C_SlaveSetWriteIntHandler
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497     0174                     _I2C_Open:	
  2498                           ;psect for function _I2C_Open
  2499                           
  2500     0174                     l1595:	
  2501                           ;incstack = 0
  2502                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  2503                           
  2504                           
  2505                           ;mcc_generated_files/i2c_slave.c: 88:     I2C_SlaveOpen();
  2506     0174  3182  2215  3181   	fcall	_I2C_SlaveOpen
  2507                           
  2508                           ;mcc_generated_files/i2c_slave.c: 89:     I2C_SlaveSetSlaveAddr(15);
  2509     0177  300F               	movlw	15
  2510     0178  3182  2292  3181   	fcall	_I2C_SlaveSetSlaveAddr
  2511                           
  2512                           ;mcc_generated_files/i2c_slave.c: 90:     I2C_SlaveSetSlaveMask(127);
  2513     017B  307F               	movlw	127
  2514     017C  3182  228D  3181   	fcall	_I2C_SlaveSetSlaveMask
  2515                           
  2516                           ;mcc_generated_files/i2c_slave.c: 91:     I2C_SlaveSetIsrHandler(I2C_Isr);
  2517     017F  30B4               	movlw	low _I2C_Isr
  2518     0180  00F4               	movwf	I2C_SlaveSetIsrHandler@handler
  2519     0181  3000               	movlw	high _I2C_Isr
  2520     0182  00F5               	movwf	I2C_SlaveSetIsrHandler@handler+1
  2521     0183  3182  2275  3181   	fcall	_I2C_SlaveSetIsrHandler
  2522                           
  2523                           ;mcc_generated_files/i2c_slave.c: 92:     I2C_SlaveSetBusColIntHandler(I2C_SlaveDefBusCo
      +                          lInterruptHandler);
  2524     0186  3000               	movlw	0
  2525     0187  00F4               	movwf	I2C_SlaveSetBusColIntHandler@handler
  2526     0188  3000               	movlw	0
  2527     0189  00F5               	movwf	I2C_SlaveSetBusColIntHandler@handler+1
  2528     018A  3182  227B  3181   	fcall	_I2C_SlaveSetBusColIntHandler
  2529                           
  2530                           ;mcc_generated_files/i2c_slave.c: 93:     I2C_SlaveSetWriteIntHandler(I2C_SlaveDefWrInte
      +                          rruptHandler);
  2531     018D  3097               	movlw	low _I2C_SlaveDefWrInterruptHandler
  2532     018E  00F4               	movwf	I2C_SlaveSetWriteIntHandler@handler
  2533     018F  3002               	movlw	high _I2C_SlaveDefWrInterruptHandler
  2534     0190  00F5               	movwf	I2C_SlaveSetWriteIntHandler@handler+1
  2535     0191  3182  2263  3181   	fcall	_I2C_SlaveSetWriteIntHandler
  2536                           
  2537                           ;mcc_generated_files/i2c_slave.c: 94:     I2C_SlaveSetReadIntHandler(I2C_SlaveDefRdInter
      +                          ruptHandler);
  2538     0194  30A1               	movlw	low _I2C_SlaveDefRdInterruptHandler
  2539     0195  00F4               	movwf	I2C_SlaveSetReadIntHandler@handler
  2540     0196  3002               	movlw	high _I2C_SlaveDefRdInterruptHandler
  2541     0197  00F5               	movwf	I2C_SlaveSetReadIntHandler@handler+1
  2542     0198  3182  226F  3181   	fcall	_I2C_SlaveSetReadIntHandler
  2543                           
  2544                           ;mcc_generated_files/i2c_slave.c: 95:     I2C_SlaveSetAddrIntHandler(I2C_SlaveDefAddrInt
      +                          erruptHandler);
  2545     019B  3087               	movlw	low _I2C_SlaveDefAddrInterruptHandler
  2546     019C  00F4               	movwf	I2C_SlaveSetAddrIntHandler@handler
  2547     019D  3002               	movlw	high _I2C_SlaveDefAddrInterruptHandler
  2548     019E  00F5               	movwf	I2C_SlaveSetAddrIntHandler@handler+1
  2549     019F  3182  2281  3181   	fcall	_I2C_SlaveSetAddrIntHandler
  2550                           
  2551                           ;mcc_generated_files/i2c_slave.c: 96:     I2C_SlaveSetWrColIntHandler(I2C_SlaveDefWrColI
      +                          nterruptHandler);
  2552     01A2  3000               	movlw	0
  2553     01A3  00F4               	movwf	I2C_SlaveSetWrColIntHandler@handler
  2554     01A4  3000               	movlw	0
  2555     01A5  00F5               	movwf	I2C_SlaveSetWrColIntHandler@handler+1
  2556     01A6  3182  2269  3181   	fcall	_I2C_SlaveSetWrColIntHandler
  2557     01A9                     l1597:
  2558                           
  2559                           ;mcc_generated_files/i2c_slave.c: 97:     I2C_SlaveEnableIrq();
  2560     01A9  3182  22B7  3181   	fcall	_I2C_SlaveEnableIrq
  2561     01AC                     l252:
  2562     01AC  0008               	return
  2563     01AD                     __end_of_I2C_Open:
  2564                           
  2565                           	psect	text9
  2566     0263                     __ptext9:	
  2567 ;; *************** function _I2C_SlaveSetWriteIntHandler *****************
  2568 ;; Defined at:
  2569 ;;		line 244 in file "mcc_generated_files/i2c_slave.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  handler         2    4[COMMON] PTR FTN()void 
  2572 ;;		 -> I2C_SlaveDefWrInterruptHandler(1), 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2584 ;;      Params:         2       0       0       0
  2585 ;;      Locals:         0       0       0       0
  2586 ;;      Temps:          0       0       0       0
  2587 ;;      Totals:         2       0       0       0
  2588 ;;Total ram usage:        2 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 5
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_I2C_Open
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598     0263                     _I2C_SlaveSetWriteIntHandler:	
  2599                           ;psect for function _I2C_SlaveSetWriteIntHandler
  2600                           
  2601     0263                     l1519:	
  2602                           ;incstack = 0
  2603                           ; Regs used in _I2C_SlaveSetWriteIntHandler: [wreg]
  2604                           
  2605                           
  2606                           ;mcc_generated_files/i2c_slave.c: 245:     I2C_SlaveWrInterruptHandler = handler;
  2607     0263  0875               	movf	I2C_SlaveSetWriteIntHandler@handler+1,w
  2608     0264  0020               	movlb	0	; select bank0
  2609     0265  00AD               	movwf	_I2C_SlaveWrInterruptHandler+1
  2610     0266  0874               	movf	I2C_SlaveSetWriteIntHandler@handler,w
  2611     0267  00AC               	movwf	_I2C_SlaveWrInterruptHandler
  2612     0268                     l318:
  2613     0268  0008               	return
  2614     0269                     __end_of_I2C_SlaveSetWriteIntHandler:
  2615                           
  2616                           	psect	text10
  2617     0269                     __ptext10:	
  2618 ;; *************** function _I2C_SlaveSetWrColIntHandler *****************
  2619 ;; Defined at:
  2620 ;;		line 279 in file "mcc_generated_files/i2c_slave.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  handler         2    4[COMMON] PTR FTN()void 
  2623 ;;		 -> I2C_SlaveDefWrColInterruptHandler(1), 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2635 ;;      Params:         2       0       0       0
  2636 ;;      Locals:         0       0       0       0
  2637 ;;      Temps:          0       0       0       0
  2638 ;;      Totals:         2       0       0       0
  2639 ;;Total ram usage:        2 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 5
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_I2C_Open
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649     0269                     _I2C_SlaveSetWrColIntHandler:	
  2650                           ;psect for function _I2C_SlaveSetWrColIntHandler
  2651                           
  2652     0269                     l1525:	
  2653                           ;incstack = 0
  2654                           ; Regs used in _I2C_SlaveSetWrColIntHandler: [wreg]
  2655                           
  2656                           
  2657                           ;mcc_generated_files/i2c_slave.c: 280:     I2C_SlaveWrColInterruptHandler = handler;
  2658     0269  0875               	movf	I2C_SlaveSetWrColIntHandler@handler+1,w
  2659     026A  0020               	movlb	0	; select bank0
  2660     026B  00A7               	movwf	_I2C_SlaveWrColInterruptHandler+1
  2661     026C  0874               	movf	I2C_SlaveSetWrColIntHandler@handler,w
  2662     026D  00A6               	movwf	_I2C_SlaveWrColInterruptHandler
  2663     026E                     l338:
  2664     026E  0008               	return
  2665     026F                     __end_of_I2C_SlaveSetWrColIntHandler:
  2666                           
  2667                           	psect	text11
  2668     028D                     __ptext11:	
  2669 ;; *************** function _I2C_SlaveSetSlaveMask *****************
  2670 ;; Defined at:
  2671 ;;		line 336 in file "mcc_generated_files/i2c_slave.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  maskAddr        1    wreg     unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  maskAddr        1    4[COMMON] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2685 ;;      Params:         0       0       0       0
  2686 ;;      Locals:         1       0       0       0
  2687 ;;      Temps:          0       0       0       0
  2688 ;;      Totals:         1       0       0       0
  2689 ;;Total ram usage:        1 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 5
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_I2C_Open
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699     028D                     _I2C_SlaveSetSlaveMask:	
  2700                           ;psect for function _I2C_SlaveSetSlaveMask
  2701                           
  2702                           
  2703                           ;incstack = 0
  2704                           ; Regs used in _I2C_SlaveSetSlaveMask: [wreg+status,2+status,0]
  2705                           ;I2C_SlaveSetSlaveMask@maskAddr stored from wreg
  2706     028D  00F4               	movwf	I2C_SlaveSetSlaveMask@maskAddr
  2707     028E                     l1513:
  2708                           
  2709                           ;mcc_generated_files/i2c_slave.c: 336: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveMask(uint8_t maskAddr);mcc_generated_files/i2c_slave.c: 337: {;mcc_generated_files/i
      +                          2c_slave.c: 338:     SSP1MSK = (uint8_t) (maskAddr << 1);
  2710     028E  3574               	lslf	I2C_SlaveSetSlaveMask@maskAddr,w
  2711     028F  0024               	movlb	4	; select bank4
  2712     0290  0093               	movwf	19	;volatile
  2713     0291                     l368:
  2714     0291  0008               	return
  2715     0292                     __end_of_I2C_SlaveSetSlaveMask:
  2716                           
  2717                           	psect	text12
  2718     0292                     __ptext12:	
  2719 ;; *************** function _I2C_SlaveSetSlaveAddr *****************
  2720 ;; Defined at:
  2721 ;;		line 331 in file "mcc_generated_files/i2c_slave.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  slaveAddr       1    wreg     unsigned char 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  slaveAddr       1    4[COMMON] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2735 ;;      Params:         0       0       0       0
  2736 ;;      Locals:         1       0       0       0
  2737 ;;      Temps:          0       0       0       0
  2738 ;;      Totals:         1       0       0       0
  2739 ;;Total ram usage:        1 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 5
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_I2C_Open
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749     0292                     _I2C_SlaveSetSlaveAddr:	
  2750                           ;psect for function _I2C_SlaveSetSlaveAddr
  2751                           
  2752                           
  2753                           ;incstack = 0
  2754                           ; Regs used in _I2C_SlaveSetSlaveAddr: [wreg+status,2+status,0]
  2755                           ;I2C_SlaveSetSlaveAddr@slaveAddr stored from wreg
  2756     0292  00F4               	movwf	I2C_SlaveSetSlaveAddr@slaveAddr
  2757     0293                     l1511:
  2758                           
  2759                           ;mcc_generated_files/i2c_slave.c: 331: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveAddr(uint8_t slaveAddr);mcc_generated_files/i2c_slave.c: 332: {;mcc_generated_files/
      +                          i2c_slave.c: 333:     SSP1ADD = (uint8_t) (slaveAddr << 1);
  2760     0293  3574               	lslf	I2C_SlaveSetSlaveAddr@slaveAddr,w
  2761     0294  0024               	movlb	4	; select bank4
  2762     0295  0092               	movwf	18	;volatile
  2763     0296                     l365:
  2764     0296  0008               	return
  2765     0297                     __end_of_I2C_SlaveSetSlaveAddr:
  2766                           
  2767                           	psect	text13
  2768     026F                     __ptext13:	
  2769 ;; *************** function _I2C_SlaveSetReadIntHandler *****************
  2770 ;; Defined at:
  2771 ;;		line 199 in file "mcc_generated_files/i2c_slave.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  handler         2    4[COMMON] PTR FTN()void 
  2774 ;;		 -> I2C_SlaveDefRdInterruptHandler(1), 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2786 ;;      Params:         2       0       0       0
  2787 ;;      Locals:         0       0       0       0
  2788 ;;      Temps:          0       0       0       0
  2789 ;;      Totals:         2       0       0       0
  2790 ;;Total ram usage:        2 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; Hardware stack levels required when called: 5
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_I2C_Open
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800     026F                     _I2C_SlaveSetReadIntHandler:	
  2801                           ;psect for function _I2C_SlaveSetReadIntHandler
  2802                           
  2803     026F                     l1521:	
  2804                           ;incstack = 0
  2805                           ; Regs used in _I2C_SlaveSetReadIntHandler: [wreg]
  2806                           
  2807                           
  2808                           ;mcc_generated_files/i2c_slave.c: 200:     I2C_SlaveRdInterruptHandler = handler;
  2809     026F  0875               	movf	I2C_SlaveSetReadIntHandler@handler+1,w
  2810     0270  0020               	movlb	0	; select bank0
  2811     0271  00AF               	movwf	_I2C_SlaveRdInterruptHandler+1
  2812     0272  0874               	movf	I2C_SlaveSetReadIntHandler@handler,w
  2813     0273  00AE               	movwf	_I2C_SlaveRdInterruptHandler
  2814     0274                     l298:
  2815     0274  0008               	return
  2816     0275                     __end_of_I2C_SlaveSetReadIntHandler:
  2817                           
  2818                           	psect	text14
  2819     0275                     __ptext14:	
  2820 ;; *************** function _I2C_SlaveSetIsrHandler *****************
  2821 ;; Defined at:
  2822 ;;		line 193 in file "mcc_generated_files/i2c_slave.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  handler         2    4[COMMON] PTR FTN()void 
  2825 ;;		 -> I2C_Isr(1), 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2837 ;;      Params:         2       0       0       0
  2838 ;;      Locals:         0       0       0       0
  2839 ;;      Temps:          0       0       0       0
  2840 ;;      Totals:         2       0       0       0
  2841 ;;Total ram usage:        2 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 5
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_I2C_Open
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851     0275                     _I2C_SlaveSetIsrHandler:	
  2852                           ;psect for function _I2C_SlaveSetIsrHandler
  2853                           
  2854     0275                     l1515:	
  2855                           ;incstack = 0
  2856                           ; Regs used in _I2C_SlaveSetIsrHandler: [wreg]
  2857                           
  2858                           
  2859                           ;mcc_generated_files/i2c_slave.c: 193: void I2C_SlaveSetIsrHandler(i2cInterruptHandler h
      +                          andler);mcc_generated_files/i2c_slave.c: 194: {;mcc_generated_files/i2c_slave.c: 195:   
      +                            MSSP_InterruptHandler = handler;
  2860     0275  0875               	movf	I2C_SlaveSetIsrHandler@handler+1,w
  2861     0276  0020               	movlb	0	; select bank0
  2862     0277  00B1               	movwf	_MSSP_InterruptHandler+1
  2863     0278  0874               	movf	I2C_SlaveSetIsrHandler@handler,w
  2864     0279  00B0               	movwf	_MSSP_InterruptHandler
  2865     027A                     l295:
  2866     027A  0008               	return
  2867     027B                     __end_of_I2C_SlaveSetIsrHandler:
  2868                           
  2869                           	psect	text15
  2870     027B                     __ptext15:	
  2871 ;; *************** function _I2C_SlaveSetBusColIntHandler *****************
  2872 ;; Defined at:
  2873 ;;		line 295 in file "mcc_generated_files/i2c_slave.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  handler         2    4[COMMON] PTR FTN()void 
  2876 ;;		 -> I2C_SlaveDefBusColInterruptHandler(1), 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2888 ;;      Params:         2       0       0       0
  2889 ;;      Locals:         0       0       0       0
  2890 ;;      Temps:          0       0       0       0
  2891 ;;      Totals:         2       0       0       0
  2892 ;;Total ram usage:        2 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 5
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_I2C_Open
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902     027B                     _I2C_SlaveSetBusColIntHandler:	
  2903                           ;psect for function _I2C_SlaveSetBusColIntHandler
  2904                           
  2905     027B                     l1517:	
  2906                           ;incstack = 0
  2907                           ; Regs used in _I2C_SlaveSetBusColIntHandler: [wreg]
  2908                           
  2909                           
  2910                           ;mcc_generated_files/i2c_slave.c: 296:     I2C_SlaveBusColInterruptHandler = handler;
  2911     027B  0875               	movf	I2C_SlaveSetBusColIntHandler@handler+1,w
  2912     027C  0020               	movlb	0	; select bank0
  2913     027D  00A9               	movwf	_I2C_SlaveBusColInterruptHandler+1
  2914     027E  0874               	movf	I2C_SlaveSetBusColIntHandler@handler,w
  2915     027F  00A8               	movwf	_I2C_SlaveBusColInterruptHandler
  2916     0280                     l348:
  2917     0280  0008               	return
  2918     0281                     __end_of_I2C_SlaveSetBusColIntHandler:
  2919                           
  2920                           	psect	text16
  2921     0281                     __ptext16:	
  2922 ;; *************** function _I2C_SlaveSetAddrIntHandler *****************
  2923 ;; Defined at:
  2924 ;;		line 263 in file "mcc_generated_files/i2c_slave.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  handler         2    4[COMMON] PTR FTN()void 
  2927 ;;		 -> I2C_SlaveDefAddrInterruptHandler(1), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2939 ;;      Params:         2       0       0       0
  2940 ;;      Locals:         0       0       0       0
  2941 ;;      Temps:          0       0       0       0
  2942 ;;      Totals:         2       0       0       0
  2943 ;;Total ram usage:        2 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 5
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_I2C_Open
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953     0281                     _I2C_SlaveSetAddrIntHandler:	
  2954                           ;psect for function _I2C_SlaveSetAddrIntHandler
  2955                           
  2956     0281                     l1523:	
  2957                           ;incstack = 0
  2958                           ; Regs used in _I2C_SlaveSetAddrIntHandler: [wreg]
  2959                           
  2960                           
  2961                           ;mcc_generated_files/i2c_slave.c: 264:     I2C_SlaveAddrInterruptHandler = handler;
  2962     0281  0875               	movf	I2C_SlaveSetAddrIntHandler@handler+1,w
  2963     0282  0020               	movlb	0	; select bank0
  2964     0283  00AB               	movwf	_I2C_SlaveAddrInterruptHandler+1
  2965     0284  0874               	movf	I2C_SlaveSetAddrIntHandler@handler,w
  2966     0285  00AA               	movwf	_I2C_SlaveAddrInterruptHandler
  2967     0286                     l328:
  2968     0286  0008               	return
  2969     0287                     __end_of_I2C_SlaveSetAddrIntHandler:
  2970                           
  2971                           	psect	text17
  2972     0215                     __ptext17:	
  2973 ;; *************** function _I2C_SlaveOpen *****************
  2974 ;; Defined at:
  2975 ;;		line 310 in file "mcc_generated_files/i2c_slave.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      _Bool 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2989 ;;      Params:         0       0       0       0
  2990 ;;      Locals:         0       0       0       0
  2991 ;;      Temps:          1       0       0       0
  2992 ;;      Totals:         1       0       0       0
  2993 ;;Total ram usage:        1 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 5
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_I2C_Open
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003     0215                     _I2C_SlaveOpen:	
  3004                           ;psect for function _I2C_SlaveOpen
  3005                           
  3006     0215                     l1499:	
  3007                           ;incstack = 0
  3008                           ; Regs used in _I2C_SlaveOpen: [wreg+status,2+status,0]
  3009                           
  3010                           
  3011                           ;mcc_generated_files/i2c_slave.c: 312:     if(!SSP1CON1bits.SSPEN)
  3012     0215  0024               	movlb	4	; select bank4
  3013     0216  1A95               	btfsc	21,5	;volatile
  3014     0217  2A19               	goto	u211
  3015     0218  2A1A               	goto	u210
  3016     0219                     u211:
  3017     0219  2A22               	goto	l359
  3018     021A                     u210:
  3019     021A                     l1501:
  3020                           
  3021                           ;mcc_generated_files/i2c_slave.c: 313:     {;mcc_generated_files/i2c_slave.c: 314:      
      +                             SSP1STAT = 0x00;
  3022     021A  0194               	clrf	20	;volatile
  3023     021B                     l1503:
  3024                           
  3025                           ;mcc_generated_files/i2c_slave.c: 315:         SSP1CON1 |= 0x06;
  3026     021B  3006               	movlw	6
  3027     021C  00F4               	movwf	??_I2C_SlaveOpen
  3028     021D  0874               	movf	??_I2C_SlaveOpen,w
  3029     021E  0495               	iorwf	21,f	;volatile
  3030     021F                     l1505:
  3031                           
  3032                           ;mcc_generated_files/i2c_slave.c: 316:         SSP1CON2 = 0x01;
  3033     021F  3001               	movlw	1
  3034     0220  0096               	movwf	22	;volatile
  3035     0221                     l1507:
  3036                           
  3037                           ;mcc_generated_files/i2c_slave.c: 317:         SSP1CON1bits.SSPEN = 1;
  3038     0221  1695               	bsf	21,5	;volatile
  3039     0222                     l359:
  3040     0222  0008               	return
  3041     0223                     __end_of_I2C_SlaveOpen:
  3042                           
  3043                           	psect	text18
  3044     02B7                     __ptext18:	
  3045 ;; *************** function _I2C_SlaveEnableIrq *****************
  3046 ;; Defined at:
  3047 ;;		line 341 in file "mcc_generated_files/i2c_slave.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		None
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3061 ;;      Params:         0       0       0       0
  3062 ;;      Locals:         0       0       0       0
  3063 ;;      Temps:          0       0       0       0
  3064 ;;      Totals:         0       0       0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; Hardware stack levels required when called: 5
  3068 ;; This function calls:
  3069 ;;		Nothing
  3070 ;; This function is called by:
  3071 ;;		_I2C_Open
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075     02B7                     _I2C_SlaveEnableIrq:	
  3076                           ;psect for function _I2C_SlaveEnableIrq
  3077                           
  3078     02B7                     l1527:	
  3079                           ;incstack = 0
  3080                           ; Regs used in _I2C_SlaveEnableIrq: []
  3081                           
  3082                           
  3083                           ;mcc_generated_files/i2c_slave.c: 343:     PIE1bits.SSP1IE = 1;
  3084     02B7  0021               	movlb	1	; select bank1
  3085     02B8  1591               	bsf	17,3	;volatile
  3086     02B9                     l371:
  3087     02B9  0008               	return
  3088     02BA                     __end_of_I2C_SlaveEnableIrq:
  3089                           
  3090                           	psect	text19
  3091     01AD                     __ptext19:	
  3092 ;; *************** function _ADC_GetConversion *****************
  3093 ;; Defined at:
  3094 ;;		line 115 in file "mcc_generated_files/adc.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  channel         1    wreg     enum E3500
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  channel         1    1[BANK0 ] enum E3500
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  2    4[COMMON] unsigned short 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3108 ;;      Params:         2       0       0       0
  3109 ;;      Locals:         0       1       0       0
  3110 ;;      Temps:          0       1       0       0
  3111 ;;      Totals:         2       2       0       0
  3112 ;;Total ram usage:        4 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 5
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_main
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122     01AD                     _ADC_GetConversion:	
  3123                           ;psect for function _ADC_GetConversion
  3124                           
  3125                           
  3126                           ;incstack = 0
  3127                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3128                           ;ADC_GetConversion@channel stored from wreg
  3129     01AD  0020               	movlb	0	; select bank0
  3130     01AE  00C6               	movwf	ADC_GetConversion@channel
  3131     01AF                     l1755:
  3132                           
  3133                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  3134     01AF  0846               	movf	ADC_GetConversion@channel,w
  3135     01B0  00C5               	movwf	??_ADC_GetConversion
  3136     01B1  0DC5               	rlf	??_ADC_GetConversion,f
  3137     01B2  0DC5               	rlf	??_ADC_GetConversion,f
  3138     01B3  0021               	movlb	1	; select bank1
  3139     01B4  081D               	movf	29,w	;volatile
  3140     01B5  0020               	movlb	0	; select bank0
  3141     01B6  0645               	xorwf	??_ADC_GetConversion,w
  3142     01B7  3983               	andlw	-125
  3143     01B8  0645               	xorwf	??_ADC_GetConversion,w
  3144     01B9  0021               	movlb	1	; select bank1
  3145     01BA  009D               	movwf	29	;volatile
  3146     01BB                     l1757:
  3147                           
  3148                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  3149     01BB  141D               	bsf	29,0	;volatile
  3150     01BC                     l1759:
  3151                           
  3152                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3153     01BC  3006               	movlw	6
  3154     01BD                     u457:
  3155     01BD  0B89               	decfsz	9,f
  3156     01BE  29BD               	goto	u457
  3157     01BF  3200               	nop2
  3158     01C0                     l1761:
  3159                           
  3160                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GO_nDONE = 1;
  3161     01C0  0021               	movlb	1	; select bank1
  3162     01C1  149D               	bsf	29,1	;volatile
  3163     01C2                     l482:	
  3164                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  3165                           
  3166                           
  3167                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GO_nDONE)
  3168     01C2  189D               	btfsc	29,1	;volatile
  3169     01C3  29C5               	goto	u411
  3170     01C4  29C6               	goto	u410
  3171     01C5                     u411:
  3172     01C5  29C2               	goto	l482
  3173     01C6                     u410:
  3174     01C6                     l1763:
  3175                           
  3176                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3177     01C6  081C               	movf	28,w	;volatile
  3178     01C7  00F5               	movwf	?_ADC_GetConversion+1
  3179     01C8  081B               	movf	27,w	;volatile
  3180     01C9  00F4               	movwf	?_ADC_GetConversion
  3181     01CA                     l485:
  3182     01CA  0008               	return
  3183     01CB                     __end_of_ADC_GetConversion:
  3184                           
  3185                           	psect	intentry
  3186     0004                     __pintentry:	
  3187 ;; *************** function _INTERRUPT_InterruptManager *****************
  3188 ;; Defined at:
  3189 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3203 ;;      Params:         0       0       0       0
  3204 ;;      Locals:         0       0       0       0
  3205 ;;      Temps:          0       0       0       0
  3206 ;;      Totals:         0       0       0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels used: 1
  3209 ;; Hardware stack levels required when called: 4
  3210 ;; This function calls:
  3211 ;;		NULL
  3212 ;;		_I2C_Isr
  3213 ;; This function is called by:
  3214 ;;		Interrupt level 1
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218     0004                     _INTERRUPT_InterruptManager:
  3219                           
  3220                           ;incstack = 0
  3221     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3222                           
  3223                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3224     0005  3180               	pagesel	$
  3225     0006                     i1l1653:
  3226                           
  3227                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3228     0006  1F0B               	btfss	11,6	;volatile
  3229     0007  2809               	goto	u33_21
  3230     0008  280A               	goto	u33_20
  3231     0009                     u33_21:
  3232     0009  2825               	goto	i1l47
  3233     000A                     u33_20:
  3234     000A                     i1l1655:
  3235                           
  3236                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  3237     000A  0021               	movlb	1	; select bank1
  3238     000B  1D92               	btfss	18,3	;volatile
  3239     000C  280E               	goto	u34_21
  3240     000D  280F               	goto	u34_20
  3241     000E                     u34_21:
  3242     000E  281A               	goto	i1l42
  3243     000F                     u34_20:
  3244     000F                     i1l1657:
  3245     000F  0020               	movlb	0	; select bank0
  3246     0010  1D92               	btfss	18,3	;volatile
  3247     0011  2813               	goto	u35_21
  3248     0012  2814               	goto	u35_20
  3249     0013                     u35_21:
  3250     0013  281A               	goto	i1l42
  3251     0014                     u35_20:
  3252     0014                     i1l1659:
  3253                           
  3254                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             MSSP_InterruptHandler();
  3255     0014  0831               	movf	_MSSP_InterruptHandler+1,w
  3256     0015  008A               	movwf	10
  3257     0016  0830               	movf	_MSSP_InterruptHandler,w
  3258     0017  000A               	callw
  3259     0018  3180               	pagesel	$
  3260                           
  3261                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3262     0019  2825               	goto	i1l47
  3263     001A                     i1l42:	
  3264                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  3265                           
  3266     001A  0021               	movlb	1	; select bank1
  3267     001B  1D91               	btfss	17,3	;volatile
  3268     001C  281E               	goto	u36_21
  3269     001D  281F               	goto	u36_20
  3270     001E                     u36_21:
  3271     001E  2825               	goto	i1l43
  3272     001F                     u36_20:
  3273     001F                     i1l1661:
  3274     001F  0020               	movlb	0	; select bank0
  3275     0020  1D91               	btfss	17,3	;volatile
  3276     0021  2823               	goto	u37_21
  3277     0022  2824               	goto	u37_20
  3278     0023                     u37_21:
  3279     0023  2825               	goto	i1l43
  3280     0024                     u37_20:
  3281     0024  2814               	goto	i1l1659
  3282     0025                     i1l43:
  3283     0025                     i1l47:	
  3284                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  3285                           
  3286     0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3287     0026  0009               	retfie
  3288     0027                     __end_of_INTERRUPT_InterruptManager:
  3289                           
  3290                           	psect	text21
  3291     00B4                     __ptext21:	
  3292 ;; *************** function _I2C_Isr *****************
  3293 ;; Defined at:
  3294 ;;		line 135 in file "mcc_generated_files/i2c_slave.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3308 ;;      Params:         0       0       0       0
  3309 ;;      Locals:         0       0       0       0
  3310 ;;      Temps:          2       0       0       0
  3311 ;;      Totals:         2       0       0       0
  3312 ;;Total ram usage:        2 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; Hardware stack levels required when called: 3
  3315 ;; This function calls:
  3316 ;;		_I2C_SlaveAddrCallBack
  3317 ;;		_I2C_SlaveClearIrq
  3318 ;;		_I2C_SlaveIsAddr
  3319 ;;		_I2C_SlaveIsRead
  3320 ;;		_I2C_SlaveIsRxBufFull
  3321 ;;		_I2C_SlaveIsTxBufEmpty
  3322 ;;		_I2C_SlaveRdCallBack
  3323 ;;		_I2C_SlaveReleaseClock
  3324 ;;		_I2C_SlaveWrCallBack
  3325 ;; This function is called by:
  3326 ;;		_I2C_Open
  3327 ;;		_INTERRUPT_InterruptManager
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331     00B4                     _I2C_Isr:	
  3332                           ;psect for function _I2C_Isr
  3333                           
  3334     00B4                     i1l1599:	
  3335                           ;incstack = 0
  3336                           ; Regs used in _I2C_Isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3337                           
  3338                           
  3339                           ;mcc_generated_files/i2c_slave.c: 137:     I2C_SlaveClearIrq();
  3340     00B4  3182  22BD  3180   	fcall	_I2C_SlaveClearIrq
  3341     00B7                     i1l1601:
  3342                           
  3343                           ;mcc_generated_files/i2c_slave.c: 139:     if(I2C_SlaveIsAddr())
  3344     00B7  3182  224A  3180   	fcall	_I2C_SlaveIsAddr
  3345     00BA  3A00               	xorlw	0
  3346     00BB  1903               	skipnz
  3347     00BC  28BE               	goto	u26_21
  3348     00BD  28BF               	goto	u26_20
  3349     00BE                     u26_21:
  3350     00BE  28CD               	goto	i1l1609
  3351     00BF                     u26_20:
  3352     00BF                     i1l1603:
  3353                           
  3354                           ;mcc_generated_files/i2c_slave.c: 140:     {;mcc_generated_files/i2c_slave.c: 141:      
      +                             if(I2C_SlaveIsRead())
  3355     00BF  3182  22A6  3180   	fcall	_I2C_SlaveIsRead
  3356     00C2  3A00               	xorlw	0
  3357     00C3  1903               	skipnz
  3358     00C4  28C6               	goto	u27_21
  3359     00C5  28C7               	goto	u27_20
  3360     00C6                     u27_21:
  3361     00C6  28CA               	goto	i1l1607
  3362     00C7                     u27_20:
  3363     00C7                     i1l1605:
  3364                           
  3365                           ;mcc_generated_files/i2c_slave.c: 142:         {;mcc_generated_files/i2c_slave.c: 143:  
      +                                     i2cSlaveState = I2C_ADDR_TX;
  3366     00C7  3001               	movlw	1
  3367     00C8  00F6               	movwf	_i2cSlaveState	;volatile
  3368                           
  3369                           ;mcc_generated_files/i2c_slave.c: 144:         }
  3370     00C9  2903               	goto	i1l1633
  3371     00CA                     i1l1607:
  3372                           
  3373                           ;mcc_generated_files/i2c_slave.c: 146:         {;mcc_generated_files/i2c_slave.c: 147:  
      +                                     i2cSlaveState = I2C_ADDR_RX;
  3374     00CA  3002               	movlw	2
  3375     00CB  00F6               	movwf	_i2cSlaveState	;volatile
  3376     00CC  2903               	goto	i1l1633
  3377     00CD                     i1l1609:
  3378                           
  3379                           ;mcc_generated_files/i2c_slave.c: 151:     {;mcc_generated_files/i2c_slave.c: 152:      
      +                             if(I2C_SlaveIsRead())
  3380     00CD  3182  22A6  3180   	fcall	_I2C_SlaveIsRead
  3381     00D0  3A00               	xorlw	0
  3382     00D1  1903               	skipnz
  3383     00D2  28D4               	goto	u28_21
  3384     00D3  28D5               	goto	u28_20
  3385     00D4                     u28_21:
  3386     00D4  28D8               	goto	i1l1613
  3387     00D5                     u28_20:
  3388     00D5                     i1l1611:
  3389                           
  3390                           ;mcc_generated_files/i2c_slave.c: 153:         {;mcc_generated_files/i2c_slave.c: 154:  
      +                                     i2cSlaveState = I2C_DATA_TX;
  3391     00D5  3003               	movlw	3
  3392     00D6  00F6               	movwf	_i2cSlaveState	;volatile
  3393                           
  3394                           ;mcc_generated_files/i2c_slave.c: 155:         }
  3395     00D7  2903               	goto	i1l1633
  3396     00D8                     i1l1613:
  3397                           
  3398                           ;mcc_generated_files/i2c_slave.c: 157:         {;mcc_generated_files/i2c_slave.c: 158:  
      +                                     i2cSlaveState = I2C_DATA_RX;
  3399     00D8  3004               	movlw	4
  3400     00D9  00F6               	movwf	_i2cSlaveState	;volatile
  3401     00DA  2903               	goto	i1l1633
  3402     00DB                     i1l1615:
  3403                           
  3404                           ;mcc_generated_files/i2c_slave.c: 165:             I2C_SlaveAddrCallBack();
  3405     00DB  3182  2223  3180   	fcall	_I2C_SlaveAddrCallBack
  3406     00DE                     i1l1617:
  3407                           
  3408                           ;mcc_generated_files/i2c_slave.c: 166:             if(I2C_SlaveIsTxBufEmpty())
  3409     00DE  3182  2243  3180   	fcall	_I2C_SlaveIsTxBufEmpty
  3410     00E1  3A00               	xorlw	0
  3411     00E2  1903               	skipnz
  3412     00E3  28E5               	goto	u29_21
  3413     00E4  28E6               	goto	u29_20
  3414     00E5                     u29_21:
  3415     00E5  2919               	goto	i1l1635
  3416     00E6                     u29_20:
  3417     00E6                     i1l1619:
  3418                           
  3419                           ;mcc_generated_files/i2c_slave.c: 167:             {;mcc_generated_files/i2c_slave.c: 16
      +                          8:                 I2C_SlaveWrCallBack();
  3420     00E6  3181  21CB  3180   	fcall	_I2C_SlaveWrCallBack
  3421     00E9  2919               	goto	i1l1635
  3422     00EA                     i1l1621:
  3423                           
  3424                           ;mcc_generated_files/i2c_slave.c: 172:             I2C_SlaveAddrCallBack();
  3425     00EA  3182  2223  3180   	fcall	_I2C_SlaveAddrCallBack
  3426                           
  3427                           ;mcc_generated_files/i2c_slave.c: 173:             break;
  3428     00ED  2919               	goto	i1l1635
  3429     00EE                     i1l1623:
  3430                           
  3431                           ;mcc_generated_files/i2c_slave.c: 175:             if(I2C_SlaveIsTxBufEmpty())
  3432     00EE  3182  2243  3180   	fcall	_I2C_SlaveIsTxBufEmpty
  3433     00F1  3A00               	xorlw	0
  3434     00F2  1903               	skipnz
  3435     00F3  28F5               	goto	u30_21
  3436     00F4  28F6               	goto	u30_20
  3437     00F5                     u30_21:
  3438     00F5  2919               	goto	i1l1635
  3439     00F6                     u30_20:
  3440     00F6  28E6               	goto	i1l1619
  3441     00F7                     i1l1627:
  3442                           
  3443                           ;mcc_generated_files/i2c_slave.c: 181:             if(I2C_SlaveIsRxBufFull())
  3444     00F7  3182  22B3  3180   	fcall	_I2C_SlaveIsRxBufFull
  3445     00FA  3A00               	xorlw	0
  3446     00FB  1903               	skipnz
  3447     00FC  28FE               	goto	u31_21
  3448     00FD  28FF               	goto	u31_20
  3449     00FE                     u31_21:
  3450     00FE  2919               	goto	i1l1635
  3451     00FF                     u31_20:
  3452     00FF                     i1l1629:
  3453                           
  3454                           ;mcc_generated_files/i2c_slave.c: 182:             {;mcc_generated_files/i2c_slave.c: 18
      +                          3:                 I2C_SlaveRdCallBack();
  3455     00FF  3181  211D  3180   	fcall	_I2C_SlaveRdCallBack
  3456     0102  2919               	goto	i1l1635
  3457     0103                     i1l1633:
  3458     0103  0876               	movf	_i2cSlaveState,w	;volatile
  3459     0104  00F2               	movwf	??_I2C_Isr
  3460     0105  01F3               	clrf	??_I2C_Isr+1
  3461                           
  3462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3463                           ; Switch size 1, requested type "simple"
  3464                           ; Number of cases is 1, Range of values is 0 to 0
  3465                           ; switch strategies available:
  3466                           ; Name         Instructions Cycles
  3467                           ; simple_byte            4     3 (average)
  3468                           ; direct_byte            8     6 (fixed)
  3469                           ; jumptable            260     6 (fixed)
  3470                           ;	Chosen strategy is simple_byte
  3471     0106  0873               	movf	??_I2C_Isr+1,w
  3472     0107  3A00               	xorlw	0	; case 0
  3473     0108  1903               	skipnz
  3474     0109  290B               	goto	i1l1837
  3475     010A  2919               	goto	i1l1635
  3476     010B                     i1l1837:
  3477                           
  3478                           ; Switch size 1, requested type "simple"
  3479                           ; Number of cases is 4, Range of values is 1 to 4
  3480                           ; switch strategies available:
  3481                           ; Name         Instructions Cycles
  3482                           ; simple_byte           13     7 (average)
  3483                           ; direct_byte           17     9 (fixed)
  3484                           ; jumptable            263     9 (fixed)
  3485                           ;	Chosen strategy is simple_byte
  3486     010B  0872               	movf	??_I2C_Isr,w
  3487     010C  3A01               	xorlw	1	; case 1
  3488     010D  1903               	skipnz
  3489     010E  28DB               	goto	i1l1615
  3490     010F  3A03               	xorlw	3	; case 2
  3491     0110  1903               	skipnz
  3492     0111  28EA               	goto	i1l1621
  3493     0112  3A01               	xorlw	1	; case 3
  3494     0113  1903               	skipnz
  3495     0114  28EE               	goto	i1l1623
  3496     0115  3A07               	xorlw	7	; case 4
  3497     0116  1903               	skipnz
  3498     0117  28F7               	goto	i1l1627
  3499     0118  2919               	goto	i1l1635
  3500     0119                     i1l1635:
  3501                           
  3502                           ;mcc_generated_files/i2c_slave.c: 189:     I2C_SlaveReleaseClock();
  3503     0119  3182  22BA  3180   	fcall	_I2C_SlaveReleaseClock
  3504     011C                     i1l292:
  3505     011C  0008               	return
  3506     011D                     __end_of_I2C_Isr:
  3507                           
  3508                           	psect	text22
  3509     01CB                     __ptext22:	
  3510 ;; *************** function _I2C_SlaveWrCallBack *****************
  3511 ;; Defined at:
  3512 ;;		line 248 in file "mcc_generated_files/i2c_slave.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3526 ;;      Params:         0       0       0       0
  3527 ;;      Locals:         0       0       0       0
  3528 ;;      Temps:          0       0       0       0
  3529 ;;      Totals:         0       0       0       0
  3530 ;;Total ram usage:        0 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; Hardware stack levels required when called: 2
  3533 ;; This function calls:
  3534 ;;		NULL
  3535 ;;		_I2C_SlaveDefWrInterruptHandler
  3536 ;; This function is called by:
  3537 ;;		_I2C_Isr
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541     01CB                     _I2C_SlaveWrCallBack:	
  3542                           ;psect for function _I2C_SlaveWrCallBack
  3543                           
  3544     01CB                     i1l1547:	
  3545                           ;incstack = 0
  3546                           ; Regs used in _I2C_SlaveWrCallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3547                           
  3548                           
  3549                           ;mcc_generated_files/i2c_slave.c: 250:     i2cWrData = current_Data.raw[index++];
  3550     01CB  0020               	movlb	0	; select bank0
  3551     01CC  0822               	movf	_index,w	;volatile
  3552     01CD  3E24               	addlw	(low (_current_Data| 0))& (0+255)
  3553     01CE  0086               	movwf	6
  3554     01CF  0187               	clrf	7
  3555     01D0  0801               	movf	1,w
  3556     01D1  00F8               	movwf	_i2cWrData	;volatile
  3557     01D2                     i1l1549:
  3558     01D2  3001               	movlw	1
  3559     01D3  07A2               	addwf	_index,f	;volatile
  3560     01D4  3000               	movlw	0
  3561     01D5  3DA3               	addwfc	_index+1,f	;volatile
  3562     01D6                     i1l1551:
  3563                           
  3564                           ;mcc_generated_files/i2c_slave.c: 251:     index = index%2;;
  3565     01D6  3001               	movlw	1
  3566     01D7  0522               	andwf	_index,w	;volatile
  3567     01D8  00A2               	movwf	_index	;volatile
  3568     01D9  3000               	movlw	0
  3569     01DA  0523               	andwf	_index+1,w	;volatile
  3570     01DB  00A3               	movwf	_index+1	;volatile
  3571     01DC                     i1l1553:
  3572                           
  3573                           ;mcc_generated_files/i2c_slave.c: 252:     if (I2C_SlaveWrInterruptHandler)
  3574     01DC  082C               	movf	_I2C_SlaveWrInterruptHandler,w
  3575     01DD  042D               	iorwf	_I2C_SlaveWrInterruptHandler+1,w
  3576     01DE  1903               	btfsc	3,2
  3577     01DF  29E1               	goto	u23_21
  3578     01E0  29E2               	goto	u23_20
  3579     01E1                     u23_21:
  3580     01E1  29E7               	goto	i1l322
  3581     01E2                     u23_20:
  3582     01E2                     i1l1555:
  3583                           
  3584                           ;mcc_generated_files/i2c_slave.c: 253:     {;mcc_generated_files/i2c_slave.c: 254:      
      +                             I2C_SlaveWrInterruptHandler();
  3585     01E2  082D               	movf	_I2C_SlaveWrInterruptHandler+1,w
  3586     01E3  008A               	movwf	10
  3587     01E4  082C               	movf	_I2C_SlaveWrInterruptHandler,w
  3588     01E5  000A               	callw
  3589     01E6  3181               	pagesel	$
  3590     01E7                     i1l322:
  3591     01E7  0008               	return
  3592     01E8                     __end_of_I2C_SlaveWrCallBack:
  3593                           
  3594                           	psect	text23
  3595     0297                     __ptext23:	
  3596 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  3597 ;; Defined at:
  3598 ;;		line 258 in file "mcc_generated_files/i2c_slave.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0, pclath, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3612 ;;      Params:         0       0       0       0
  3613 ;;      Locals:         0       0       0       0
  3614 ;;      Temps:          0       0       0       0
  3615 ;;      Totals:         0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; Hardware stack levels required when called: 1
  3619 ;; This function calls:
  3620 ;;		_I2C_SlaveSendTxData
  3621 ;; This function is called by:
  3622 ;;		_I2C_Open
  3623 ;;		_I2C_SlaveWrCallBack
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627     0297                     _I2C_SlaveDefWrInterruptHandler:	
  3628                           ;psect for function _I2C_SlaveDefWrInterruptHandler
  3629                           
  3630     0297                     i1l1453:	
  3631                           ;incstack = 0
  3632                           ; Regs used in _I2C_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  3633                           
  3634                           
  3635                           ;mcc_generated_files/i2c_slave.c: 259:     I2C_SlaveSendTxData(i2cWrData);
  3636     0297  0878               	movf	_i2cWrData,w	;volatile
  3637     0298  3182  229C  3182   	fcall	_I2C_SlaveSendTxData
  3638     029B                     i1l325:
  3639     029B  0008               	return
  3640     029C                     __end_of_I2C_SlaveDefWrInterruptHandler:
  3641                           
  3642                           	psect	text24
  3643     029C                     __ptext24:	
  3644 ;; *************** function _I2C_SlaveSendTxData *****************
  3645 ;; Defined at:
  3646 ;;		line 391 in file "mcc_generated_files/i2c_slave.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  data            1    wreg     unsigned char 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  data            1    0[COMMON] unsigned char 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3660 ;;      Params:         0       0       0       0
  3661 ;;      Locals:         1       0       0       0
  3662 ;;      Temps:          0       0       0       0
  3663 ;;      Totals:         1       0       0       0
  3664 ;;Total ram usage:        1 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_I2C_SlaveDefWrInterruptHandler
  3670 ;;		_I2C_Write
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674     029C                     _I2C_SlaveSendTxData:	
  3675                           ;psect for function _I2C_SlaveSendTxData
  3676                           
  3677                           
  3678                           ;incstack = 0
  3679                           ; Regs used in _I2C_SlaveSendTxData: [wreg]
  3680                           ;I2C_SlaveSendTxData@data stored from wreg
  3681     029C  00F0               	movwf	I2C_SlaveSendTxData@data
  3682     029D                     i1l1449:
  3683                           
  3684                           ;mcc_generated_files/i2c_slave.c: 391: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 392: {;mcc_generated_files/i2c_sla
      +                          ve.c: 393:     SSP1BUF = data;
  3685     029D  0870               	movf	I2C_SlaveSendTxData@data,w
  3686     029E  0024               	movlb	4	; select bank4
  3687     029F  0091               	movwf	17	;volatile
  3688     02A0                     i1l401:
  3689     02A0  0008               	return
  3690     02A1                     __end_of_I2C_SlaveSendTxData:
  3691                           
  3692                           	psect	text25
  3693     02BA                     __ptext25:	
  3694 ;; *************** function _I2C_SlaveReleaseClock *****************
  3695 ;; Defined at:
  3696 ;;		line 361 in file "mcc_generated_files/i2c_slave.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		None
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3710 ;;      Params:         0       0       0       0
  3711 ;;      Locals:         0       0       0       0
  3712 ;;      Temps:          0       0       0       0
  3713 ;;      Totals:         0       0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_I2C_Isr
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723     02BA                     _I2C_SlaveReleaseClock:	
  3724                           ;psect for function _I2C_SlaveReleaseClock
  3725                           
  3726     02BA                     i1l1591:	
  3727                           ;incstack = 0
  3728                           ; Regs used in _I2C_SlaveReleaseClock: []
  3729                           
  3730                           
  3731                           ;mcc_generated_files/i2c_slave.c: 363:     SSP1CON1bits.CKP = 1;
  3732     02BA  0024               	movlb	4	; select bank4
  3733     02BB  1615               	bsf	21,4	;volatile
  3734     02BC                     i1l383:
  3735     02BC  0008               	return
  3736     02BD                     __end_of_I2C_SlaveReleaseClock:
  3737                           
  3738                           	psect	text26
  3739     011D                     __ptext26:	
  3740 ;; *************** function _I2C_SlaveRdCallBack *****************
  3741 ;; Defined at:
  3742 ;;		line 203 in file "mcc_generated_files/i2c_slave.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3756 ;;      Params:         0       0       0       0
  3757 ;;      Locals:         0       0       0       0
  3758 ;;      Temps:          2       0       0       0
  3759 ;;      Totals:         2       0       0       0
  3760 ;;Total ram usage:        2 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; Hardware stack levels required when called: 2
  3763 ;; This function calls:
  3764 ;;		NULL
  3765 ;;		_I2C_SlaveDefRdInterruptHandler
  3766 ;; This function is called by:
  3767 ;;		_I2C_Isr
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771     011D                     _I2C_SlaveRdCallBack:	
  3772                           ;psect for function _I2C_SlaveRdCallBack
  3773                           
  3774     011D                     i1l1561:	
  3775                           ;incstack = 0
  3776                           ; Regs used in _I2C_SlaveRdCallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3777                           
  3778                           
  3779                           ;mcc_generated_files/i2c_slave.c: 205:     if (I2C_SlaveRdInterruptHandler)
  3780     011D  0020               	movlb	0	; select bank0
  3781     011E  082E               	movf	_I2C_SlaveRdInterruptHandler,w
  3782     011F  042F               	iorwf	_I2C_SlaveRdInterruptHandler+1,w
  3783     0120  1903               	btfsc	3,2
  3784     0121  2923               	goto	u24_21
  3785     0122  2924               	goto	u24_20
  3786     0123                     u24_21:
  3787     0123  2929               	goto	i1l1565
  3788     0124                     u24_20:
  3789     0124                     i1l1563:
  3790                           
  3791                           ;mcc_generated_files/i2c_slave.c: 206:     {;mcc_generated_files/i2c_slave.c: 207:      
      +                             I2C_SlaveRdInterruptHandler();
  3792     0124  082F               	movf	_I2C_SlaveRdInterruptHandler+1,w
  3793     0125  008A               	movwf	10
  3794     0126  082E               	movf	_I2C_SlaveRdInterruptHandler,w
  3795     0127  000A               	callw
  3796     0128  3181               	pagesel	$
  3797     0129                     i1l1565:
  3798                           
  3799                           ;mcc_generated_files/i2c_slave.c: 209:     index = 0;
  3800     0129  0020               	movlb	0	; select bank0
  3801     012A  01A2               	clrf	_index	;volatile
  3802     012B  01A3               	clrf	_index+1	;volatile
  3803                           
  3804                           ;mcc_generated_files/i2c_slave.c: 211:     switch (i2cRdData & 0x1F){
  3805     012C  2950               	goto	i1l1583
  3806     012D                     i1l1567:
  3807                           
  3808                           ;mcc_generated_files/i2c_slave.c: 213:             current_Data.value = Temp1.value;
  3809     012D  083E               	movf	_Temp1+1,w	;volatile
  3810     012E  00A5               	movwf	_current_Data+1	;volatile
  3811     012F  083D               	movf	_Temp1,w	;volatile
  3812     0130  00A4               	movwf	_current_Data	;volatile
  3813                           
  3814                           ;mcc_generated_files/i2c_slave.c: 214:             break;
  3815     0131  296D               	goto	i1l304
  3816     0132                     i1l1569:
  3817                           
  3818                           ;mcc_generated_files/i2c_slave.c: 216:             current_Data.value = Temp2.value;
  3819     0132  083C               	movf	_Temp2+1,w	;volatile
  3820     0133  00A5               	movwf	_current_Data+1	;volatile
  3821     0134  083B               	movf	_Temp2,w	;volatile
  3822     0135  00A4               	movwf	_current_Data	;volatile
  3823                           
  3824                           ;mcc_generated_files/i2c_slave.c: 217:             break;
  3825     0136  296D               	goto	i1l304
  3826     0137                     i1l1571:
  3827                           
  3828                           ;mcc_generated_files/i2c_slave.c: 219:             current_Data.value = Temp3.value;
  3829     0137  083A               	movf	_Temp3+1,w	;volatile
  3830     0138  00A5               	movwf	_current_Data+1	;volatile
  3831     0139  0839               	movf	_Temp3,w	;volatile
  3832     013A  00A4               	movwf	_current_Data	;volatile
  3833                           
  3834                           ;mcc_generated_files/i2c_slave.c: 220:             break;
  3835     013B  296D               	goto	i1l304
  3836     013C                     i1l1573:
  3837                           
  3838                           ;mcc_generated_files/i2c_slave.c: 222:             current_Data.value = Temp4.value;
  3839     013C  0838               	movf	_Temp4+1,w	;volatile
  3840     013D  00A5               	movwf	_current_Data+1	;volatile
  3841     013E  0837               	movf	_Temp4,w	;volatile
  3842     013F  00A4               	movwf	_current_Data	;volatile
  3843                           
  3844                           ;mcc_generated_files/i2c_slave.c: 223:             break;
  3845     0140  296D               	goto	i1l304
  3846     0141                     i1l1575:
  3847                           
  3848                           ;mcc_generated_files/i2c_slave.c: 225:             current_Data.value = Temp5.value;
  3849     0141  0836               	movf	_Temp5+1,w	;volatile
  3850     0142  00A5               	movwf	_current_Data+1	;volatile
  3851     0143  0835               	movf	_Temp5,w	;volatile
  3852     0144  00A4               	movwf	_current_Data	;volatile
  3853                           
  3854                           ;mcc_generated_files/i2c_slave.c: 226:             break;
  3855     0145  296D               	goto	i1l304
  3856     0146                     i1l1577:
  3857                           
  3858                           ;mcc_generated_files/i2c_slave.c: 228:             current_Data.value = Volt1.value;
  3859     0146  0834               	movf	_Volt1+1,w	;volatile
  3860     0147  00A5               	movwf	_current_Data+1	;volatile
  3861     0148  0833               	movf	_Volt1,w	;volatile
  3862     0149  00A4               	movwf	_current_Data	;volatile
  3863                           
  3864                           ;mcc_generated_files/i2c_slave.c: 229:             break;
  3865     014A  296D               	goto	i1l304
  3866     014B                     i1l1579:
  3867                           
  3868                           ;mcc_generated_files/i2c_slave.c: 231:             current_Data.value = (uint16_t) 0xFFF
      +                          F;
  3869     014B  30FF               	movlw	255
  3870     014C  00A4               	movwf	_current_Data	;volatile
  3871     014D  30FF               	movlw	255
  3872     014E  00A5               	movwf	_current_Data+1	;volatile
  3873                           
  3874                           ;mcc_generated_files/i2c_slave.c: 232:             break;
  3875     014F  296D               	goto	i1l304
  3876     0150                     i1l1583:
  3877     0150  0877               	movf	_i2cRdData,w	;volatile
  3878     0151  391F               	andlw	31
  3879     0152  00F0               	movwf	??_I2C_SlaveRdCallBack
  3880     0153  01F1               	clrf	??_I2C_SlaveRdCallBack+1
  3881                           
  3882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3883                           ; Switch size 1, requested type "simple"
  3884                           ; Number of cases is 1, Range of values is 0 to 0
  3885                           ; switch strategies available:
  3886                           ; Name         Instructions Cycles
  3887                           ; simple_byte            4     3 (average)
  3888                           ; direct_byte            8     6 (fixed)
  3889                           ; jumptable            260     6 (fixed)
  3890                           ;	Chosen strategy is simple_byte
  3891     0154  0871               	movf	??_I2C_SlaveRdCallBack+1,w
  3892     0155  3A00               	xorlw	0	; case 0
  3893     0156  1903               	skipnz
  3894     0157  2959               	goto	i1l1839
  3895     0158  294B               	goto	i1l1579
  3896     0159                     i1l1839:
  3897                           
  3898                           ; Switch size 1, requested type "simple"
  3899                           ; Number of cases is 6, Range of values is 1 to 17
  3900                           ; switch strategies available:
  3901                           ; Name         Instructions Cycles
  3902                           ; simple_byte           19    10 (average)
  3903                           ; direct_byte           43     9 (fixed)
  3904                           ; jumptable            263     9 (fixed)
  3905                           ;	Chosen strategy is simple_byte
  3906     0159  0870               	movf	??_I2C_SlaveRdCallBack,w
  3907     015A  3A01               	xorlw	1	; case 1
  3908     015B  1903               	skipnz
  3909     015C  292D               	goto	i1l1567
  3910     015D  3A03               	xorlw	3	; case 2
  3911     015E  1903               	skipnz
  3912     015F  2932               	goto	i1l1569
  3913     0160  3A01               	xorlw	1	; case 3
  3914     0161  1903               	skipnz
  3915     0162  2937               	goto	i1l1571
  3916     0163  3A07               	xorlw	7	; case 4
  3917     0164  1903               	skipnz
  3918     0165  293C               	goto	i1l1573
  3919     0166  3A01               	xorlw	1	; case 5
  3920     0167  1903               	skipnz
  3921     0168  2941               	goto	i1l1575
  3922     0169  3A14               	xorlw	20	; case 17
  3923     016A  1903               	skipnz
  3924     016B  2946               	goto	i1l1577
  3925     016C  294B               	goto	i1l1579
  3926     016D                     i1l304:
  3927                           
  3928                           ;mcc_generated_files/i2c_slave.c: 236:     if (i2cRdData & 0x20){balanceFlag = 1;}
  3929     016D  1EF7               	btfss	_i2cRdData,5	;volatile
  3930     016E  2970               	goto	u25_21
  3931     016F  2971               	goto	u25_20
  3932     0170                     u25_21:
  3933     0170  2973               	goto	i1l312
  3934     0171                     u25_20:
  3935     0171                     i1l1585:
  3936     0171  3001               	movlw	1
  3937     0172  00F9               	movwf	_balanceFlag	;volatile
  3938     0173                     i1l312:
  3939     0173  0008               	return
  3940     0174                     __end_of_I2C_SlaveRdCallBack:
  3941                           
  3942                           	psect	text27
  3943     02A1                     __ptext27:	
  3944 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
  3945 ;; Defined at:
  3946 ;;		line 239 in file "mcc_generated_files/i2c_slave.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		wreg, pclath, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3960 ;;      Params:         0       0       0       0
  3961 ;;      Locals:         0       0       0       0
  3962 ;;      Temps:          0       0       0       0
  3963 ;;      Totals:         0       0       0       0
  3964 ;;Total ram usage:        0 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 1
  3967 ;; This function calls:
  3968 ;;		_I2C_SlaveGetRxData
  3969 ;; This function is called by:
  3970 ;;		_I2C_Open
  3971 ;;		_I2C_SlaveRdCallBack
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975     02A1                     _I2C_SlaveDefRdInterruptHandler:	
  3976                           ;psect for function _I2C_SlaveDefRdInterruptHandler
  3977                           
  3978     02A1                     i1l1451:	
  3979                           ;incstack = 0
  3980                           ; Regs used in _I2C_SlaveDefRdInterruptHandler: [wreg+pclath+cstack]
  3981                           
  3982                           
  3983                           ;mcc_generated_files/i2c_slave.c: 240:     i2cRdData = I2C_SlaveGetRxData();
  3984     02A1  3182  22C0  3182   	fcall	_I2C_SlaveGetRxData
  3985     02A4  00F7               	movwf	_i2cRdData	;volatile
  3986     02A5                     i1l315:
  3987     02A5  0008               	return
  3988     02A6                     __end_of_I2C_SlaveDefRdInterruptHandler:
  3989                           
  3990                           	psect	text28
  3991     0243                     __ptext28:	
  3992 ;; *************** function _I2C_SlaveIsTxBufEmpty *****************
  3993 ;; Defined at:
  3994 ;;		line 381 in file "mcc_generated_files/i2c_slave.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      _Bool 
  4001 ;; Registers used:
  4002 ;;		wreg, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4008 ;;      Params:         0       0       0       0
  4009 ;;      Locals:         0       0       0       0
  4010 ;;      Temps:          0       0       0       0
  4011 ;;      Totals:         0       0       0       0
  4012 ;;Total ram usage:        0 bytes
  4013 ;; Hardware stack levels used: 1
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_I2C_Isr
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021     0243                     _I2C_SlaveIsTxBufEmpty:	
  4022                           ;psect for function _I2C_SlaveIsTxBufEmpty
  4023                           
  4024     0243                     i1l1543:	
  4025                           ;incstack = 0
  4026                           ; Regs used in _I2C_SlaveIsTxBufEmpty: [wreg+status,0]
  4027                           
  4028                           
  4029                           ;mcc_generated_files/i2c_slave.c: 383:     return !SSP1STATbits.BF;
  4030     0243  1003               	clrc
  4031     0244  0024               	movlb	4	; select bank4
  4032     0245  1C14               	btfss	20,0	;volatile
  4033     0246  1403               	setc
  4034     0247  3000               	movlw	0
  4035     0248  3D09               	addwfc	9,w
  4036     0249                     i1l395:
  4037     0249  0008               	return
  4038     024A                     __end_of_I2C_SlaveIsTxBufEmpty:
  4039                           
  4040                           	psect	text29
  4041     02B3                     __ptext29:	
  4042 ;; *************** function _I2C_SlaveIsRxBufFull *****************
  4043 ;; Defined at:
  4044 ;;		line 386 in file "mcc_generated_files/i2c_slave.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;		None
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;		None
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  1    wreg      _Bool 
  4051 ;; Registers used:
  4052 ;;		wreg, status,2, status,0
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4058 ;;      Params:         0       0       0       0
  4059 ;;      Locals:         0       0       0       0
  4060 ;;      Temps:          0       0       0       0
  4061 ;;      Totals:         0       0       0       0
  4062 ;;Total ram usage:        0 bytes
  4063 ;; Hardware stack levels used: 1
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_I2C_Isr
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071     02B3                     _I2C_SlaveIsRxBufFull:	
  4072                           ;psect for function _I2C_SlaveIsRxBufFull
  4073                           
  4074     02B3                     i1l1557:	
  4075                           ;incstack = 0
  4076                           ; Regs used in _I2C_SlaveIsRxBufFull: [wreg+status,2+status,0]
  4077                           
  4078                           
  4079                           ;mcc_generated_files/i2c_slave.c: 388:     return SSP1STATbits.BF;
  4080     02B3  0024               	movlb	4	; select bank4
  4081     02B4  0814               	movf	20,w	;volatile
  4082     02B5  3901               	andlw	1
  4083     02B6                     i1l398:
  4084     02B6  0008               	return
  4085     02B7                     __end_of_I2C_SlaveIsRxBufFull:
  4086                           
  4087                           	psect	text30
  4088     02A6                     __ptext30:	
  4089 ;; *************** function _I2C_SlaveIsRead *****************
  4090 ;; Defined at:
  4091 ;;		line 351 in file "mcc_generated_files/i2c_slave.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      _Bool 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4105 ;;      Params:         0       0       0       0
  4106 ;;      Locals:         0       0       0       0
  4107 ;;      Temps:          0       0       0       0
  4108 ;;      Totals:         0       0       0       0
  4109 ;;Total ram usage:        0 bytes
  4110 ;; Hardware stack levels used: 1
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_I2C_Isr
  4115 ;;		_I2C_IsRead
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119     02A6                     _I2C_SlaveIsRead:	
  4120                           ;psect for function _I2C_SlaveIsRead
  4121                           
  4122     02A6                     i1l1529:	
  4123                           ;incstack = 0
  4124                           ; Regs used in _I2C_SlaveIsRead: [wreg+status,2+status,0]
  4125                           
  4126                           
  4127                           ;mcc_generated_files/i2c_slave.c: 353:     return (SSP1STATbits.R_nW);
  4128     02A6  0024               	movlb	4	; select bank4
  4129     02A7  0C14               	rrf	20,w	;volatile
  4130     02A8  0C89               	rrf	9,f
  4131     02A9  3901               	andlw	1
  4132     02AA                     i1l377:
  4133     02AA  0008               	return
  4134     02AB                     __end_of_I2C_SlaveIsRead:
  4135                           
  4136                           	psect	text31
  4137     024A                     __ptext31:	
  4138 ;; *************** function _I2C_SlaveIsAddr *****************
  4139 ;; Defined at:
  4140 ;;		line 346 in file "mcc_generated_files/i2c_slave.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      _Bool 
  4147 ;; Registers used:
  4148 ;;		wreg, status,0
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4154 ;;      Params:         0       0       0       0
  4155 ;;      Locals:         0       0       0       0
  4156 ;;      Temps:          0       0       0       0
  4157 ;;      Totals:         0       0       0       0
  4158 ;;Total ram usage:        0 bytes
  4159 ;; Hardware stack levels used: 1
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_I2C_Isr
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167     024A                     _I2C_SlaveIsAddr:	
  4168                           ;psect for function _I2C_SlaveIsAddr
  4169                           
  4170     024A                     i1l1535:	
  4171                           ;incstack = 0
  4172                           ; Regs used in _I2C_SlaveIsAddr: [wreg+status,0]
  4173                           
  4174                           
  4175                           ;mcc_generated_files/i2c_slave.c: 348:     return !(SSP1STATbits.D_nA);
  4176     024A  1003               	clrc
  4177     024B  0024               	movlb	4	; select bank4
  4178     024C  1E94               	btfss	20,5	;volatile
  4179     024D  1403               	setc
  4180     024E  3000               	movlw	0
  4181     024F  3D09               	addwfc	9,w
  4182     0250                     i1l374:
  4183     0250  0008               	return
  4184     0251                     __end_of_I2C_SlaveIsAddr:
  4185                           
  4186                           	psect	text32
  4187     02BD                     __ptext32:	
  4188 ;; *************** function _I2C_SlaveClearIrq *****************
  4189 ;; Defined at:
  4190 ;;		line 356 in file "mcc_generated_files/i2c_slave.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;		None
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;		None
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		None
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4204 ;;      Params:         0       0       0       0
  4205 ;;      Locals:         0       0       0       0
  4206 ;;      Temps:          0       0       0       0
  4207 ;;      Totals:         0       0       0       0
  4208 ;;Total ram usage:        0 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_I2C_Isr
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217     02BD                     _I2C_SlaveClearIrq:	
  4218                           ;psect for function _I2C_SlaveClearIrq
  4219                           
  4220     02BD                     i1l1533:	
  4221                           ;incstack = 0
  4222                           ; Regs used in _I2C_SlaveClearIrq: []
  4223                           
  4224                           
  4225                           ;mcc_generated_files/i2c_slave.c: 358:     PIR1bits.SSP1IF = 0;
  4226     02BD  0020               	movlb	0	; select bank0
  4227     02BE  1191               	bcf	17,3	;volatile
  4228     02BF                     i1l380:
  4229     02BF  0008               	return
  4230     02C0                     __end_of_I2C_SlaveClearIrq:
  4231                           
  4232                           	psect	text33
  4233     0223                     __ptext33:	
  4234 ;; *************** function _I2C_SlaveAddrCallBack *****************
  4235 ;; Defined at:
  4236 ;;		line 267 in file "mcc_generated_files/i2c_slave.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, pclath, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4250 ;;      Params:         0       0       0       0
  4251 ;;      Locals:         0       0       0       0
  4252 ;;      Temps:          0       0       0       0
  4253 ;;      Totals:         0       0       0       0
  4254 ;;Total ram usage:        0 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; Hardware stack levels required when called: 2
  4257 ;; This function calls:
  4258 ;;		NULL
  4259 ;;		_I2C_SlaveDefAddrInterruptHandler
  4260 ;; This function is called by:
  4261 ;;		_I2C_Isr
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265     0223                     _I2C_SlaveAddrCallBack:	
  4266                           ;psect for function _I2C_SlaveAddrCallBack
  4267                           
  4268     0223                     i1l1539:	
  4269                           ;incstack = 0
  4270                           ; Regs used in _I2C_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  4271                           
  4272                           
  4273                           ;mcc_generated_files/i2c_slave.c: 269:     if (I2C_SlaveAddrInterruptHandler) {
  4274     0223  0020               	movlb	0	; select bank0
  4275     0224  082A               	movf	_I2C_SlaveAddrInterruptHandler,w
  4276     0225  042B               	iorwf	_I2C_SlaveAddrInterruptHandler+1,w
  4277     0226  1903               	btfsc	3,2
  4278     0227  2A29               	goto	u22_21
  4279     0228  2A2A               	goto	u22_20
  4280     0229                     u22_21:
  4281     0229  2A2F               	goto	i1l332
  4282     022A                     u22_20:
  4283     022A                     i1l1541:
  4284                           
  4285                           ;mcc_generated_files/i2c_slave.c: 270:         I2C_SlaveAddrInterruptHandler();
  4286     022A  082B               	movf	_I2C_SlaveAddrInterruptHandler+1,w
  4287     022B  008A               	movwf	10
  4288     022C  082A               	movf	_I2C_SlaveAddrInterruptHandler,w
  4289     022D  000A               	callw
  4290     022E  3182               	pagesel	$
  4291     022F                     i1l332:
  4292     022F  0008               	return
  4293     0230                     __end_of_I2C_SlaveAddrCallBack:
  4294                           
  4295                           	psect	text34
  4296     0287                     __ptext34:	
  4297 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
  4298 ;; Defined at:
  4299 ;;		line 274 in file "mcc_generated_files/i2c_slave.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, pclath, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4313 ;;      Params:         0       0       0       0
  4314 ;;      Locals:         0       0       0       0
  4315 ;;      Temps:          0       0       0       0
  4316 ;;      Totals:         0       0       0       0
  4317 ;;Total ram usage:        0 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 1
  4320 ;; This function calls:
  4321 ;;		_I2C_SlaveGetRxData
  4322 ;; This function is called by:
  4323 ;;		_I2C_Open
  4324 ;;		_I2C_SlaveAddrCallBack
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328     0287                     _I2C_SlaveDefAddrInterruptHandler:	
  4329                           ;psect for function _I2C_SlaveDefAddrInterruptHandler
  4330                           
  4331     0287                     i1l1455:	
  4332                           ;incstack = 0
  4333                           ; Regs used in _I2C_SlaveDefAddrInterruptHandler: [wreg+pclath+cstack]
  4334                           
  4335                           
  4336                           ;mcc_generated_files/i2c_slave.c: 275:     i2cSlaveAddr = I2C_SlaveGetRxData();
  4337     0287  3182  22C0  3182   	fcall	_I2C_SlaveGetRxData
  4338     028A  0020               	movlb	0	; select bank0
  4339     028B  00B2               	movwf	_i2cSlaveAddr	;volatile
  4340     028C                     i1l335:
  4341     028C  0008               	return
  4342     028D                     __end_of_I2C_SlaveDefAddrInterruptHandler:
  4343                           
  4344                           	psect	text35
  4345     02C0                     __ptext35:	
  4346 ;; *************** function _I2C_SlaveGetRxData *****************
  4347 ;; Defined at:
  4348 ;;		line 396 in file "mcc_generated_files/i2c_slave.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      unsigned char 
  4355 ;; Registers used:
  4356 ;;		wreg
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4362 ;;      Params:         0       0       0       0
  4363 ;;      Locals:         0       0       0       0
  4364 ;;      Temps:          0       0       0       0
  4365 ;;      Totals:         0       0       0       0
  4366 ;;Total ram usage:        0 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_I2C_SlaveDefRdInterruptHandler
  4372 ;;		_I2C_SlaveDefAddrInterruptHandler
  4373 ;;		_I2C_Read
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377     02C0                     _I2C_SlaveGetRxData:	
  4378                           ;psect for function _I2C_SlaveGetRxData
  4379                           
  4380     02C0                     i1l1445:	
  4381                           ;incstack = 0
  4382                           ; Regs used in _I2C_SlaveGetRxData: [wreg]
  4383                           
  4384                           
  4385                           ;mcc_generated_files/i2c_slave.c: 398:     return SSP1BUF;
  4386     02C0  0024               	movlb	4	; select bank4
  4387     02C1  0811               	movf	17,w	;volatile
  4388     02C2                     i1l404:
  4389     02C2  0008               	return
  4390     02C3                     __end_of_I2C_SlaveGetRxData:
  4391     007E                     btemp	set	126	;btemp
  4392     007E                     int$flags	set	126
  4393     007E                     wtemp0	set	126
  4394                           
  4395                           	psect	idloc
  4396                           
  4397                           ;Config register IDLOC0 @ 0x8000
  4398                           ;	unspecified, using default values
  4399     8000                     	org	32768
  4400     8000  3FFF               	dw	16383
  4401                           
  4402                           ;Config register IDLOC1 @ 0x8001
  4403                           ;	unspecified, using default values
  4404     8001                     	org	32769
  4405     8001  3FFF               	dw	16383
  4406                           
  4407                           ;Config register IDLOC2 @ 0x8002
  4408                           ;	unspecified, using default values
  4409     8002                     	org	32770
  4410     8002  3FFF               	dw	16383
  4411                           
  4412                           ;Config register IDLOC3 @ 0x8003
  4413                           ;	unspecified, using default values
  4414     8003                     	org	32771
  4415     8003  3FFF               	dw	16383
  4416                           
  4417                           	psect	config
  4418                           
  4419                           ;Config register CONFIG1 @ 0x8007
  4420                           ;	Oscillator Selection Bits
  4421                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4422                           ;	Watchdog Timer Enable
  4423                           ;	WDTE = OFF, WDT disabled
  4424                           ;	Power-up Timer Enable
  4425                           ;	PWRTE = OFF, PWRT disabled
  4426                           ;	MCLR Pin Function Select
  4427                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4428                           ;	Flash Program Memory Code Protection
  4429                           ;	CP = OFF, Program memory code protection is disabled
  4430                           ;	Brown-out Reset Enable
  4431                           ;	BOREN = ON, Brown-out Reset enabled
  4432                           ;	Clock Out Enable
  4433                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4434                           ;	Internal/External Switchover Mode
  4435                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  4436                           ;	Fail-Safe Clock Monitor Enable
  4437                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4438     8007                     	org	32775
  4439     8007  3FE4               	dw	16356
  4440                           
  4441                           ;Config register CONFIG2 @ 0x8008
  4442                           ;	Flash Memory Self-Write Protection
  4443                           ;	WRT = OFF, Write protection off
  4444                           ;	Stack Overflow/Underflow Reset Enable
  4445                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4446                           ;	Brown-out Reset Voltage Selection
  4447                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4448                           ;	Low-Power Brown Out Reset
  4449                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4450                           ;	Low-Voltage Programming Enable
  4451                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4452     8008                     	org	32776
  4453     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         35
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      4      41
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), 

    Volt1ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Volt1(BANK0[2]), 

    Temp5ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Temp5(BANK0[2]), 

    Temp4ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Temp4(BANK0[2]), 

    Temp3ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Temp3(BANK0[2]), 

    Temp2ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Temp2(BANK0[2]), 

    Temp1ptr	PTR volatile struct I2C_data_tag size(1) Largest target is 2
		 -> Temp1(BANK0[2]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C_Isr(), 


Critical Paths under _main in COMMON

    _main->_ADC_GetConversion
    _SYSTEM_Initialize->_I2C_Initialize
    _I2C_Open->_I2C_SlaveSetAddrIntHandler
    _I2C_Open->_I2C_SlaveSetBusColIntHandler
    _I2C_Open->_I2C_SlaveSetIsrHandler
    _I2C_Open->_I2C_SlaveSetReadIntHandler
    _I2C_Open->_I2C_SlaveSetWrColIntHandler
    _I2C_Open->_I2C_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_Isr
    _I2C_Isr->_I2C_SlaveRdCallBack
    _I2C_SlaveDefWrInterruptHandler->_I2C_SlaveSendTxData

Critical Paths under _main in BANK0

    _main->_ADC_GetConversion

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     663
                                              2 BANK0      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                     _FVR_Initialize
                           _I2C_Open
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                     _FVR_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Open                                             0     0      0     632
                 _I2C_SlaveEnableIrq
                      _I2C_SlaveOpen
         _I2C_SlaveSetAddrIntHandler
       _I2C_SlaveSetBusColIntHandler
             _I2C_SlaveSetIsrHandler
         _I2C_SlaveSetReadIntHandler
              _I2C_SlaveSetSlaveAddr
              _I2C_SlaveSetSlaveMask
        _I2C_SlaveSetWrColIntHandler
        _I2C_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWriteIntHandler                          2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWrColIntHandler                          2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveMask                                1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveAddr                                1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetReadIntHandler                           2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetIsrHandler                               2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetBusColIntHandler                         2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetAddrIntHandler                           2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveOpen                                        1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveEnableIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           0     0      0      22
                                NULL *
                            _I2C_Isr *
 ---------------------------------------------------------------------------------
 (4) _I2C_Isr                                              2     2      0      22
                                              2 COMMON     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                    _I2C_SlaveIsAddr
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
              _I2C_SlaveIsTxBufEmpty
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                _I2C_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveWrCallBack                                  0     0      0      22
                                NULL *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefWrInterruptHandler                       0     0      0      22
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveSendTxData                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveReleaseClock                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveRdCallBack                                  2     2      0       0
                                              0 COMMON     2     2      0
                                NULL *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefRdInterruptHandler                       0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsTxBufEmpty                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsRxBufFull                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsAddr                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveClearIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveAddrCallBack                                0     0      0       0
                                NULL *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefAddrInterruptHandler                     0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveGetRxData                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _FVR_Initialize
   _I2C_Open
     _I2C_SlaveEnableIrq
     _I2C_SlaveOpen
     _I2C_SlaveSetAddrIntHandler
     _I2C_SlaveSetBusColIntHandler
     _I2C_SlaveSetIsrHandler
     _I2C_SlaveSetReadIntHandler
     _I2C_SlaveSetSlaveAddr
     _I2C_SlaveSetSlaveMask
     _I2C_SlaveSetWrColIntHandler
     _I2C_SlaveSetWriteIntHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _FVR_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       NULL(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveClearIrq
     _I2C_SlaveIsAddr
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsTxBufEmpty
     _I2C_SlaveRdCallBack
       NULL(Fake) *
       _I2C_SlaveDefRdInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveWrCallBack
       NULL(Fake) *
       _I2C_SlaveDefWrInterruptHandler *
         _I2C_SlaveSendTxData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      33       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4      29       6       51.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      33      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Apr 05 01:10:37 2023

                                      l94 0214                                        l97 0262  
                  __end_of_FVR_Initialize 02B3                                       l100 02AE  
                                     l252 01AC                                       l318 0268  
                                     l328 0286                                       l249 0239  
                                     l338 026E                                       l371 02B9  
                                     l348 0280                                       l365 0296  
                                     l445 0201                                       l359 0222  
                                     l295 027A                                       l368 0291  
                                     l482 01C2                                       l298 0274  
                                     l467 0242                                       l485 01CA  
                                     l495 02B2      __end_of_I2C_SlaveSetBusColIntHandler 0281  
            _I2C_SlaveSetBusColIntHandler 027B                                       u210 021A  
                                     u211 0219                                       u410 01C6  
                                     u411 01C5                                       u420 005C  
                                     u421 005B                                       u437 0065  
                                     u447 0074                                       u457 01BD  
                   ??_I2C_SlaveRdCallBack 0070                       _I2C_SlaveSendTxData 029C  
           I2C_SlaveSetSlaveMask@maskAddr 0074                           __end_of_I2C_Isr 011D  
                                     wreg 0009                       _I2C_SlaveWrCallBack 01CB  
                                    l1501 021A                                      l1503 021B  
                                    l1511 0293                                      l1505 021F  
                                    l1521 026F                                      l1513 028E  
                                    l1507 0221                                      l1523 0281  
                                    l1515 0275                                      l1517 027B  
                                    l1525 0269                                      l1461 0236  
                                    l1527 02B7                                      l1519 0263  
                                    l1463 0238                                      l1471 01F1  
                                    l1457 0230                                      l1481 025D  
                                    l1473 01F3                                      l1465 01E8  
                                    l1491 023D                                      l1459 0232  
                                    l1483 0260                                      l1475 01F6  
                                    l1467 01EC                                      l1493 023E  
                                    l1477 01F8                                      l1469 01EF  
                                    l1485 02AB                                      l1495 023F  
                                    l1487 02AF                                      l1479 01FD  
                                    l1761 01C0                                      l1497 0240  
                                    l1489 023A                                      l1593 0202  
                                    l1763 01C6                                      l1755 01AF  
                                    l1499 0215                                      l1595 0174  
                                    l1771 004D                                      l1757 01BB  
                                    l1597 01A9                                      l1781 006C  
                                    l1773 0057                                      l1759 01BC  
                                    l1791 0096                                      l1783 006E  
                                    l1775 005C                                      l1767 0049  
                                    l1793 009F                                      l1777 005D  
                                    l1785 007B                                      l1769 004C  
                                    l1795 00A8                                      l1787 0084  
                                    l1779 005F                                      l1789 008D  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      i1l42 001A  
                                    i1l43 0025                                      i1l47 0025  
                                    _WPUA 020C                                      _WPUB 020D  
                 __end_of_I2C_SlaveIsAddr 0251                   __end_of_I2C_SlaveIsRead 02AB  
                                    _main 0049         I2C_SlaveSetAddrIntHandler@handler 0074  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                        __end_of_I2C_Open 01AD                                      btemp 007E  
                    ?_I2C_SlaveSendTxData 0070                                      start 0027  
                    ?_I2C_SlaveWrCallBack 0070         I2C_SlaveSetReadIntHandler@handler 0074  
           __end_of_I2C_SlaveAddrCallBack 0230                           ?_FVR_Initialize 0070  
           __end_of_OSCILLATOR_Initialize 0263  __end_of_I2C_SlaveDefAddrInterruptHandler 028D  
      ??_I2C_SlaveDefAddrInterruptHandler 0070         ?_I2C_SlaveDefAddrInterruptHandler 0070  
        _I2C_SlaveDefAddrInterruptHandler 0287                                     ?_main 0070  
                                   i1l312 0173                                     i1l304 016D  
                                   i1l401 02A0                                     i1l322 01E7  
                                   i1l315 02A5                                     i1l404 02C2  
                                   i1l332 022F                                     i1l325 029B  
                                   i1l335 028C                                     i1l380 02BF  
                                   i1l292 011C                                     i1l374 0250  
                                   i1l383 02BC                                     i1l377 02AA  
                                   i1l395 0249                                     i1l398 02B6  
                   _I2C_SlaveReleaseClock 02BA                                     u22_20 022A  
                                   u30_20 00F6                                     u22_21 0229  
                                   u30_21 00F5                                     u23_20 01E2  
                                   u31_20 00FF                                     u23_21 01E1  
                                   u31_21 00FE                                     u24_20 0124  
                                   u24_21 0123                                     u25_20 0171  
                                   u33_20 000A                                     u25_21 0170  
                                   u33_21 0009                                     u26_20 00BF  
                                   u34_20 000F                                     u26_21 00BE  
                                   u34_21 000E                                     u27_20 00C7  
                                   u35_20 0014                                     u27_21 00C6  
                                   u35_21 0013                                     u28_20 00D5  
                                   u36_20 001F                                     u28_21 00D4  
                                   u36_21 001E                                     u29_20 00E6  
                                   u37_20 0024                                     u29_21 00E5  
                                   u37_21 0023                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
           ?_I2C_SlaveSetBusColIntHandler 0074                                     _Temp1 003D  
                                   _Temp2 003B                                     _Temp3 0039  
                                   _Temp4 0037                                     _Temp5 0035  
                                   _Volt1 0033                    ??_I2C_SlaveIsRxBufFull 0070  
                          _WDT_Initialize 02AB                                     _index 0022  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                     ??_I2C_SlaveSendTxData 0070  
                   ??_I2C_SlaveWrCallBack 0071                     _I2C_SlaveSetSlaveAddr 0292  
                         __initialization 0029                     _I2C_SlaveSetSlaveMask 028D  
                            __end_of_main 00B4               ?_INTERRUPT_InterruptManager 0070  
                               ??_I2C_Isr 0072                                    ??_main 0047  
                  __end_of_WDT_Initialize 02AF               _I2C_SlaveRdInterruptHandler 002E  
             _I2C_SlaveWrInterruptHandler 002C                __end_of_I2C_SlaveEnableIrq 02BA  
              __end_of_I2C_SlaveGetRxData 02C3                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _BORCON 0116                                    i1l1601 00B7  
                                  i1l1451 02A1                                    i1l1611 00D5  
                                  i1l1603 00BF                                    i1l1445 02C0  
                                  i1l1541 022A                                    i1l1533 02BD  
                                  i1l1453 0297                                    i1l1621 00EA  
                                  i1l1613 00D8                                    i1l1605 00C7  
                                  i1l1455 0287                                    i1l1535 024A  
                                  i1l1543 0243                                    i1l1551 01D6  
                                  i1l1623 00EE                                    i1l1615 00DB  
                                  i1l1607 00CA                                    i1l1529 02A6  
                                  i1l1561 011D                                    i1l1449 029D  
                                  i1l1553 01DC                                    i1l1617 00DE  
                                  i1l1633 0103                                    i1l1609 00CD  
                                  i1l1539 0223                                    i1l1571 0137  
                                  i1l1563 0124                                    i1l1555 01E2  
                                  i1l1547 01CB                                    i1l1627 00F7  
                                  i1l1619 00E6                                    i1l1635 0119  
                                  i1l1557 02B3                                    i1l1573 013C  
                                  i1l1565 0129                                    i1l1549 01D2  
                                  i1l1629 00FF                                    i1l1661 001F  
                                  i1l1653 0006                                    i1l1575 0141  
                                  i1l1567 012D                                    i1l1583 0150  
                                  i1l1591 02BA                                    i1l1655 000A  
                                  i1l1585 0171                                    i1l1577 0146  
                                  i1l1569 0132                                    i1l1657 000F  
                                  i1l1579 014B                                    i1l1659 0014  
                                  i1l1837 010B                                    i1l1839 0159  
                                  i1l1599 00B4                                    _FVRCON 0117  
                                  _OSCCON 0099                          ?_I2C_SlaveIsAddr 0070  
                                  _WDTCON 0097                          ?_I2C_SlaveIsRead 0070  
                  _I2C_SlaveSetIsrHandler 0275                    ?_I2C_SlaveReleaseClock 0070  
                 ??_I2C_SlaveIsTxBufEmpty 0070                                 ?_I2C_Open 0070  
     I2C_SlaveSetBusColIntHandler@handler 0074                           ?_WDT_Initialize 0070  
                           _I2C_SlaveOpen 0215                  ADC_GetConversion@channel 0046  
                       _SYSTEM_Initialize 0202                   __end_of__initialization 0045  
      I2C_SlaveSetWrColIntHandler@handler 0074              ??_I2C_SlaveSetAddrIntHandler 0076  
                      ?_SYSTEM_Initialize 0070                    ?_I2C_SlaveSetSlaveAddr 0070  
                  ?_I2C_SlaveSetSlaveMask 0070                            __pcstackCOMMON 0070  
                            __pidataBANK0 0251                       ??_SYSTEM_Initialize 0075  
          I2C_SlaveSetSlaveAddr@slaveAddr 0074              ??_I2C_SlaveSetReadIntHandler 0076  
                          _OPTION_REGbits 0095                                ??_I2C_Open 0076  
                          ?_I2C_SlaveOpen 0070                 __end_of_SYSTEM_Initialize 0215  
                              __pbssBANK0 0020       __end_of_I2C_SlaveSetWrColIntHandler 026F  
             _I2C_SlaveSetWrColIntHandler 0269                          ??_FVR_Initialize 0074  
                              __pmaintext 0049                                __pintentry 0004  
             __end_of_I2C_SlaveRdCallBack 0174             ??_I2C_SlaveSetWrColIntHandler 0076  
                                 _I2C_Isr 00B4                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                                   _SSP1MSK 0213  
                    _ADC_InterruptHandler 0020                   I2C_SlaveSendTxData@data 0070  
                   _I2C_SlaveAddrCallBack 0223                            _I2C_Initialize 0230  
                                 __ptext1 0202                                   __ptext2 02AB  
                                 __ptext3 01E8                                   __ptext4 025D  
                                 __ptext5 0230                                   __ptext6 02AF  
                                 __ptext7 023A                                   __ptext8 0174  
                                 __ptext9 0263                           ??_I2C_SlaveOpen 0074  
                   _OSCILLATOR_Initialize 025D                  ??_PIN_MANAGER_Initialize 0074  
           I2C_SlaveSetIsrHandler@handler 0074                                   clrloop0 0258  
             __end_of_I2C_SlaveSendTxData 02A1                      end_of_initialization 0045  
             __end_of_I2C_SlaveWrCallBack 01E8        __end_of_I2C_SlaveSetAddrIntHandler 0287  
              _I2C_SlaveSetAddrIntHandler 0281                        _I2C_SlaveEnableIrq 02B7  
                      _I2C_SlaveGetRxData 02C0                   ?_I2C_SlaveSetIsrHandler 0074  
                            _i2cSlaveAddr 0032                    __end_of_I2C_Initialize 023A  
                 ??_I2C_SlaveReleaseClock 0070                       ?_I2C_SlaveEnableIrq 0070  
                     ?_I2C_SlaveGetRxData 0070        __end_of_I2C_SlaveSetReadIntHandler 0275  
              _I2C_SlaveSetReadIntHandler 026F                          ??_WDT_Initialize 0074  
            ?_I2C_SlaveSetWriteIntHandler 0074             __end_of_I2C_SlaveIsTxBufEmpty 024A  
                    ??_I2C_SlaveEnableIrq 0074                      ??_I2C_SlaveGetRxData 0070  
                 ??_I2C_SlaveSetSlaveAddr 0074                   ??_I2C_SlaveSetSlaveMask 0074  
          __end_of_I2C_SlaveSetIsrHandler 027B                    ?_I2C_SlaveAddrCallBack 0070  
                         ?_I2C_Initialize 0070                            _ADC_Initialize 023A  
                               _i2cRdData 0077                    ?_OSCILLATOR_Initialize 0070  
                               _i2cWrData 0078                       start_initialization 0029  
                             _balanceFlag 0079                    __end_of_ADC_Initialize 0243  
                             __pdataBANK0 003F                                  ?_I2C_Isr 0070  
                             __pbssCOMMON 0076                                 ___latbits 0001  
                           __pcstackBANK0 0045                              _current_Data 0024  
          ??_I2C_SlaveSetBusColIntHandler 0076                    _PIN_MANAGER_Initialize 01E8  
                         ?_ADC_Initialize 0070              ??_INTERRUPT_InterruptManager 0074  
                       ??_I2C_SlaveIsAddr 0070                         ??_I2C_SlaveIsRead 0070  
        ??_I2C_SlaveDefRdInterruptHandler 0070           ?_I2C_SlaveDefRdInterruptHandler 0070  
        ??_I2C_SlaveDefWrInterruptHandler 0071           ?_I2C_SlaveDefWrInterruptHandler 0070  
                                _I2C_Open 0174               ?_I2C_SlaveSetAddrIntHandler 0074  
                                _LATBbits 010D                                 clear_ram0 0257  
                                _PIE1bits 0091                                  _PIE2bits 0092  
                       _I2C_SlaveClearIrq 02BD                                  _PIR1bits 0011  
                                _PIR2bits 0012                        ?_I2C_SlaveClearIrq 0070  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
            __end_of_I2C_SlaveIsRxBufFull 02B7                                  _SSP1STAT 0214  
             ?_I2C_SlaveSetReadIntHandler 0074             __end_of_I2C_SlaveReleaseClock 02BD  
                     ??_I2C_SlaveClearIrq 0070                                _ADCON0bits 009D  
                   __end_of_I2C_SlaveOpen 0223         _I2C_SlaveDefWrColInterruptHandler 0000  
               __end_of_I2C_SlaveClearIrq 02C0             __end_of_I2C_SlaveSetSlaveAddr 0297  
           __end_of_I2C_SlaveSetSlaveMask 0292                          ??_I2C_Initialize 0074  
                                _Temp1ptr 0044                                  _Temp2ptr 0043  
                                _Temp3ptr 0042                   ??_I2C_SlaveAddrCallBack 0070  
                                _Temp4ptr 0041                                  _Temp5ptr 0040  
                       _ADC_GetConversion 01AD                   ??_OSCILLATOR_Initialize 0074  
                      ?_ADC_GetConversion 0074                                  _Volt1ptr 003F  
           _I2C_SlaveAddrInterruptHandler 002A        _I2C_SlaveDefBusColInterruptHandler 0000  
                     ??_ADC_GetConversion 0045            _I2C_SlaveWrColInterruptHandler 0026  
                                __ptext10 0269                                  __ptext11 028D  
                                __ptext12 0292                                  __ptext21 00B4  
                                __ptext13 026F                                  __ptext30 02A6  
                                __ptext22 01CB                                  __ptext14 0275  
                                __ptext31 024A                                  __ptext23 0297  
                                __ptext15 027B                                  __ptext32 02BD  
                                __ptext24 029C                                  __ptext16 0281  
                                __ptext33 0223                                  __ptext25 02BA  
                                __ptext17 0215                                  __ptext34 0287  
                                __ptext26 011D                                  __ptext18 02B7  
                                __ptext35 02C0                                  __ptext27 02A1  
                                __ptext19 01AD                                  __ptext28 0243  
                                __ptext29 02B3                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                     _I2C_SlaveIsTxBufEmpty 0243  
               __end_of_ADC_GetConversion 01CB              ?_I2C_SlaveSetWrColIntHandler 0074  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0027  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 0214  
                              _INTCONbits 000B                                _FVRCONbits 0117  
                    _I2C_SlaveIsRxBufFull 02B3                                  intlevel1 0000  
         _I2C_SlaveBusColInterruptHandler 0028                   ?_PIN_MANAGER_Initialize 0070  
                     _I2C_SlaveRdCallBack 011D                          ??_ADC_Initialize 0074  
                         _I2C_SlaveIsAddr 024A                           _I2C_SlaveIsRead 02A6  
                           _i2cSlaveState 0076        I2C_SlaveSetWriteIntHandler@handler 0074  
     __end_of_I2C_SlaveSetWriteIntHandler 0269               _I2C_SlaveSetWriteIntHandler 0263  
                          _FVR_Initialize 02AF                      ?_I2C_SlaveRdCallBack 0070  
                  ?_I2C_SlaveIsTxBufEmpty 0070             ??_I2C_SlaveSetWriteIntHandler 0076  
                ??_I2C_SlaveSetIsrHandler 0076                     ?_I2C_SlaveIsRxBufFull 0070  
          __end_of_PIN_MANAGER_Initialize 0202    __end_of_I2C_SlaveDefRdInterruptHandler 02A6  
          _I2C_SlaveDefRdInterruptHandler 02A1    __end_of_I2C_SlaveDefWrInterruptHandler 029C  
          _I2C_SlaveDefWrInterruptHandler 0297                     _MSSP_InterruptHandler 0030  
